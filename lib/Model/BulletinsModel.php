<?php
/**
 * BulletinsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * BulletinsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class BulletinsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'BulletinsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization' => 'string',
        'bulletin_application' => 'string',
        'meeting' => 'int',
        'bulletin' => 'int',
        'bulletin_date' => '\DateTime',
        'distribution_date' => '\DateTime',
        'status' => 'string',
        'bulletin_meeting_status' => 'string',
        'memo' => 'string',
        'changed_on' => '\DateTime',
        'changed_by' => 'string',
        'last_printed' => '\DateTime',
        'entered_on' => '\DateTime',
        'type' => 'string',
        'entered_by' => 'string',
        'print' => 'string',
        'suppress_final_submission' => 'string',
        'approval_level' => 'int',
        'approved_by' => 'string',
        'approved_on' => '\DateTime',
        'approved_action' => 'string',
        'response_due_by' => '\DateTime',
        'notified_date' => '\DateTime',
        'rooms_option' => 'string',
        'rooms_blocked' => 'string',
        'rooms_pickup' => 'string',
        'flow_nbr2_option' => 'string',
        'flow_nbr2_blocked' => 'string',
        'flow_nbr2_pickup' => 'string',
        'flow_nbr3_option' => 'string',
        'flow_nbr3_blocked' => 'string',
        'properties_must_agree_to_concessions_offered' => 'string',
        'flow_nbr3_pickup' => 'string',
        'flow_nbr4_option' => 'string',
        'flow_nbr4_blocked' => 'string',
        'flow_nbr4_pickup' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization' => null,
        'bulletin_application' => null,
        'meeting' => 'int32',
        'bulletin' => 'int32',
        'bulletin_date' => 'date-time',
        'distribution_date' => 'date-time',
        'status' => null,
        'bulletin_meeting_status' => null,
        'memo' => null,
        'changed_on' => 'date-time',
        'changed_by' => null,
        'last_printed' => 'date-time',
        'entered_on' => 'date-time',
        'type' => null,
        'entered_by' => null,
        'print' => null,
        'suppress_final_submission' => null,
        'approval_level' => 'int32',
        'approved_by' => null,
        'approved_on' => 'date-time',
        'approved_action' => null,
        'response_due_by' => 'date-time',
        'notified_date' => 'date-time',
        'rooms_option' => null,
        'rooms_blocked' => null,
        'rooms_pickup' => null,
        'flow_nbr2_option' => null,
        'flow_nbr2_blocked' => null,
        'flow_nbr2_pickup' => null,
        'flow_nbr3_option' => null,
        'flow_nbr3_blocked' => null,
        'properties_must_agree_to_concessions_offered' => null,
        'flow_nbr3_pickup' => null,
        'flow_nbr4_option' => null,
        'flow_nbr4_blocked' => null,
        'flow_nbr4_pickup' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization' => 'Organization',
        'bulletin_application' => 'BulletinApplication',
        'meeting' => 'Meeting',
        'bulletin' => 'Bulletin',
        'bulletin_date' => 'BulletinDate',
        'distribution_date' => 'DistributionDate',
        'status' => 'Status',
        'bulletin_meeting_status' => 'BulletinMeetingStatus',
        'memo' => 'Memo',
        'changed_on' => 'ChangedOn',
        'changed_by' => 'ChangedBy',
        'last_printed' => 'LastPrinted',
        'entered_on' => 'EnteredOn',
        'type' => 'Type',
        'entered_by' => 'EnteredBy',
        'print' => 'Print',
        'suppress_final_submission' => 'SuppressFinalSubmission',
        'approval_level' => 'ApprovalLevel',
        'approved_by' => 'ApprovedBy',
        'approved_on' => 'ApprovedOn',
        'approved_action' => 'ApprovedAction',
        'response_due_by' => 'ResponseDueBy',
        'notified_date' => 'NotifiedDate',
        'rooms_option' => 'RoomsOption',
        'rooms_blocked' => 'RoomsBlocked',
        'rooms_pickup' => 'RoomsPickup',
        'flow_nbr2_option' => 'FlowNbr2Option',
        'flow_nbr2_blocked' => 'FlowNbr2Blocked',
        'flow_nbr2_pickup' => 'FlowNbr2Pickup',
        'flow_nbr3_option' => 'FlowNbr3Option',
        'flow_nbr3_blocked' => 'FlowNbr3Blocked',
        'properties_must_agree_to_concessions_offered' => 'PropertiesMustAgreeToConcessionsOffered',
        'flow_nbr3_pickup' => 'FlowNbr3Pickup',
        'flow_nbr4_option' => 'FlowNbr4Option',
        'flow_nbr4_blocked' => 'FlowNbr4Blocked',
        'flow_nbr4_pickup' => 'FlowNbr4Pickup'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization' => 'setOrganization',
        'bulletin_application' => 'setBulletinApplication',
        'meeting' => 'setMeeting',
        'bulletin' => 'setBulletin',
        'bulletin_date' => 'setBulletinDate',
        'distribution_date' => 'setDistributionDate',
        'status' => 'setStatus',
        'bulletin_meeting_status' => 'setBulletinMeetingStatus',
        'memo' => 'setMemo',
        'changed_on' => 'setChangedOn',
        'changed_by' => 'setChangedBy',
        'last_printed' => 'setLastPrinted',
        'entered_on' => 'setEnteredOn',
        'type' => 'setType',
        'entered_by' => 'setEnteredBy',
        'print' => 'setPrint',
        'suppress_final_submission' => 'setSuppressFinalSubmission',
        'approval_level' => 'setApprovalLevel',
        'approved_by' => 'setApprovedBy',
        'approved_on' => 'setApprovedOn',
        'approved_action' => 'setApprovedAction',
        'response_due_by' => 'setResponseDueBy',
        'notified_date' => 'setNotifiedDate',
        'rooms_option' => 'setRoomsOption',
        'rooms_blocked' => 'setRoomsBlocked',
        'rooms_pickup' => 'setRoomsPickup',
        'flow_nbr2_option' => 'setFlowNbr2Option',
        'flow_nbr2_blocked' => 'setFlowNbr2Blocked',
        'flow_nbr2_pickup' => 'setFlowNbr2Pickup',
        'flow_nbr3_option' => 'setFlowNbr3Option',
        'flow_nbr3_blocked' => 'setFlowNbr3Blocked',
        'properties_must_agree_to_concessions_offered' => 'setPropertiesMustAgreeToConcessionsOffered',
        'flow_nbr3_pickup' => 'setFlowNbr3Pickup',
        'flow_nbr4_option' => 'setFlowNbr4Option',
        'flow_nbr4_blocked' => 'setFlowNbr4Blocked',
        'flow_nbr4_pickup' => 'setFlowNbr4Pickup'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization' => 'getOrganization',
        'bulletin_application' => 'getBulletinApplication',
        'meeting' => 'getMeeting',
        'bulletin' => 'getBulletin',
        'bulletin_date' => 'getBulletinDate',
        'distribution_date' => 'getDistributionDate',
        'status' => 'getStatus',
        'bulletin_meeting_status' => 'getBulletinMeetingStatus',
        'memo' => 'getMemo',
        'changed_on' => 'getChangedOn',
        'changed_by' => 'getChangedBy',
        'last_printed' => 'getLastPrinted',
        'entered_on' => 'getEnteredOn',
        'type' => 'getType',
        'entered_by' => 'getEnteredBy',
        'print' => 'getPrint',
        'suppress_final_submission' => 'getSuppressFinalSubmission',
        'approval_level' => 'getApprovalLevel',
        'approved_by' => 'getApprovedBy',
        'approved_on' => 'getApprovedOn',
        'approved_action' => 'getApprovedAction',
        'response_due_by' => 'getResponseDueBy',
        'notified_date' => 'getNotifiedDate',
        'rooms_option' => 'getRoomsOption',
        'rooms_blocked' => 'getRoomsBlocked',
        'rooms_pickup' => 'getRoomsPickup',
        'flow_nbr2_option' => 'getFlowNbr2Option',
        'flow_nbr2_blocked' => 'getFlowNbr2Blocked',
        'flow_nbr2_pickup' => 'getFlowNbr2Pickup',
        'flow_nbr3_option' => 'getFlowNbr3Option',
        'flow_nbr3_blocked' => 'getFlowNbr3Blocked',
        'properties_must_agree_to_concessions_offered' => 'getPropertiesMustAgreeToConcessionsOffered',
        'flow_nbr3_pickup' => 'getFlowNbr3Pickup',
        'flow_nbr4_option' => 'getFlowNbr4Option',
        'flow_nbr4_blocked' => 'getFlowNbr4Blocked',
        'flow_nbr4_pickup' => 'getFlowNbr4Pickup'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['bulletin_application'] = isset($data['bulletin_application']) ? $data['bulletin_application'] : null;
        $this->container['meeting'] = isset($data['meeting']) ? $data['meeting'] : null;
        $this->container['bulletin'] = isset($data['bulletin']) ? $data['bulletin'] : null;
        $this->container['bulletin_date'] = isset($data['bulletin_date']) ? $data['bulletin_date'] : null;
        $this->container['distribution_date'] = isset($data['distribution_date']) ? $data['distribution_date'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['bulletin_meeting_status'] = isset($data['bulletin_meeting_status']) ? $data['bulletin_meeting_status'] : null;
        $this->container['memo'] = isset($data['memo']) ? $data['memo'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['last_printed'] = isset($data['last_printed']) ? $data['last_printed'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['print'] = isset($data['print']) ? $data['print'] : null;
        $this->container['suppress_final_submission'] = isset($data['suppress_final_submission']) ? $data['suppress_final_submission'] : null;
        $this->container['approval_level'] = isset($data['approval_level']) ? $data['approval_level'] : null;
        $this->container['approved_by'] = isset($data['approved_by']) ? $data['approved_by'] : null;
        $this->container['approved_on'] = isset($data['approved_on']) ? $data['approved_on'] : null;
        $this->container['approved_action'] = isset($data['approved_action']) ? $data['approved_action'] : null;
        $this->container['response_due_by'] = isset($data['response_due_by']) ? $data['response_due_by'] : null;
        $this->container['notified_date'] = isset($data['notified_date']) ? $data['notified_date'] : null;
        $this->container['rooms_option'] = isset($data['rooms_option']) ? $data['rooms_option'] : null;
        $this->container['rooms_blocked'] = isset($data['rooms_blocked']) ? $data['rooms_blocked'] : null;
        $this->container['rooms_pickup'] = isset($data['rooms_pickup']) ? $data['rooms_pickup'] : null;
        $this->container['flow_nbr2_option'] = isset($data['flow_nbr2_option']) ? $data['flow_nbr2_option'] : null;
        $this->container['flow_nbr2_blocked'] = isset($data['flow_nbr2_blocked']) ? $data['flow_nbr2_blocked'] : null;
        $this->container['flow_nbr2_pickup'] = isset($data['flow_nbr2_pickup']) ? $data['flow_nbr2_pickup'] : null;
        $this->container['flow_nbr3_option'] = isset($data['flow_nbr3_option']) ? $data['flow_nbr3_option'] : null;
        $this->container['flow_nbr3_blocked'] = isset($data['flow_nbr3_blocked']) ? $data['flow_nbr3_blocked'] : null;
        $this->container['properties_must_agree_to_concessions_offered'] = isset($data['properties_must_agree_to_concessions_offered']) ? $data['properties_must_agree_to_concessions_offered'] : null;
        $this->container['flow_nbr3_pickup'] = isset($data['flow_nbr3_pickup']) ? $data['flow_nbr3_pickup'] : null;
        $this->container['flow_nbr4_option'] = isset($data['flow_nbr4_option']) ? $data['flow_nbr4_option'] : null;
        $this->container['flow_nbr4_blocked'] = isset($data['flow_nbr4_blocked']) ? $data['flow_nbr4_blocked'] : null;
        $this->container['flow_nbr4_pickup'] = isset($data['flow_nbr4_pickup']) ? $data['flow_nbr4_pickup'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization'] === null) {
            $invalidProperties[] = "'organization' can't be null";
        }
        if ($this->container['bulletin_application'] === null) {
            $invalidProperties[] = "'bulletin_application' can't be null";
        }
        if ($this->container['meeting'] === null) {
            $invalidProperties[] = "'meeting' can't be null";
        }
        if ($this->container['bulletin'] === null) {
            $invalidProperties[] = "'bulletin' can't be null";
        }
        if ($this->container['bulletin_date'] === null) {
            $invalidProperties[] = "'bulletin_date' can't be null";
        }
        if ($this->container['distribution_date'] === null) {
            $invalidProperties[] = "'distribution_date' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['bulletin_meeting_status'] === null) {
            $invalidProperties[] = "'bulletin_meeting_status' can't be null";
        }
        if ($this->container['memo'] === null) {
            $invalidProperties[] = "'memo' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['last_printed'] === null) {
            $invalidProperties[] = "'last_printed' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['print'] === null) {
            $invalidProperties[] = "'print' can't be null";
        }
        if ($this->container['suppress_final_submission'] === null) {
            $invalidProperties[] = "'suppress_final_submission' can't be null";
        }
        if ($this->container['approval_level'] === null) {
            $invalidProperties[] = "'approval_level' can't be null";
        }
        if ($this->container['approved_by'] === null) {
            $invalidProperties[] = "'approved_by' can't be null";
        }
        if ($this->container['approved_on'] === null) {
            $invalidProperties[] = "'approved_on' can't be null";
        }
        if ($this->container['approved_action'] === null) {
            $invalidProperties[] = "'approved_action' can't be null";
        }
        if ($this->container['response_due_by'] === null) {
            $invalidProperties[] = "'response_due_by' can't be null";
        }
        if ($this->container['notified_date'] === null) {
            $invalidProperties[] = "'notified_date' can't be null";
        }
        if ($this->container['rooms_option'] === null) {
            $invalidProperties[] = "'rooms_option' can't be null";
        }
        if ($this->container['rooms_blocked'] === null) {
            $invalidProperties[] = "'rooms_blocked' can't be null";
        }
        if ($this->container['rooms_pickup'] === null) {
            $invalidProperties[] = "'rooms_pickup' can't be null";
        }
        if ($this->container['flow_nbr2_option'] === null) {
            $invalidProperties[] = "'flow_nbr2_option' can't be null";
        }
        if ($this->container['flow_nbr2_blocked'] === null) {
            $invalidProperties[] = "'flow_nbr2_blocked' can't be null";
        }
        if ($this->container['flow_nbr2_pickup'] === null) {
            $invalidProperties[] = "'flow_nbr2_pickup' can't be null";
        }
        if ($this->container['flow_nbr3_option'] === null) {
            $invalidProperties[] = "'flow_nbr3_option' can't be null";
        }
        if ($this->container['flow_nbr3_blocked'] === null) {
            $invalidProperties[] = "'flow_nbr3_blocked' can't be null";
        }
        if ($this->container['properties_must_agree_to_concessions_offered'] === null) {
            $invalidProperties[] = "'properties_must_agree_to_concessions_offered' can't be null";
        }
        if ($this->container['flow_nbr3_pickup'] === null) {
            $invalidProperties[] = "'flow_nbr3_pickup' can't be null";
        }
        if ($this->container['flow_nbr4_option'] === null) {
            $invalidProperties[] = "'flow_nbr4_option' can't be null";
        }
        if ($this->container['flow_nbr4_blocked'] === null) {
            $invalidProperties[] = "'flow_nbr4_blocked' can't be null";
        }
        if ($this->container['flow_nbr4_pickup'] === null) {
            $invalidProperties[] = "'flow_nbr4_pickup' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets bulletin_application
     *
     * @return string
     */
    public function getBulletinApplication()
    {
        return $this->container['bulletin_application'];
    }

    /**
     * Sets bulletin_application
     *
     * @param string $bulletin_application <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_BUL_FILE_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBulletinApplication($bulletin_application)
    {
        $this->container['bulletin_application'] = $bulletin_application;

        return $this;
    }

    /**
     * Gets meeting
     *
     * @return int
     */
    public function getMeeting()
    {
        return $this->container['meeting'];
    }

    /**
     * Sets meeting
     *
     * @param int $meeting <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_BUL_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMeeting($meeting)
    {
        $this->container['meeting'] = $meeting;

        return $this;
    }

    /**
     * Gets bulletin
     *
     * @return int
     */
    public function getBulletin()
    {
        return $this->container['bulletin'];
    }

    /**
     * Sets bulletin
     *
     * @param int $bulletin <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_BUL_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBulletin($bulletin)
    {
        $this->container['bulletin'] = $bulletin;

        return $this;
    }

    /**
     * Gets bulletin_date
     *
     * @return \DateTime
     */
    public function getBulletinDate()
    {
        return $this->container['bulletin_date'];
    }

    /**
     * Sets bulletin_date
     *
     * @param \DateTime $bulletin_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_BUL_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBulletinDate($bulletin_date)
    {
        $this->container['bulletin_date'] = $bulletin_date;

        return $this;
    }

    /**
     * Gets distribution_date
     *
     * @return \DateTime
     */
    public function getDistributionDate()
    {
        return $this->container['distribution_date'];
    }

    /**
     * Sets distribution_date
     *
     * @param \DateTime $distribution_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_BUL_DIST_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDistributionDate($distribution_date)
    {
        $this->container['distribution_date'] = $distribution_date;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_BUL_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets bulletin_meeting_status
     *
     * @return string
     */
    public function getBulletinMeetingStatus()
    {
        return $this->container['bulletin_meeting_status'];
    }

    /**
     * Sets bulletin_meeting_status
     *
     * @param string $bulletin_meeting_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_MTG_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBulletinMeetingStatus($bulletin_meeting_status)
    {
        $this->container['bulletin_meeting_status'] = $bulletin_meeting_status;

        return $this;
    }

    /**
     * Gets memo
     *
     * @return string
     */
    public function getMemo()
    {
        return $this->container['memo'];
    }

    /**
     * Sets memo
     *
     * @param string $memo <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_BUL_MEMO_FLAG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMemo($memo)
    {
        $this->container['memo'] = $memo;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_UPD_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets last_printed
     *
     * @return \DateTime
     */
    public function getLastPrinted()
    {
        return $this->container['last_printed'];
    }

    /**
     * Sets last_printed
     *
     * @param \DateTime $last_printed <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_PRINT_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastPrinted($last_printed)
    {
        $this->container['last_printed'] = $last_printed;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_ENT_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_BUL_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets print
     *
     * @return string
     */
    public function getPrint()
    {
        return $this->container['print'];
    }

    /**
     * Sets print
     *
     * @param string $print <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_BUL_PRT_FLAG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPrint($print)
    {
        $this->container['print'] = $print;

        return $this;
    }

    /**
     * Gets suppress_final_submission
     *
     * @return string
     */
    public function getSuppressFinalSubmission()
    {
        return $this->container['suppress_final_submission'];
    }

    /**
     * Sets suppress_final_submission
     *
     * @param string $suppress_final_submission <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_STATUS_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSuppressFinalSubmission($suppress_final_submission)
    {
        $this->container['suppress_final_submission'] = $suppress_final_submission;

        return $this;
    }

    /**
     * Gets approval_level
     *
     * @return int
     */
    public function getApprovalLevel()
    {
        return $this->container['approval_level'];
    }

    /**
     * Sets approval_level
     *
     * @param int $approval_level <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_APPR_LVL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setApprovalLevel($approval_level)
    {
        $this->container['approval_level'] = $approval_level;

        return $this;
    }

    /**
     * Gets approved_by
     *
     * @return string
     */
    public function getApprovedBy()
    {
        return $this->container['approved_by'];
    }

    /**
     * Sets approved_by
     *
     * @param string $approved_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_APPR_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setApprovedBy($approved_by)
    {
        $this->container['approved_by'] = $approved_by;

        return $this;
    }

    /**
     * Gets approved_on
     *
     * @return \DateTime
     */
    public function getApprovedOn()
    {
        return $this->container['approved_on'];
    }

    /**
     * Sets approved_on
     *
     * @param \DateTime $approved_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_APPR_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setApprovedOn($approved_on)
    {
        $this->container['approved_on'] = $approved_on;

        return $this;
    }

    /**
     * Gets approved_action
     *
     * @return string
     */
    public function getApprovedAction()
    {
        return $this->container['approved_action'];
    }

    /**
     * Sets approved_action
     *
     * @param string $approved_action <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_APPR_ACTION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setApprovedAction($approved_action)
    {
        $this->container['approved_action'] = $approved_action;

        return $this;
    }

    /**
     * Gets response_due_by
     *
     * @return \DateTime
     */
    public function getResponseDueBy()
    {
        return $this->container['response_due_by'];
    }

    /**
     * Sets response_due_by
     *
     * @param \DateTime $response_due_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_ACTIVE_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setResponseDueBy($response_due_by)
    {
        $this->container['response_due_by'] = $response_due_by;

        return $this;
    }

    /**
     * Gets notified_date
     *
     * @return \DateTime
     */
    public function getNotifiedDate()
    {
        return $this->container['notified_date'];
    }

    /**
     * Sets notified_date
     *
     * @param \DateTime $notified_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_NOTIFIED_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNotifiedDate($notified_date)
    {
        $this->container['notified_date'] = $notified_date;

        return $this;
    }

    /**
     * Gets rooms_option
     *
     * @return string
     */
    public function getRoomsOption()
    {
        return $this->container['rooms_option'];
    }

    /**
     * Sets rooms_option
     *
     * @param string $rooms_option <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_ALLOW_RMS_OPT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRoomsOption($rooms_option)
    {
        $this->container['rooms_option'] = $rooms_option;

        return $this;
    }

    /**
     * Gets rooms_blocked
     *
     * @return string
     */
    public function getRoomsBlocked()
    {
        return $this->container['rooms_blocked'];
    }

    /**
     * Sets rooms_blocked
     *
     * @param string $rooms_blocked <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_ALLOW_RMS_BLK  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRoomsBlocked($rooms_blocked)
    {
        $this->container['rooms_blocked'] = $rooms_blocked;

        return $this;
    }

    /**
     * Gets rooms_pickup
     *
     * @return string
     */
    public function getRoomsPickup()
    {
        return $this->container['rooms_pickup'];
    }

    /**
     * Sets rooms_pickup
     *
     * @param string $rooms_pickup <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_ALLOW_RMS_PUP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRoomsPickup($rooms_pickup)
    {
        $this->container['rooms_pickup'] = $rooms_pickup;

        return $this;
    }

    /**
     * Gets flow_nbr2_option
     *
     * @return string
     */
    public function getFlowNbr2Option()
    {
        return $this->container['flow_nbr2_option'];
    }

    /**
     * Sets flow_nbr2_option
     *
     * @param string $flow_nbr2_option <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_ALLOW_NB2_OPT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFlowNbr2Option($flow_nbr2_option)
    {
        $this->container['flow_nbr2_option'] = $flow_nbr2_option;

        return $this;
    }

    /**
     * Gets flow_nbr2_blocked
     *
     * @return string
     */
    public function getFlowNbr2Blocked()
    {
        return $this->container['flow_nbr2_blocked'];
    }

    /**
     * Sets flow_nbr2_blocked
     *
     * @param string $flow_nbr2_blocked <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_ALLOW_NB2_BLK  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFlowNbr2Blocked($flow_nbr2_blocked)
    {
        $this->container['flow_nbr2_blocked'] = $flow_nbr2_blocked;

        return $this;
    }

    /**
     * Gets flow_nbr2_pickup
     *
     * @return string
     */
    public function getFlowNbr2Pickup()
    {
        return $this->container['flow_nbr2_pickup'];
    }

    /**
     * Sets flow_nbr2_pickup
     *
     * @param string $flow_nbr2_pickup <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_ALLOW_NB2_PUP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFlowNbr2Pickup($flow_nbr2_pickup)
    {
        $this->container['flow_nbr2_pickup'] = $flow_nbr2_pickup;

        return $this;
    }

    /**
     * Gets flow_nbr3_option
     *
     * @return string
     */
    public function getFlowNbr3Option()
    {
        return $this->container['flow_nbr3_option'];
    }

    /**
     * Sets flow_nbr3_option
     *
     * @param string $flow_nbr3_option <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_ALLOW_NB3_OPT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFlowNbr3Option($flow_nbr3_option)
    {
        $this->container['flow_nbr3_option'] = $flow_nbr3_option;

        return $this;
    }

    /**
     * Gets flow_nbr3_blocked
     *
     * @return string
     */
    public function getFlowNbr3Blocked()
    {
        return $this->container['flow_nbr3_blocked'];
    }

    /**
     * Sets flow_nbr3_blocked
     *
     * @param string $flow_nbr3_blocked <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_ALLOW_NB3_BLK  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFlowNbr3Blocked($flow_nbr3_blocked)
    {
        $this->container['flow_nbr3_blocked'] = $flow_nbr3_blocked;

        return $this;
    }

    /**
     * Gets properties_must_agree_to_concessions_offered
     *
     * @return string
     */
    public function getPropertiesMustAgreeToConcessionsOffered()
    {
        return $this->container['properties_must_agree_to_concessions_offered'];
    }

    /**
     * Sets properties_must_agree_to_concessions_offered
     *
     * @param string $properties_must_agree_to_concessions_offered <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_PROP_MUST_AGREE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPropertiesMustAgreeToConcessionsOffered($properties_must_agree_to_concessions_offered)
    {
        $this->container['properties_must_agree_to_concessions_offered'] = $properties_must_agree_to_concessions_offered;

        return $this;
    }

    /**
     * Gets flow_nbr3_pickup
     *
     * @return string
     */
    public function getFlowNbr3Pickup()
    {
        return $this->container['flow_nbr3_pickup'];
    }

    /**
     * Sets flow_nbr3_pickup
     *
     * @param string $flow_nbr3_pickup <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_ALLOW_NB3_PUP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFlowNbr3Pickup($flow_nbr3_pickup)
    {
        $this->container['flow_nbr3_pickup'] = $flow_nbr3_pickup;

        return $this;
    }

    /**
     * Gets flow_nbr4_option
     *
     * @return string
     */
    public function getFlowNbr4Option()
    {
        return $this->container['flow_nbr4_option'];
    }

    /**
     * Sets flow_nbr4_option
     *
     * @param string $flow_nbr4_option <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_ALLOW_NB4_OPT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFlowNbr4Option($flow_nbr4_option)
    {
        $this->container['flow_nbr4_option'] = $flow_nbr4_option;

        return $this;
    }

    /**
     * Gets flow_nbr4_blocked
     *
     * @return string
     */
    public function getFlowNbr4Blocked()
    {
        return $this->container['flow_nbr4_blocked'];
    }

    /**
     * Sets flow_nbr4_blocked
     *
     * @param string $flow_nbr4_blocked <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_ALLOW_NB4_BLK  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFlowNbr4Blocked($flow_nbr4_blocked)
    {
        $this->container['flow_nbr4_blocked'] = $flow_nbr4_blocked;

        return $this;
    }

    /**
     * Gets flow_nbr4_pickup
     *
     * @return string
     */
    public function getFlowNbr4Pickup()
    {
        return $this->container['flow_nbr4_pickup'];
    }

    /**
     * Sets flow_nbr4_pickup
     *
     * @param string $flow_nbr4_pickup <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC220_ALLOW_NB4_PUP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFlowNbr4Pickup($flow_nbr4_pickup)
    {
        $this->container['flow_nbr4_pickup'] = $flow_nbr4_pickup;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


