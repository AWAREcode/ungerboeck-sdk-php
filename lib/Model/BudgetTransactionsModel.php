<?php
/**
 * BudgetTransactionsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * BudgetTransactionsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class BudgetTransactionsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'BudgetTransactionsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization_code' => 'string',
        'batch' => 'string',
        'transaction_num' => 'int',
        'year' => 'int',
        'period' => 'int',
        'entry_status' => 'string',
        'transaction_description' => 'string',
        'gl_account' => 'string',
        'gl_sub_account' => 'string',
        'event_job' => 'int',
        'space' => 'string',
        'gl_account_masked' => 'string',
        'budget_amount_to' => 'double',
        'budget_quantity_to' => 'double',
        'entered_on' => '\DateTime',
        'entered_by' => 'string',
        'changed_on' => '\DateTime',
        'changed_by' => 'string',
        'batch_detail_type' => 'string',
        'budget_amount_from' => 'double',
        'budget_amt_chg' => 'double',
        'budget_quantity_from' => 'double',
        'budget_units_chg' => 'double',
        'revised_amount_from' => 'double',
        'revised_amount_to' => 'double',
        'revised_amount_difference' => 'double',
        'revised_quantity_from' => 'double',
        'revised_quantity_to' => 'double',
        'revised_quantity_difference' => 'double',
        'year_period' => 'string',
        'batch_detail_status_weight' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization_code' => null,
        'batch' => null,
        'transaction_num' => 'int32',
        'year' => 'int32',
        'period' => 'int32',
        'entry_status' => null,
        'transaction_description' => null,
        'gl_account' => null,
        'gl_sub_account' => null,
        'event_job' => 'int32',
        'space' => null,
        'gl_account_masked' => null,
        'budget_amount_to' => 'double',
        'budget_quantity_to' => 'double',
        'entered_on' => 'date-time',
        'entered_by' => null,
        'changed_on' => 'date-time',
        'changed_by' => null,
        'batch_detail_type' => null,
        'budget_amount_from' => 'double',
        'budget_amt_chg' => 'double',
        'budget_quantity_from' => 'double',
        'budget_units_chg' => 'double',
        'revised_amount_from' => 'double',
        'revised_amount_to' => 'double',
        'revised_amount_difference' => 'double',
        'revised_quantity_from' => 'double',
        'revised_quantity_to' => 'double',
        'revised_quantity_difference' => 'double',
        'year_period' => null,
        'batch_detail_status_weight' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization_code' => 'OrganizationCode',
        'batch' => 'Batch',
        'transaction_num' => 'TransactionNum',
        'year' => 'Year',
        'period' => 'Period',
        'entry_status' => 'EntryStatus',
        'transaction_description' => 'TransactionDescription',
        'gl_account' => 'GLAccount',
        'gl_sub_account' => 'GLSubAccount',
        'event_job' => 'EventJob',
        'space' => 'Space',
        'gl_account_masked' => 'GLAccountMasked',
        'budget_amount_to' => 'BudgetAmountTo',
        'budget_quantity_to' => 'BudgetQuantityTo',
        'entered_on' => 'EnteredOn',
        'entered_by' => 'EnteredBy',
        'changed_on' => 'ChangedOn',
        'changed_by' => 'ChangedBy',
        'batch_detail_type' => 'BatchDetailType',
        'budget_amount_from' => 'BudgetAmountFrom',
        'budget_amt_chg' => 'BudgetAmtChg',
        'budget_quantity_from' => 'BudgetQuantityFrom',
        'budget_units_chg' => 'BudgetUnitsChg',
        'revised_amount_from' => 'RevisedAmountFrom',
        'revised_amount_to' => 'RevisedAmountTo',
        'revised_amount_difference' => 'RevisedAmountDifference',
        'revised_quantity_from' => 'RevisedQuantityFrom',
        'revised_quantity_to' => 'RevisedQuantityTo',
        'revised_quantity_difference' => 'RevisedQuantityDifference',
        'year_period' => 'YearPeriod',
        'batch_detail_status_weight' => 'BatchDetailStatusWeight'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization_code' => 'setOrganizationCode',
        'batch' => 'setBatch',
        'transaction_num' => 'setTransactionNum',
        'year' => 'setYear',
        'period' => 'setPeriod',
        'entry_status' => 'setEntryStatus',
        'transaction_description' => 'setTransactionDescription',
        'gl_account' => 'setGlAccount',
        'gl_sub_account' => 'setGlSubAccount',
        'event_job' => 'setEventJob',
        'space' => 'setSpace',
        'gl_account_masked' => 'setGlAccountMasked',
        'budget_amount_to' => 'setBudgetAmountTo',
        'budget_quantity_to' => 'setBudgetQuantityTo',
        'entered_on' => 'setEnteredOn',
        'entered_by' => 'setEnteredBy',
        'changed_on' => 'setChangedOn',
        'changed_by' => 'setChangedBy',
        'batch_detail_type' => 'setBatchDetailType',
        'budget_amount_from' => 'setBudgetAmountFrom',
        'budget_amt_chg' => 'setBudgetAmtChg',
        'budget_quantity_from' => 'setBudgetQuantityFrom',
        'budget_units_chg' => 'setBudgetUnitsChg',
        'revised_amount_from' => 'setRevisedAmountFrom',
        'revised_amount_to' => 'setRevisedAmountTo',
        'revised_amount_difference' => 'setRevisedAmountDifference',
        'revised_quantity_from' => 'setRevisedQuantityFrom',
        'revised_quantity_to' => 'setRevisedQuantityTo',
        'revised_quantity_difference' => 'setRevisedQuantityDifference',
        'year_period' => 'setYearPeriod',
        'batch_detail_status_weight' => 'setBatchDetailStatusWeight'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization_code' => 'getOrganizationCode',
        'batch' => 'getBatch',
        'transaction_num' => 'getTransactionNum',
        'year' => 'getYear',
        'period' => 'getPeriod',
        'entry_status' => 'getEntryStatus',
        'transaction_description' => 'getTransactionDescription',
        'gl_account' => 'getGlAccount',
        'gl_sub_account' => 'getGlSubAccount',
        'event_job' => 'getEventJob',
        'space' => 'getSpace',
        'gl_account_masked' => 'getGlAccountMasked',
        'budget_amount_to' => 'getBudgetAmountTo',
        'budget_quantity_to' => 'getBudgetQuantityTo',
        'entered_on' => 'getEnteredOn',
        'entered_by' => 'getEnteredBy',
        'changed_on' => 'getChangedOn',
        'changed_by' => 'getChangedBy',
        'batch_detail_type' => 'getBatchDetailType',
        'budget_amount_from' => 'getBudgetAmountFrom',
        'budget_amt_chg' => 'getBudgetAmtChg',
        'budget_quantity_from' => 'getBudgetQuantityFrom',
        'budget_units_chg' => 'getBudgetUnitsChg',
        'revised_amount_from' => 'getRevisedAmountFrom',
        'revised_amount_to' => 'getRevisedAmountTo',
        'revised_amount_difference' => 'getRevisedAmountDifference',
        'revised_quantity_from' => 'getRevisedQuantityFrom',
        'revised_quantity_to' => 'getRevisedQuantityTo',
        'revised_quantity_difference' => 'getRevisedQuantityDifference',
        'year_period' => 'getYearPeriod',
        'batch_detail_status_weight' => 'getBatchDetailStatusWeight'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['batch'] = isset($data['batch']) ? $data['batch'] : null;
        $this->container['transaction_num'] = isset($data['transaction_num']) ? $data['transaction_num'] : null;
        $this->container['year'] = isset($data['year']) ? $data['year'] : null;
        $this->container['period'] = isset($data['period']) ? $data['period'] : null;
        $this->container['entry_status'] = isset($data['entry_status']) ? $data['entry_status'] : null;
        $this->container['transaction_description'] = isset($data['transaction_description']) ? $data['transaction_description'] : null;
        $this->container['gl_account'] = isset($data['gl_account']) ? $data['gl_account'] : null;
        $this->container['gl_sub_account'] = isset($data['gl_sub_account']) ? $data['gl_sub_account'] : null;
        $this->container['event_job'] = isset($data['event_job']) ? $data['event_job'] : null;
        $this->container['space'] = isset($data['space']) ? $data['space'] : null;
        $this->container['gl_account_masked'] = isset($data['gl_account_masked']) ? $data['gl_account_masked'] : null;
        $this->container['budget_amount_to'] = isset($data['budget_amount_to']) ? $data['budget_amount_to'] : null;
        $this->container['budget_quantity_to'] = isset($data['budget_quantity_to']) ? $data['budget_quantity_to'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['batch_detail_type'] = isset($data['batch_detail_type']) ? $data['batch_detail_type'] : null;
        $this->container['budget_amount_from'] = isset($data['budget_amount_from']) ? $data['budget_amount_from'] : null;
        $this->container['budget_amt_chg'] = isset($data['budget_amt_chg']) ? $data['budget_amt_chg'] : null;
        $this->container['budget_quantity_from'] = isset($data['budget_quantity_from']) ? $data['budget_quantity_from'] : null;
        $this->container['budget_units_chg'] = isset($data['budget_units_chg']) ? $data['budget_units_chg'] : null;
        $this->container['revised_amount_from'] = isset($data['revised_amount_from']) ? $data['revised_amount_from'] : null;
        $this->container['revised_amount_to'] = isset($data['revised_amount_to']) ? $data['revised_amount_to'] : null;
        $this->container['revised_amount_difference'] = isset($data['revised_amount_difference']) ? $data['revised_amount_difference'] : null;
        $this->container['revised_quantity_from'] = isset($data['revised_quantity_from']) ? $data['revised_quantity_from'] : null;
        $this->container['revised_quantity_to'] = isset($data['revised_quantity_to']) ? $data['revised_quantity_to'] : null;
        $this->container['revised_quantity_difference'] = isset($data['revised_quantity_difference']) ? $data['revised_quantity_difference'] : null;
        $this->container['year_period'] = isset($data['year_period']) ? $data['year_period'] : null;
        $this->container['batch_detail_status_weight'] = isset($data['batch_detail_status_weight']) ? $data['batch_detail_status_weight'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['batch'] === null) {
            $invalidProperties[] = "'batch' can't be null";
        }
        if ($this->container['transaction_num'] === null) {
            $invalidProperties[] = "'transaction_num' can't be null";
        }
        if ($this->container['year'] === null) {
            $invalidProperties[] = "'year' can't be null";
        }
        if ($this->container['period'] === null) {
            $invalidProperties[] = "'period' can't be null";
        }
        if ($this->container['entry_status'] === null) {
            $invalidProperties[] = "'entry_status' can't be null";
        }
        if ($this->container['transaction_description'] === null) {
            $invalidProperties[] = "'transaction_description' can't be null";
        }
        if ($this->container['gl_account'] === null) {
            $invalidProperties[] = "'gl_account' can't be null";
        }
        if ($this->container['gl_sub_account'] === null) {
            $invalidProperties[] = "'gl_sub_account' can't be null";
        }
        if ($this->container['event_job'] === null) {
            $invalidProperties[] = "'event_job' can't be null";
        }
        if ($this->container['space'] === null) {
            $invalidProperties[] = "'space' can't be null";
        }
        if ($this->container['gl_account_masked'] === null) {
            $invalidProperties[] = "'gl_account_masked' can't be null";
        }
        if ($this->container['budget_amount_to'] === null) {
            $invalidProperties[] = "'budget_amount_to' can't be null";
        }
        if ($this->container['budget_quantity_to'] === null) {
            $invalidProperties[] = "'budget_quantity_to' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['batch_detail_type'] === null) {
            $invalidProperties[] = "'batch_detail_type' can't be null";
        }
        if ($this->container['budget_amount_from'] === null) {
            $invalidProperties[] = "'budget_amount_from' can't be null";
        }
        if ($this->container['budget_amt_chg'] === null) {
            $invalidProperties[] = "'budget_amt_chg' can't be null";
        }
        if ($this->container['budget_quantity_from'] === null) {
            $invalidProperties[] = "'budget_quantity_from' can't be null";
        }
        if ($this->container['budget_units_chg'] === null) {
            $invalidProperties[] = "'budget_units_chg' can't be null";
        }
        if ($this->container['revised_amount_from'] === null) {
            $invalidProperties[] = "'revised_amount_from' can't be null";
        }
        if ($this->container['revised_amount_to'] === null) {
            $invalidProperties[] = "'revised_amount_to' can't be null";
        }
        if ($this->container['revised_amount_difference'] === null) {
            $invalidProperties[] = "'revised_amount_difference' can't be null";
        }
        if ($this->container['revised_quantity_from'] === null) {
            $invalidProperties[] = "'revised_quantity_from' can't be null";
        }
        if ($this->container['revised_quantity_to'] === null) {
            $invalidProperties[] = "'revised_quantity_to' can't be null";
        }
        if ($this->container['revised_quantity_difference'] === null) {
            $invalidProperties[] = "'revised_quantity_difference' can't be null";
        }
        if ($this->container['year_period'] === null) {
            $invalidProperties[] = "'year_period' can't be null";
        }
        if ($this->container['batch_detail_status_weight'] === null) {
            $invalidProperties[] = "'batch_detail_status_weight' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets batch
     *
     * @return string
     */
    public function getBatch()
    {
        return $this->container['batch'];
    }

    /**
     * Sets batch
     *
     * @param string $batch <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_BATCH_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBatch($batch)
    {
        $this->container['batch'] = $batch;

        return $this;
    }

    /**
     * Gets transaction_num
     *
     * @return int
     */
    public function getTransactionNum()
    {
        return $this->container['transaction_num'];
    }

    /**
     * Sets transaction_num
     *
     * @param int $transaction_num <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_SEQ_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTransactionNum($transaction_num)
    {
        $this->container['transaction_num'] = $transaction_num;

        return $this;
    }

    /**
     * Gets year
     *
     * @return int
     */
    public function getYear()
    {
        return $this->container['year'];
    }

    /**
     * Sets year
     *
     * @param int $year <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_FISCAL_YR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setYear($year)
    {
        $this->container['year'] = $year;

        return $this;
    }

    /**
     * Gets period
     *
     * @return int
     */
    public function getPeriod()
    {
        return $this->container['period'];
    }

    /**
     * Sets period
     *
     * @param int $period <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_FISCAL_PERIOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPeriod($period)
    {
        $this->container['period'] = $period;

        return $this;
    }

    /**
     * Gets entry_status
     *
     * @return string
     */
    public function getEntryStatus()
    {
        return $this->container['entry_status'];
    }

    /**
     * Sets entry_status
     *
     * @param string $entry_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_ENTRY_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEntryStatus($entry_status)
    {
        $this->container['entry_status'] = $entry_status;

        return $this;
    }

    /**
     * Gets transaction_description
     *
     * @return string
     */
    public function getTransactionDescription()
    {
        return $this->container['transaction_description'];
    }

    /**
     * Sets transaction_description
     *
     * @param string $transaction_description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTransactionDescription($transaction_description)
    {
        $this->container['transaction_description'] = $transaction_description;

        return $this;
    }

    /**
     * Gets gl_account
     *
     * @return string
     */
    public function getGlAccount()
    {
        return $this->container['gl_account'];
    }

    /**
     * Sets gl_account
     *
     * @param string $gl_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlAccount($gl_account)
    {
        $this->container['gl_account'] = $gl_account;

        return $this;
    }

    /**
     * Gets gl_sub_account
     *
     * @return string
     */
    public function getGlSubAccount()
    {
        return $this->container['gl_sub_account'];
    }

    /**
     * Sets gl_sub_account
     *
     * @param string $gl_sub_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_SUB_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlSubAccount($gl_sub_account)
    {
        $this->container['gl_sub_account'] = $gl_sub_account;

        return $this;
    }

    /**
     * Gets event_job
     *
     * @return int
     */
    public function getEventJob()
    {
        return $this->container['event_job'];
    }

    /**
     * Sets event_job
     *
     * @param int $event_job <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_EVENT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEventJob($event_job)
    {
        $this->container['event_job'] = $event_job;

        return $this;
    }

    /**
     * Gets space
     *
     * @return string
     */
    public function getSpace()
    {
        return $this->container['space'];
    }

    /**
     * Sets space
     *
     * @param string $space <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_SPACE_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSpace($space)
    {
        $this->container['space'] = $space;

        return $this;
    }

    /**
     * Gets gl_account_masked
     *
     * @return string
     */
    public function getGlAccountMasked()
    {
        return $this->container['gl_account_masked'];
    }

    /**
     * Sets gl_account_masked
     *
     * @param string $gl_account_masked <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_ACCOUNT_MASKED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 45  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlAccountMasked($gl_account_masked)
    {
        $this->container['gl_account_masked'] = $gl_account_masked;

        return $this;
    }

    /**
     * Gets budget_amount_to
     *
     * @return double
     */
    public function getBudgetAmountTo()
    {
        return $this->container['budget_amount_to'];
    }

    /**
     * Sets budget_amount_to
     *
     * @param double $budget_amount_to <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_BUD_AMT_TO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBudgetAmountTo($budget_amount_to)
    {
        $this->container['budget_amount_to'] = $budget_amount_to;

        return $this;
    }

    /**
     * Gets budget_quantity_to
     *
     * @return double
     */
    public function getBudgetQuantityTo()
    {
        return $this->container['budget_quantity_to'];
    }

    /**
     * Sets budget_quantity_to
     *
     * @param double $budget_quantity_to <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_BUD_QTY_TO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBudgetQuantityTo($budget_quantity_to)
    {
        $this->container['budget_quantity_to'] = $budget_quantity_to;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets batch_detail_type
     *
     * @return string
     */
    public function getBatchDetailType()
    {
        return $this->container['batch_detail_type'];
    }

    /**
     * Sets batch_detail_type
     *
     * @param string $batch_detail_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_DTL_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBatchDetailType($batch_detail_type)
    {
        $this->container['batch_detail_type'] = $batch_detail_type;

        return $this;
    }

    /**
     * Gets budget_amount_from
     *
     * @return double
     */
    public function getBudgetAmountFrom()
    {
        return $this->container['budget_amount_from'];
    }

    /**
     * Sets budget_amount_from
     *
     * @param double $budget_amount_from <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_BUD_AMT_FROM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBudgetAmountFrom($budget_amount_from)
    {
        $this->container['budget_amount_from'] = $budget_amount_from;

        return $this;
    }

    /**
     * Gets budget_amt_chg
     *
     * @return double
     */
    public function getBudgetAmtChg()
    {
        return $this->container['budget_amt_chg'];
    }

    /**
     * Sets budget_amt_chg
     *
     * @param double $budget_amt_chg <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_BUD_AMT_DIFF  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBudgetAmtChg($budget_amt_chg)
    {
        $this->container['budget_amt_chg'] = $budget_amt_chg;

        return $this;
    }

    /**
     * Gets budget_quantity_from
     *
     * @return double
     */
    public function getBudgetQuantityFrom()
    {
        return $this->container['budget_quantity_from'];
    }

    /**
     * Sets budget_quantity_from
     *
     * @param double $budget_quantity_from <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_BUD_QTY_FROM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBudgetQuantityFrom($budget_quantity_from)
    {
        $this->container['budget_quantity_from'] = $budget_quantity_from;

        return $this;
    }

    /**
     * Gets budget_units_chg
     *
     * @return double
     */
    public function getBudgetUnitsChg()
    {
        return $this->container['budget_units_chg'];
    }

    /**
     * Sets budget_units_chg
     *
     * @param double $budget_units_chg <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_BUD_QTY_DIFF  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBudgetUnitsChg($budget_units_chg)
    {
        $this->container['budget_units_chg'] = $budget_units_chg;

        return $this;
    }

    /**
     * Gets revised_amount_from
     *
     * @return double
     */
    public function getRevisedAmountFrom()
    {
        return $this->container['revised_amount_from'];
    }

    /**
     * Sets revised_amount_from
     *
     * @param double $revised_amount_from <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_REV_AMT_FROM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRevisedAmountFrom($revised_amount_from)
    {
        $this->container['revised_amount_from'] = $revised_amount_from;

        return $this;
    }

    /**
     * Gets revised_amount_to
     *
     * @return double
     */
    public function getRevisedAmountTo()
    {
        return $this->container['revised_amount_to'];
    }

    /**
     * Sets revised_amount_to
     *
     * @param double $revised_amount_to <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_REV_AMT_TO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRevisedAmountTo($revised_amount_to)
    {
        $this->container['revised_amount_to'] = $revised_amount_to;

        return $this;
    }

    /**
     * Gets revised_amount_difference
     *
     * @return double
     */
    public function getRevisedAmountDifference()
    {
        return $this->container['revised_amount_difference'];
    }

    /**
     * Sets revised_amount_difference
     *
     * @param double $revised_amount_difference <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_REV_AMT_DIFF  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRevisedAmountDifference($revised_amount_difference)
    {
        $this->container['revised_amount_difference'] = $revised_amount_difference;

        return $this;
    }

    /**
     * Gets revised_quantity_from
     *
     * @return double
     */
    public function getRevisedQuantityFrom()
    {
        return $this->container['revised_quantity_from'];
    }

    /**
     * Sets revised_quantity_from
     *
     * @param double $revised_quantity_from <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_REV_QTY_FROM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRevisedQuantityFrom($revised_quantity_from)
    {
        $this->container['revised_quantity_from'] = $revised_quantity_from;

        return $this;
    }

    /**
     * Gets revised_quantity_to
     *
     * @return double
     */
    public function getRevisedQuantityTo()
    {
        return $this->container['revised_quantity_to'];
    }

    /**
     * Sets revised_quantity_to
     *
     * @param double $revised_quantity_to <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_REV_QTY_TO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRevisedQuantityTo($revised_quantity_to)
    {
        $this->container['revised_quantity_to'] = $revised_quantity_to;

        return $this;
    }

    /**
     * Gets revised_quantity_difference
     *
     * @return double
     */
    public function getRevisedQuantityDifference()
    {
        return $this->container['revised_quantity_difference'];
    }

    /**
     * Sets revised_quantity_difference
     *
     * @param double $revised_quantity_difference <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_REV_QTY_DIFF  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRevisedQuantityDifference($revised_quantity_difference)
    {
        $this->container['revised_quantity_difference'] = $revised_quantity_difference;

        return $this;
    }

    /**
     * Gets year_period
     *
     * @return string
     */
    public function getYearPeriod()
    {
        return $this->container['year_period'];
    }

    /**
     * Sets year_period
     *
     * @param string $year_period <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_FYP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setYearPeriod($year_period)
    {
        $this->container['year_period'] = $year_period;

        return $this;
    }

    /**
     * Gets batch_detail_status_weight
     *
     * @return int
     */
    public function getBatchDetailStatusWeight()
    {
        return $this->container['batch_detail_status_weight'];
    }

    /**
     * Sets batch_detail_status_weight
     *
     * @param int $batch_detail_status_weight <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL111_STS_WEIGHT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBatchDetailStatusWeight($batch_detail_status_weight)
    {
        $this->container['batch_detail_status_weight'] = $batch_detail_status_weight;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


