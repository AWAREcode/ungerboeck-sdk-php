<?php
/**
 * GLDeferralRevenueDetailsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * GLDeferralRevenueDetailsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GLDeferralRevenueDetailsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'GLDeferralRevenueDetailsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'sequence' => 'int',
        'hdr_sequence' => 'int',
        'deferral_gl_account' => 'string',
        'deferral_gl_sub_account' => 'string',
        'recognition_gl_account' => 'string',
        'recognition_gl_sub_account' => 'string',
        'start_date' => '\DateTime',
        'end_date' => '\DateTime',
        'year_period' => 'string',
        'fiscal_year' => 'int',
        'fiscal_period' => 'int',
        'journal_entry_id' => 'int',
        'journal_entry_nbr' => 'string',
        'journal_entry_line' => 'int',
        'local_amount' => 'double',
        'amount' => 'double',
        'periods' => 'double',
        'generated' => 'string',
        'status' => 'string',
        'entered_on' => '\DateTime',
        'entered_by' => 'string',
        'changed_on' => '\DateTime',
        'changed_by' => 'string',
        'je_line_id' => 'int',
        'local_amount_recognized' => 'double',
        'amount_recognized' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'sequence' => 'int32',
        'hdr_sequence' => 'int32',
        'deferral_gl_account' => null,
        'deferral_gl_sub_account' => null,
        'recognition_gl_account' => null,
        'recognition_gl_sub_account' => null,
        'start_date' => 'date-time',
        'end_date' => 'date-time',
        'year_period' => null,
        'fiscal_year' => 'int32',
        'fiscal_period' => 'int32',
        'journal_entry_id' => 'int32',
        'journal_entry_nbr' => null,
        'journal_entry_line' => 'int32',
        'local_amount' => 'double',
        'amount' => 'double',
        'periods' => 'double',
        'generated' => null,
        'status' => null,
        'entered_on' => 'date-time',
        'entered_by' => null,
        'changed_on' => 'date-time',
        'changed_by' => null,
        'je_line_id' => 'int32',
        'local_amount_recognized' => 'double',
        'amount_recognized' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'sequence' => 'Sequence',
        'hdr_sequence' => 'HdrSequence',
        'deferral_gl_account' => 'DeferralGLAccount',
        'deferral_gl_sub_account' => 'DeferralGLSubAccount',
        'recognition_gl_account' => 'RecognitionGLAccount',
        'recognition_gl_sub_account' => 'RecognitionGLSubAccount',
        'start_date' => 'StartDate',
        'end_date' => 'EndDate',
        'year_period' => 'YearPeriod',
        'fiscal_year' => 'FiscalYear',
        'fiscal_period' => 'FiscalPeriod',
        'journal_entry_id' => 'JournalEntryID',
        'journal_entry_nbr' => 'JournalEntryNbr',
        'journal_entry_line' => 'JournalEntryLine',
        'local_amount' => 'LocalAmount',
        'amount' => 'Amount',
        'periods' => 'Periods',
        'generated' => 'Generated',
        'status' => 'Status',
        'entered_on' => 'EnteredOn',
        'entered_by' => 'EnteredBy',
        'changed_on' => 'ChangedOn',
        'changed_by' => 'ChangedBy',
        'je_line_id' => 'JELineID',
        'local_amount_recognized' => 'LocalAmountRecognized',
        'amount_recognized' => 'AmountRecognized'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'sequence' => 'setSequence',
        'hdr_sequence' => 'setHdrSequence',
        'deferral_gl_account' => 'setDeferralGlAccount',
        'deferral_gl_sub_account' => 'setDeferralGlSubAccount',
        'recognition_gl_account' => 'setRecognitionGlAccount',
        'recognition_gl_sub_account' => 'setRecognitionGlSubAccount',
        'start_date' => 'setStartDate',
        'end_date' => 'setEndDate',
        'year_period' => 'setYearPeriod',
        'fiscal_year' => 'setFiscalYear',
        'fiscal_period' => 'setFiscalPeriod',
        'journal_entry_id' => 'setJournalEntryId',
        'journal_entry_nbr' => 'setJournalEntryNbr',
        'journal_entry_line' => 'setJournalEntryLine',
        'local_amount' => 'setLocalAmount',
        'amount' => 'setAmount',
        'periods' => 'setPeriods',
        'generated' => 'setGenerated',
        'status' => 'setStatus',
        'entered_on' => 'setEnteredOn',
        'entered_by' => 'setEnteredBy',
        'changed_on' => 'setChangedOn',
        'changed_by' => 'setChangedBy',
        'je_line_id' => 'setJeLineId',
        'local_amount_recognized' => 'setLocalAmountRecognized',
        'amount_recognized' => 'setAmountRecognized'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'sequence' => 'getSequence',
        'hdr_sequence' => 'getHdrSequence',
        'deferral_gl_account' => 'getDeferralGlAccount',
        'deferral_gl_sub_account' => 'getDeferralGlSubAccount',
        'recognition_gl_account' => 'getRecognitionGlAccount',
        'recognition_gl_sub_account' => 'getRecognitionGlSubAccount',
        'start_date' => 'getStartDate',
        'end_date' => 'getEndDate',
        'year_period' => 'getYearPeriod',
        'fiscal_year' => 'getFiscalYear',
        'fiscal_period' => 'getFiscalPeriod',
        'journal_entry_id' => 'getJournalEntryId',
        'journal_entry_nbr' => 'getJournalEntryNbr',
        'journal_entry_line' => 'getJournalEntryLine',
        'local_amount' => 'getLocalAmount',
        'amount' => 'getAmount',
        'periods' => 'getPeriods',
        'generated' => 'getGenerated',
        'status' => 'getStatus',
        'entered_on' => 'getEnteredOn',
        'entered_by' => 'getEnteredBy',
        'changed_on' => 'getChangedOn',
        'changed_by' => 'getChangedBy',
        'je_line_id' => 'getJeLineId',
        'local_amount_recognized' => 'getLocalAmountRecognized',
        'amount_recognized' => 'getAmountRecognized'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['sequence'] = isset($data['sequence']) ? $data['sequence'] : null;
        $this->container['hdr_sequence'] = isset($data['hdr_sequence']) ? $data['hdr_sequence'] : null;
        $this->container['deferral_gl_account'] = isset($data['deferral_gl_account']) ? $data['deferral_gl_account'] : null;
        $this->container['deferral_gl_sub_account'] = isset($data['deferral_gl_sub_account']) ? $data['deferral_gl_sub_account'] : null;
        $this->container['recognition_gl_account'] = isset($data['recognition_gl_account']) ? $data['recognition_gl_account'] : null;
        $this->container['recognition_gl_sub_account'] = isset($data['recognition_gl_sub_account']) ? $data['recognition_gl_sub_account'] : null;
        $this->container['start_date'] = isset($data['start_date']) ? $data['start_date'] : null;
        $this->container['end_date'] = isset($data['end_date']) ? $data['end_date'] : null;
        $this->container['year_period'] = isset($data['year_period']) ? $data['year_period'] : null;
        $this->container['fiscal_year'] = isset($data['fiscal_year']) ? $data['fiscal_year'] : null;
        $this->container['fiscal_period'] = isset($data['fiscal_period']) ? $data['fiscal_period'] : null;
        $this->container['journal_entry_id'] = isset($data['journal_entry_id']) ? $data['journal_entry_id'] : null;
        $this->container['journal_entry_nbr'] = isset($data['journal_entry_nbr']) ? $data['journal_entry_nbr'] : null;
        $this->container['journal_entry_line'] = isset($data['journal_entry_line']) ? $data['journal_entry_line'] : null;
        $this->container['local_amount'] = isset($data['local_amount']) ? $data['local_amount'] : null;
        $this->container['amount'] = isset($data['amount']) ? $data['amount'] : null;
        $this->container['periods'] = isset($data['periods']) ? $data['periods'] : null;
        $this->container['generated'] = isset($data['generated']) ? $data['generated'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['je_line_id'] = isset($data['je_line_id']) ? $data['je_line_id'] : null;
        $this->container['local_amount_recognized'] = isset($data['local_amount_recognized']) ? $data['local_amount_recognized'] : null;
        $this->container['amount_recognized'] = isset($data['amount_recognized']) ? $data['amount_recognized'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['sequence'] === null) {
            $invalidProperties[] = "'sequence' can't be null";
        }
        if ($this->container['hdr_sequence'] === null) {
            $invalidProperties[] = "'hdr_sequence' can't be null";
        }
        if ($this->container['deferral_gl_account'] === null) {
            $invalidProperties[] = "'deferral_gl_account' can't be null";
        }
        if ($this->container['deferral_gl_sub_account'] === null) {
            $invalidProperties[] = "'deferral_gl_sub_account' can't be null";
        }
        if ($this->container['recognition_gl_account'] === null) {
            $invalidProperties[] = "'recognition_gl_account' can't be null";
        }
        if ($this->container['recognition_gl_sub_account'] === null) {
            $invalidProperties[] = "'recognition_gl_sub_account' can't be null";
        }
        if ($this->container['start_date'] === null) {
            $invalidProperties[] = "'start_date' can't be null";
        }
        if ($this->container['end_date'] === null) {
            $invalidProperties[] = "'end_date' can't be null";
        }
        if ($this->container['year_period'] === null) {
            $invalidProperties[] = "'year_period' can't be null";
        }
        if ($this->container['fiscal_year'] === null) {
            $invalidProperties[] = "'fiscal_year' can't be null";
        }
        if ($this->container['fiscal_period'] === null) {
            $invalidProperties[] = "'fiscal_period' can't be null";
        }
        if ($this->container['journal_entry_id'] === null) {
            $invalidProperties[] = "'journal_entry_id' can't be null";
        }
        if ($this->container['journal_entry_nbr'] === null) {
            $invalidProperties[] = "'journal_entry_nbr' can't be null";
        }
        if ($this->container['journal_entry_line'] === null) {
            $invalidProperties[] = "'journal_entry_line' can't be null";
        }
        if ($this->container['local_amount'] === null) {
            $invalidProperties[] = "'local_amount' can't be null";
        }
        if ($this->container['amount'] === null) {
            $invalidProperties[] = "'amount' can't be null";
        }
        if ($this->container['periods'] === null) {
            $invalidProperties[] = "'periods' can't be null";
        }
        if ($this->container['generated'] === null) {
            $invalidProperties[] = "'generated' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['je_line_id'] === null) {
            $invalidProperties[] = "'je_line_id' can't be null";
        }
        if ($this->container['local_amount_recognized'] === null) {
            $invalidProperties[] = "'local_amount_recognized' can't be null";
        }
        if ($this->container['amount_recognized'] === null) {
            $invalidProperties[] = "'amount_recognized' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets sequence
     *
     * @return int
     */
    public function getSequence()
    {
        return $this->container['sequence'];
    }

    /**
     * Sets sequence
     *
     * @param int $sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSequence($sequence)
    {
        $this->container['sequence'] = $sequence;

        return $this;
    }

    /**
     * Gets hdr_sequence
     *
     * @return int
     */
    public function getHdrSequence()
    {
        return $this->container['hdr_sequence'];
    }

    /**
     * Sets hdr_sequence
     *
     * @param int $hdr_sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_HDR_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setHdrSequence($hdr_sequence)
    {
        $this->container['hdr_sequence'] = $hdr_sequence;

        return $this;
    }

    /**
     * Gets deferral_gl_account
     *
     * @return string
     */
    public function getDeferralGlAccount()
    {
        return $this->container['deferral_gl_account'];
    }

    /**
     * Sets deferral_gl_account
     *
     * @param string $deferral_gl_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_DEF_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDeferralGlAccount($deferral_gl_account)
    {
        $this->container['deferral_gl_account'] = $deferral_gl_account;

        return $this;
    }

    /**
     * Gets deferral_gl_sub_account
     *
     * @return string
     */
    public function getDeferralGlSubAccount()
    {
        return $this->container['deferral_gl_sub_account'];
    }

    /**
     * Sets deferral_gl_sub_account
     *
     * @param string $deferral_gl_sub_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_DEF_SUB_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDeferralGlSubAccount($deferral_gl_sub_account)
    {
        $this->container['deferral_gl_sub_account'] = $deferral_gl_sub_account;

        return $this;
    }

    /**
     * Gets recognition_gl_account
     *
     * @return string
     */
    public function getRecognitionGlAccount()
    {
        return $this->container['recognition_gl_account'];
    }

    /**
     * Sets recognition_gl_account
     *
     * @param string $recognition_gl_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_RECOG_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecognitionGlAccount($recognition_gl_account)
    {
        $this->container['recognition_gl_account'] = $recognition_gl_account;

        return $this;
    }

    /**
     * Gets recognition_gl_sub_account
     *
     * @return string
     */
    public function getRecognitionGlSubAccount()
    {
        return $this->container['recognition_gl_sub_account'];
    }

    /**
     * Sets recognition_gl_sub_account
     *
     * @param string $recognition_gl_sub_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_RECOG_SUB_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecognitionGlSubAccount($recognition_gl_sub_account)
    {
        $this->container['recognition_gl_sub_account'] = $recognition_gl_sub_account;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return \DateTime
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param \DateTime $start_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_START_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return \DateTime
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param \DateTime $end_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_END_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets year_period
     *
     * @return string
     */
    public function getYearPeriod()
    {
        return $this->container['year_period'];
    }

    /**
     * Sets year_period
     *
     * @param string $year_period <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_FYP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setYearPeriod($year_period)
    {
        $this->container['year_period'] = $year_period;

        return $this;
    }

    /**
     * Gets fiscal_year
     *
     * @return int
     */
    public function getFiscalYear()
    {
        return $this->container['fiscal_year'];
    }

    /**
     * Sets fiscal_year
     *
     * @param int $fiscal_year <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_FISCAL_YR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFiscalYear($fiscal_year)
    {
        $this->container['fiscal_year'] = $fiscal_year;

        return $this;
    }

    /**
     * Gets fiscal_period
     *
     * @return int
     */
    public function getFiscalPeriod()
    {
        return $this->container['fiscal_period'];
    }

    /**
     * Sets fiscal_period
     *
     * @param int $fiscal_period <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_FISCAL_PERIOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFiscalPeriod($fiscal_period)
    {
        $this->container['fiscal_period'] = $fiscal_period;

        return $this;
    }

    /**
     * Gets journal_entry_id
     *
     * @return int
     */
    public function getJournalEntryId()
    {
        return $this->container['journal_entry_id'];
    }

    /**
     * Sets journal_entry_id
     *
     * @param int $journal_entry_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_ENTRY_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setJournalEntryId($journal_entry_id)
    {
        $this->container['journal_entry_id'] = $journal_entry_id;

        return $this;
    }

    /**
     * Gets journal_entry_nbr
     *
     * @return string
     */
    public function getJournalEntryNbr()
    {
        return $this->container['journal_entry_nbr'];
    }

    /**
     * Sets journal_entry_nbr
     *
     * @param string $journal_entry_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_ENTRY_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 7  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setJournalEntryNbr($journal_entry_nbr)
    {
        $this->container['journal_entry_nbr'] = $journal_entry_nbr;

        return $this;
    }

    /**
     * Gets journal_entry_line
     *
     * @return int
     */
    public function getJournalEntryLine()
    {
        return $this->container['journal_entry_line'];
    }

    /**
     * Sets journal_entry_line
     *
     * @param int $journal_entry_line <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_ENTRY_LINE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setJournalEntryLine($journal_entry_line)
    {
        $this->container['journal_entry_line'] = $journal_entry_line;

        return $this;
    }

    /**
     * Gets local_amount
     *
     * @return double
     */
    public function getLocalAmount()
    {
        return $this->container['local_amount'];
    }

    /**
     * Sets local_amount
     *
     * @param double $local_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalAmount($local_amount)
    {
        $this->container['local_amount'] = $local_amount;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return double
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param double $amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_FC_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets periods
     *
     * @return double
     */
    public function getPeriods()
    {
        return $this->container['periods'];
    }

    /**
     * Sets periods
     *
     * @param double $periods <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_ALLOC_PERIODS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 96  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPeriods($periods)
    {
        $this->container['periods'] = $periods;

        return $this;
    }

    /**
     * Gets generated
     *
     * @return string
     */
    public function getGenerated()
    {
        return $this->container['generated'];
    }

    /**
     * Sets generated
     *
     * @param string $generated <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_GEN  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGenerated($generated)
    {
        $this->container['generated'] = $generated;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets je_line_id
     *
     * @return int
     */
    public function getJeLineId()
    {
        return $this->container['je_line_id'];
    }

    /**
     * Sets je_line_id
     *
     * @param int $je_line_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_JE_LINE_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setJeLineId($je_line_id)
    {
        $this->container['je_line_id'] = $je_line_id;

        return $this;
    }

    /**
     * Gets local_amount_recognized
     *
     * @return double
     */
    public function getLocalAmountRecognized()
    {
        return $this->container['local_amount_recognized'];
    }

    /**
     * Sets local_amount_recognized
     *
     * @param double $local_amount_recognized <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_AMT_RECOGNIZED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalAmountRecognized($local_amount_recognized)
    {
        $this->container['local_amount_recognized'] = $local_amount_recognized;

        return $this;
    }

    /**
     * Gets amount_recognized
     *
     * @return double
     */
    public function getAmountRecognized()
    {
        return $this->container['amount_recognized'];
    }

    /**
     * Sets amount_recognized
     *
     * @param double $amount_recognized <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL401_FC_AMT_RECOGNIZED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAmountRecognized($amount_recognized)
    {
        $this->container['amount_recognized'] = $amount_recognized;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


