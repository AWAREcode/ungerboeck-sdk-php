<?php
/**
 * PaymentPlanHeadersModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * PaymentPlanHeadersModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PaymentPlanHeadersModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PaymentPlanHeadersModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization' => 'string',
        'pay_plan_id' => 'int',
        'payment_number' => 'int',
        'description' => 'string',
        'invoice' => 'int',
        'invoice_date' => '\DateTime',
        'due_date' => '\DateTime',
        'subtotal' => 'double',
        'tax' => 'double',
        'gratuity_other_amount' => 'double',
        'total' => 'double',
        'fc_subtotal' => 'double',
        'fc_tax' => 'double',
        'fc_gratuity_other_amount' => 'double',
        'fc_total' => 'double',
        'pl_currency_subtotal' => 'double',
        'pl_currency_tax' => 'double',
        'pl_currency_gratuity_other_amount' => 'double',
        'pl_currency_total' => 'double',
        'triangulation_currency_subtotal' => 'double',
        'triangulation_currency_tax' => 'double',
        'triangulation_currency_gratuity_other_amount' => 'double',
        'triangulation_currency_total' => 'double',
        'currency' => 'string',
        'pl_currency' => 'string',
        'triangulation_currency' => 'string',
        'status' => 'string',
        'entered_by' => 'string',
        'entered_on' => '\DateTime',
        'changed_by' => 'string',
        'changed_on' => '\DateTime',
        'phase' => 'string',
        'gl_source' => 'string',
        'gl_fiscal_year' => 'int',
        'gl_fiscal_period' => 'int',
        'gl_entry_number' => 'string',
        'calculation_date' => 'string',
        'days' => 'int',
        'resource_type' => 'string',
        'show_taxes_on_invoice' => 'string',
        'use_payment_percentage_for_tax_percentage' => 'string',
        'designation' => 'string',
        'amount_percent' => 'double',
        'cumulative_amount_percent' => 'double',
        'alternate_description1' => 'string',
        'alternate_description2' => 'string',
        'issue_date' => '\DateTime',
        'notified' => 'string',
        'paid' => 'string',
        'deferred_revenueby_resource' => 'string',
        'reference_invoice' => 'int',
        'alternate_description3' => 'string',
        'alternate_description4' => 'string',
        'alternate_description5' => 'string',
        'override_terms' => 'string',
        'tax_inclusive' => 'string',
        'use_groups' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization' => null,
        'pay_plan_id' => 'int32',
        'payment_number' => 'int32',
        'description' => null,
        'invoice' => 'int32',
        'invoice_date' => 'date-time',
        'due_date' => 'date-time',
        'subtotal' => 'double',
        'tax' => 'double',
        'gratuity_other_amount' => 'double',
        'total' => 'double',
        'fc_subtotal' => 'double',
        'fc_tax' => 'double',
        'fc_gratuity_other_amount' => 'double',
        'fc_total' => 'double',
        'pl_currency_subtotal' => 'double',
        'pl_currency_tax' => 'double',
        'pl_currency_gratuity_other_amount' => 'double',
        'pl_currency_total' => 'double',
        'triangulation_currency_subtotal' => 'double',
        'triangulation_currency_tax' => 'double',
        'triangulation_currency_gratuity_other_amount' => 'double',
        'triangulation_currency_total' => 'double',
        'currency' => null,
        'pl_currency' => null,
        'triangulation_currency' => null,
        'status' => null,
        'entered_by' => null,
        'entered_on' => 'date-time',
        'changed_by' => null,
        'changed_on' => 'date-time',
        'phase' => null,
        'gl_source' => null,
        'gl_fiscal_year' => 'int32',
        'gl_fiscal_period' => 'int32',
        'gl_entry_number' => null,
        'calculation_date' => null,
        'days' => 'int32',
        'resource_type' => null,
        'show_taxes_on_invoice' => null,
        'use_payment_percentage_for_tax_percentage' => null,
        'designation' => null,
        'amount_percent' => 'double',
        'cumulative_amount_percent' => 'double',
        'alternate_description1' => null,
        'alternate_description2' => null,
        'issue_date' => 'date-time',
        'notified' => null,
        'paid' => null,
        'deferred_revenueby_resource' => null,
        'reference_invoice' => 'int32',
        'alternate_description3' => null,
        'alternate_description4' => null,
        'alternate_description5' => null,
        'override_terms' => null,
        'tax_inclusive' => null,
        'use_groups' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization' => 'Organization',
        'pay_plan_id' => 'PayPlanID',
        'payment_number' => 'PaymentNumber',
        'description' => 'Description',
        'invoice' => 'Invoice',
        'invoice_date' => 'InvoiceDate',
        'due_date' => 'DueDate',
        'subtotal' => 'Subtotal',
        'tax' => 'Tax',
        'gratuity_other_amount' => 'GratuityOtherAmount',
        'total' => 'Total',
        'fc_subtotal' => 'FCSubtotal',
        'fc_tax' => 'FCTax',
        'fc_gratuity_other_amount' => 'FCGratuityOtherAmount',
        'fc_total' => 'FCTotal',
        'pl_currency_subtotal' => 'PLCurrencySubtotal',
        'pl_currency_tax' => 'PLCurrencyTax',
        'pl_currency_gratuity_other_amount' => 'PLCurrencyGratuityOtherAmount',
        'pl_currency_total' => 'PLCurrencyTotal',
        'triangulation_currency_subtotal' => 'TriangulationCurrencySubtotal',
        'triangulation_currency_tax' => 'TriangulationCurrencyTax',
        'triangulation_currency_gratuity_other_amount' => 'TriangulationCurrencyGratuityOtherAmount',
        'triangulation_currency_total' => 'TriangulationCurrencyTotal',
        'currency' => 'Currency',
        'pl_currency' => 'PLCurrency',
        'triangulation_currency' => 'TriangulationCurrency',
        'status' => 'Status',
        'entered_by' => 'EnteredBy',
        'entered_on' => 'EnteredOn',
        'changed_by' => 'ChangedBy',
        'changed_on' => 'ChangedOn',
        'phase' => 'Phase',
        'gl_source' => 'GLSource',
        'gl_fiscal_year' => 'GLFiscalYear',
        'gl_fiscal_period' => 'GLFiscalPeriod',
        'gl_entry_number' => 'GLEntryNumber',
        'calculation_date' => 'CalculationDate',
        'days' => 'Days',
        'resource_type' => 'ResourceType',
        'show_taxes_on_invoice' => 'ShowTaxesOnInvoice',
        'use_payment_percentage_for_tax_percentage' => 'UsePaymentPercentageForTaxPercentage',
        'designation' => 'Designation',
        'amount_percent' => 'AmountPercent',
        'cumulative_amount_percent' => 'CumulativeAmountPercent',
        'alternate_description1' => 'AlternateDescription1',
        'alternate_description2' => 'AlternateDescription2',
        'issue_date' => 'IssueDate',
        'notified' => 'Notified',
        'paid' => 'Paid',
        'deferred_revenueby_resource' => 'DeferredRevenuebyResource',
        'reference_invoice' => 'ReferenceInvoice',
        'alternate_description3' => 'AlternateDescription3',
        'alternate_description4' => 'AlternateDescription4',
        'alternate_description5' => 'AlternateDescription5',
        'override_terms' => 'OverrideTerms',
        'tax_inclusive' => 'TaxInclusive',
        'use_groups' => 'UseGroups'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization' => 'setOrganization',
        'pay_plan_id' => 'setPayPlanId',
        'payment_number' => 'setPaymentNumber',
        'description' => 'setDescription',
        'invoice' => 'setInvoice',
        'invoice_date' => 'setInvoiceDate',
        'due_date' => 'setDueDate',
        'subtotal' => 'setSubtotal',
        'tax' => 'setTax',
        'gratuity_other_amount' => 'setGratuityOtherAmount',
        'total' => 'setTotal',
        'fc_subtotal' => 'setFcSubtotal',
        'fc_tax' => 'setFcTax',
        'fc_gratuity_other_amount' => 'setFcGratuityOtherAmount',
        'fc_total' => 'setFcTotal',
        'pl_currency_subtotal' => 'setPlCurrencySubtotal',
        'pl_currency_tax' => 'setPlCurrencyTax',
        'pl_currency_gratuity_other_amount' => 'setPlCurrencyGratuityOtherAmount',
        'pl_currency_total' => 'setPlCurrencyTotal',
        'triangulation_currency_subtotal' => 'setTriangulationCurrencySubtotal',
        'triangulation_currency_tax' => 'setTriangulationCurrencyTax',
        'triangulation_currency_gratuity_other_amount' => 'setTriangulationCurrencyGratuityOtherAmount',
        'triangulation_currency_total' => 'setTriangulationCurrencyTotal',
        'currency' => 'setCurrency',
        'pl_currency' => 'setPlCurrency',
        'triangulation_currency' => 'setTriangulationCurrency',
        'status' => 'setStatus',
        'entered_by' => 'setEnteredBy',
        'entered_on' => 'setEnteredOn',
        'changed_by' => 'setChangedBy',
        'changed_on' => 'setChangedOn',
        'phase' => 'setPhase',
        'gl_source' => 'setGlSource',
        'gl_fiscal_year' => 'setGlFiscalYear',
        'gl_fiscal_period' => 'setGlFiscalPeriod',
        'gl_entry_number' => 'setGlEntryNumber',
        'calculation_date' => 'setCalculationDate',
        'days' => 'setDays',
        'resource_type' => 'setResourceType',
        'show_taxes_on_invoice' => 'setShowTaxesOnInvoice',
        'use_payment_percentage_for_tax_percentage' => 'setUsePaymentPercentageForTaxPercentage',
        'designation' => 'setDesignation',
        'amount_percent' => 'setAmountPercent',
        'cumulative_amount_percent' => 'setCumulativeAmountPercent',
        'alternate_description1' => 'setAlternateDescription1',
        'alternate_description2' => 'setAlternateDescription2',
        'issue_date' => 'setIssueDate',
        'notified' => 'setNotified',
        'paid' => 'setPaid',
        'deferred_revenueby_resource' => 'setDeferredRevenuebyResource',
        'reference_invoice' => 'setReferenceInvoice',
        'alternate_description3' => 'setAlternateDescription3',
        'alternate_description4' => 'setAlternateDescription4',
        'alternate_description5' => 'setAlternateDescription5',
        'override_terms' => 'setOverrideTerms',
        'tax_inclusive' => 'setTaxInclusive',
        'use_groups' => 'setUseGroups'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization' => 'getOrganization',
        'pay_plan_id' => 'getPayPlanId',
        'payment_number' => 'getPaymentNumber',
        'description' => 'getDescription',
        'invoice' => 'getInvoice',
        'invoice_date' => 'getInvoiceDate',
        'due_date' => 'getDueDate',
        'subtotal' => 'getSubtotal',
        'tax' => 'getTax',
        'gratuity_other_amount' => 'getGratuityOtherAmount',
        'total' => 'getTotal',
        'fc_subtotal' => 'getFcSubtotal',
        'fc_tax' => 'getFcTax',
        'fc_gratuity_other_amount' => 'getFcGratuityOtherAmount',
        'fc_total' => 'getFcTotal',
        'pl_currency_subtotal' => 'getPlCurrencySubtotal',
        'pl_currency_tax' => 'getPlCurrencyTax',
        'pl_currency_gratuity_other_amount' => 'getPlCurrencyGratuityOtherAmount',
        'pl_currency_total' => 'getPlCurrencyTotal',
        'triangulation_currency_subtotal' => 'getTriangulationCurrencySubtotal',
        'triangulation_currency_tax' => 'getTriangulationCurrencyTax',
        'triangulation_currency_gratuity_other_amount' => 'getTriangulationCurrencyGratuityOtherAmount',
        'triangulation_currency_total' => 'getTriangulationCurrencyTotal',
        'currency' => 'getCurrency',
        'pl_currency' => 'getPlCurrency',
        'triangulation_currency' => 'getTriangulationCurrency',
        'status' => 'getStatus',
        'entered_by' => 'getEnteredBy',
        'entered_on' => 'getEnteredOn',
        'changed_by' => 'getChangedBy',
        'changed_on' => 'getChangedOn',
        'phase' => 'getPhase',
        'gl_source' => 'getGlSource',
        'gl_fiscal_year' => 'getGlFiscalYear',
        'gl_fiscal_period' => 'getGlFiscalPeriod',
        'gl_entry_number' => 'getGlEntryNumber',
        'calculation_date' => 'getCalculationDate',
        'days' => 'getDays',
        'resource_type' => 'getResourceType',
        'show_taxes_on_invoice' => 'getShowTaxesOnInvoice',
        'use_payment_percentage_for_tax_percentage' => 'getUsePaymentPercentageForTaxPercentage',
        'designation' => 'getDesignation',
        'amount_percent' => 'getAmountPercent',
        'cumulative_amount_percent' => 'getCumulativeAmountPercent',
        'alternate_description1' => 'getAlternateDescription1',
        'alternate_description2' => 'getAlternateDescription2',
        'issue_date' => 'getIssueDate',
        'notified' => 'getNotified',
        'paid' => 'getPaid',
        'deferred_revenueby_resource' => 'getDeferredRevenuebyResource',
        'reference_invoice' => 'getReferenceInvoice',
        'alternate_description3' => 'getAlternateDescription3',
        'alternate_description4' => 'getAlternateDescription4',
        'alternate_description5' => 'getAlternateDescription5',
        'override_terms' => 'getOverrideTerms',
        'tax_inclusive' => 'getTaxInclusive',
        'use_groups' => 'getUseGroups'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['pay_plan_id'] = isset($data['pay_plan_id']) ? $data['pay_plan_id'] : null;
        $this->container['payment_number'] = isset($data['payment_number']) ? $data['payment_number'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['invoice'] = isset($data['invoice']) ? $data['invoice'] : null;
        $this->container['invoice_date'] = isset($data['invoice_date']) ? $data['invoice_date'] : null;
        $this->container['due_date'] = isset($data['due_date']) ? $data['due_date'] : null;
        $this->container['subtotal'] = isset($data['subtotal']) ? $data['subtotal'] : null;
        $this->container['tax'] = isset($data['tax']) ? $data['tax'] : null;
        $this->container['gratuity_other_amount'] = isset($data['gratuity_other_amount']) ? $data['gratuity_other_amount'] : null;
        $this->container['total'] = isset($data['total']) ? $data['total'] : null;
        $this->container['fc_subtotal'] = isset($data['fc_subtotal']) ? $data['fc_subtotal'] : null;
        $this->container['fc_tax'] = isset($data['fc_tax']) ? $data['fc_tax'] : null;
        $this->container['fc_gratuity_other_amount'] = isset($data['fc_gratuity_other_amount']) ? $data['fc_gratuity_other_amount'] : null;
        $this->container['fc_total'] = isset($data['fc_total']) ? $data['fc_total'] : null;
        $this->container['pl_currency_subtotal'] = isset($data['pl_currency_subtotal']) ? $data['pl_currency_subtotal'] : null;
        $this->container['pl_currency_tax'] = isset($data['pl_currency_tax']) ? $data['pl_currency_tax'] : null;
        $this->container['pl_currency_gratuity_other_amount'] = isset($data['pl_currency_gratuity_other_amount']) ? $data['pl_currency_gratuity_other_amount'] : null;
        $this->container['pl_currency_total'] = isset($data['pl_currency_total']) ? $data['pl_currency_total'] : null;
        $this->container['triangulation_currency_subtotal'] = isset($data['triangulation_currency_subtotal']) ? $data['triangulation_currency_subtotal'] : null;
        $this->container['triangulation_currency_tax'] = isset($data['triangulation_currency_tax']) ? $data['triangulation_currency_tax'] : null;
        $this->container['triangulation_currency_gratuity_other_amount'] = isset($data['triangulation_currency_gratuity_other_amount']) ? $data['triangulation_currency_gratuity_other_amount'] : null;
        $this->container['triangulation_currency_total'] = isset($data['triangulation_currency_total']) ? $data['triangulation_currency_total'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['pl_currency'] = isset($data['pl_currency']) ? $data['pl_currency'] : null;
        $this->container['triangulation_currency'] = isset($data['triangulation_currency']) ? $data['triangulation_currency'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['phase'] = isset($data['phase']) ? $data['phase'] : null;
        $this->container['gl_source'] = isset($data['gl_source']) ? $data['gl_source'] : null;
        $this->container['gl_fiscal_year'] = isset($data['gl_fiscal_year']) ? $data['gl_fiscal_year'] : null;
        $this->container['gl_fiscal_period'] = isset($data['gl_fiscal_period']) ? $data['gl_fiscal_period'] : null;
        $this->container['gl_entry_number'] = isset($data['gl_entry_number']) ? $data['gl_entry_number'] : null;
        $this->container['calculation_date'] = isset($data['calculation_date']) ? $data['calculation_date'] : null;
        $this->container['days'] = isset($data['days']) ? $data['days'] : null;
        $this->container['resource_type'] = isset($data['resource_type']) ? $data['resource_type'] : null;
        $this->container['show_taxes_on_invoice'] = isset($data['show_taxes_on_invoice']) ? $data['show_taxes_on_invoice'] : null;
        $this->container['use_payment_percentage_for_tax_percentage'] = isset($data['use_payment_percentage_for_tax_percentage']) ? $data['use_payment_percentage_for_tax_percentage'] : null;
        $this->container['designation'] = isset($data['designation']) ? $data['designation'] : null;
        $this->container['amount_percent'] = isset($data['amount_percent']) ? $data['amount_percent'] : null;
        $this->container['cumulative_amount_percent'] = isset($data['cumulative_amount_percent']) ? $data['cumulative_amount_percent'] : null;
        $this->container['alternate_description1'] = isset($data['alternate_description1']) ? $data['alternate_description1'] : null;
        $this->container['alternate_description2'] = isset($data['alternate_description2']) ? $data['alternate_description2'] : null;
        $this->container['issue_date'] = isset($data['issue_date']) ? $data['issue_date'] : null;
        $this->container['notified'] = isset($data['notified']) ? $data['notified'] : null;
        $this->container['paid'] = isset($data['paid']) ? $data['paid'] : null;
        $this->container['deferred_revenueby_resource'] = isset($data['deferred_revenueby_resource']) ? $data['deferred_revenueby_resource'] : null;
        $this->container['reference_invoice'] = isset($data['reference_invoice']) ? $data['reference_invoice'] : null;
        $this->container['alternate_description3'] = isset($data['alternate_description3']) ? $data['alternate_description3'] : null;
        $this->container['alternate_description4'] = isset($data['alternate_description4']) ? $data['alternate_description4'] : null;
        $this->container['alternate_description5'] = isset($data['alternate_description5']) ? $data['alternate_description5'] : null;
        $this->container['override_terms'] = isset($data['override_terms']) ? $data['override_terms'] : null;
        $this->container['tax_inclusive'] = isset($data['tax_inclusive']) ? $data['tax_inclusive'] : null;
        $this->container['use_groups'] = isset($data['use_groups']) ? $data['use_groups'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization'] === null) {
            $invalidProperties[] = "'organization' can't be null";
        }
        if ($this->container['pay_plan_id'] === null) {
            $invalidProperties[] = "'pay_plan_id' can't be null";
        }
        if ($this->container['payment_number'] === null) {
            $invalidProperties[] = "'payment_number' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['invoice'] === null) {
            $invalidProperties[] = "'invoice' can't be null";
        }
        if ($this->container['invoice_date'] === null) {
            $invalidProperties[] = "'invoice_date' can't be null";
        }
        if ($this->container['due_date'] === null) {
            $invalidProperties[] = "'due_date' can't be null";
        }
        if ($this->container['subtotal'] === null) {
            $invalidProperties[] = "'subtotal' can't be null";
        }
        if ($this->container['tax'] === null) {
            $invalidProperties[] = "'tax' can't be null";
        }
        if ($this->container['gratuity_other_amount'] === null) {
            $invalidProperties[] = "'gratuity_other_amount' can't be null";
        }
        if ($this->container['total'] === null) {
            $invalidProperties[] = "'total' can't be null";
        }
        if ($this->container['fc_subtotal'] === null) {
            $invalidProperties[] = "'fc_subtotal' can't be null";
        }
        if ($this->container['fc_tax'] === null) {
            $invalidProperties[] = "'fc_tax' can't be null";
        }
        if ($this->container['fc_gratuity_other_amount'] === null) {
            $invalidProperties[] = "'fc_gratuity_other_amount' can't be null";
        }
        if ($this->container['fc_total'] === null) {
            $invalidProperties[] = "'fc_total' can't be null";
        }
        if ($this->container['pl_currency_subtotal'] === null) {
            $invalidProperties[] = "'pl_currency_subtotal' can't be null";
        }
        if ($this->container['pl_currency_tax'] === null) {
            $invalidProperties[] = "'pl_currency_tax' can't be null";
        }
        if ($this->container['pl_currency_gratuity_other_amount'] === null) {
            $invalidProperties[] = "'pl_currency_gratuity_other_amount' can't be null";
        }
        if ($this->container['pl_currency_total'] === null) {
            $invalidProperties[] = "'pl_currency_total' can't be null";
        }
        if ($this->container['triangulation_currency_subtotal'] === null) {
            $invalidProperties[] = "'triangulation_currency_subtotal' can't be null";
        }
        if ($this->container['triangulation_currency_tax'] === null) {
            $invalidProperties[] = "'triangulation_currency_tax' can't be null";
        }
        if ($this->container['triangulation_currency_gratuity_other_amount'] === null) {
            $invalidProperties[] = "'triangulation_currency_gratuity_other_amount' can't be null";
        }
        if ($this->container['triangulation_currency_total'] === null) {
            $invalidProperties[] = "'triangulation_currency_total' can't be null";
        }
        if ($this->container['currency'] === null) {
            $invalidProperties[] = "'currency' can't be null";
        }
        if ($this->container['pl_currency'] === null) {
            $invalidProperties[] = "'pl_currency' can't be null";
        }
        if ($this->container['triangulation_currency'] === null) {
            $invalidProperties[] = "'triangulation_currency' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['phase'] === null) {
            $invalidProperties[] = "'phase' can't be null";
        }
        if ($this->container['gl_source'] === null) {
            $invalidProperties[] = "'gl_source' can't be null";
        }
        if ($this->container['gl_fiscal_year'] === null) {
            $invalidProperties[] = "'gl_fiscal_year' can't be null";
        }
        if ($this->container['gl_fiscal_period'] === null) {
            $invalidProperties[] = "'gl_fiscal_period' can't be null";
        }
        if ($this->container['gl_entry_number'] === null) {
            $invalidProperties[] = "'gl_entry_number' can't be null";
        }
        if ($this->container['calculation_date'] === null) {
            $invalidProperties[] = "'calculation_date' can't be null";
        }
        if ($this->container['days'] === null) {
            $invalidProperties[] = "'days' can't be null";
        }
        if ($this->container['resource_type'] === null) {
            $invalidProperties[] = "'resource_type' can't be null";
        }
        if ($this->container['show_taxes_on_invoice'] === null) {
            $invalidProperties[] = "'show_taxes_on_invoice' can't be null";
        }
        if ($this->container['use_payment_percentage_for_tax_percentage'] === null) {
            $invalidProperties[] = "'use_payment_percentage_for_tax_percentage' can't be null";
        }
        if ($this->container['designation'] === null) {
            $invalidProperties[] = "'designation' can't be null";
        }
        if ($this->container['amount_percent'] === null) {
            $invalidProperties[] = "'amount_percent' can't be null";
        }
        if ($this->container['cumulative_amount_percent'] === null) {
            $invalidProperties[] = "'cumulative_amount_percent' can't be null";
        }
        if ($this->container['alternate_description1'] === null) {
            $invalidProperties[] = "'alternate_description1' can't be null";
        }
        if ($this->container['alternate_description2'] === null) {
            $invalidProperties[] = "'alternate_description2' can't be null";
        }
        if ($this->container['issue_date'] === null) {
            $invalidProperties[] = "'issue_date' can't be null";
        }
        if ($this->container['notified'] === null) {
            $invalidProperties[] = "'notified' can't be null";
        }
        if ($this->container['paid'] === null) {
            $invalidProperties[] = "'paid' can't be null";
        }
        if ($this->container['deferred_revenueby_resource'] === null) {
            $invalidProperties[] = "'deferred_revenueby_resource' can't be null";
        }
        if ($this->container['reference_invoice'] === null) {
            $invalidProperties[] = "'reference_invoice' can't be null";
        }
        if ($this->container['alternate_description3'] === null) {
            $invalidProperties[] = "'alternate_description3' can't be null";
        }
        if ($this->container['alternate_description4'] === null) {
            $invalidProperties[] = "'alternate_description4' can't be null";
        }
        if ($this->container['alternate_description5'] === null) {
            $invalidProperties[] = "'alternate_description5' can't be null";
        }
        if ($this->container['override_terms'] === null) {
            $invalidProperties[] = "'override_terms' can't be null";
        }
        if ($this->container['tax_inclusive'] === null) {
            $invalidProperties[] = "'tax_inclusive' can't be null";
        }
        if ($this->container['use_groups'] === null) {
            $invalidProperties[] = "'use_groups' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets pay_plan_id
     *
     * @return int
     */
    public function getPayPlanId()
    {
        return $this->container['pay_plan_id'];
    }

    /**
     * Sets pay_plan_id
     *
     * @param int $pay_plan_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_PAY_PLAN_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPayPlanId($pay_plan_id)
    {
        $this->container['pay_plan_id'] = $pay_plan_id;

        return $this;
    }

    /**
     * Gets payment_number
     *
     * @return int
     */
    public function getPaymentNumber()
    {
        return $this->container['payment_number'];
    }

    /**
     * Sets payment_number
     *
     * @param int $payment_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_PAY_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPaymentNumber($payment_number)
    {
        $this->container['payment_number'] = $payment_number;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets invoice
     *
     * @return int
     */
    public function getInvoice()
    {
        return $this->container['invoice'];
    }

    /**
     * Sets invoice
     *
     * @param int $invoice <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_INVOICE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoice($invoice)
    {
        $this->container['invoice'] = $invoice;

        return $this;
    }

    /**
     * Gets invoice_date
     *
     * @return \DateTime
     */
    public function getInvoiceDate()
    {
        return $this->container['invoice_date'];
    }

    /**
     * Sets invoice_date
     *
     * @param \DateTime $invoice_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_INVOICE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoiceDate($invoice_date)
    {
        $this->container['invoice_date'] = $invoice_date;

        return $this;
    }

    /**
     * Gets due_date
     *
     * @return \DateTime
     */
    public function getDueDate()
    {
        return $this->container['due_date'];
    }

    /**
     * Sets due_date
     *
     * @param \DateTime $due_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_DUE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDueDate($due_date)
    {
        $this->container['due_date'] = $due_date;

        return $this;
    }

    /**
     * Gets subtotal
     *
     * @return double
     */
    public function getSubtotal()
    {
        return $this->container['subtotal'];
    }

    /**
     * Sets subtotal
     *
     * @param double $subtotal <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_AMT_PRE_TGO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSubtotal($subtotal)
    {
        $this->container['subtotal'] = $subtotal;

        return $this;
    }

    /**
     * Gets tax
     *
     * @return double
     */
    public function getTax()
    {
        return $this->container['tax'];
    }

    /**
     * Sets tax
     *
     * @param double $tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_AMT_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTax($tax)
    {
        $this->container['tax'] = $tax;

        return $this;
    }

    /**
     * Gets gratuity_other_amount
     *
     * @return double
     */
    public function getGratuityOtherAmount()
    {
        return $this->container['gratuity_other_amount'];
    }

    /**
     * Sets gratuity_other_amount
     *
     * @param double $gratuity_other_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_AMT_GRAT_OTH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGratuityOtherAmount($gratuity_other_amount)
    {
        $this->container['gratuity_other_amount'] = $gratuity_other_amount;

        return $this;
    }

    /**
     * Gets total
     *
     * @return double
     */
    public function getTotal()
    {
        return $this->container['total'];
    }

    /**
     * Sets total
     *
     * @param double $total <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_AMT_TOTAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTotal($total)
    {
        $this->container['total'] = $total;

        return $this;
    }

    /**
     * Gets fc_subtotal
     *
     * @return double
     */
    public function getFcSubtotal()
    {
        return $this->container['fc_subtotal'];
    }

    /**
     * Sets fc_subtotal
     *
     * @param double $fc_subtotal <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_FC_AMT_PRE_TGO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcSubtotal($fc_subtotal)
    {
        $this->container['fc_subtotal'] = $fc_subtotal;

        return $this;
    }

    /**
     * Gets fc_tax
     *
     * @return double
     */
    public function getFcTax()
    {
        return $this->container['fc_tax'];
    }

    /**
     * Sets fc_tax
     *
     * @param double $fc_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_FC_AMT_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcTax($fc_tax)
    {
        $this->container['fc_tax'] = $fc_tax;

        return $this;
    }

    /**
     * Gets fc_gratuity_other_amount
     *
     * @return double
     */
    public function getFcGratuityOtherAmount()
    {
        return $this->container['fc_gratuity_other_amount'];
    }

    /**
     * Sets fc_gratuity_other_amount
     *
     * @param double $fc_gratuity_other_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_FC_AMT_GRAT_OTH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcGratuityOtherAmount($fc_gratuity_other_amount)
    {
        $this->container['fc_gratuity_other_amount'] = $fc_gratuity_other_amount;

        return $this;
    }

    /**
     * Gets fc_total
     *
     * @return double
     */
    public function getFcTotal()
    {
        return $this->container['fc_total'];
    }

    /**
     * Sets fc_total
     *
     * @param double $fc_total <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_FC_AMT_TOTAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcTotal($fc_total)
    {
        $this->container['fc_total'] = $fc_total;

        return $this;
    }

    /**
     * Gets pl_currency_subtotal
     *
     * @return double
     */
    public function getPlCurrencySubtotal()
    {
        return $this->container['pl_currency_subtotal'];
    }

    /**
     * Sets pl_currency_subtotal
     *
     * @param double $pl_currency_subtotal <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_PL_AMT_PRE_TGO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPlCurrencySubtotal($pl_currency_subtotal)
    {
        $this->container['pl_currency_subtotal'] = $pl_currency_subtotal;

        return $this;
    }

    /**
     * Gets pl_currency_tax
     *
     * @return double
     */
    public function getPlCurrencyTax()
    {
        return $this->container['pl_currency_tax'];
    }

    /**
     * Sets pl_currency_tax
     *
     * @param double $pl_currency_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_PL_AMT_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPlCurrencyTax($pl_currency_tax)
    {
        $this->container['pl_currency_tax'] = $pl_currency_tax;

        return $this;
    }

    /**
     * Gets pl_currency_gratuity_other_amount
     *
     * @return double
     */
    public function getPlCurrencyGratuityOtherAmount()
    {
        return $this->container['pl_currency_gratuity_other_amount'];
    }

    /**
     * Sets pl_currency_gratuity_other_amount
     *
     * @param double $pl_currency_gratuity_other_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_PL_AMT_GRAT_OTH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPlCurrencyGratuityOtherAmount($pl_currency_gratuity_other_amount)
    {
        $this->container['pl_currency_gratuity_other_amount'] = $pl_currency_gratuity_other_amount;

        return $this;
    }

    /**
     * Gets pl_currency_total
     *
     * @return double
     */
    public function getPlCurrencyTotal()
    {
        return $this->container['pl_currency_total'];
    }

    /**
     * Sets pl_currency_total
     *
     * @param double $pl_currency_total <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_PL_AMT_TOTAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPlCurrencyTotal($pl_currency_total)
    {
        $this->container['pl_currency_total'] = $pl_currency_total;

        return $this;
    }

    /**
     * Gets triangulation_currency_subtotal
     *
     * @return double
     */
    public function getTriangulationCurrencySubtotal()
    {
        return $this->container['triangulation_currency_subtotal'];
    }

    /**
     * Sets triangulation_currency_subtotal
     *
     * @param double $triangulation_currency_subtotal <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_TR_AMT_PRE_TGO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTriangulationCurrencySubtotal($triangulation_currency_subtotal)
    {
        $this->container['triangulation_currency_subtotal'] = $triangulation_currency_subtotal;

        return $this;
    }

    /**
     * Gets triangulation_currency_tax
     *
     * @return double
     */
    public function getTriangulationCurrencyTax()
    {
        return $this->container['triangulation_currency_tax'];
    }

    /**
     * Sets triangulation_currency_tax
     *
     * @param double $triangulation_currency_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_TR_AMT_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTriangulationCurrencyTax($triangulation_currency_tax)
    {
        $this->container['triangulation_currency_tax'] = $triangulation_currency_tax;

        return $this;
    }

    /**
     * Gets triangulation_currency_gratuity_other_amount
     *
     * @return double
     */
    public function getTriangulationCurrencyGratuityOtherAmount()
    {
        return $this->container['triangulation_currency_gratuity_other_amount'];
    }

    /**
     * Sets triangulation_currency_gratuity_other_amount
     *
     * @param double $triangulation_currency_gratuity_other_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_TR_AMT_GRAT_OTH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTriangulationCurrencyGratuityOtherAmount($triangulation_currency_gratuity_other_amount)
    {
        $this->container['triangulation_currency_gratuity_other_amount'] = $triangulation_currency_gratuity_other_amount;

        return $this;
    }

    /**
     * Gets triangulation_currency_total
     *
     * @return double
     */
    public function getTriangulationCurrencyTotal()
    {
        return $this->container['triangulation_currency_total'];
    }

    /**
     * Sets triangulation_currency_total
     *
     * @param double $triangulation_currency_total <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_TR_AMT_TOTAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTriangulationCurrencyTotal($triangulation_currency_total)
    {
        $this->container['triangulation_currency_total'] = $triangulation_currency_total;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_CURRENCY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets pl_currency
     *
     * @return string
     */
    public function getPlCurrency()
    {
        return $this->container['pl_currency'];
    }

    /**
     * Sets pl_currency
     *
     * @param string $pl_currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_PL_CURRENCY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPlCurrency($pl_currency)
    {
        $this->container['pl_currency'] = $pl_currency;

        return $this;
    }

    /**
     * Gets triangulation_currency
     *
     * @return string
     */
    public function getTriangulationCurrency()
    {
        return $this->container['triangulation_currency'];
    }

    /**
     * Sets triangulation_currency
     *
     * @param string $triangulation_currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_TR_CURRENCY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTriangulationCurrency($triangulation_currency)
    {
        $this->container['triangulation_currency'] = $triangulation_currency;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets phase
     *
     * @return string
     */
    public function getPhase()
    {
        return $this->container['phase'];
    }

    /**
     * Sets phase
     *
     * @param string $phase <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_PHASE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPhase($phase)
    {
        $this->container['phase'] = $phase;

        return $this;
    }

    /**
     * Gets gl_source
     *
     * @return string
     */
    public function getGlSource()
    {
        return $this->container['gl_source'];
    }

    /**
     * Sets gl_source
     *
     * @param string $gl_source <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_GL_SOURCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlSource($gl_source)
    {
        $this->container['gl_source'] = $gl_source;

        return $this;
    }

    /**
     * Gets gl_fiscal_year
     *
     * @return int
     */
    public function getGlFiscalYear()
    {
        return $this->container['gl_fiscal_year'];
    }

    /**
     * Sets gl_fiscal_year
     *
     * @param int $gl_fiscal_year <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_FISCAL_YR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlFiscalYear($gl_fiscal_year)
    {
        $this->container['gl_fiscal_year'] = $gl_fiscal_year;

        return $this;
    }

    /**
     * Gets gl_fiscal_period
     *
     * @return int
     */
    public function getGlFiscalPeriod()
    {
        return $this->container['gl_fiscal_period'];
    }

    /**
     * Sets gl_fiscal_period
     *
     * @param int $gl_fiscal_period <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_FISCAL_PER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlFiscalPeriod($gl_fiscal_period)
    {
        $this->container['gl_fiscal_period'] = $gl_fiscal_period;

        return $this;
    }

    /**
     * Gets gl_entry_number
     *
     * @return string
     */
    public function getGlEntryNumber()
    {
        return $this->container['gl_entry_number'];
    }

    /**
     * Sets gl_entry_number
     *
     * @param string $gl_entry_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_ENTRY_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 7  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlEntryNumber($gl_entry_number)
    {
        $this->container['gl_entry_number'] = $gl_entry_number;

        return $this;
    }

    /**
     * Gets calculation_date
     *
     * @return string
     */
    public function getCalculationDate()
    {
        return $this->container['calculation_date'];
    }

    /**
     * Sets calculation_date
     *
     * @param string $calculation_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_CALC_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCalculationDate($calculation_date)
    {
        $this->container['calculation_date'] = $calculation_date;

        return $this;
    }

    /**
     * Gets days
     *
     * @return int
     */
    public function getDays()
    {
        return $this->container['days'];
    }

    /**
     * Sets days
     *
     * @param int $days <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_NBR_OF_DAYS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDays($days)
    {
        $this->container['days'] = $days;

        return $this;
    }

    /**
     * Gets resource_type
     *
     * @return string
     */
    public function getResourceType()
    {
        return $this->container['resource_type'];
    }

    /**
     * Sets resource_type
     *
     * @param string $resource_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_RES_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setResourceType($resource_type)
    {
        $this->container['resource_type'] = $resource_type;

        return $this;
    }

    /**
     * Gets show_taxes_on_invoice
     *
     * @return string
     */
    public function getShowTaxesOnInvoice()
    {
        return $this->container['show_taxes_on_invoice'];
    }

    /**
     * Sets show_taxes_on_invoice
     *
     * @param string $show_taxes_on_invoice <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_SHOW_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setShowTaxesOnInvoice($show_taxes_on_invoice)
    {
        $this->container['show_taxes_on_invoice'] = $show_taxes_on_invoice;

        return $this;
    }

    /**
     * Gets use_payment_percentage_for_tax_percentage
     *
     * @return string
     */
    public function getUsePaymentPercentageForTaxPercentage()
    {
        return $this->container['use_payment_percentage_for_tax_percentage'];
    }

    /**
     * Sets use_payment_percentage_for_tax_percentage
     *
     * @param string $use_payment_percentage_for_tax_percentage <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_USE_PCT_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUsePaymentPercentageForTaxPercentage($use_payment_percentage_for_tax_percentage)
    {
        $this->container['use_payment_percentage_for_tax_percentage'] = $use_payment_percentage_for_tax_percentage;

        return $this;
    }

    /**
     * Gets designation
     *
     * @return string
     */
    public function getDesignation()
    {
        return $this->container['designation'];
    }

    /**
     * Sets designation
     *
     * @param string $designation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_PAY_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDesignation($designation)
    {
        $this->container['designation'] = $designation;

        return $this;
    }

    /**
     * Gets amount_percent
     *
     * @return double
     */
    public function getAmountPercent()
    {
        return $this->container['amount_percent'];
    }

    /**
     * Sets amount_percent
     *
     * @param double $amount_percent <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_AMT_PCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAmountPercent($amount_percent)
    {
        $this->container['amount_percent'] = $amount_percent;

        return $this;
    }

    /**
     * Gets cumulative_amount_percent
     *
     * @return double
     */
    public function getCumulativeAmountPercent()
    {
        return $this->container['cumulative_amount_percent'];
    }

    /**
     * Sets cumulative_amount_percent
     *
     * @param double $cumulative_amount_percent <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_AMT_PCT_CUM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCumulativeAmountPercent($cumulative_amount_percent)
    {
        $this->container['cumulative_amount_percent'] = $cumulative_amount_percent;

        return $this;
    }

    /**
     * Gets alternate_description1
     *
     * @return string
     */
    public function getAlternateDescription1()
    {
        return $this->container['alternate_description1'];
    }

    /**
     * Sets alternate_description1
     *
     * @param string $alternate_description1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_ALT_DESC_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription1($alternate_description1)
    {
        $this->container['alternate_description1'] = $alternate_description1;

        return $this;
    }

    /**
     * Gets alternate_description2
     *
     * @return string
     */
    public function getAlternateDescription2()
    {
        return $this->container['alternate_description2'];
    }

    /**
     * Sets alternate_description2
     *
     * @param string $alternate_description2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_ALT_DESC_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription2($alternate_description2)
    {
        $this->container['alternate_description2'] = $alternate_description2;

        return $this;
    }

    /**
     * Gets issue_date
     *
     * @return \DateTime
     */
    public function getIssueDate()
    {
        return $this->container['issue_date'];
    }

    /**
     * Sets issue_date
     *
     * @param \DateTime $issue_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_ISSUE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIssueDate($issue_date)
    {
        $this->container['issue_date'] = $issue_date;

        return $this;
    }

    /**
     * Gets notified
     *
     * @return string
     */
    public function getNotified()
    {
        return $this->container['notified'];
    }

    /**
     * Sets notified
     *
     * @param string $notified <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_NOTIFIED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNotified($notified)
    {
        $this->container['notified'] = $notified;

        return $this;
    }

    /**
     * Gets paid
     *
     * @return string
     */
    public function getPaid()
    {
        return $this->container['paid'];
    }

    /**
     * Sets paid
     *
     * @param string $paid <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_PAID_IND  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPaid($paid)
    {
        $this->container['paid'] = $paid;

        return $this;
    }

    /**
     * Gets deferred_revenueby_resource
     *
     * @return string
     */
    public function getDeferredRevenuebyResource()
    {
        return $this->container['deferred_revenueby_resource'];
    }

    /**
     * Sets deferred_revenueby_resource
     *
     * @param string $deferred_revenueby_resource <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_DEF_DTL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDeferredRevenuebyResource($deferred_revenueby_resource)
    {
        $this->container['deferred_revenueby_resource'] = $deferred_revenueby_resource;

        return $this;
    }

    /**
     * Gets reference_invoice
     *
     * @return int
     */
    public function getReferenceInvoice()
    {
        return $this->container['reference_invoice'];
    }

    /**
     * Sets reference_invoice
     *
     * @param int $reference_invoice <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_REF_INVOICE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setReferenceInvoice($reference_invoice)
    {
        $this->container['reference_invoice'] = $reference_invoice;

        return $this;
    }

    /**
     * Gets alternate_description3
     *
     * @return string
     */
    public function getAlternateDescription3()
    {
        return $this->container['alternate_description3'];
    }

    /**
     * Sets alternate_description3
     *
     * @param string $alternate_description3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_ALT_DESC_3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription3($alternate_description3)
    {
        $this->container['alternate_description3'] = $alternate_description3;

        return $this;
    }

    /**
     * Gets alternate_description4
     *
     * @return string
     */
    public function getAlternateDescription4()
    {
        return $this->container['alternate_description4'];
    }

    /**
     * Sets alternate_description4
     *
     * @param string $alternate_description4 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_ALT_DESC_4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription4($alternate_description4)
    {
        $this->container['alternate_description4'] = $alternate_description4;

        return $this;
    }

    /**
     * Gets alternate_description5
     *
     * @return string
     */
    public function getAlternateDescription5()
    {
        return $this->container['alternate_description5'];
    }

    /**
     * Sets alternate_description5
     *
     * @param string $alternate_description5 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_ALT_DESC_5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription5($alternate_description5)
    {
        $this->container['alternate_description5'] = $alternate_description5;

        return $this;
    }

    /**
     * Gets override_terms
     *
     * @return string
     */
    public function getOverrideTerms()
    {
        return $this->container['override_terms'];
    }

    /**
     * Sets override_terms
     *
     * @param string $override_terms <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_OVERRIDE_TERMS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOverrideTerms($override_terms)
    {
        $this->container['override_terms'] = $override_terms;

        return $this;
    }

    /**
     * Gets tax_inclusive
     *
     * @return string
     */
    public function getTaxInclusive()
    {
        return $this->container['tax_inclusive'];
    }

    /**
     * Sets tax_inclusive
     *
     * @param string $tax_inclusive <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_TAX_EI  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxInclusive($tax_inclusive)
    {
        $this->container['tax_inclusive'] = $tax_inclusive;

        return $this;
    }

    /**
     * Gets use_groups
     *
     * @return string
     */
    public function getUseGroups()
    {
        return $this->container['use_groups'];
    }

    /**
     * Sets use_groups
     *
     * @param string $use_groups <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER201_USE_GROUPS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUseGroups($use_groups)
    {
        $this->container['use_groups'] = $use_groups;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


