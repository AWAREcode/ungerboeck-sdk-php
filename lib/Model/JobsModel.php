<?php
/**
 * JobsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * JobsModel Class Doc Comment
 *
 * @category Class
 * @description This represents a job
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class JobsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'JobsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'job_id' => 'int',
        'organization' => 'string',
        'start_date' => '\DateTime',
        'end_date' => '\DateTime',
        'description' => 'string',
        'class' => 'string',
        'category' => 'string',
        'rank' => 'string',
        'status' => 'string',
        'start_time' => '\DateTime',
        'end_time' => '\DateTime',
        'coordinator' => 'string',
        'salesperson' => 'string',
        'entered_by' => 'string',
        'entered_on' => '\DateTime',
        'indicator' => 'string',
        'price_list' => 'string',
        'note1' => 'string',
        'actual_cost' => 'int',
        'forecast_cost' => 'int',
        'search' => 'string',
        'type' => 'string',
        'second_coordinator' => 'string',
        'account' => 'string',
        'bill_to' => 'string',
        'parent_job' => 'int',
        'third_coordinator' => 'string',
        'fourth_coordinator' => 'string',
        'changed_by' => 'string',
        'changed_on' => '\DateTime',
        'actual_revenue' => 'int',
        'ordered_revenue' => 'int',
        'ordered_cost' => 'int',
        'forecast_revenue' => 'int',
        'revised_revenue' => 'int',
        'revised_cost' => 'int',
        'reason' => 'string',
        'cancelled_on' => '\DateTime',
        'booking_entered_by' => 'string',
        'public' => 'string',
        'contact' => 'string',
        'note2' => 'string',
        'order_user_fields_type' => 'string',
        'function_user_fields_type' => 'string',
        'other_actual' => 'double',
        'other_ordered' => 'double',
        'other_forecast' => 'double',
        'other_revised' => 'double',
        'bill_to_contact' => 'string',
        'unscheduled' => 'string',
        'job_asset' => 'string',
        'function_status' => 'string',
        'job_user_field_sets' => '\FomF\Ungerboeck\Client\Model\UserFields[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'job_id' => 'int32',
        'organization' => null,
        'start_date' => 'date-time',
        'end_date' => 'date-time',
        'description' => null,
        'class' => null,
        'category' => null,
        'rank' => null,
        'status' => null,
        'start_time' => 'date-time',
        'end_time' => 'date-time',
        'coordinator' => null,
        'salesperson' => null,
        'entered_by' => null,
        'entered_on' => 'date-time',
        'indicator' => null,
        'price_list' => null,
        'note1' => null,
        'actual_cost' => 'int32',
        'forecast_cost' => 'int32',
        'search' => null,
        'type' => null,
        'second_coordinator' => null,
        'account' => null,
        'bill_to' => null,
        'parent_job' => 'int32',
        'third_coordinator' => null,
        'fourth_coordinator' => null,
        'changed_by' => null,
        'changed_on' => 'date-time',
        'actual_revenue' => 'int32',
        'ordered_revenue' => 'int32',
        'ordered_cost' => 'int32',
        'forecast_revenue' => 'int32',
        'revised_revenue' => 'int32',
        'revised_cost' => 'int32',
        'reason' => null,
        'cancelled_on' => 'date-time',
        'booking_entered_by' => null,
        'public' => null,
        'contact' => null,
        'note2' => null,
        'order_user_fields_type' => null,
        'function_user_fields_type' => null,
        'other_actual' => 'double',
        'other_ordered' => 'double',
        'other_forecast' => 'double',
        'other_revised' => 'double',
        'bill_to_contact' => null,
        'unscheduled' => null,
        'job_asset' => null,
        'function_status' => null,
        'job_user_field_sets' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'job_id' => 'JobID',
        'organization' => 'Organization',
        'start_date' => 'StartDate',
        'end_date' => 'EndDate',
        'description' => 'Description',
        'class' => 'Class',
        'category' => 'Category',
        'rank' => 'Rank',
        'status' => 'Status',
        'start_time' => 'StartTime',
        'end_time' => 'EndTime',
        'coordinator' => 'Coordinator',
        'salesperson' => 'Salesperson',
        'entered_by' => 'EnteredBy',
        'entered_on' => 'EnteredOn',
        'indicator' => 'Indicator',
        'price_list' => 'PriceList',
        'note1' => 'Note1',
        'actual_cost' => 'ActualCost',
        'forecast_cost' => 'ForecastCost',
        'search' => 'Search',
        'type' => 'Type',
        'second_coordinator' => 'SecondCoordinator',
        'account' => 'Account',
        'bill_to' => 'BillTo',
        'parent_job' => 'ParentJob',
        'third_coordinator' => 'ThirdCoordinator',
        'fourth_coordinator' => 'FourthCoordinator',
        'changed_by' => 'ChangedBy',
        'changed_on' => 'ChangedOn',
        'actual_revenue' => 'ActualRevenue',
        'ordered_revenue' => 'OrderedRevenue',
        'ordered_cost' => 'OrderedCost',
        'forecast_revenue' => 'ForecastRevenue',
        'revised_revenue' => 'RevisedRevenue',
        'revised_cost' => 'RevisedCost',
        'reason' => 'Reason',
        'cancelled_on' => 'CancelledOn',
        'booking_entered_by' => 'BookingEnteredBy',
        'public' => 'Public',
        'contact' => 'Contact',
        'note2' => 'Note2',
        'order_user_fields_type' => 'OrderUserFieldsType',
        'function_user_fields_type' => 'FunctionUserFieldsType',
        'other_actual' => 'OtherActual',
        'other_ordered' => 'OtherOrdered',
        'other_forecast' => 'OtherForecast',
        'other_revised' => 'OtherRevised',
        'bill_to_contact' => 'BillToContact',
        'unscheduled' => 'Unscheduled',
        'job_asset' => 'JobAsset',
        'function_status' => 'FunctionStatus',
        'job_user_field_sets' => 'JobUserFieldSets'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'job_id' => 'setJobId',
        'organization' => 'setOrganization',
        'start_date' => 'setStartDate',
        'end_date' => 'setEndDate',
        'description' => 'setDescription',
        'class' => 'setClass',
        'category' => 'setCategory',
        'rank' => 'setRank',
        'status' => 'setStatus',
        'start_time' => 'setStartTime',
        'end_time' => 'setEndTime',
        'coordinator' => 'setCoordinator',
        'salesperson' => 'setSalesperson',
        'entered_by' => 'setEnteredBy',
        'entered_on' => 'setEnteredOn',
        'indicator' => 'setIndicator',
        'price_list' => 'setPriceList',
        'note1' => 'setNote1',
        'actual_cost' => 'setActualCost',
        'forecast_cost' => 'setForecastCost',
        'search' => 'setSearch',
        'type' => 'setType',
        'second_coordinator' => 'setSecondCoordinator',
        'account' => 'setAccount',
        'bill_to' => 'setBillTo',
        'parent_job' => 'setParentJob',
        'third_coordinator' => 'setThirdCoordinator',
        'fourth_coordinator' => 'setFourthCoordinator',
        'changed_by' => 'setChangedBy',
        'changed_on' => 'setChangedOn',
        'actual_revenue' => 'setActualRevenue',
        'ordered_revenue' => 'setOrderedRevenue',
        'ordered_cost' => 'setOrderedCost',
        'forecast_revenue' => 'setForecastRevenue',
        'revised_revenue' => 'setRevisedRevenue',
        'revised_cost' => 'setRevisedCost',
        'reason' => 'setReason',
        'cancelled_on' => 'setCancelledOn',
        'booking_entered_by' => 'setBookingEnteredBy',
        'public' => 'setPublic',
        'contact' => 'setContact',
        'note2' => 'setNote2',
        'order_user_fields_type' => 'setOrderUserFieldsType',
        'function_user_fields_type' => 'setFunctionUserFieldsType',
        'other_actual' => 'setOtherActual',
        'other_ordered' => 'setOtherOrdered',
        'other_forecast' => 'setOtherForecast',
        'other_revised' => 'setOtherRevised',
        'bill_to_contact' => 'setBillToContact',
        'unscheduled' => 'setUnscheduled',
        'job_asset' => 'setJobAsset',
        'function_status' => 'setFunctionStatus',
        'job_user_field_sets' => 'setJobUserFieldSets'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'job_id' => 'getJobId',
        'organization' => 'getOrganization',
        'start_date' => 'getStartDate',
        'end_date' => 'getEndDate',
        'description' => 'getDescription',
        'class' => 'getClass',
        'category' => 'getCategory',
        'rank' => 'getRank',
        'status' => 'getStatus',
        'start_time' => 'getStartTime',
        'end_time' => 'getEndTime',
        'coordinator' => 'getCoordinator',
        'salesperson' => 'getSalesperson',
        'entered_by' => 'getEnteredBy',
        'entered_on' => 'getEnteredOn',
        'indicator' => 'getIndicator',
        'price_list' => 'getPriceList',
        'note1' => 'getNote1',
        'actual_cost' => 'getActualCost',
        'forecast_cost' => 'getForecastCost',
        'search' => 'getSearch',
        'type' => 'getType',
        'second_coordinator' => 'getSecondCoordinator',
        'account' => 'getAccount',
        'bill_to' => 'getBillTo',
        'parent_job' => 'getParentJob',
        'third_coordinator' => 'getThirdCoordinator',
        'fourth_coordinator' => 'getFourthCoordinator',
        'changed_by' => 'getChangedBy',
        'changed_on' => 'getChangedOn',
        'actual_revenue' => 'getActualRevenue',
        'ordered_revenue' => 'getOrderedRevenue',
        'ordered_cost' => 'getOrderedCost',
        'forecast_revenue' => 'getForecastRevenue',
        'revised_revenue' => 'getRevisedRevenue',
        'revised_cost' => 'getRevisedCost',
        'reason' => 'getReason',
        'cancelled_on' => 'getCancelledOn',
        'booking_entered_by' => 'getBookingEnteredBy',
        'public' => 'getPublic',
        'contact' => 'getContact',
        'note2' => 'getNote2',
        'order_user_fields_type' => 'getOrderUserFieldsType',
        'function_user_fields_type' => 'getFunctionUserFieldsType',
        'other_actual' => 'getOtherActual',
        'other_ordered' => 'getOtherOrdered',
        'other_forecast' => 'getOtherForecast',
        'other_revised' => 'getOtherRevised',
        'bill_to_contact' => 'getBillToContact',
        'unscheduled' => 'getUnscheduled',
        'job_asset' => 'getJobAsset',
        'function_status' => 'getFunctionStatus',
        'job_user_field_sets' => 'getJobUserFieldSets'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['job_id'] = isset($data['job_id']) ? $data['job_id'] : null;
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['start_date'] = isset($data['start_date']) ? $data['start_date'] : null;
        $this->container['end_date'] = isset($data['end_date']) ? $data['end_date'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['class'] = isset($data['class']) ? $data['class'] : null;
        $this->container['category'] = isset($data['category']) ? $data['category'] : null;
        $this->container['rank'] = isset($data['rank']) ? $data['rank'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['start_time'] = isset($data['start_time']) ? $data['start_time'] : null;
        $this->container['end_time'] = isset($data['end_time']) ? $data['end_time'] : null;
        $this->container['coordinator'] = isset($data['coordinator']) ? $data['coordinator'] : null;
        $this->container['salesperson'] = isset($data['salesperson']) ? $data['salesperson'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['indicator'] = isset($data['indicator']) ? $data['indicator'] : null;
        $this->container['price_list'] = isset($data['price_list']) ? $data['price_list'] : null;
        $this->container['note1'] = isset($data['note1']) ? $data['note1'] : null;
        $this->container['actual_cost'] = isset($data['actual_cost']) ? $data['actual_cost'] : null;
        $this->container['forecast_cost'] = isset($data['forecast_cost']) ? $data['forecast_cost'] : null;
        $this->container['search'] = isset($data['search']) ? $data['search'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['second_coordinator'] = isset($data['second_coordinator']) ? $data['second_coordinator'] : null;
        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
        $this->container['bill_to'] = isset($data['bill_to']) ? $data['bill_to'] : null;
        $this->container['parent_job'] = isset($data['parent_job']) ? $data['parent_job'] : null;
        $this->container['third_coordinator'] = isset($data['third_coordinator']) ? $data['third_coordinator'] : null;
        $this->container['fourth_coordinator'] = isset($data['fourth_coordinator']) ? $data['fourth_coordinator'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['actual_revenue'] = isset($data['actual_revenue']) ? $data['actual_revenue'] : null;
        $this->container['ordered_revenue'] = isset($data['ordered_revenue']) ? $data['ordered_revenue'] : null;
        $this->container['ordered_cost'] = isset($data['ordered_cost']) ? $data['ordered_cost'] : null;
        $this->container['forecast_revenue'] = isset($data['forecast_revenue']) ? $data['forecast_revenue'] : null;
        $this->container['revised_revenue'] = isset($data['revised_revenue']) ? $data['revised_revenue'] : null;
        $this->container['revised_cost'] = isset($data['revised_cost']) ? $data['revised_cost'] : null;
        $this->container['reason'] = isset($data['reason']) ? $data['reason'] : null;
        $this->container['cancelled_on'] = isset($data['cancelled_on']) ? $data['cancelled_on'] : null;
        $this->container['booking_entered_by'] = isset($data['booking_entered_by']) ? $data['booking_entered_by'] : null;
        $this->container['public'] = isset($data['public']) ? $data['public'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['note2'] = isset($data['note2']) ? $data['note2'] : null;
        $this->container['order_user_fields_type'] = isset($data['order_user_fields_type']) ? $data['order_user_fields_type'] : null;
        $this->container['function_user_fields_type'] = isset($data['function_user_fields_type']) ? $data['function_user_fields_type'] : null;
        $this->container['other_actual'] = isset($data['other_actual']) ? $data['other_actual'] : null;
        $this->container['other_ordered'] = isset($data['other_ordered']) ? $data['other_ordered'] : null;
        $this->container['other_forecast'] = isset($data['other_forecast']) ? $data['other_forecast'] : null;
        $this->container['other_revised'] = isset($data['other_revised']) ? $data['other_revised'] : null;
        $this->container['bill_to_contact'] = isset($data['bill_to_contact']) ? $data['bill_to_contact'] : null;
        $this->container['unscheduled'] = isset($data['unscheduled']) ? $data['unscheduled'] : null;
        $this->container['job_asset'] = isset($data['job_asset']) ? $data['job_asset'] : null;
        $this->container['function_status'] = isset($data['function_status']) ? $data['function_status'] : null;
        $this->container['job_user_field_sets'] = isset($data['job_user_field_sets']) ? $data['job_user_field_sets'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['job_id'] === null) {
            $invalidProperties[] = "'job_id' can't be null";
        }
        if ($this->container['organization'] === null) {
            $invalidProperties[] = "'organization' can't be null";
        }
        if ($this->container['start_date'] === null) {
            $invalidProperties[] = "'start_date' can't be null";
        }
        if ($this->container['end_date'] === null) {
            $invalidProperties[] = "'end_date' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['class'] === null) {
            $invalidProperties[] = "'class' can't be null";
        }
        if ($this->container['category'] === null) {
            $invalidProperties[] = "'category' can't be null";
        }
        if ($this->container['rank'] === null) {
            $invalidProperties[] = "'rank' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['start_time'] === null) {
            $invalidProperties[] = "'start_time' can't be null";
        }
        if ($this->container['end_time'] === null) {
            $invalidProperties[] = "'end_time' can't be null";
        }
        if ($this->container['coordinator'] === null) {
            $invalidProperties[] = "'coordinator' can't be null";
        }
        if ($this->container['salesperson'] === null) {
            $invalidProperties[] = "'salesperson' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['indicator'] === null) {
            $invalidProperties[] = "'indicator' can't be null";
        }
        if ($this->container['price_list'] === null) {
            $invalidProperties[] = "'price_list' can't be null";
        }
        if ($this->container['note1'] === null) {
            $invalidProperties[] = "'note1' can't be null";
        }
        if ($this->container['actual_cost'] === null) {
            $invalidProperties[] = "'actual_cost' can't be null";
        }
        if ($this->container['forecast_cost'] === null) {
            $invalidProperties[] = "'forecast_cost' can't be null";
        }
        if ($this->container['search'] === null) {
            $invalidProperties[] = "'search' can't be null";
        }
        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['second_coordinator'] === null) {
            $invalidProperties[] = "'second_coordinator' can't be null";
        }
        if ($this->container['account'] === null) {
            $invalidProperties[] = "'account' can't be null";
        }
        if ($this->container['bill_to'] === null) {
            $invalidProperties[] = "'bill_to' can't be null";
        }
        if ($this->container['parent_job'] === null) {
            $invalidProperties[] = "'parent_job' can't be null";
        }
        if ($this->container['third_coordinator'] === null) {
            $invalidProperties[] = "'third_coordinator' can't be null";
        }
        if ($this->container['fourth_coordinator'] === null) {
            $invalidProperties[] = "'fourth_coordinator' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['actual_revenue'] === null) {
            $invalidProperties[] = "'actual_revenue' can't be null";
        }
        if ($this->container['ordered_revenue'] === null) {
            $invalidProperties[] = "'ordered_revenue' can't be null";
        }
        if ($this->container['ordered_cost'] === null) {
            $invalidProperties[] = "'ordered_cost' can't be null";
        }
        if ($this->container['forecast_revenue'] === null) {
            $invalidProperties[] = "'forecast_revenue' can't be null";
        }
        if ($this->container['revised_revenue'] === null) {
            $invalidProperties[] = "'revised_revenue' can't be null";
        }
        if ($this->container['revised_cost'] === null) {
            $invalidProperties[] = "'revised_cost' can't be null";
        }
        if ($this->container['reason'] === null) {
            $invalidProperties[] = "'reason' can't be null";
        }
        if ($this->container['cancelled_on'] === null) {
            $invalidProperties[] = "'cancelled_on' can't be null";
        }
        if ($this->container['booking_entered_by'] === null) {
            $invalidProperties[] = "'booking_entered_by' can't be null";
        }
        if ($this->container['public'] === null) {
            $invalidProperties[] = "'public' can't be null";
        }
        if ($this->container['contact'] === null) {
            $invalidProperties[] = "'contact' can't be null";
        }
        if ($this->container['note2'] === null) {
            $invalidProperties[] = "'note2' can't be null";
        }
        if ($this->container['order_user_fields_type'] === null) {
            $invalidProperties[] = "'order_user_fields_type' can't be null";
        }
        if ($this->container['function_user_fields_type'] === null) {
            $invalidProperties[] = "'function_user_fields_type' can't be null";
        }
        if ($this->container['other_actual'] === null) {
            $invalidProperties[] = "'other_actual' can't be null";
        }
        if ($this->container['other_ordered'] === null) {
            $invalidProperties[] = "'other_ordered' can't be null";
        }
        if ($this->container['other_forecast'] === null) {
            $invalidProperties[] = "'other_forecast' can't be null";
        }
        if ($this->container['other_revised'] === null) {
            $invalidProperties[] = "'other_revised' can't be null";
        }
        if ($this->container['bill_to_contact'] === null) {
            $invalidProperties[] = "'bill_to_contact' can't be null";
        }
        if ($this->container['unscheduled'] === null) {
            $invalidProperties[] = "'unscheduled' can't be null";
        }
        if ($this->container['job_asset'] === null) {
            $invalidProperties[] = "'job_asset' can't be null";
        }
        if ($this->container['function_status'] === null) {
            $invalidProperties[] = "'function_status' can't be null";
        }
        if ($this->container['job_user_field_sets'] === null) {
            $invalidProperties[] = "'job_user_field_sets' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets job_id
     *
     * @return int
     */
    public function getJobId()
    {
        return $this->container['job_id'];
    }

    /**
     * Sets job_id
     *
     * @param int $job_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setJobId($job_id)
    {
        $this->container['job_id'] = $job_id;

        return $this;
    }

    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return \DateTime
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param \DateTime $start_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_START_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return \DateTime
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param \DateTime $end_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_END_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets class
     *
     * @return string
     */
    public function getClass()
    {
        return $this->container['class'];
    }

    /**
     * Sets class
     *
     * @param string $class <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_CLASS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setClass($class)
    {
        $this->container['class'] = $class;

        return $this;
    }

    /**
     * Gets category
     *
     * @return string
     */
    public function getCategory()
    {
        return $this->container['category'];
    }

    /**
     * Sets category
     *
     * @param string $category <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_CATEGORY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCategory($category)
    {
        $this->container['category'] = $category;

        return $this;
    }

    /**
     * Gets rank
     *
     * @return string
     */
    public function getRank()
    {
        return $this->container['rank'];
    }

    /**
     * Sets rank
     *
     * @param string $rank <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_RANK  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRank($rank)
    {
        $this->container['rank'] = $rank;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets start_time
     *
     * @return \DateTime
     */
    public function getStartTime()
    {
        return $this->container['start_time'];
    }

    /**
     * Sets start_time
     *
     * @param \DateTime $start_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_START_TIME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStartTime($start_time)
    {
        $this->container['start_time'] = $start_time;

        return $this;
    }

    /**
     * Gets end_time
     *
     * @return \DateTime
     */
    public function getEndTime()
    {
        return $this->container['end_time'];
    }

    /**
     * Sets end_time
     *
     * @param \DateTime $end_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_END_TIME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEndTime($end_time)
    {
        $this->container['end_time'] = $end_time;

        return $this;
    }

    /**
     * Gets coordinator
     *
     * @return string
     */
    public function getCoordinator()
    {
        return $this->container['coordinator'];
    }

    /**
     * Sets coordinator
     *
     * @param string $coordinator <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_COORD_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCoordinator($coordinator)
    {
        $this->container['coordinator'] = $coordinator;

        return $this;
    }

    /**
     * Gets salesperson
     *
     * @return string
     */
    public function getSalesperson()
    {
        return $this->container['salesperson'];
    }

    /**
     * Sets salesperson
     *
     * @param string $salesperson <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_SLSPER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSalesperson($salesperson)
    {
        $this->container['salesperson'] = $salesperson;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_BOOKED_BY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 25  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets indicator
     *
     * @return string
     */
    public function getIndicator()
    {
        return $this->container['indicator'];
    }

    /**
     * Sets indicator
     *
     * @param string $indicator <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_INDICATOR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIndicator($indicator)
    {
        $this->container['indicator'] = $indicator;

        return $this;
    }

    /**
     * Gets price_list
     *
     * @return string
     */
    public function getPriceList()
    {
        return $this->container['price_list'];
    }

    /**
     * Sets price_list
     *
     * @param string $price_list <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_PRICE_LIST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPriceList($price_list)
    {
        $this->container['price_list'] = $price_list;

        return $this;
    }

    /**
     * Gets note1
     *
     * @return string
     */
    public function getNote1()
    {
        return $this->container['note1'];
    }

    /**
     * Sets note1
     *
     * @param string $note1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_NOTE_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNote1($note1)
    {
        $this->container['note1'] = $note1;

        return $this;
    }

    /**
     * Gets actual_cost
     *
     * @return int
     */
    public function getActualCost()
    {
        return $this->container['actual_cost'];
    }

    /**
     * Sets actual_cost
     *
     * @param int $actual_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ACT_COST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualCost($actual_cost)
    {
        $this->container['actual_cost'] = $actual_cost;

        return $this;
    }

    /**
     * Gets forecast_cost
     *
     * @return int
     */
    public function getForecastCost()
    {
        return $this->container['forecast_cost'];
    }

    /**
     * Sets forecast_cost
     *
     * @param int $forecast_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EST_COST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setForecastCost($forecast_cost)
    {
        $this->container['forecast_cost'] = $forecast_cost;

        return $this;
    }

    /**
     * Gets search
     *
     * @return string
     */
    public function getSearch()
    {
        return $this->container['search'];
    }

    /**
     * Sets search
     *
     * @param string $search <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_SEARCH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSearch($search)
    {
        $this->container['search'] = $search;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets second_coordinator
     *
     * @return string
     */
    public function getSecondCoordinator()
    {
        return $this->container['second_coordinator'];
    }

    /**
     * Sets second_coordinator
     *
     * @param string $second_coordinator <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_COORD_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSecondCoordinator($second_coordinator)
    {
        $this->container['second_coordinator'] = $second_coordinator;

        return $this;
    }

    /**
     * Gets account
     *
     * @return string
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param string $account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_CUST_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets bill_to
     *
     * @return string
     */
    public function getBillTo()
    {
        return $this->container['bill_to'];
    }

    /**
     * Sets bill_to
     *
     * @param string $bill_to <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_BILLTO_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBillTo($bill_to)
    {
        $this->container['bill_to'] = $bill_to;

        return $this;
    }

    /**
     * Gets parent_job
     *
     * @return int
     */
    public function getParentJob()
    {
        return $this->container['parent_job'];
    }

    /**
     * Sets parent_job
     *
     * @param int $parent_job <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_MASTER_EVT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setParentJob($parent_job)
    {
        $this->container['parent_job'] = $parent_job;

        return $this;
    }

    /**
     * Gets third_coordinator
     *
     * @return string
     */
    public function getThirdCoordinator()
    {
        return $this->container['third_coordinator'];
    }

    /**
     * Sets third_coordinator
     *
     * @param string $third_coordinator <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_COORD3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setThirdCoordinator($third_coordinator)
    {
        $this->container['third_coordinator'] = $third_coordinator;

        return $this;
    }

    /**
     * Gets fourth_coordinator
     *
     * @return string
     */
    public function getFourthCoordinator()
    {
        return $this->container['fourth_coordinator'];
    }

    /**
     * Sets fourth_coordinator
     *
     * @param string $fourth_coordinator <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_COORD4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFourthCoordinator($fourth_coordinator)
    {
        $this->container['fourth_coordinator'] = $fourth_coordinator;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets actual_revenue
     *
     * @return int
     */
    public function getActualRevenue()
    {
        return $this->container['actual_revenue'];
    }

    /**
     * Sets actual_revenue
     *
     * @param int $actual_revenue <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ACT_REVENUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualRevenue($actual_revenue)
    {
        $this->container['actual_revenue'] = $actual_revenue;

        return $this;
    }

    /**
     * Gets ordered_revenue
     *
     * @return int
     */
    public function getOrderedRevenue()
    {
        return $this->container['ordered_revenue'];
    }

    /**
     * Sets ordered_revenue
     *
     * @param int $ordered_revenue <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_PLN_REVENUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderedRevenue($ordered_revenue)
    {
        $this->container['ordered_revenue'] = $ordered_revenue;

        return $this;
    }

    /**
     * Gets ordered_cost
     *
     * @return int
     */
    public function getOrderedCost()
    {
        return $this->container['ordered_cost'];
    }

    /**
     * Sets ordered_cost
     *
     * @param int $ordered_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_PLN_COST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderedCost($ordered_cost)
    {
        $this->container['ordered_cost'] = $ordered_cost;

        return $this;
    }

    /**
     * Gets forecast_revenue
     *
     * @return int
     */
    public function getForecastRevenue()
    {
        return $this->container['forecast_revenue'];
    }

    /**
     * Sets forecast_revenue
     *
     * @param int $forecast_revenue <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EST_REVENUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setForecastRevenue($forecast_revenue)
    {
        $this->container['forecast_revenue'] = $forecast_revenue;

        return $this;
    }

    /**
     * Gets revised_revenue
     *
     * @return int
     */
    public function getRevisedRevenue()
    {
        return $this->container['revised_revenue'];
    }

    /**
     * Sets revised_revenue
     *
     * @param int $revised_revenue <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_RVS_REVENUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRevisedRevenue($revised_revenue)
    {
        $this->container['revised_revenue'] = $revised_revenue;

        return $this;
    }

    /**
     * Gets revised_cost
     *
     * @return int
     */
    public function getRevisedCost()
    {
        return $this->container['revised_cost'];
    }

    /**
     * Sets revised_cost
     *
     * @param int $revised_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_RVS_COST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRevisedCost($revised_cost)
    {
        $this->container['revised_cost'] = $revised_cost;

        return $this;
    }

    /**
     * Gets reason
     *
     * @return string
     */
    public function getReason()
    {
        return $this->container['reason'];
    }

    /**
     * Sets reason
     *
     * @param string $reason <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_CANCEL_REASON  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setReason($reason)
    {
        $this->container['reason'] = $reason;

        return $this;
    }

    /**
     * Gets cancelled_on
     *
     * @return \DateTime
     */
    public function getCancelledOn()
    {
        return $this->container['cancelled_on'];
    }

    /**
     * Sets cancelled_on
     *
     * @param \DateTime $cancelled_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_CANCEL_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCancelledOn($cancelled_on)
    {
        $this->container['cancelled_on'] = $cancelled_on;

        return $this;
    }

    /**
     * Gets booking_entered_by
     *
     * @return string
     */
    public function getBookingEnteredBy()
    {
        return $this->container['booking_entered_by'];
    }

    /**
     * Sets booking_entered_by
     *
     * @param string $booking_entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_BKG_ENT_USER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBookingEnteredBy($booking_entered_by)
    {
        $this->container['booking_entered_by'] = $booking_entered_by;

        return $this;
    }

    /**
     * Gets public
     *
     * @return string
     */
    public function getPublic()
    {
        return $this->container['public'];
    }

    /**
     * Sets public
     *
     * @param string $public <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_PUBLIC_YN  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPublic($public)
    {
        $this->container['public'] = $public;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return string
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param string $contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_NG_EVT_CONTACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets note2
     *
     * @return string
     */
    public function getNote2()
    {
        return $this->container['note2'];
    }

    /**
     * Sets note2
     *
     * @param string $note2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_NOTE_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNote2($note2)
    {
        $this->container['note2'] = $note2;

        return $this;
    }

    /**
     * Gets order_user_fields_type
     *
     * @return string
     */
    public function getOrderUserFieldsType()
    {
        return $this->container['order_user_fields_type'];
    }

    /**
     * Sets order_user_fields_type
     *
     * @param string $order_user_fields_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_SO_ISSUE_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderUserFieldsType($order_user_fields_type)
    {
        $this->container['order_user_fields_type'] = $order_user_fields_type;

        return $this;
    }

    /**
     * Gets function_user_fields_type
     *
     * @return string
     */
    public function getFunctionUserFieldsType()
    {
        return $this->container['function_user_fields_type'];
    }

    /**
     * Sets function_user_fields_type
     *
     * @param string $function_user_fields_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_FN_ISSUE_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFunctionUserFieldsType($function_user_fields_type)
    {
        $this->container['function_user_fields_type'] = $function_user_fields_type;

        return $this;
    }

    /**
     * Gets other_actual
     *
     * @return double
     */
    public function getOtherActual()
    {
        return $this->container['other_actual'];
    }

    /**
     * Sets other_actual
     *
     * @param double $other_actual <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ACT_OTHER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 92  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOtherActual($other_actual)
    {
        $this->container['other_actual'] = $other_actual;

        return $this;
    }

    /**
     * Gets other_ordered
     *
     * @return double
     */
    public function getOtherOrdered()
    {
        return $this->container['other_ordered'];
    }

    /**
     * Sets other_ordered
     *
     * @param double $other_ordered <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_PLN_OTHER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 92  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOtherOrdered($other_ordered)
    {
        $this->container['other_ordered'] = $other_ordered;

        return $this;
    }

    /**
     * Gets other_forecast
     *
     * @return double
     */
    public function getOtherForecast()
    {
        return $this->container['other_forecast'];
    }

    /**
     * Sets other_forecast
     *
     * @param double $other_forecast <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EST_OTHER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 92  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOtherForecast($other_forecast)
    {
        $this->container['other_forecast'] = $other_forecast;

        return $this;
    }

    /**
     * Gets other_revised
     *
     * @return double
     */
    public function getOtherRevised()
    {
        return $this->container['other_revised'];
    }

    /**
     * Sets other_revised
     *
     * @param double $other_revised <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_RVS_OTHER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 92  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOtherRevised($other_revised)
    {
        $this->container['other_revised'] = $other_revised;

        return $this;
    }

    /**
     * Gets bill_to_contact
     *
     * @return string
     */
    public function getBillToContact()
    {
        return $this->container['bill_to_contact'];
    }

    /**
     * Sets bill_to_contact
     *
     * @param string $bill_to_contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_NG_BILLTO_CONTACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBillToContact($bill_to_contact)
    {
        $this->container['bill_to_contact'] = $bill_to_contact;

        return $this;
    }

    /**
     * Gets unscheduled
     *
     * @return string
     */
    public function getUnscheduled()
    {
        return $this->container['unscheduled'];
    }

    /**
     * Sets unscheduled
     *
     * @param string $unscheduled <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_UNSCHED_FLAG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUnscheduled($unscheduled)
    {
        $this->container['unscheduled'] = $unscheduled;

        return $this;
    }

    /**
     * Gets job_asset
     *
     * @return string
     */
    public function getJobAsset()
    {
        return $this->container['job_asset'];
    }

    /**
     * Sets job_asset
     *
     * @param string $job_asset <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ASSET_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setJobAsset($job_asset)
    {
        $this->container['job_asset'] = $job_asset;

        return $this;
    }

    /**
     * Gets function_status
     *
     * @return string
     */
    public function getFunctionStatus()
    {
        return $this->container['function_status'];
    }

    /**
     * Sets function_status
     *
     * @param string $function_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Required when cancelling a job.  Set to the status of the cancelled functions  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV700_STATUS_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2</span></div>
     *
     * @return $this
     */
    public function setFunctionStatus($function_status)
    {
        $this->container['function_status'] = $function_status;

        return $this;
    }

    /**
     * Gets job_user_field_sets
     *
     * @return \FomF\Ungerboeck\Client\Model\UserFields[]
     */
    public function getJobUserFieldSets()
    {
        return $this->container['job_user_field_sets'];
    }

    /**
     * Sets job_user_field_sets
     *
     * @param \FomF\Ungerboeck\Client\Model\UserFields[] $job_user_field_sets <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This holds the list of Job User Field set values.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CR073_ISSUES Table</span></div>
     *
     * @return $this
     */
    public function setJobUserFieldSets($job_user_field_sets)
    {
        $this->container['job_user_field_sets'] = $job_user_field_sets;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


