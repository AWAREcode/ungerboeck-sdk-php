<?php
/**
 * ProductsAndServicesModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * ProductsAndServicesModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ProductsAndServicesModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ProductsAndServicesModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization_code' => 'string',
        'code' => 'string',
        'product_description' => 'string',
        'abbreviated_description' => 'string',
        'event_sales' => 'string',
        'tour_sales' => 'string',
        'membership' => 'string',
        'association' => 'string',
        'administration' => 'string',
        'payables' => 'string',
        'personnel' => 'string',
        'visitor_inquiry' => 'string',
        'registration' => 'string',
        'public_relations' => 'string',
        'product_group' => 'string',
        'changed_by' => 'string',
        'changed_on' => '\DateTime',
        'entered_by' => 'string',
        'entered_on' => '\DateTime',
        'inventory' => 'string',
        'search' => 'string',
        'retire' => 'string',
        'alternate_description1' => 'string',
        'alternate_description2' => 'string',
        'alternate_abbreviated_description1' => 'string',
        'alternate_abbreviated_description2' => 'string',
        'product_category' => 'string',
        'speaker' => 'string',
        'brand' => 'string',
        'product_type' => 'string',
        'alternate_description3' => 'string',
        'alternate_description4' => 'string',
        'alternate_description5' => 'string',
        'alternate_abbreviated_description3' => 'string',
        'alternate_abbreviated_description4' => 'string',
        'alternate_abbreviated_description5' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization_code' => null,
        'code' => null,
        'product_description' => null,
        'abbreviated_description' => null,
        'event_sales' => null,
        'tour_sales' => null,
        'membership' => null,
        'association' => null,
        'administration' => null,
        'payables' => null,
        'personnel' => null,
        'visitor_inquiry' => null,
        'registration' => null,
        'public_relations' => null,
        'product_group' => null,
        'changed_by' => null,
        'changed_on' => 'date-time',
        'entered_by' => null,
        'entered_on' => 'date-time',
        'inventory' => null,
        'search' => null,
        'retire' => null,
        'alternate_description1' => null,
        'alternate_description2' => null,
        'alternate_abbreviated_description1' => null,
        'alternate_abbreviated_description2' => null,
        'product_category' => null,
        'speaker' => null,
        'brand' => null,
        'product_type' => null,
        'alternate_description3' => null,
        'alternate_description4' => null,
        'alternate_description5' => null,
        'alternate_abbreviated_description3' => null,
        'alternate_abbreviated_description4' => null,
        'alternate_abbreviated_description5' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization_code' => 'OrganizationCode',
        'code' => 'Code',
        'product_description' => 'ProductDescription',
        'abbreviated_description' => 'AbbreviatedDescription',
        'event_sales' => 'EventSales',
        'tour_sales' => 'TourSales',
        'membership' => 'Membership',
        'association' => 'Association',
        'administration' => 'Administration',
        'payables' => 'Payables',
        'personnel' => 'Personnel',
        'visitor_inquiry' => 'VisitorInquiry',
        'registration' => 'Registration',
        'public_relations' => 'PublicRelations',
        'product_group' => 'ProductGroup',
        'changed_by' => 'ChangedBy',
        'changed_on' => 'ChangedOn',
        'entered_by' => 'EnteredBy',
        'entered_on' => 'EnteredOn',
        'inventory' => 'Inventory',
        'search' => 'Search',
        'retire' => 'Retire',
        'alternate_description1' => 'AlternateDescription1',
        'alternate_description2' => 'AlternateDescription2',
        'alternate_abbreviated_description1' => 'AlternateAbbreviatedDescription1',
        'alternate_abbreviated_description2' => 'AlternateAbbreviatedDescription2',
        'product_category' => 'ProductCategory',
        'speaker' => 'Speaker',
        'brand' => 'Brand',
        'product_type' => 'ProductType',
        'alternate_description3' => 'AlternateDescription3',
        'alternate_description4' => 'AlternateDescription4',
        'alternate_description5' => 'AlternateDescription5',
        'alternate_abbreviated_description3' => 'AlternateAbbreviatedDescription3',
        'alternate_abbreviated_description4' => 'AlternateAbbreviatedDescription4',
        'alternate_abbreviated_description5' => 'AlternateAbbreviatedDescription5'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization_code' => 'setOrganizationCode',
        'code' => 'setCode',
        'product_description' => 'setProductDescription',
        'abbreviated_description' => 'setAbbreviatedDescription',
        'event_sales' => 'setEventSales',
        'tour_sales' => 'setTourSales',
        'membership' => 'setMembership',
        'association' => 'setAssociation',
        'administration' => 'setAdministration',
        'payables' => 'setPayables',
        'personnel' => 'setPersonnel',
        'visitor_inquiry' => 'setVisitorInquiry',
        'registration' => 'setRegistration',
        'public_relations' => 'setPublicRelations',
        'product_group' => 'setProductGroup',
        'changed_by' => 'setChangedBy',
        'changed_on' => 'setChangedOn',
        'entered_by' => 'setEnteredBy',
        'entered_on' => 'setEnteredOn',
        'inventory' => 'setInventory',
        'search' => 'setSearch',
        'retire' => 'setRetire',
        'alternate_description1' => 'setAlternateDescription1',
        'alternate_description2' => 'setAlternateDescription2',
        'alternate_abbreviated_description1' => 'setAlternateAbbreviatedDescription1',
        'alternate_abbreviated_description2' => 'setAlternateAbbreviatedDescription2',
        'product_category' => 'setProductCategory',
        'speaker' => 'setSpeaker',
        'brand' => 'setBrand',
        'product_type' => 'setProductType',
        'alternate_description3' => 'setAlternateDescription3',
        'alternate_description4' => 'setAlternateDescription4',
        'alternate_description5' => 'setAlternateDescription5',
        'alternate_abbreviated_description3' => 'setAlternateAbbreviatedDescription3',
        'alternate_abbreviated_description4' => 'setAlternateAbbreviatedDescription4',
        'alternate_abbreviated_description5' => 'setAlternateAbbreviatedDescription5'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization_code' => 'getOrganizationCode',
        'code' => 'getCode',
        'product_description' => 'getProductDescription',
        'abbreviated_description' => 'getAbbreviatedDescription',
        'event_sales' => 'getEventSales',
        'tour_sales' => 'getTourSales',
        'membership' => 'getMembership',
        'association' => 'getAssociation',
        'administration' => 'getAdministration',
        'payables' => 'getPayables',
        'personnel' => 'getPersonnel',
        'visitor_inquiry' => 'getVisitorInquiry',
        'registration' => 'getRegistration',
        'public_relations' => 'getPublicRelations',
        'product_group' => 'getProductGroup',
        'changed_by' => 'getChangedBy',
        'changed_on' => 'getChangedOn',
        'entered_by' => 'getEnteredBy',
        'entered_on' => 'getEnteredOn',
        'inventory' => 'getInventory',
        'search' => 'getSearch',
        'retire' => 'getRetire',
        'alternate_description1' => 'getAlternateDescription1',
        'alternate_description2' => 'getAlternateDescription2',
        'alternate_abbreviated_description1' => 'getAlternateAbbreviatedDescription1',
        'alternate_abbreviated_description2' => 'getAlternateAbbreviatedDescription2',
        'product_category' => 'getProductCategory',
        'speaker' => 'getSpeaker',
        'brand' => 'getBrand',
        'product_type' => 'getProductType',
        'alternate_description3' => 'getAlternateDescription3',
        'alternate_description4' => 'getAlternateDescription4',
        'alternate_description5' => 'getAlternateDescription5',
        'alternate_abbreviated_description3' => 'getAlternateAbbreviatedDescription3',
        'alternate_abbreviated_description4' => 'getAlternateAbbreviatedDescription4',
        'alternate_abbreviated_description5' => 'getAlternateAbbreviatedDescription5'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['code'] = isset($data['code']) ? $data['code'] : null;
        $this->container['product_description'] = isset($data['product_description']) ? $data['product_description'] : null;
        $this->container['abbreviated_description'] = isset($data['abbreviated_description']) ? $data['abbreviated_description'] : null;
        $this->container['event_sales'] = isset($data['event_sales']) ? $data['event_sales'] : null;
        $this->container['tour_sales'] = isset($data['tour_sales']) ? $data['tour_sales'] : null;
        $this->container['membership'] = isset($data['membership']) ? $data['membership'] : null;
        $this->container['association'] = isset($data['association']) ? $data['association'] : null;
        $this->container['administration'] = isset($data['administration']) ? $data['administration'] : null;
        $this->container['payables'] = isset($data['payables']) ? $data['payables'] : null;
        $this->container['personnel'] = isset($data['personnel']) ? $data['personnel'] : null;
        $this->container['visitor_inquiry'] = isset($data['visitor_inquiry']) ? $data['visitor_inquiry'] : null;
        $this->container['registration'] = isset($data['registration']) ? $data['registration'] : null;
        $this->container['public_relations'] = isset($data['public_relations']) ? $data['public_relations'] : null;
        $this->container['product_group'] = isset($data['product_group']) ? $data['product_group'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['inventory'] = isset($data['inventory']) ? $data['inventory'] : null;
        $this->container['search'] = isset($data['search']) ? $data['search'] : null;
        $this->container['retire'] = isset($data['retire']) ? $data['retire'] : null;
        $this->container['alternate_description1'] = isset($data['alternate_description1']) ? $data['alternate_description1'] : null;
        $this->container['alternate_description2'] = isset($data['alternate_description2']) ? $data['alternate_description2'] : null;
        $this->container['alternate_abbreviated_description1'] = isset($data['alternate_abbreviated_description1']) ? $data['alternate_abbreviated_description1'] : null;
        $this->container['alternate_abbreviated_description2'] = isset($data['alternate_abbreviated_description2']) ? $data['alternate_abbreviated_description2'] : null;
        $this->container['product_category'] = isset($data['product_category']) ? $data['product_category'] : null;
        $this->container['speaker'] = isset($data['speaker']) ? $data['speaker'] : null;
        $this->container['brand'] = isset($data['brand']) ? $data['brand'] : null;
        $this->container['product_type'] = isset($data['product_type']) ? $data['product_type'] : null;
        $this->container['alternate_description3'] = isset($data['alternate_description3']) ? $data['alternate_description3'] : null;
        $this->container['alternate_description4'] = isset($data['alternate_description4']) ? $data['alternate_description4'] : null;
        $this->container['alternate_description5'] = isset($data['alternate_description5']) ? $data['alternate_description5'] : null;
        $this->container['alternate_abbreviated_description3'] = isset($data['alternate_abbreviated_description3']) ? $data['alternate_abbreviated_description3'] : null;
        $this->container['alternate_abbreviated_description4'] = isset($data['alternate_abbreviated_description4']) ? $data['alternate_abbreviated_description4'] : null;
        $this->container['alternate_abbreviated_description5'] = isset($data['alternate_abbreviated_description5']) ? $data['alternate_abbreviated_description5'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['code'] === null) {
            $invalidProperties[] = "'code' can't be null";
        }
        if ($this->container['product_description'] === null) {
            $invalidProperties[] = "'product_description' can't be null";
        }
        if ($this->container['abbreviated_description'] === null) {
            $invalidProperties[] = "'abbreviated_description' can't be null";
        }
        if ($this->container['event_sales'] === null) {
            $invalidProperties[] = "'event_sales' can't be null";
        }
        if ($this->container['tour_sales'] === null) {
            $invalidProperties[] = "'tour_sales' can't be null";
        }
        if ($this->container['membership'] === null) {
            $invalidProperties[] = "'membership' can't be null";
        }
        if ($this->container['association'] === null) {
            $invalidProperties[] = "'association' can't be null";
        }
        if ($this->container['administration'] === null) {
            $invalidProperties[] = "'administration' can't be null";
        }
        if ($this->container['payables'] === null) {
            $invalidProperties[] = "'payables' can't be null";
        }
        if ($this->container['personnel'] === null) {
            $invalidProperties[] = "'personnel' can't be null";
        }
        if ($this->container['visitor_inquiry'] === null) {
            $invalidProperties[] = "'visitor_inquiry' can't be null";
        }
        if ($this->container['registration'] === null) {
            $invalidProperties[] = "'registration' can't be null";
        }
        if ($this->container['public_relations'] === null) {
            $invalidProperties[] = "'public_relations' can't be null";
        }
        if ($this->container['product_group'] === null) {
            $invalidProperties[] = "'product_group' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['inventory'] === null) {
            $invalidProperties[] = "'inventory' can't be null";
        }
        if ($this->container['search'] === null) {
            $invalidProperties[] = "'search' can't be null";
        }
        if ($this->container['retire'] === null) {
            $invalidProperties[] = "'retire' can't be null";
        }
        if ($this->container['alternate_description1'] === null) {
            $invalidProperties[] = "'alternate_description1' can't be null";
        }
        if ($this->container['alternate_description2'] === null) {
            $invalidProperties[] = "'alternate_description2' can't be null";
        }
        if ($this->container['alternate_abbreviated_description1'] === null) {
            $invalidProperties[] = "'alternate_abbreviated_description1' can't be null";
        }
        if ($this->container['alternate_abbreviated_description2'] === null) {
            $invalidProperties[] = "'alternate_abbreviated_description2' can't be null";
        }
        if ($this->container['product_category'] === null) {
            $invalidProperties[] = "'product_category' can't be null";
        }
        if ($this->container['speaker'] === null) {
            $invalidProperties[] = "'speaker' can't be null";
        }
        if ($this->container['brand'] === null) {
            $invalidProperties[] = "'brand' can't be null";
        }
        if ($this->container['product_type'] === null) {
            $invalidProperties[] = "'product_type' can't be null";
        }
        if ($this->container['alternate_description3'] === null) {
            $invalidProperties[] = "'alternate_description3' can't be null";
        }
        if ($this->container['alternate_description4'] === null) {
            $invalidProperties[] = "'alternate_description4' can't be null";
        }
        if ($this->container['alternate_description5'] === null) {
            $invalidProperties[] = "'alternate_description5' can't be null";
        }
        if ($this->container['alternate_abbreviated_description3'] === null) {
            $invalidProperties[] = "'alternate_abbreviated_description3' can't be null";
        }
        if ($this->container['alternate_abbreviated_description4'] === null) {
            $invalidProperties[] = "'alternate_abbreviated_description4' can't be null";
        }
        if ($this->container['alternate_abbreviated_description5'] === null) {
            $invalidProperties[] = "'alternate_abbreviated_description5' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets code
     *
     * @return string
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string $code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_PROD_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 24  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets product_description
     *
     * @return string
     */
    public function getProductDescription()
    {
        return $this->container['product_description'];
    }

    /**
     * Sets product_description
     *
     * @param string $product_description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_PROD_DESC_LONG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setProductDescription($product_description)
    {
        $this->container['product_description'] = $product_description;

        return $this;
    }

    /**
     * Gets abbreviated_description
     *
     * @return string
     */
    public function getAbbreviatedDescription()
    {
        return $this->container['abbreviated_description'];
    }

    /**
     * Sets abbreviated_description
     *
     * @param string $abbreviated_description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_PROD_DESC_SHORT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAbbreviatedDescription($abbreviated_description)
    {
        $this->container['abbreviated_description'] = $abbreviated_description;

        return $this;
    }

    /**
     * Gets event_sales
     *
     * @return string
     */
    public function getEventSales()
    {
        return $this->container['event_sales'];
    }

    /**
     * Sets event_sales
     *
     * @param string $event_sales <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_EVT_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEventSales($event_sales)
    {
        $this->container['event_sales'] = $event_sales;

        return $this;
    }

    /**
     * Gets tour_sales
     *
     * @return string
     */
    public function getTourSales()
    {
        return $this->container['tour_sales'];
    }

    /**
     * Sets tour_sales
     *
     * @param string $tour_sales <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_TOUR_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTourSales($tour_sales)
    {
        $this->container['tour_sales'] = $tour_sales;

        return $this;
    }

    /**
     * Gets membership
     *
     * @return string
     */
    public function getMembership()
    {
        return $this->container['membership'];
    }

    /**
     * Sets membership
     *
     * @param string $membership <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_MEMBER_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMembership($membership)
    {
        $this->container['membership'] = $membership;

        return $this;
    }

    /**
     * Gets association
     *
     * @return string
     */
    public function getAssociation()
    {
        return $this->container['association'];
    }

    /**
     * Sets association
     *
     * @param string $association <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_ASSOC_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAssociation($association)
    {
        $this->container['association'] = $association;

        return $this;
    }

    /**
     * Gets administration
     *
     * @return string
     */
    public function getAdministration()
    {
        return $this->container['administration'];
    }

    /**
     * Sets administration
     *
     * @param string $administration <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_ADMIN_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAdministration($administration)
    {
        $this->container['administration'] = $administration;

        return $this;
    }

    /**
     * Gets payables
     *
     * @return string
     */
    public function getPayables()
    {
        return $this->container['payables'];
    }

    /**
     * Sets payables
     *
     * @param string $payables <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_SUPPL_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPayables($payables)
    {
        $this->container['payables'] = $payables;

        return $this;
    }

    /**
     * Gets personnel
     *
     * @return string
     */
    public function getPersonnel()
    {
        return $this->container['personnel'];
    }

    /**
     * Sets personnel
     *
     * @param string $personnel <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_PERS_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPersonnel($personnel)
    {
        $this->container['personnel'] = $personnel;

        return $this;
    }

    /**
     * Gets visitor_inquiry
     *
     * @return string
     */
    public function getVisitorInquiry()
    {
        return $this->container['visitor_inquiry'];
    }

    /**
     * Sets visitor_inquiry
     *
     * @param string $visitor_inquiry <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_VIS_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setVisitorInquiry($visitor_inquiry)
    {
        $this->container['visitor_inquiry'] = $visitor_inquiry;

        return $this;
    }

    /**
     * Gets registration
     *
     * @return string
     */
    public function getRegistration()
    {
        return $this->container['registration'];
    }

    /**
     * Sets registration
     *
     * @param string $registration <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_REGIS_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRegistration($registration)
    {
        $this->container['registration'] = $registration;

        return $this;
    }

    /**
     * Gets public_relations
     *
     * @return string
     */
    public function getPublicRelations()
    {
        return $this->container['public_relations'];
    }

    /**
     * Sets public_relations
     *
     * @param string $public_relations <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_PUBREL_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPublicRelations($public_relations)
    {
        $this->container['public_relations'] = $public_relations;

        return $this;
    }

    /**
     * Gets product_group
     *
     * @return string
     */
    public function getProductGroup()
    {
        return $this->container['product_group'];
    }

    /**
     * Sets product_group
     *
     * @param string $product_group <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_PROD_GRP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setProductGroup($product_group)
    {
        $this->container['product_group'] = $product_group;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_UPD_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_ENT_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets inventory
     *
     * @return string
     */
    public function getInventory()
    {
        return $this->container['inventory'];
    }

    /**
     * Sets inventory
     *
     * @param string $inventory <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_USER_STS_01  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInventory($inventory)
    {
        $this->container['inventory'] = $inventory;

        return $this;
    }

    /**
     * Gets search
     *
     * @return string
     */
    public function getSearch()
    {
        return $this->container['search'];
    }

    /**
     * Sets search
     *
     * @param string $search <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_SEARCH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSearch($search)
    {
        $this->container['search'] = $search;

        return $this;
    }

    /**
     * Gets retire
     *
     * @return string
     */
    public function getRetire()
    {
        return $this->container['retire'];
    }

    /**
     * Sets retire
     *
     * @param string $retire <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_RETIRE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRetire($retire)
    {
        $this->container['retire'] = $retire;

        return $this;
    }

    /**
     * Gets alternate_description1
     *
     * @return string
     */
    public function getAlternateDescription1()
    {
        return $this->container['alternate_description1'];
    }

    /**
     * Sets alternate_description1
     *
     * @param string $alternate_description1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_ALT_DESC_LONG_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription1($alternate_description1)
    {
        $this->container['alternate_description1'] = $alternate_description1;

        return $this;
    }

    /**
     * Gets alternate_description2
     *
     * @return string
     */
    public function getAlternateDescription2()
    {
        return $this->container['alternate_description2'];
    }

    /**
     * Sets alternate_description2
     *
     * @param string $alternate_description2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_ALT_DESC_LONG_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription2($alternate_description2)
    {
        $this->container['alternate_description2'] = $alternate_description2;

        return $this;
    }

    /**
     * Gets alternate_abbreviated_description1
     *
     * @return string
     */
    public function getAlternateAbbreviatedDescription1()
    {
        return $this->container['alternate_abbreviated_description1'];
    }

    /**
     * Sets alternate_abbreviated_description1
     *
     * @param string $alternate_abbreviated_description1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_ALT_DESC_SHORT_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateAbbreviatedDescription1($alternate_abbreviated_description1)
    {
        $this->container['alternate_abbreviated_description1'] = $alternate_abbreviated_description1;

        return $this;
    }

    /**
     * Gets alternate_abbreviated_description2
     *
     * @return string
     */
    public function getAlternateAbbreviatedDescription2()
    {
        return $this->container['alternate_abbreviated_description2'];
    }

    /**
     * Sets alternate_abbreviated_description2
     *
     * @param string $alternate_abbreviated_description2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_ALT_DESC_SHORT_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateAbbreviatedDescription2($alternate_abbreviated_description2)
    {
        $this->container['alternate_abbreviated_description2'] = $alternate_abbreviated_description2;

        return $this;
    }

    /**
     * Gets product_category
     *
     * @return string
     */
    public function getProductCategory()
    {
        return $this->container['product_category'];
    }

    /**
     * Sets product_category
     *
     * @param string $product_category <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_PROD_CAT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setProductCategory($product_category)
    {
        $this->container['product_category'] = $product_category;

        return $this;
    }

    /**
     * Gets speaker
     *
     * @return string
     */
    public function getSpeaker()
    {
        return $this->container['speaker'];
    }

    /**
     * Sets speaker
     *
     * @param string $speaker <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_SPKR_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSpeaker($speaker)
    {
        $this->container['speaker'] = $speaker;

        return $this;
    }

    /**
     * Gets brand
     *
     * @return string
     */
    public function getBrand()
    {
        return $this->container['brand'];
    }

    /**
     * Sets brand
     *
     * @param string $brand <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_PROD_BRAND  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBrand($brand)
    {
        $this->container['brand'] = $brand;

        return $this;
    }

    /**
     * Gets product_type
     *
     * @return string
     */
    public function getProductType()
    {
        return $this->container['product_type'];
    }

    /**
     * Sets product_type
     *
     * @param string $product_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_PROD_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setProductType($product_type)
    {
        $this->container['product_type'] = $product_type;

        return $this;
    }

    /**
     * Gets alternate_description3
     *
     * @return string
     */
    public function getAlternateDescription3()
    {
        return $this->container['alternate_description3'];
    }

    /**
     * Sets alternate_description3
     *
     * @param string $alternate_description3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_ALT_DESC_LONG_3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription3($alternate_description3)
    {
        $this->container['alternate_description3'] = $alternate_description3;

        return $this;
    }

    /**
     * Gets alternate_description4
     *
     * @return string
     */
    public function getAlternateDescription4()
    {
        return $this->container['alternate_description4'];
    }

    /**
     * Sets alternate_description4
     *
     * @param string $alternate_description4 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_ALT_DESC_LONG_4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription4($alternate_description4)
    {
        $this->container['alternate_description4'] = $alternate_description4;

        return $this;
    }

    /**
     * Gets alternate_description5
     *
     * @return string
     */
    public function getAlternateDescription5()
    {
        return $this->container['alternate_description5'];
    }

    /**
     * Sets alternate_description5
     *
     * @param string $alternate_description5 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_ALT_DESC_LONG_5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription5($alternate_description5)
    {
        $this->container['alternate_description5'] = $alternate_description5;

        return $this;
    }

    /**
     * Gets alternate_abbreviated_description3
     *
     * @return string
     */
    public function getAlternateAbbreviatedDescription3()
    {
        return $this->container['alternate_abbreviated_description3'];
    }

    /**
     * Sets alternate_abbreviated_description3
     *
     * @param string $alternate_abbreviated_description3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_ALT_DESC_SHORT_3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateAbbreviatedDescription3($alternate_abbreviated_description3)
    {
        $this->container['alternate_abbreviated_description3'] = $alternate_abbreviated_description3;

        return $this;
    }

    /**
     * Gets alternate_abbreviated_description4
     *
     * @return string
     */
    public function getAlternateAbbreviatedDescription4()
    {
        return $this->container['alternate_abbreviated_description4'];
    }

    /**
     * Sets alternate_abbreviated_description4
     *
     * @param string $alternate_abbreviated_description4 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_ALT_DESC_SHORT_4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateAbbreviatedDescription4($alternate_abbreviated_description4)
    {
        $this->container['alternate_abbreviated_description4'] = $alternate_abbreviated_description4;

        return $this;
    }

    /**
     * Gets alternate_abbreviated_description5
     *
     * @return string
     */
    public function getAlternateAbbreviatedDescription5()
    {
        return $this->container['alternate_abbreviated_description5'];
    }

    /**
     * Sets alternate_abbreviated_description5
     *
     * @param string $alternate_abbreviated_description5 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR125_ALT_DESC_SHORT_5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateAbbreviatedDescription5($alternate_abbreviated_description5)
    {
        $this->container['alternate_abbreviated_description5'] = $alternate_abbreviated_description5;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


