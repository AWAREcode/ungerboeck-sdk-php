<?php
/**
 * InventoryTransactionsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * InventoryTransactionsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InventoryTransactionsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'InventoryTransactionsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization_code' => 'string',
        'source' => 'string',
        'batch_date_time' => '\DateTime',
        'sequence' => 'int',
        'date' => '\DateTime',
        'item' => 'string',
        'stock_units' => 'double',
        'stock_unit_cost' => 'double',
        'units' => 'double',
        'unit_cost' => 'double',
        'amount' => 'double',
        'stock_um' => 'string',
        'um' => 'string',
        'transaction_type' => 'string',
        'space' => 'string',
        'lot_serial_number' => 'string',
        'note' => 'string',
        'rental_flag' => 'string',
        'start_date' => '\DateTime',
        'start_time' => '\DateTime',
        'end_date' => '\DateTime',
        'end_time' => '\DateTime',
        'rental_indefinite' => 'string',
        'destination' => 'string',
        'supplier' => 'string',
        'po_number' => 'int',
        'po_line_number' => 'int',
        'batch_id' => 'string',
        'batch_sequence' => 'int',
        'fiscal_year' => 'int',
        'fiscal_period' => 'int',
        'gl_source' => 'string',
        'journal_entry' => 'string',
        'quantity_used' => 'double',
        'status' => 'string',
        'entered_by' => 'string',
        'entered_on' => '\DateTime',
        'changed_by' => 'string',
        'changed_on' => '\DateTime',
        'posted_by' => 'string',
        'posted_on' => '\DateTime',
        'valuation_status' => 'string',
        'physical_count_stocking_units' => 'double',
        'physical_count_adjustment' => 'double',
        'physical_count_value' => 'double',
        'physical_count_adjustment_amount' => 'double',
        'event' => 'int',
        'order_number' => 'int',
        'order_line' => 'int',
        'factor' => 'int',
        'gl_transferred' => 'string',
        'department' => 'string',
        'user_field1' => 'string',
        'user_field2' => 'string',
        'fiscal_year_period' => 'string',
        'requisition_number' => 'int',
        'requisition_line' => 'int',
        'requisition_units' => 'double',
        'requisition_um' => 'string',
        'requisition_issue_status' => 'string',
        'currency' => 'string',
        'fc_extended_cost' => 'double',
        'fc_stock_unit_cost' => 'double',
        'local_rate' => 'double',
        'asset' => 'string',
        'voucher' => 'int',
        'restock_status' => 'string',
        'number' => 'string',
        'restocked_qty' => 'double',
        'unique_id' => 'int',
        'compute_unit_cost' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization_code' => null,
        'source' => null,
        'batch_date_time' => 'date-time',
        'sequence' => 'int32',
        'date' => 'date-time',
        'item' => null,
        'stock_units' => 'double',
        'stock_unit_cost' => 'double',
        'units' => 'double',
        'unit_cost' => 'double',
        'amount' => 'double',
        'stock_um' => null,
        'um' => null,
        'transaction_type' => null,
        'space' => null,
        'lot_serial_number' => null,
        'note' => null,
        'rental_flag' => null,
        'start_date' => 'date-time',
        'start_time' => 'date-time',
        'end_date' => 'date-time',
        'end_time' => 'date-time',
        'rental_indefinite' => null,
        'destination' => null,
        'supplier' => null,
        'po_number' => 'int32',
        'po_line_number' => 'int32',
        'batch_id' => null,
        'batch_sequence' => 'int32',
        'fiscal_year' => 'int32',
        'fiscal_period' => 'int32',
        'gl_source' => null,
        'journal_entry' => null,
        'quantity_used' => 'double',
        'status' => null,
        'entered_by' => null,
        'entered_on' => 'date-time',
        'changed_by' => null,
        'changed_on' => 'date-time',
        'posted_by' => null,
        'posted_on' => 'date-time',
        'valuation_status' => null,
        'physical_count_stocking_units' => 'double',
        'physical_count_adjustment' => 'double',
        'physical_count_value' => 'double',
        'physical_count_adjustment_amount' => 'double',
        'event' => 'int32',
        'order_number' => 'int32',
        'order_line' => 'int32',
        'factor' => 'int32',
        'gl_transferred' => null,
        'department' => null,
        'user_field1' => null,
        'user_field2' => null,
        'fiscal_year_period' => null,
        'requisition_number' => 'int32',
        'requisition_line' => 'int32',
        'requisition_units' => 'double',
        'requisition_um' => null,
        'requisition_issue_status' => null,
        'currency' => null,
        'fc_extended_cost' => 'double',
        'fc_stock_unit_cost' => 'double',
        'local_rate' => 'double',
        'asset' => null,
        'voucher' => 'int32',
        'restock_status' => null,
        'number' => null,
        'restocked_qty' => 'double',
        'unique_id' => 'int32',
        'compute_unit_cost' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization_code' => 'OrganizationCode',
        'source' => 'Source',
        'batch_date_time' => 'BatchDateTime',
        'sequence' => 'Sequence',
        'date' => 'Date',
        'item' => 'Item',
        'stock_units' => 'StockUnits',
        'stock_unit_cost' => 'StockUnitCost',
        'units' => 'Units',
        'unit_cost' => 'UnitCost',
        'amount' => 'Amount',
        'stock_um' => 'StockUM',
        'um' => 'UM',
        'transaction_type' => 'TransactionType',
        'space' => 'Space',
        'lot_serial_number' => 'LotSerialNumber',
        'note' => 'Note',
        'rental_flag' => 'RentalFlag',
        'start_date' => 'StartDate',
        'start_time' => 'StartTime',
        'end_date' => 'EndDate',
        'end_time' => 'EndTime',
        'rental_indefinite' => 'RentalIndefinite',
        'destination' => 'Destination',
        'supplier' => 'Supplier',
        'po_number' => 'PONumber',
        'po_line_number' => 'POLineNumber',
        'batch_id' => 'BatchID',
        'batch_sequence' => 'BatchSequence',
        'fiscal_year' => 'FiscalYear',
        'fiscal_period' => 'FiscalPeriod',
        'gl_source' => 'GLSource',
        'journal_entry' => 'JournalEntry',
        'quantity_used' => 'QuantityUsed',
        'status' => 'Status',
        'entered_by' => 'EnteredBy',
        'entered_on' => 'EnteredOn',
        'changed_by' => 'ChangedBy',
        'changed_on' => 'ChangedOn',
        'posted_by' => 'PostedBy',
        'posted_on' => 'PostedOn',
        'valuation_status' => 'ValuationStatus',
        'physical_count_stocking_units' => 'PhysicalCountStockingUnits',
        'physical_count_adjustment' => 'PhysicalCountAdjustment',
        'physical_count_value' => 'PhysicalCountValue',
        'physical_count_adjustment_amount' => 'PhysicalCountAdjustmentAmount',
        'event' => 'Event',
        'order_number' => 'OrderNumber',
        'order_line' => 'OrderLine',
        'factor' => 'Factor',
        'gl_transferred' => 'GLTransferred',
        'department' => 'Department',
        'user_field1' => 'UserField1',
        'user_field2' => 'UserField2',
        'fiscal_year_period' => 'FiscalYearPeriod',
        'requisition_number' => 'RequisitionNumber',
        'requisition_line' => 'RequisitionLine',
        'requisition_units' => 'RequisitionUnits',
        'requisition_um' => 'RequisitionUM',
        'requisition_issue_status' => 'RequisitionIssueStatus',
        'currency' => 'Currency',
        'fc_extended_cost' => 'FCExtendedCost',
        'fc_stock_unit_cost' => 'FCStockUnitCost',
        'local_rate' => 'LocalRate',
        'asset' => 'Asset',
        'voucher' => 'Voucher',
        'restock_status' => 'RestockStatus',
        'number' => 'Number',
        'restocked_qty' => 'RestockedQty',
        'unique_id' => 'UniqueId',
        'compute_unit_cost' => 'ComputeUnitCost'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization_code' => 'setOrganizationCode',
        'source' => 'setSource',
        'batch_date_time' => 'setBatchDateTime',
        'sequence' => 'setSequence',
        'date' => 'setDate',
        'item' => 'setItem',
        'stock_units' => 'setStockUnits',
        'stock_unit_cost' => 'setStockUnitCost',
        'units' => 'setUnits',
        'unit_cost' => 'setUnitCost',
        'amount' => 'setAmount',
        'stock_um' => 'setStockUm',
        'um' => 'setUm',
        'transaction_type' => 'setTransactionType',
        'space' => 'setSpace',
        'lot_serial_number' => 'setLotSerialNumber',
        'note' => 'setNote',
        'rental_flag' => 'setRentalFlag',
        'start_date' => 'setStartDate',
        'start_time' => 'setStartTime',
        'end_date' => 'setEndDate',
        'end_time' => 'setEndTime',
        'rental_indefinite' => 'setRentalIndefinite',
        'destination' => 'setDestination',
        'supplier' => 'setSupplier',
        'po_number' => 'setPoNumber',
        'po_line_number' => 'setPoLineNumber',
        'batch_id' => 'setBatchId',
        'batch_sequence' => 'setBatchSequence',
        'fiscal_year' => 'setFiscalYear',
        'fiscal_period' => 'setFiscalPeriod',
        'gl_source' => 'setGlSource',
        'journal_entry' => 'setJournalEntry',
        'quantity_used' => 'setQuantityUsed',
        'status' => 'setStatus',
        'entered_by' => 'setEnteredBy',
        'entered_on' => 'setEnteredOn',
        'changed_by' => 'setChangedBy',
        'changed_on' => 'setChangedOn',
        'posted_by' => 'setPostedBy',
        'posted_on' => 'setPostedOn',
        'valuation_status' => 'setValuationStatus',
        'physical_count_stocking_units' => 'setPhysicalCountStockingUnits',
        'physical_count_adjustment' => 'setPhysicalCountAdjustment',
        'physical_count_value' => 'setPhysicalCountValue',
        'physical_count_adjustment_amount' => 'setPhysicalCountAdjustmentAmount',
        'event' => 'setEvent',
        'order_number' => 'setOrderNumber',
        'order_line' => 'setOrderLine',
        'factor' => 'setFactor',
        'gl_transferred' => 'setGlTransferred',
        'department' => 'setDepartment',
        'user_field1' => 'setUserField1',
        'user_field2' => 'setUserField2',
        'fiscal_year_period' => 'setFiscalYearPeriod',
        'requisition_number' => 'setRequisitionNumber',
        'requisition_line' => 'setRequisitionLine',
        'requisition_units' => 'setRequisitionUnits',
        'requisition_um' => 'setRequisitionUm',
        'requisition_issue_status' => 'setRequisitionIssueStatus',
        'currency' => 'setCurrency',
        'fc_extended_cost' => 'setFcExtendedCost',
        'fc_stock_unit_cost' => 'setFcStockUnitCost',
        'local_rate' => 'setLocalRate',
        'asset' => 'setAsset',
        'voucher' => 'setVoucher',
        'restock_status' => 'setRestockStatus',
        'number' => 'setNumber',
        'restocked_qty' => 'setRestockedQty',
        'unique_id' => 'setUniqueId',
        'compute_unit_cost' => 'setComputeUnitCost'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization_code' => 'getOrganizationCode',
        'source' => 'getSource',
        'batch_date_time' => 'getBatchDateTime',
        'sequence' => 'getSequence',
        'date' => 'getDate',
        'item' => 'getItem',
        'stock_units' => 'getStockUnits',
        'stock_unit_cost' => 'getStockUnitCost',
        'units' => 'getUnits',
        'unit_cost' => 'getUnitCost',
        'amount' => 'getAmount',
        'stock_um' => 'getStockUm',
        'um' => 'getUm',
        'transaction_type' => 'getTransactionType',
        'space' => 'getSpace',
        'lot_serial_number' => 'getLotSerialNumber',
        'note' => 'getNote',
        'rental_flag' => 'getRentalFlag',
        'start_date' => 'getStartDate',
        'start_time' => 'getStartTime',
        'end_date' => 'getEndDate',
        'end_time' => 'getEndTime',
        'rental_indefinite' => 'getRentalIndefinite',
        'destination' => 'getDestination',
        'supplier' => 'getSupplier',
        'po_number' => 'getPoNumber',
        'po_line_number' => 'getPoLineNumber',
        'batch_id' => 'getBatchId',
        'batch_sequence' => 'getBatchSequence',
        'fiscal_year' => 'getFiscalYear',
        'fiscal_period' => 'getFiscalPeriod',
        'gl_source' => 'getGlSource',
        'journal_entry' => 'getJournalEntry',
        'quantity_used' => 'getQuantityUsed',
        'status' => 'getStatus',
        'entered_by' => 'getEnteredBy',
        'entered_on' => 'getEnteredOn',
        'changed_by' => 'getChangedBy',
        'changed_on' => 'getChangedOn',
        'posted_by' => 'getPostedBy',
        'posted_on' => 'getPostedOn',
        'valuation_status' => 'getValuationStatus',
        'physical_count_stocking_units' => 'getPhysicalCountStockingUnits',
        'physical_count_adjustment' => 'getPhysicalCountAdjustment',
        'physical_count_value' => 'getPhysicalCountValue',
        'physical_count_adjustment_amount' => 'getPhysicalCountAdjustmentAmount',
        'event' => 'getEvent',
        'order_number' => 'getOrderNumber',
        'order_line' => 'getOrderLine',
        'factor' => 'getFactor',
        'gl_transferred' => 'getGlTransferred',
        'department' => 'getDepartment',
        'user_field1' => 'getUserField1',
        'user_field2' => 'getUserField2',
        'fiscal_year_period' => 'getFiscalYearPeriod',
        'requisition_number' => 'getRequisitionNumber',
        'requisition_line' => 'getRequisitionLine',
        'requisition_units' => 'getRequisitionUnits',
        'requisition_um' => 'getRequisitionUm',
        'requisition_issue_status' => 'getRequisitionIssueStatus',
        'currency' => 'getCurrency',
        'fc_extended_cost' => 'getFcExtendedCost',
        'fc_stock_unit_cost' => 'getFcStockUnitCost',
        'local_rate' => 'getLocalRate',
        'asset' => 'getAsset',
        'voucher' => 'getVoucher',
        'restock_status' => 'getRestockStatus',
        'number' => 'getNumber',
        'restocked_qty' => 'getRestockedQty',
        'unique_id' => 'getUniqueId',
        'compute_unit_cost' => 'getComputeUnitCost'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['source'] = isset($data['source']) ? $data['source'] : null;
        $this->container['batch_date_time'] = isset($data['batch_date_time']) ? $data['batch_date_time'] : null;
        $this->container['sequence'] = isset($data['sequence']) ? $data['sequence'] : null;
        $this->container['date'] = isset($data['date']) ? $data['date'] : null;
        $this->container['item'] = isset($data['item']) ? $data['item'] : null;
        $this->container['stock_units'] = isset($data['stock_units']) ? $data['stock_units'] : null;
        $this->container['stock_unit_cost'] = isset($data['stock_unit_cost']) ? $data['stock_unit_cost'] : null;
        $this->container['units'] = isset($data['units']) ? $data['units'] : null;
        $this->container['unit_cost'] = isset($data['unit_cost']) ? $data['unit_cost'] : null;
        $this->container['amount'] = isset($data['amount']) ? $data['amount'] : null;
        $this->container['stock_um'] = isset($data['stock_um']) ? $data['stock_um'] : null;
        $this->container['um'] = isset($data['um']) ? $data['um'] : null;
        $this->container['transaction_type'] = isset($data['transaction_type']) ? $data['transaction_type'] : null;
        $this->container['space'] = isset($data['space']) ? $data['space'] : null;
        $this->container['lot_serial_number'] = isset($data['lot_serial_number']) ? $data['lot_serial_number'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['rental_flag'] = isset($data['rental_flag']) ? $data['rental_flag'] : null;
        $this->container['start_date'] = isset($data['start_date']) ? $data['start_date'] : null;
        $this->container['start_time'] = isset($data['start_time']) ? $data['start_time'] : null;
        $this->container['end_date'] = isset($data['end_date']) ? $data['end_date'] : null;
        $this->container['end_time'] = isset($data['end_time']) ? $data['end_time'] : null;
        $this->container['rental_indefinite'] = isset($data['rental_indefinite']) ? $data['rental_indefinite'] : null;
        $this->container['destination'] = isset($data['destination']) ? $data['destination'] : null;
        $this->container['supplier'] = isset($data['supplier']) ? $data['supplier'] : null;
        $this->container['po_number'] = isset($data['po_number']) ? $data['po_number'] : null;
        $this->container['po_line_number'] = isset($data['po_line_number']) ? $data['po_line_number'] : null;
        $this->container['batch_id'] = isset($data['batch_id']) ? $data['batch_id'] : null;
        $this->container['batch_sequence'] = isset($data['batch_sequence']) ? $data['batch_sequence'] : null;
        $this->container['fiscal_year'] = isset($data['fiscal_year']) ? $data['fiscal_year'] : null;
        $this->container['fiscal_period'] = isset($data['fiscal_period']) ? $data['fiscal_period'] : null;
        $this->container['gl_source'] = isset($data['gl_source']) ? $data['gl_source'] : null;
        $this->container['journal_entry'] = isset($data['journal_entry']) ? $data['journal_entry'] : null;
        $this->container['quantity_used'] = isset($data['quantity_used']) ? $data['quantity_used'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['posted_by'] = isset($data['posted_by']) ? $data['posted_by'] : null;
        $this->container['posted_on'] = isset($data['posted_on']) ? $data['posted_on'] : null;
        $this->container['valuation_status'] = isset($data['valuation_status']) ? $data['valuation_status'] : null;
        $this->container['physical_count_stocking_units'] = isset($data['physical_count_stocking_units']) ? $data['physical_count_stocking_units'] : null;
        $this->container['physical_count_adjustment'] = isset($data['physical_count_adjustment']) ? $data['physical_count_adjustment'] : null;
        $this->container['physical_count_value'] = isset($data['physical_count_value']) ? $data['physical_count_value'] : null;
        $this->container['physical_count_adjustment_amount'] = isset($data['physical_count_adjustment_amount']) ? $data['physical_count_adjustment_amount'] : null;
        $this->container['event'] = isset($data['event']) ? $data['event'] : null;
        $this->container['order_number'] = isset($data['order_number']) ? $data['order_number'] : null;
        $this->container['order_line'] = isset($data['order_line']) ? $data['order_line'] : null;
        $this->container['factor'] = isset($data['factor']) ? $data['factor'] : null;
        $this->container['gl_transferred'] = isset($data['gl_transferred']) ? $data['gl_transferred'] : null;
        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['user_field1'] = isset($data['user_field1']) ? $data['user_field1'] : null;
        $this->container['user_field2'] = isset($data['user_field2']) ? $data['user_field2'] : null;
        $this->container['fiscal_year_period'] = isset($data['fiscal_year_period']) ? $data['fiscal_year_period'] : null;
        $this->container['requisition_number'] = isset($data['requisition_number']) ? $data['requisition_number'] : null;
        $this->container['requisition_line'] = isset($data['requisition_line']) ? $data['requisition_line'] : null;
        $this->container['requisition_units'] = isset($data['requisition_units']) ? $data['requisition_units'] : null;
        $this->container['requisition_um'] = isset($data['requisition_um']) ? $data['requisition_um'] : null;
        $this->container['requisition_issue_status'] = isset($data['requisition_issue_status']) ? $data['requisition_issue_status'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['fc_extended_cost'] = isset($data['fc_extended_cost']) ? $data['fc_extended_cost'] : null;
        $this->container['fc_stock_unit_cost'] = isset($data['fc_stock_unit_cost']) ? $data['fc_stock_unit_cost'] : null;
        $this->container['local_rate'] = isset($data['local_rate']) ? $data['local_rate'] : null;
        $this->container['asset'] = isset($data['asset']) ? $data['asset'] : null;
        $this->container['voucher'] = isset($data['voucher']) ? $data['voucher'] : null;
        $this->container['restock_status'] = isset($data['restock_status']) ? $data['restock_status'] : null;
        $this->container['number'] = isset($data['number']) ? $data['number'] : null;
        $this->container['restocked_qty'] = isset($data['restocked_qty']) ? $data['restocked_qty'] : null;
        $this->container['unique_id'] = isset($data['unique_id']) ? $data['unique_id'] : null;
        $this->container['compute_unit_cost'] = isset($data['compute_unit_cost']) ? $data['compute_unit_cost'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['source'] === null) {
            $invalidProperties[] = "'source' can't be null";
        }
        if ($this->container['batch_date_time'] === null) {
            $invalidProperties[] = "'batch_date_time' can't be null";
        }
        if ($this->container['sequence'] === null) {
            $invalidProperties[] = "'sequence' can't be null";
        }
        if ($this->container['date'] === null) {
            $invalidProperties[] = "'date' can't be null";
        }
        if ($this->container['item'] === null) {
            $invalidProperties[] = "'item' can't be null";
        }
        if ($this->container['stock_units'] === null) {
            $invalidProperties[] = "'stock_units' can't be null";
        }
        if ($this->container['stock_unit_cost'] === null) {
            $invalidProperties[] = "'stock_unit_cost' can't be null";
        }
        if ($this->container['units'] === null) {
            $invalidProperties[] = "'units' can't be null";
        }
        if ($this->container['unit_cost'] === null) {
            $invalidProperties[] = "'unit_cost' can't be null";
        }
        if ($this->container['amount'] === null) {
            $invalidProperties[] = "'amount' can't be null";
        }
        if ($this->container['stock_um'] === null) {
            $invalidProperties[] = "'stock_um' can't be null";
        }
        if ($this->container['um'] === null) {
            $invalidProperties[] = "'um' can't be null";
        }
        if ($this->container['transaction_type'] === null) {
            $invalidProperties[] = "'transaction_type' can't be null";
        }
        if ($this->container['space'] === null) {
            $invalidProperties[] = "'space' can't be null";
        }
        if ($this->container['lot_serial_number'] === null) {
            $invalidProperties[] = "'lot_serial_number' can't be null";
        }
        if ($this->container['note'] === null) {
            $invalidProperties[] = "'note' can't be null";
        }
        if ($this->container['rental_flag'] === null) {
            $invalidProperties[] = "'rental_flag' can't be null";
        }
        if ($this->container['start_date'] === null) {
            $invalidProperties[] = "'start_date' can't be null";
        }
        if ($this->container['start_time'] === null) {
            $invalidProperties[] = "'start_time' can't be null";
        }
        if ($this->container['end_date'] === null) {
            $invalidProperties[] = "'end_date' can't be null";
        }
        if ($this->container['end_time'] === null) {
            $invalidProperties[] = "'end_time' can't be null";
        }
        if ($this->container['rental_indefinite'] === null) {
            $invalidProperties[] = "'rental_indefinite' can't be null";
        }
        if ($this->container['destination'] === null) {
            $invalidProperties[] = "'destination' can't be null";
        }
        if ($this->container['supplier'] === null) {
            $invalidProperties[] = "'supplier' can't be null";
        }
        if ($this->container['po_number'] === null) {
            $invalidProperties[] = "'po_number' can't be null";
        }
        if ($this->container['po_line_number'] === null) {
            $invalidProperties[] = "'po_line_number' can't be null";
        }
        if ($this->container['batch_id'] === null) {
            $invalidProperties[] = "'batch_id' can't be null";
        }
        if ($this->container['batch_sequence'] === null) {
            $invalidProperties[] = "'batch_sequence' can't be null";
        }
        if ($this->container['fiscal_year'] === null) {
            $invalidProperties[] = "'fiscal_year' can't be null";
        }
        if ($this->container['fiscal_period'] === null) {
            $invalidProperties[] = "'fiscal_period' can't be null";
        }
        if ($this->container['gl_source'] === null) {
            $invalidProperties[] = "'gl_source' can't be null";
        }
        if ($this->container['journal_entry'] === null) {
            $invalidProperties[] = "'journal_entry' can't be null";
        }
        if ($this->container['quantity_used'] === null) {
            $invalidProperties[] = "'quantity_used' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['posted_by'] === null) {
            $invalidProperties[] = "'posted_by' can't be null";
        }
        if ($this->container['posted_on'] === null) {
            $invalidProperties[] = "'posted_on' can't be null";
        }
        if ($this->container['valuation_status'] === null) {
            $invalidProperties[] = "'valuation_status' can't be null";
        }
        if ($this->container['physical_count_stocking_units'] === null) {
            $invalidProperties[] = "'physical_count_stocking_units' can't be null";
        }
        if ($this->container['physical_count_adjustment'] === null) {
            $invalidProperties[] = "'physical_count_adjustment' can't be null";
        }
        if ($this->container['physical_count_value'] === null) {
            $invalidProperties[] = "'physical_count_value' can't be null";
        }
        if ($this->container['physical_count_adjustment_amount'] === null) {
            $invalidProperties[] = "'physical_count_adjustment_amount' can't be null";
        }
        if ($this->container['event'] === null) {
            $invalidProperties[] = "'event' can't be null";
        }
        if ($this->container['order_number'] === null) {
            $invalidProperties[] = "'order_number' can't be null";
        }
        if ($this->container['order_line'] === null) {
            $invalidProperties[] = "'order_line' can't be null";
        }
        if ($this->container['factor'] === null) {
            $invalidProperties[] = "'factor' can't be null";
        }
        if ($this->container['gl_transferred'] === null) {
            $invalidProperties[] = "'gl_transferred' can't be null";
        }
        if ($this->container['department'] === null) {
            $invalidProperties[] = "'department' can't be null";
        }
        if ($this->container['user_field1'] === null) {
            $invalidProperties[] = "'user_field1' can't be null";
        }
        if ($this->container['user_field2'] === null) {
            $invalidProperties[] = "'user_field2' can't be null";
        }
        if ($this->container['fiscal_year_period'] === null) {
            $invalidProperties[] = "'fiscal_year_period' can't be null";
        }
        if ($this->container['requisition_number'] === null) {
            $invalidProperties[] = "'requisition_number' can't be null";
        }
        if ($this->container['requisition_line'] === null) {
            $invalidProperties[] = "'requisition_line' can't be null";
        }
        if ($this->container['requisition_units'] === null) {
            $invalidProperties[] = "'requisition_units' can't be null";
        }
        if ($this->container['requisition_um'] === null) {
            $invalidProperties[] = "'requisition_um' can't be null";
        }
        if ($this->container['requisition_issue_status'] === null) {
            $invalidProperties[] = "'requisition_issue_status' can't be null";
        }
        if ($this->container['currency'] === null) {
            $invalidProperties[] = "'currency' can't be null";
        }
        if ($this->container['fc_extended_cost'] === null) {
            $invalidProperties[] = "'fc_extended_cost' can't be null";
        }
        if ($this->container['fc_stock_unit_cost'] === null) {
            $invalidProperties[] = "'fc_stock_unit_cost' can't be null";
        }
        if ($this->container['local_rate'] === null) {
            $invalidProperties[] = "'local_rate' can't be null";
        }
        if ($this->container['asset'] === null) {
            $invalidProperties[] = "'asset' can't be null";
        }
        if ($this->container['voucher'] === null) {
            $invalidProperties[] = "'voucher' can't be null";
        }
        if ($this->container['restock_status'] === null) {
            $invalidProperties[] = "'restock_status' can't be null";
        }
        if ($this->container['number'] === null) {
            $invalidProperties[] = "'number' can't be null";
        }
        if ($this->container['restocked_qty'] === null) {
            $invalidProperties[] = "'restocked_qty' can't be null";
        }
        if ($this->container['unique_id'] === null) {
            $invalidProperties[] = "'unique_id' can't be null";
        }
        if ($this->container['compute_unit_cost'] === null) {
            $invalidProperties[] = "'compute_unit_cost' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets source
     *
     * @return string
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param string $source <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_SOURCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSource($source)
    {
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets batch_date_time
     *
     * @return \DateTime
     */
    public function getBatchDateTime()
    {
        return $this->container['batch_date_time'];
    }

    /**
     * Sets batch_date_time
     *
     * @param \DateTime $batch_date_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_DATETIME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBatchDateTime($batch_date_time)
    {
        $this->container['batch_date_time'] = $batch_date_time;

        return $this;
    }

    /**
     * Gets sequence
     *
     * @return int
     */
    public function getSequence()
    {
        return $this->container['sequence'];
    }

    /**
     * Sets sequence
     *
     * @param int $sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSequence($sequence)
    {
        $this->container['sequence'] = $sequence;

        return $this;
    }

    /**
     * Gets date
     *
     * @return \DateTime
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     *
     * @param \DateTime $date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_TRANS_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets item
     *
     * @return string
     */
    public function getItem()
    {
        return $this->container['item'];
    }

    /**
     * Sets item
     *
     * @param string $item <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_ITEM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setItem($item)
    {
        $this->container['item'] = $item;

        return $this;
    }

    /**
     * Gets stock_units
     *
     * @return double
     */
    public function getStockUnits()
    {
        return $this->container['stock_units'];
    }

    /**
     * Sets stock_units
     *
     * @param double $stock_units <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_QTY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 134  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStockUnits($stock_units)
    {
        $this->container['stock_units'] = $stock_units;

        return $this;
    }

    /**
     * Gets stock_unit_cost
     *
     * @return double
     */
    public function getStockUnitCost()
    {
        return $this->container['stock_unit_cost'];
    }

    /**
     * Sets stock_unit_cost
     *
     * @param double $stock_unit_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_UNIT_COST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 134  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStockUnitCost($stock_unit_cost)
    {
        $this->container['stock_unit_cost'] = $stock_unit_cost;

        return $this;
    }

    /**
     * Gets units
     *
     * @return double
     */
    public function getUnits()
    {
        return $this->container['units'];
    }

    /**
     * Sets units
     *
     * @param double $units <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_TRANS_QTY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 134  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUnits($units)
    {
        $this->container['units'] = $units;

        return $this;
    }

    /**
     * Gets unit_cost
     *
     * @return double
     */
    public function getUnitCost()
    {
        return $this->container['unit_cost'];
    }

    /**
     * Sets unit_cost
     *
     * @param double $unit_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_TRANS_UNIT_COST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 134  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUnitCost($unit_cost)
    {
        $this->container['unit_cost'] = $unit_cost;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return double
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param double $amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_AMOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets stock_um
     *
     * @return string
     */
    public function getStockUm()
    {
        return $this->container['stock_um'];
    }

    /**
     * Sets stock_um
     *
     * @param string $stock_um <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_UOM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStockUm($stock_um)
    {
        $this->container['stock_um'] = $stock_um;

        return $this;
    }

    /**
     * Gets um
     *
     * @return string
     */
    public function getUm()
    {
        return $this->container['um'];
    }

    /**
     * Sets um
     *
     * @param string $um <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_TRANS_UOM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUm($um)
    {
        $this->container['um'] = $um;

        return $this;
    }

    /**
     * Gets transaction_type
     *
     * @return string
     */
    public function getTransactionType()
    {
        return $this->container['transaction_type'];
    }

    /**
     * Sets transaction_type
     *
     * @param string $transaction_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_TRANS_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTransactionType($transaction_type)
    {
        $this->container['transaction_type'] = $transaction_type;

        return $this;
    }

    /**
     * Gets space
     *
     * @return string
     */
    public function getSpace()
    {
        return $this->container['space'];
    }

    /**
     * Sets space
     *
     * @param string $space <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_SPACE_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSpace($space)
    {
        $this->container['space'] = $space;

        return $this;
    }

    /**
     * Gets lot_serial_number
     *
     * @return string
     */
    public function getLotSerialNumber()
    {
        return $this->container['lot_serial_number'];
    }

    /**
     * Sets lot_serial_number
     *
     * @param string $lot_serial_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_LOT_SERIAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLotSerialNumber($lot_serial_number)
    {
        $this->container['lot_serial_number'] = $lot_serial_number;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_NOTE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets rental_flag
     *
     * @return string
     */
    public function getRentalFlag()
    {
        return $this->container['rental_flag'];
    }

    /**
     * Sets rental_flag
     *
     * @param string $rental_flag <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_RENTAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRentalFlag($rental_flag)
    {
        $this->container['rental_flag'] = $rental_flag;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return \DateTime
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param \DateTime $start_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_START_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets start_time
     *
     * @return \DateTime
     */
    public function getStartTime()
    {
        return $this->container['start_time'];
    }

    /**
     * Sets start_time
     *
     * @param \DateTime $start_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_START_TIME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStartTime($start_time)
    {
        $this->container['start_time'] = $start_time;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return \DateTime
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param \DateTime $end_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_END_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets end_time
     *
     * @return \DateTime
     */
    public function getEndTime()
    {
        return $this->container['end_time'];
    }

    /**
     * Sets end_time
     *
     * @param \DateTime $end_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_END_TIME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEndTime($end_time)
    {
        $this->container['end_time'] = $end_time;

        return $this;
    }

    /**
     * Gets rental_indefinite
     *
     * @return string
     */
    public function getRentalIndefinite()
    {
        return $this->container['rental_indefinite'];
    }

    /**
     * Sets rental_indefinite
     *
     * @param string $rental_indefinite <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_INDEFINITE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRentalIndefinite($rental_indefinite)
    {
        $this->container['rental_indefinite'] = $rental_indefinite;

        return $this;
    }

    /**
     * Gets destination
     *
     * @return string
     */
    public function getDestination()
    {
        return $this->container['destination'];
    }

    /**
     * Sets destination
     *
     * @param string $destination <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_DESTINATION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDestination($destination)
    {
        $this->container['destination'] = $destination;

        return $this;
    }

    /**
     * Gets supplier
     *
     * @return string
     */
    public function getSupplier()
    {
        return $this->container['supplier'];
    }

    /**
     * Sets supplier
     *
     * @param string $supplier <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_EXT_ACCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSupplier($supplier)
    {
        $this->container['supplier'] = $supplier;

        return $this;
    }

    /**
     * Gets po_number
     *
     * @return int
     */
    public function getPoNumber()
    {
        return $this->container['po_number'];
    }

    /**
     * Sets po_number
     *
     * @param int $po_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_PO_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPoNumber($po_number)
    {
        $this->container['po_number'] = $po_number;

        return $this;
    }

    /**
     * Gets po_line_number
     *
     * @return int
     */
    public function getPoLineNumber()
    {
        return $this->container['po_line_number'];
    }

    /**
     * Sets po_line_number
     *
     * @param int $po_line_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_PO_LINE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPoLineNumber($po_line_number)
    {
        $this->container['po_line_number'] = $po_line_number;

        return $this;
    }

    /**
     * Gets batch_id
     *
     * @return string
     */
    public function getBatchId()
    {
        return $this->container['batch_id'];
    }

    /**
     * Sets batch_id
     *
     * @param string $batch_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_BATCH_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBatchId($batch_id)
    {
        $this->container['batch_id'] = $batch_id;

        return $this;
    }

    /**
     * Gets batch_sequence
     *
     * @return int
     */
    public function getBatchSequence()
    {
        return $this->container['batch_sequence'];
    }

    /**
     * Sets batch_sequence
     *
     * @param int $batch_sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_BATCH_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBatchSequence($batch_sequence)
    {
        $this->container['batch_sequence'] = $batch_sequence;

        return $this;
    }

    /**
     * Gets fiscal_year
     *
     * @return int
     */
    public function getFiscalYear()
    {
        return $this->container['fiscal_year'];
    }

    /**
     * Sets fiscal_year
     *
     * @param int $fiscal_year <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_FISCAL_YR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFiscalYear($fiscal_year)
    {
        $this->container['fiscal_year'] = $fiscal_year;

        return $this;
    }

    /**
     * Gets fiscal_period
     *
     * @return int
     */
    public function getFiscalPeriod()
    {
        return $this->container['fiscal_period'];
    }

    /**
     * Sets fiscal_period
     *
     * @param int $fiscal_period <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_FISCAL_PER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFiscalPeriod($fiscal_period)
    {
        $this->container['fiscal_period'] = $fiscal_period;

        return $this;
    }

    /**
     * Gets gl_source
     *
     * @return string
     */
    public function getGlSource()
    {
        return $this->container['gl_source'];
    }

    /**
     * Sets gl_source
     *
     * @param string $gl_source <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_JE_SOURCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlSource($gl_source)
    {
        $this->container['gl_source'] = $gl_source;

        return $this;
    }

    /**
     * Gets journal_entry
     *
     * @return string
     */
    public function getJournalEntry()
    {
        return $this->container['journal_entry'];
    }

    /**
     * Sets journal_entry
     *
     * @param string $journal_entry <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_JE_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 7  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setJournalEntry($journal_entry)
    {
        $this->container['journal_entry'] = $journal_entry;

        return $this;
    }

    /**
     * Gets quantity_used
     *
     * @return double
     */
    public function getQuantityUsed()
    {
        return $this->container['quantity_used'];
    }

    /**
     * Sets quantity_used
     *
     * @param double $quantity_used <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_QTY_USED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 134  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setQuantityUsed($quantity_used)
    {
        $this->container['quantity_used'] = $quantity_used;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets posted_by
     *
     * @return string
     */
    public function getPostedBy()
    {
        return $this->container['posted_by'];
    }

    /**
     * Sets posted_by
     *
     * @param string $posted_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_POST_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPostedBy($posted_by)
    {
        $this->container['posted_by'] = $posted_by;

        return $this;
    }

    /**
     * Gets posted_on
     *
     * @return \DateTime
     */
    public function getPostedOn()
    {
        return $this->container['posted_on'];
    }

    /**
     * Sets posted_on
     *
     * @param \DateTime $posted_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_POST_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPostedOn($posted_on)
    {
        $this->container['posted_on'] = $posted_on;

        return $this;
    }

    /**
     * Gets valuation_status
     *
     * @return string
     */
    public function getValuationStatus()
    {
        return $this->container['valuation_status'];
    }

    /**
     * Sets valuation_status
     *
     * @param string $valuation_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_INV_VAL_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setValuationStatus($valuation_status)
    {
        $this->container['valuation_status'] = $valuation_status;

        return $this;
    }

    /**
     * Gets physical_count_stocking_units
     *
     * @return double
     */
    public function getPhysicalCountStockingUnits()
    {
        return $this->container['physical_count_stocking_units'];
    }

    /**
     * Sets physical_count_stocking_units
     *
     * @param double $physical_count_stocking_units <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_PHYS_COUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 114  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPhysicalCountStockingUnits($physical_count_stocking_units)
    {
        $this->container['physical_count_stocking_units'] = $physical_count_stocking_units;

        return $this;
    }

    /**
     * Gets physical_count_adjustment
     *
     * @return double
     */
    public function getPhysicalCountAdjustment()
    {
        return $this->container['physical_count_adjustment'];
    }

    /**
     * Sets physical_count_adjustment
     *
     * @param double $physical_count_adjustment <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_PHYS_ADJ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 114  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPhysicalCountAdjustment($physical_count_adjustment)
    {
        $this->container['physical_count_adjustment'] = $physical_count_adjustment;

        return $this;
    }

    /**
     * Gets physical_count_value
     *
     * @return double
     */
    public function getPhysicalCountValue()
    {
        return $this->container['physical_count_value'];
    }

    /**
     * Sets physical_count_value
     *
     * @param double $physical_count_value <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_PHYS_VALUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPhysicalCountValue($physical_count_value)
    {
        $this->container['physical_count_value'] = $physical_count_value;

        return $this;
    }

    /**
     * Gets physical_count_adjustment_amount
     *
     * @return double
     */
    public function getPhysicalCountAdjustmentAmount()
    {
        return $this->container['physical_count_adjustment_amount'];
    }

    /**
     * Sets physical_count_adjustment_amount
     *
     * @param double $physical_count_adjustment_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_PHYS_VALUE_ADJ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPhysicalCountAdjustmentAmount($physical_count_adjustment_amount)
    {
        $this->container['physical_count_adjustment_amount'] = $physical_count_adjustment_amount;

        return $this;
    }

    /**
     * Gets event
     *
     * @return int
     */
    public function getEvent()
    {
        return $this->container['event'];
    }

    /**
     * Sets event
     *
     * @param int $event <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_EVT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEvent($event)
    {
        $this->container['event'] = $event;

        return $this;
    }

    /**
     * Gets order_number
     *
     * @return int
     */
    public function getOrderNumber()
    {
        return $this->container['order_number'];
    }

    /**
     * Sets order_number
     *
     * @param int $order_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_ORD_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderNumber($order_number)
    {
        $this->container['order_number'] = $order_number;

        return $this;
    }

    /**
     * Gets order_line
     *
     * @return int
     */
    public function getOrderLine()
    {
        return $this->container['order_line'];
    }

    /**
     * Sets order_line
     *
     * @param int $order_line <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_ORD_LINE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderLine($order_line)
    {
        $this->container['order_line'] = $order_line;

        return $this;
    }

    /**
     * Gets factor
     *
     * @return int
     */
    public function getFactor()
    {
        return $this->container['factor'];
    }

    /**
     * Sets factor
     *
     * @param int $factor <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_FACTOR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFactor($factor)
    {
        $this->container['factor'] = $factor;

        return $this;
    }

    /**
     * Gets gl_transferred
     *
     * @return string
     */
    public function getGlTransferred()
    {
        return $this->container['gl_transferred'];
    }

    /**
     * Sets gl_transferred
     *
     * @param string $gl_transferred <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_GL_POSTED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlTransferred($gl_transferred)
    {
        $this->container['gl_transferred'] = $gl_transferred;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string $department <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_DEPT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets user_field1
     *
     * @return string
     */
    public function getUserField1()
    {
        return $this->container['user_field1'];
    }

    /**
     * Sets user_field1
     *
     * @param string $user_field1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_REF_FIELD1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 40  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserField1($user_field1)
    {
        $this->container['user_field1'] = $user_field1;

        return $this;
    }

    /**
     * Gets user_field2
     *
     * @return string
     */
    public function getUserField2()
    {
        return $this->container['user_field2'];
    }

    /**
     * Sets user_field2
     *
     * @param string $user_field2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_REF_FIELD2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 15  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserField2($user_field2)
    {
        $this->container['user_field2'] = $user_field2;

        return $this;
    }

    /**
     * Gets fiscal_year_period
     *
     * @return string
     */
    public function getFiscalYearPeriod()
    {
        return $this->container['fiscal_year_period'];
    }

    /**
     * Sets fiscal_year_period
     *
     * @param string $fiscal_year_period <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_FYP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFiscalYearPeriod($fiscal_year_period)
    {
        $this->container['fiscal_year_period'] = $fiscal_year_period;

        return $this;
    }

    /**
     * Gets requisition_number
     *
     * @return int
     */
    public function getRequisitionNumber()
    {
        return $this->container['requisition_number'];
    }

    /**
     * Sets requisition_number
     *
     * @param int $requisition_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_REQUISITION_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequisitionNumber($requisition_number)
    {
        $this->container['requisition_number'] = $requisition_number;

        return $this;
    }

    /**
     * Gets requisition_line
     *
     * @return int
     */
    public function getRequisitionLine()
    {
        return $this->container['requisition_line'];
    }

    /**
     * Sets requisition_line
     *
     * @param int $requisition_line <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_REQUISITION_LINE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequisitionLine($requisition_line)
    {
        $this->container['requisition_line'] = $requisition_line;

        return $this;
    }

    /**
     * Gets requisition_units
     *
     * @return double
     */
    public function getRequisitionUnits()
    {
        return $this->container['requisition_units'];
    }

    /**
     * Sets requisition_units
     *
     * @param double $requisition_units <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_REQUISITION_QTY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 134  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequisitionUnits($requisition_units)
    {
        $this->container['requisition_units'] = $requisition_units;

        return $this;
    }

    /**
     * Gets requisition_um
     *
     * @return string
     */
    public function getRequisitionUm()
    {
        return $this->container['requisition_um'];
    }

    /**
     * Sets requisition_um
     *
     * @param string $requisition_um <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_REQUISITION_UOM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequisitionUm($requisition_um)
    {
        $this->container['requisition_um'] = $requisition_um;

        return $this;
    }

    /**
     * Gets requisition_issue_status
     *
     * @return string
     */
    public function getRequisitionIssueStatus()
    {
        return $this->container['requisition_issue_status'];
    }

    /**
     * Sets requisition_issue_status
     *
     * @param string $requisition_issue_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_REQUISITION_ISSUE_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequisitionIssueStatus($requisition_issue_status)
    {
        $this->container['requisition_issue_status'] = $requisition_issue_status;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_CURRENCY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets fc_extended_cost
     *
     * @return double
     */
    public function getFcExtendedCost()
    {
        return $this->container['fc_extended_cost'];
    }

    /**
     * Sets fc_extended_cost
     *
     * @param double $fc_extended_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_FC_AMOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcExtendedCost($fc_extended_cost)
    {
        $this->container['fc_extended_cost'] = $fc_extended_cost;

        return $this;
    }

    /**
     * Gets fc_stock_unit_cost
     *
     * @return double
     */
    public function getFcStockUnitCost()
    {
        return $this->container['fc_stock_unit_cost'];
    }

    /**
     * Sets fc_stock_unit_cost
     *
     * @param double $fc_stock_unit_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_FC_UNIT_COST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 154  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcStockUnitCost($fc_stock_unit_cost)
    {
        $this->container['fc_stock_unit_cost'] = $fc_stock_unit_cost;

        return $this;
    }

    /**
     * Gets local_rate
     *
     * @return double
     */
    public function getLocalRate()
    {
        return $this->container['local_rate'];
    }

    /**
     * Sets local_rate
     *
     * @param double $local_rate <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_LOCAL_RATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 125  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalRate($local_rate)
    {
        $this->container['local_rate'] = $local_rate;

        return $this;
    }

    /**
     * Gets asset
     *
     * @return string
     */
    public function getAsset()
    {
        return $this->container['asset'];
    }

    /**
     * Sets asset
     *
     * @param string $asset <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_ASSET_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAsset($asset)
    {
        $this->container['asset'] = $asset;

        return $this;
    }

    /**
     * Gets voucher
     *
     * @return int
     */
    public function getVoucher()
    {
        return $this->container['voucher'];
    }

    /**
     * Sets voucher
     *
     * @param int $voucher <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_VOUCHER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setVoucher($voucher)
    {
        $this->container['voucher'] = $voucher;

        return $this;
    }

    /**
     * Gets restock_status
     *
     * @return string
     */
    public function getRestockStatus()
    {
        return $this->container['restock_status'];
    }

    /**
     * Sets restock_status
     *
     * @param string $restock_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_REF_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRestockStatus($restock_status)
    {
        $this->container['restock_status'] = $restock_status;

        return $this;
    }

    /**
     * Gets number
     *
     * @return string
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     *
     * @param string $number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_TRANS_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNumber($number)
    {
        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets restocked_qty
     *
     * @return double
     */
    public function getRestockedQty()
    {
        return $this->container['restocked_qty'];
    }

    /**
     * Sets restocked_qty
     *
     * @param double $restocked_qty <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_REF_QTY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 134  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRestockedQty($restocked_qty)
    {
        $this->container['restocked_qty'] = $restocked_qty;

        return $this;
    }

    /**
     * Gets unique_id
     *
     * @return int
     */
    public function getUniqueId()
    {
        return $this->container['unique_id'];
    }

    /**
     * Sets unique_id
     *
     * @param int $unique_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IN400_UNIQUE_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUniqueId($unique_id)
    {
        $this->container['unique_id'] = $unique_id;

        return $this;
    }

    /**
     * Gets compute_unit_cost
     *
     * @return bool
     */
    public function getComputeUnitCost()
    {
        return $this->container['compute_unit_cost'];
    }

    /**
     * Sets compute_unit_cost
     *
     * @param bool $compute_unit_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span>   <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10</span></div>
     *
     * @return $this
     */
    public function setComputeUnitCost($compute_unit_cost)
    {
        $this->container['compute_unit_cost'] = $compute_unit_cost;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


