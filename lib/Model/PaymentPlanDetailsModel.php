<?php
/**
 * PaymentPlanDetailsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * PaymentPlanDetailsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PaymentPlanDetailsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PaymentPlanDetailsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization' => 'string',
        'pay_plan_id' => 'int',
        'pay_number' => 'int',
        'sequence' => 'int',
        'resource_type' => 'string',
        'tax_resource_type' => 'string',
        'description' => 'string',
        'tax_category' => 'string',
        'type' => 'string',
        'percent_amount' => 'double',
        'cumulative_percent_amount' => 'double',
        'print_sequence' => 'string',
        'amount' => 'double',
        'fc_amount' => 'double',
        'pl_currency_amount' => 'double',
        'triangulation_currency_amount' => 'double',
        'status' => 'string',
        'entered_by_code' => 'string',
        'entered_on' => '\DateTime',
        'changed_by_code' => 'string',
        'changed_on' => '\DateTime',
        'cumulative_amount' => 'double',
        'fc_cumulative_amount' => 'double',
        'pl_currency_cumulative_amount' => 'double',
        'triangulation_currency_cumulative_amount' => 'double',
        'tax_rate' => 'double',
        'taxable_amount' => 'double',
        'cumulative_taxable_amount' => 'double',
        'fc_units' => 'double',
        'fc_cumulative_units' => 'double',
        'alternate_description1' => 'string',
        'alternate_description2' => 'string',
        'alternate_description3' => 'string',
        'alternate_description4' => 'string',
        'alternate_description5' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization' => null,
        'pay_plan_id' => 'int32',
        'pay_number' => 'int32',
        'sequence' => 'int32',
        'resource_type' => null,
        'tax_resource_type' => null,
        'description' => null,
        'tax_category' => null,
        'type' => null,
        'percent_amount' => 'double',
        'cumulative_percent_amount' => 'double',
        'print_sequence' => null,
        'amount' => 'double',
        'fc_amount' => 'double',
        'pl_currency_amount' => 'double',
        'triangulation_currency_amount' => 'double',
        'status' => null,
        'entered_by_code' => null,
        'entered_on' => 'date-time',
        'changed_by_code' => null,
        'changed_on' => 'date-time',
        'cumulative_amount' => 'double',
        'fc_cumulative_amount' => 'double',
        'pl_currency_cumulative_amount' => 'double',
        'triangulation_currency_cumulative_amount' => 'double',
        'tax_rate' => 'double',
        'taxable_amount' => 'double',
        'cumulative_taxable_amount' => 'double',
        'fc_units' => 'double',
        'fc_cumulative_units' => 'double',
        'alternate_description1' => null,
        'alternate_description2' => null,
        'alternate_description3' => null,
        'alternate_description4' => null,
        'alternate_description5' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization' => 'Organization',
        'pay_plan_id' => 'PayPlanID',
        'pay_number' => 'PayNumber',
        'sequence' => 'Sequence',
        'resource_type' => 'ResourceType',
        'tax_resource_type' => 'TaxResourceType',
        'description' => 'Description',
        'tax_category' => 'TaxCategory',
        'type' => 'Type',
        'percent_amount' => 'PercentAmount',
        'cumulative_percent_amount' => 'CumulativePercentAmount',
        'print_sequence' => 'PrintSequence',
        'amount' => 'Amount',
        'fc_amount' => 'FCAmount',
        'pl_currency_amount' => 'PLCurrencyAmount',
        'triangulation_currency_amount' => 'TriangulationCurrencyAmount',
        'status' => 'Status',
        'entered_by_code' => 'EnteredByCode',
        'entered_on' => 'EnteredOn',
        'changed_by_code' => 'ChangedByCode',
        'changed_on' => 'ChangedOn',
        'cumulative_amount' => 'CumulativeAmount',
        'fc_cumulative_amount' => 'FCCumulativeAmount',
        'pl_currency_cumulative_amount' => 'PLCurrencyCumulativeAmount',
        'triangulation_currency_cumulative_amount' => 'TriangulationCurrencyCumulativeAmount',
        'tax_rate' => 'TaxRate',
        'taxable_amount' => 'TaxableAmount',
        'cumulative_taxable_amount' => 'CumulativeTaxableAmount',
        'fc_units' => 'FCUnits',
        'fc_cumulative_units' => 'FCCumulativeUnits',
        'alternate_description1' => 'AlternateDescription1',
        'alternate_description2' => 'AlternateDescription2',
        'alternate_description3' => 'AlternateDescription3',
        'alternate_description4' => 'AlternateDescription4',
        'alternate_description5' => 'AlternateDescription5'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization' => 'setOrganization',
        'pay_plan_id' => 'setPayPlanId',
        'pay_number' => 'setPayNumber',
        'sequence' => 'setSequence',
        'resource_type' => 'setResourceType',
        'tax_resource_type' => 'setTaxResourceType',
        'description' => 'setDescription',
        'tax_category' => 'setTaxCategory',
        'type' => 'setType',
        'percent_amount' => 'setPercentAmount',
        'cumulative_percent_amount' => 'setCumulativePercentAmount',
        'print_sequence' => 'setPrintSequence',
        'amount' => 'setAmount',
        'fc_amount' => 'setFcAmount',
        'pl_currency_amount' => 'setPlCurrencyAmount',
        'triangulation_currency_amount' => 'setTriangulationCurrencyAmount',
        'status' => 'setStatus',
        'entered_by_code' => 'setEnteredByCode',
        'entered_on' => 'setEnteredOn',
        'changed_by_code' => 'setChangedByCode',
        'changed_on' => 'setChangedOn',
        'cumulative_amount' => 'setCumulativeAmount',
        'fc_cumulative_amount' => 'setFcCumulativeAmount',
        'pl_currency_cumulative_amount' => 'setPlCurrencyCumulativeAmount',
        'triangulation_currency_cumulative_amount' => 'setTriangulationCurrencyCumulativeAmount',
        'tax_rate' => 'setTaxRate',
        'taxable_amount' => 'setTaxableAmount',
        'cumulative_taxable_amount' => 'setCumulativeTaxableAmount',
        'fc_units' => 'setFcUnits',
        'fc_cumulative_units' => 'setFcCumulativeUnits',
        'alternate_description1' => 'setAlternateDescription1',
        'alternate_description2' => 'setAlternateDescription2',
        'alternate_description3' => 'setAlternateDescription3',
        'alternate_description4' => 'setAlternateDescription4',
        'alternate_description5' => 'setAlternateDescription5'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization' => 'getOrganization',
        'pay_plan_id' => 'getPayPlanId',
        'pay_number' => 'getPayNumber',
        'sequence' => 'getSequence',
        'resource_type' => 'getResourceType',
        'tax_resource_type' => 'getTaxResourceType',
        'description' => 'getDescription',
        'tax_category' => 'getTaxCategory',
        'type' => 'getType',
        'percent_amount' => 'getPercentAmount',
        'cumulative_percent_amount' => 'getCumulativePercentAmount',
        'print_sequence' => 'getPrintSequence',
        'amount' => 'getAmount',
        'fc_amount' => 'getFcAmount',
        'pl_currency_amount' => 'getPlCurrencyAmount',
        'triangulation_currency_amount' => 'getTriangulationCurrencyAmount',
        'status' => 'getStatus',
        'entered_by_code' => 'getEnteredByCode',
        'entered_on' => 'getEnteredOn',
        'changed_by_code' => 'getChangedByCode',
        'changed_on' => 'getChangedOn',
        'cumulative_amount' => 'getCumulativeAmount',
        'fc_cumulative_amount' => 'getFcCumulativeAmount',
        'pl_currency_cumulative_amount' => 'getPlCurrencyCumulativeAmount',
        'triangulation_currency_cumulative_amount' => 'getTriangulationCurrencyCumulativeAmount',
        'tax_rate' => 'getTaxRate',
        'taxable_amount' => 'getTaxableAmount',
        'cumulative_taxable_amount' => 'getCumulativeTaxableAmount',
        'fc_units' => 'getFcUnits',
        'fc_cumulative_units' => 'getFcCumulativeUnits',
        'alternate_description1' => 'getAlternateDescription1',
        'alternate_description2' => 'getAlternateDescription2',
        'alternate_description3' => 'getAlternateDescription3',
        'alternate_description4' => 'getAlternateDescription4',
        'alternate_description5' => 'getAlternateDescription5'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['pay_plan_id'] = isset($data['pay_plan_id']) ? $data['pay_plan_id'] : null;
        $this->container['pay_number'] = isset($data['pay_number']) ? $data['pay_number'] : null;
        $this->container['sequence'] = isset($data['sequence']) ? $data['sequence'] : null;
        $this->container['resource_type'] = isset($data['resource_type']) ? $data['resource_type'] : null;
        $this->container['tax_resource_type'] = isset($data['tax_resource_type']) ? $data['tax_resource_type'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['tax_category'] = isset($data['tax_category']) ? $data['tax_category'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['percent_amount'] = isset($data['percent_amount']) ? $data['percent_amount'] : null;
        $this->container['cumulative_percent_amount'] = isset($data['cumulative_percent_amount']) ? $data['cumulative_percent_amount'] : null;
        $this->container['print_sequence'] = isset($data['print_sequence']) ? $data['print_sequence'] : null;
        $this->container['amount'] = isset($data['amount']) ? $data['amount'] : null;
        $this->container['fc_amount'] = isset($data['fc_amount']) ? $data['fc_amount'] : null;
        $this->container['pl_currency_amount'] = isset($data['pl_currency_amount']) ? $data['pl_currency_amount'] : null;
        $this->container['triangulation_currency_amount'] = isset($data['triangulation_currency_amount']) ? $data['triangulation_currency_amount'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['entered_by_code'] = isset($data['entered_by_code']) ? $data['entered_by_code'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['changed_by_code'] = isset($data['changed_by_code']) ? $data['changed_by_code'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['cumulative_amount'] = isset($data['cumulative_amount']) ? $data['cumulative_amount'] : null;
        $this->container['fc_cumulative_amount'] = isset($data['fc_cumulative_amount']) ? $data['fc_cumulative_amount'] : null;
        $this->container['pl_currency_cumulative_amount'] = isset($data['pl_currency_cumulative_amount']) ? $data['pl_currency_cumulative_amount'] : null;
        $this->container['triangulation_currency_cumulative_amount'] = isset($data['triangulation_currency_cumulative_amount']) ? $data['triangulation_currency_cumulative_amount'] : null;
        $this->container['tax_rate'] = isset($data['tax_rate']) ? $data['tax_rate'] : null;
        $this->container['taxable_amount'] = isset($data['taxable_amount']) ? $data['taxable_amount'] : null;
        $this->container['cumulative_taxable_amount'] = isset($data['cumulative_taxable_amount']) ? $data['cumulative_taxable_amount'] : null;
        $this->container['fc_units'] = isset($data['fc_units']) ? $data['fc_units'] : null;
        $this->container['fc_cumulative_units'] = isset($data['fc_cumulative_units']) ? $data['fc_cumulative_units'] : null;
        $this->container['alternate_description1'] = isset($data['alternate_description1']) ? $data['alternate_description1'] : null;
        $this->container['alternate_description2'] = isset($data['alternate_description2']) ? $data['alternate_description2'] : null;
        $this->container['alternate_description3'] = isset($data['alternate_description3']) ? $data['alternate_description3'] : null;
        $this->container['alternate_description4'] = isset($data['alternate_description4']) ? $data['alternate_description4'] : null;
        $this->container['alternate_description5'] = isset($data['alternate_description5']) ? $data['alternate_description5'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization'] === null) {
            $invalidProperties[] = "'organization' can't be null";
        }
        if ($this->container['pay_plan_id'] === null) {
            $invalidProperties[] = "'pay_plan_id' can't be null";
        }
        if ($this->container['pay_number'] === null) {
            $invalidProperties[] = "'pay_number' can't be null";
        }
        if ($this->container['sequence'] === null) {
            $invalidProperties[] = "'sequence' can't be null";
        }
        if ($this->container['resource_type'] === null) {
            $invalidProperties[] = "'resource_type' can't be null";
        }
        if ($this->container['tax_resource_type'] === null) {
            $invalidProperties[] = "'tax_resource_type' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['tax_category'] === null) {
            $invalidProperties[] = "'tax_category' can't be null";
        }
        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['percent_amount'] === null) {
            $invalidProperties[] = "'percent_amount' can't be null";
        }
        if ($this->container['cumulative_percent_amount'] === null) {
            $invalidProperties[] = "'cumulative_percent_amount' can't be null";
        }
        if ($this->container['print_sequence'] === null) {
            $invalidProperties[] = "'print_sequence' can't be null";
        }
        if ($this->container['amount'] === null) {
            $invalidProperties[] = "'amount' can't be null";
        }
        if ($this->container['fc_amount'] === null) {
            $invalidProperties[] = "'fc_amount' can't be null";
        }
        if ($this->container['pl_currency_amount'] === null) {
            $invalidProperties[] = "'pl_currency_amount' can't be null";
        }
        if ($this->container['triangulation_currency_amount'] === null) {
            $invalidProperties[] = "'triangulation_currency_amount' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['entered_by_code'] === null) {
            $invalidProperties[] = "'entered_by_code' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['changed_by_code'] === null) {
            $invalidProperties[] = "'changed_by_code' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['cumulative_amount'] === null) {
            $invalidProperties[] = "'cumulative_amount' can't be null";
        }
        if ($this->container['fc_cumulative_amount'] === null) {
            $invalidProperties[] = "'fc_cumulative_amount' can't be null";
        }
        if ($this->container['pl_currency_cumulative_amount'] === null) {
            $invalidProperties[] = "'pl_currency_cumulative_amount' can't be null";
        }
        if ($this->container['triangulation_currency_cumulative_amount'] === null) {
            $invalidProperties[] = "'triangulation_currency_cumulative_amount' can't be null";
        }
        if ($this->container['tax_rate'] === null) {
            $invalidProperties[] = "'tax_rate' can't be null";
        }
        if ($this->container['taxable_amount'] === null) {
            $invalidProperties[] = "'taxable_amount' can't be null";
        }
        if ($this->container['cumulative_taxable_amount'] === null) {
            $invalidProperties[] = "'cumulative_taxable_amount' can't be null";
        }
        if ($this->container['fc_units'] === null) {
            $invalidProperties[] = "'fc_units' can't be null";
        }
        if ($this->container['fc_cumulative_units'] === null) {
            $invalidProperties[] = "'fc_cumulative_units' can't be null";
        }
        if ($this->container['alternate_description1'] === null) {
            $invalidProperties[] = "'alternate_description1' can't be null";
        }
        if ($this->container['alternate_description2'] === null) {
            $invalidProperties[] = "'alternate_description2' can't be null";
        }
        if ($this->container['alternate_description3'] === null) {
            $invalidProperties[] = "'alternate_description3' can't be null";
        }
        if ($this->container['alternate_description4'] === null) {
            $invalidProperties[] = "'alternate_description4' can't be null";
        }
        if ($this->container['alternate_description5'] === null) {
            $invalidProperties[] = "'alternate_description5' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets pay_plan_id
     *
     * @return int
     */
    public function getPayPlanId()
    {
        return $this->container['pay_plan_id'];
    }

    /**
     * Sets pay_plan_id
     *
     * @param int $pay_plan_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_PAY_PLAN_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPayPlanId($pay_plan_id)
    {
        $this->container['pay_plan_id'] = $pay_plan_id;

        return $this;
    }

    /**
     * Gets pay_number
     *
     * @return int
     */
    public function getPayNumber()
    {
        return $this->container['pay_number'];
    }

    /**
     * Sets pay_number
     *
     * @param int $pay_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_PAY_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPayNumber($pay_number)
    {
        $this->container['pay_number'] = $pay_number;

        return $this;
    }

    /**
     * Gets sequence
     *
     * @return int
     */
    public function getSequence()
    {
        return $this->container['sequence'];
    }

    /**
     * Sets sequence
     *
     * @param int $sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSequence($sequence)
    {
        $this->container['sequence'] = $sequence;

        return $this;
    }

    /**
     * Gets resource_type
     *
     * @return string
     */
    public function getResourceType()
    {
        return $this->container['resource_type'];
    }

    /**
     * Sets resource_type
     *
     * @param string $resource_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_RES_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setResourceType($resource_type)
    {
        $this->container['resource_type'] = $resource_type;

        return $this;
    }

    /**
     * Gets tax_resource_type
     *
     * @return string
     */
    public function getTaxResourceType()
    {
        return $this->container['tax_resource_type'];
    }

    /**
     * Sets tax_resource_type
     *
     * @param string $tax_resource_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_TAX_RES_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxResourceType($tax_resource_type)
    {
        $this->container['tax_resource_type'] = $tax_resource_type;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets tax_category
     *
     * @return string
     */
    public function getTaxCategory()
    {
        return $this->container['tax_category'];
    }

    /**
     * Sets tax_category
     *
     * @param string $tax_category <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_TAX_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxCategory($tax_category)
    {
        $this->container['tax_category'] = $tax_category;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_DETAIL_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets percent_amount
     *
     * @return double
     */
    public function getPercentAmount()
    {
        return $this->container['percent_amount'];
    }

    /**
     * Sets percent_amount
     *
     * @param double $percent_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_PCT_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPercentAmount($percent_amount)
    {
        $this->container['percent_amount'] = $percent_amount;

        return $this;
    }

    /**
     * Gets cumulative_percent_amount
     *
     * @return double
     */
    public function getCumulativePercentAmount()
    {
        return $this->container['cumulative_percent_amount'];
    }

    /**
     * Sets cumulative_percent_amount
     *
     * @param double $cumulative_percent_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_PCT_CUM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCumulativePercentAmount($cumulative_percent_amount)
    {
        $this->container['cumulative_percent_amount'] = $cumulative_percent_amount;

        return $this;
    }

    /**
     * Gets print_sequence
     *
     * @return string
     */
    public function getPrintSequence()
    {
        return $this->container['print_sequence'];
    }

    /**
     * Sets print_sequence
     *
     * @param string $print_sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_PRT_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPrintSequence($print_sequence)
    {
        $this->container['print_sequence'] = $print_sequence;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return double
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param double $amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets fc_amount
     *
     * @return double
     */
    public function getFcAmount()
    {
        return $this->container['fc_amount'];
    }

    /**
     * Sets fc_amount
     *
     * @param double $fc_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_FC_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcAmount($fc_amount)
    {
        $this->container['fc_amount'] = $fc_amount;

        return $this;
    }

    /**
     * Gets pl_currency_amount
     *
     * @return double
     */
    public function getPlCurrencyAmount()
    {
        return $this->container['pl_currency_amount'];
    }

    /**
     * Sets pl_currency_amount
     *
     * @param double $pl_currency_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_PL_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPlCurrencyAmount($pl_currency_amount)
    {
        $this->container['pl_currency_amount'] = $pl_currency_amount;

        return $this;
    }

    /**
     * Gets triangulation_currency_amount
     *
     * @return double
     */
    public function getTriangulationCurrencyAmount()
    {
        return $this->container['triangulation_currency_amount'];
    }

    /**
     * Sets triangulation_currency_amount
     *
     * @param double $triangulation_currency_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_TR_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTriangulationCurrencyAmount($triangulation_currency_amount)
    {
        $this->container['triangulation_currency_amount'] = $triangulation_currency_amount;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets entered_by_code
     *
     * @return string
     */
    public function getEnteredByCode()
    {
        return $this->container['entered_by_code'];
    }

    /**
     * Sets entered_by_code
     *
     * @param string $entered_by_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredByCode($entered_by_code)
    {
        $this->container['entered_by_code'] = $entered_by_code;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets changed_by_code
     *
     * @return string
     */
    public function getChangedByCode()
    {
        return $this->container['changed_by_code'];
    }

    /**
     * Sets changed_by_code
     *
     * @param string $changed_by_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedByCode($changed_by_code)
    {
        $this->container['changed_by_code'] = $changed_by_code;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets cumulative_amount
     *
     * @return double
     */
    public function getCumulativeAmount()
    {
        return $this->container['cumulative_amount'];
    }

    /**
     * Sets cumulative_amount
     *
     * @param double $cumulative_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_CUM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCumulativeAmount($cumulative_amount)
    {
        $this->container['cumulative_amount'] = $cumulative_amount;

        return $this;
    }

    /**
     * Gets fc_cumulative_amount
     *
     * @return double
     */
    public function getFcCumulativeAmount()
    {
        return $this->container['fc_cumulative_amount'];
    }

    /**
     * Sets fc_cumulative_amount
     *
     * @param double $fc_cumulative_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_FC_CUM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcCumulativeAmount($fc_cumulative_amount)
    {
        $this->container['fc_cumulative_amount'] = $fc_cumulative_amount;

        return $this;
    }

    /**
     * Gets pl_currency_cumulative_amount
     *
     * @return double
     */
    public function getPlCurrencyCumulativeAmount()
    {
        return $this->container['pl_currency_cumulative_amount'];
    }

    /**
     * Sets pl_currency_cumulative_amount
     *
     * @param double $pl_currency_cumulative_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_PL_CUM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPlCurrencyCumulativeAmount($pl_currency_cumulative_amount)
    {
        $this->container['pl_currency_cumulative_amount'] = $pl_currency_cumulative_amount;

        return $this;
    }

    /**
     * Gets triangulation_currency_cumulative_amount
     *
     * @return double
     */
    public function getTriangulationCurrencyCumulativeAmount()
    {
        return $this->container['triangulation_currency_cumulative_amount'];
    }

    /**
     * Sets triangulation_currency_cumulative_amount
     *
     * @param double $triangulation_currency_cumulative_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_TR_CUM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTriangulationCurrencyCumulativeAmount($triangulation_currency_cumulative_amount)
    {
        $this->container['triangulation_currency_cumulative_amount'] = $triangulation_currency_cumulative_amount;

        return $this;
    }

    /**
     * Gets tax_rate
     *
     * @return double
     */
    public function getTaxRate()
    {
        return $this->container['tax_rate'];
    }

    /**
     * Sets tax_rate
     *
     * @param double $tax_rate <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_TAX_RATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxRate($tax_rate)
    {
        $this->container['tax_rate'] = $tax_rate;

        return $this;
    }

    /**
     * Gets taxable_amount
     *
     * @return double
     */
    public function getTaxableAmount()
    {
        return $this->container['taxable_amount'];
    }

    /**
     * Sets taxable_amount
     *
     * @param double $taxable_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_QTY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxableAmount($taxable_amount)
    {
        $this->container['taxable_amount'] = $taxable_amount;

        return $this;
    }

    /**
     * Gets cumulative_taxable_amount
     *
     * @return double
     */
    public function getCumulativeTaxableAmount()
    {
        return $this->container['cumulative_taxable_amount'];
    }

    /**
     * Sets cumulative_taxable_amount
     *
     * @param double $cumulative_taxable_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_QTY_CUM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCumulativeTaxableAmount($cumulative_taxable_amount)
    {
        $this->container['cumulative_taxable_amount'] = $cumulative_taxable_amount;

        return $this;
    }

    /**
     * Gets fc_units
     *
     * @return double
     */
    public function getFcUnits()
    {
        return $this->container['fc_units'];
    }

    /**
     * Sets fc_units
     *
     * @param double $fc_units <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_FC_QTY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcUnits($fc_units)
    {
        $this->container['fc_units'] = $fc_units;

        return $this;
    }

    /**
     * Gets fc_cumulative_units
     *
     * @return double
     */
    public function getFcCumulativeUnits()
    {
        return $this->container['fc_cumulative_units'];
    }

    /**
     * Sets fc_cumulative_units
     *
     * @param double $fc_cumulative_units <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_FC_QTY_CUM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcCumulativeUnits($fc_cumulative_units)
    {
        $this->container['fc_cumulative_units'] = $fc_cumulative_units;

        return $this;
    }

    /**
     * Gets alternate_description1
     *
     * @return string
     */
    public function getAlternateDescription1()
    {
        return $this->container['alternate_description1'];
    }

    /**
     * Sets alternate_description1
     *
     * @param string $alternate_description1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_ALT_DESC_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription1($alternate_description1)
    {
        $this->container['alternate_description1'] = $alternate_description1;

        return $this;
    }

    /**
     * Gets alternate_description2
     *
     * @return string
     */
    public function getAlternateDescription2()
    {
        return $this->container['alternate_description2'];
    }

    /**
     * Sets alternate_description2
     *
     * @param string $alternate_description2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_ALT_DESC_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription2($alternate_description2)
    {
        $this->container['alternate_description2'] = $alternate_description2;

        return $this;
    }

    /**
     * Gets alternate_description3
     *
     * @return string
     */
    public function getAlternateDescription3()
    {
        return $this->container['alternate_description3'];
    }

    /**
     * Sets alternate_description3
     *
     * @param string $alternate_description3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_ALT_DESC_3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription3($alternate_description3)
    {
        $this->container['alternate_description3'] = $alternate_description3;

        return $this;
    }

    /**
     * Gets alternate_description4
     *
     * @return string
     */
    public function getAlternateDescription4()
    {
        return $this->container['alternate_description4'];
    }

    /**
     * Sets alternate_description4
     *
     * @param string $alternate_description4 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_ALT_DESC_4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription4($alternate_description4)
    {
        $this->container['alternate_description4'] = $alternate_description4;

        return $this;
    }

    /**
     * Gets alternate_description5
     *
     * @return string
     */
    public function getAlternateDescription5()
    {
        return $this->container['alternate_description5'];
    }

    /**
     * Sets alternate_description5
     *
     * @param string $alternate_description5 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER203_ALT_DESC_5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription5($alternate_description5)
    {
        $this->container['alternate_description5'] = $alternate_description5;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


