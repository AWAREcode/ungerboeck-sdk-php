<?php
/**
 * FixedAssetBookDetailsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * FixedAssetBookDetailsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FixedAssetBookDetailsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'FixedAssetBookDetailsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'asset' => 'string',
        'book' => 'string',
        'organization_code' => 'string',
        'depreciation_method' => 'string',
        'depreciable' => 'string',
        'in_service_date' => '\DateTime',
        'last_depreciated' => '\DateTime',
        'depreciate_to_date' => '\DateTime',
        'book_value' => 'double',
        'accumulated_depreciation' => 'double',
        'salvage_value' => 'double',
        'fully_depreciated' => 'string',
        'net_book_value' => 'double',
        'enteredon' => '\DateTime',
        'entered_by' => 'string',
        'changed_on' => '\DateTime',
        'changed_by' => 'string',
        'life_years' => 'int',
        'life_months' => 'int',
        'convention' => 'string',
        'switch_to_straight_line' => 'string',
        'depreciation_start_date' => '\DateTime',
        'revision_sequence_nbr' => 'int',
        'quantity' => 'double',
        'capital_expenses' => 'string',
        'bonus_depreciated_amount' => 'double',
        'bonus_depreciation' => 'string',
        'factor' => 'string',
        'depreciation_percentage' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'asset' => null,
        'book' => null,
        'organization_code' => null,
        'depreciation_method' => null,
        'depreciable' => null,
        'in_service_date' => 'date-time',
        'last_depreciated' => 'date-time',
        'depreciate_to_date' => 'date-time',
        'book_value' => 'double',
        'accumulated_depreciation' => 'double',
        'salvage_value' => 'double',
        'fully_depreciated' => null,
        'net_book_value' => 'double',
        'enteredon' => 'date-time',
        'entered_by' => null,
        'changed_on' => 'date-time',
        'changed_by' => null,
        'life_years' => 'int32',
        'life_months' => 'int32',
        'convention' => null,
        'switch_to_straight_line' => null,
        'depreciation_start_date' => 'date-time',
        'revision_sequence_nbr' => 'int32',
        'quantity' => 'double',
        'capital_expenses' => null,
        'bonus_depreciated_amount' => 'double',
        'bonus_depreciation' => null,
        'factor' => null,
        'depreciation_percentage' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'asset' => 'Asset',
        'book' => 'Book',
        'organization_code' => 'OrganizationCode',
        'depreciation_method' => 'DepreciationMethod',
        'depreciable' => 'Depreciable',
        'in_service_date' => 'InServiceDate',
        'last_depreciated' => 'LastDepreciated',
        'depreciate_to_date' => 'DepreciateToDate',
        'book_value' => 'BookValue',
        'accumulated_depreciation' => 'AccumulatedDepreciation',
        'salvage_value' => 'SalvageValue',
        'fully_depreciated' => 'FullyDepreciated',
        'net_book_value' => 'NetBookValue',
        'enteredon' => 'Enteredon',
        'entered_by' => 'EnteredBy',
        'changed_on' => 'ChangedOn',
        'changed_by' => 'ChangedBy',
        'life_years' => 'LifeYears',
        'life_months' => 'LifeMonths',
        'convention' => 'Convention',
        'switch_to_straight_line' => 'SwitchToStraightLine',
        'depreciation_start_date' => 'DepreciationStartDate',
        'revision_sequence_nbr' => 'RevisionSequenceNbr',
        'quantity' => 'Quantity',
        'capital_expenses' => 'CapitalExpenses',
        'bonus_depreciated_amount' => 'BonusDepreciatedAmount',
        'bonus_depreciation' => 'BonusDepreciation',
        'factor' => 'Factor',
        'depreciation_percentage' => 'DepreciationPercentage'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'asset' => 'setAsset',
        'book' => 'setBook',
        'organization_code' => 'setOrganizationCode',
        'depreciation_method' => 'setDepreciationMethod',
        'depreciable' => 'setDepreciable',
        'in_service_date' => 'setInServiceDate',
        'last_depreciated' => 'setLastDepreciated',
        'depreciate_to_date' => 'setDepreciateToDate',
        'book_value' => 'setBookValue',
        'accumulated_depreciation' => 'setAccumulatedDepreciation',
        'salvage_value' => 'setSalvageValue',
        'fully_depreciated' => 'setFullyDepreciated',
        'net_book_value' => 'setNetBookValue',
        'enteredon' => 'setEnteredon',
        'entered_by' => 'setEnteredBy',
        'changed_on' => 'setChangedOn',
        'changed_by' => 'setChangedBy',
        'life_years' => 'setLifeYears',
        'life_months' => 'setLifeMonths',
        'convention' => 'setConvention',
        'switch_to_straight_line' => 'setSwitchToStraightLine',
        'depreciation_start_date' => 'setDepreciationStartDate',
        'revision_sequence_nbr' => 'setRevisionSequenceNbr',
        'quantity' => 'setQuantity',
        'capital_expenses' => 'setCapitalExpenses',
        'bonus_depreciated_amount' => 'setBonusDepreciatedAmount',
        'bonus_depreciation' => 'setBonusDepreciation',
        'factor' => 'setFactor',
        'depreciation_percentage' => 'setDepreciationPercentage'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'asset' => 'getAsset',
        'book' => 'getBook',
        'organization_code' => 'getOrganizationCode',
        'depreciation_method' => 'getDepreciationMethod',
        'depreciable' => 'getDepreciable',
        'in_service_date' => 'getInServiceDate',
        'last_depreciated' => 'getLastDepreciated',
        'depreciate_to_date' => 'getDepreciateToDate',
        'book_value' => 'getBookValue',
        'accumulated_depreciation' => 'getAccumulatedDepreciation',
        'salvage_value' => 'getSalvageValue',
        'fully_depreciated' => 'getFullyDepreciated',
        'net_book_value' => 'getNetBookValue',
        'enteredon' => 'getEnteredon',
        'entered_by' => 'getEnteredBy',
        'changed_on' => 'getChangedOn',
        'changed_by' => 'getChangedBy',
        'life_years' => 'getLifeYears',
        'life_months' => 'getLifeMonths',
        'convention' => 'getConvention',
        'switch_to_straight_line' => 'getSwitchToStraightLine',
        'depreciation_start_date' => 'getDepreciationStartDate',
        'revision_sequence_nbr' => 'getRevisionSequenceNbr',
        'quantity' => 'getQuantity',
        'capital_expenses' => 'getCapitalExpenses',
        'bonus_depreciated_amount' => 'getBonusDepreciatedAmount',
        'bonus_depreciation' => 'getBonusDepreciation',
        'factor' => 'getFactor',
        'depreciation_percentage' => 'getDepreciationPercentage'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['asset'] = isset($data['asset']) ? $data['asset'] : null;
        $this->container['book'] = isset($data['book']) ? $data['book'] : null;
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['depreciation_method'] = isset($data['depreciation_method']) ? $data['depreciation_method'] : null;
        $this->container['depreciable'] = isset($data['depreciable']) ? $data['depreciable'] : null;
        $this->container['in_service_date'] = isset($data['in_service_date']) ? $data['in_service_date'] : null;
        $this->container['last_depreciated'] = isset($data['last_depreciated']) ? $data['last_depreciated'] : null;
        $this->container['depreciate_to_date'] = isset($data['depreciate_to_date']) ? $data['depreciate_to_date'] : null;
        $this->container['book_value'] = isset($data['book_value']) ? $data['book_value'] : null;
        $this->container['accumulated_depreciation'] = isset($data['accumulated_depreciation']) ? $data['accumulated_depreciation'] : null;
        $this->container['salvage_value'] = isset($data['salvage_value']) ? $data['salvage_value'] : null;
        $this->container['fully_depreciated'] = isset($data['fully_depreciated']) ? $data['fully_depreciated'] : null;
        $this->container['net_book_value'] = isset($data['net_book_value']) ? $data['net_book_value'] : null;
        $this->container['enteredon'] = isset($data['enteredon']) ? $data['enteredon'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['life_years'] = isset($data['life_years']) ? $data['life_years'] : null;
        $this->container['life_months'] = isset($data['life_months']) ? $data['life_months'] : null;
        $this->container['convention'] = isset($data['convention']) ? $data['convention'] : null;
        $this->container['switch_to_straight_line'] = isset($data['switch_to_straight_line']) ? $data['switch_to_straight_line'] : null;
        $this->container['depreciation_start_date'] = isset($data['depreciation_start_date']) ? $data['depreciation_start_date'] : null;
        $this->container['revision_sequence_nbr'] = isset($data['revision_sequence_nbr']) ? $data['revision_sequence_nbr'] : null;
        $this->container['quantity'] = isset($data['quantity']) ? $data['quantity'] : null;
        $this->container['capital_expenses'] = isset($data['capital_expenses']) ? $data['capital_expenses'] : null;
        $this->container['bonus_depreciated_amount'] = isset($data['bonus_depreciated_amount']) ? $data['bonus_depreciated_amount'] : null;
        $this->container['bonus_depreciation'] = isset($data['bonus_depreciation']) ? $data['bonus_depreciation'] : null;
        $this->container['factor'] = isset($data['factor']) ? $data['factor'] : null;
        $this->container['depreciation_percentage'] = isset($data['depreciation_percentage']) ? $data['depreciation_percentage'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['asset'] === null) {
            $invalidProperties[] = "'asset' can't be null";
        }
        if ($this->container['book'] === null) {
            $invalidProperties[] = "'book' can't be null";
        }
        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['depreciation_method'] === null) {
            $invalidProperties[] = "'depreciation_method' can't be null";
        }
        if ($this->container['depreciable'] === null) {
            $invalidProperties[] = "'depreciable' can't be null";
        }
        if ($this->container['in_service_date'] === null) {
            $invalidProperties[] = "'in_service_date' can't be null";
        }
        if ($this->container['last_depreciated'] === null) {
            $invalidProperties[] = "'last_depreciated' can't be null";
        }
        if ($this->container['depreciate_to_date'] === null) {
            $invalidProperties[] = "'depreciate_to_date' can't be null";
        }
        if ($this->container['book_value'] === null) {
            $invalidProperties[] = "'book_value' can't be null";
        }
        if ($this->container['accumulated_depreciation'] === null) {
            $invalidProperties[] = "'accumulated_depreciation' can't be null";
        }
        if ($this->container['salvage_value'] === null) {
            $invalidProperties[] = "'salvage_value' can't be null";
        }
        if ($this->container['fully_depreciated'] === null) {
            $invalidProperties[] = "'fully_depreciated' can't be null";
        }
        if ($this->container['net_book_value'] === null) {
            $invalidProperties[] = "'net_book_value' can't be null";
        }
        if ($this->container['enteredon'] === null) {
            $invalidProperties[] = "'enteredon' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['life_years'] === null) {
            $invalidProperties[] = "'life_years' can't be null";
        }
        if ($this->container['life_months'] === null) {
            $invalidProperties[] = "'life_months' can't be null";
        }
        if ($this->container['convention'] === null) {
            $invalidProperties[] = "'convention' can't be null";
        }
        if ($this->container['switch_to_straight_line'] === null) {
            $invalidProperties[] = "'switch_to_straight_line' can't be null";
        }
        if ($this->container['depreciation_start_date'] === null) {
            $invalidProperties[] = "'depreciation_start_date' can't be null";
        }
        if ($this->container['revision_sequence_nbr'] === null) {
            $invalidProperties[] = "'revision_sequence_nbr' can't be null";
        }
        if ($this->container['quantity'] === null) {
            $invalidProperties[] = "'quantity' can't be null";
        }
        if ($this->container['capital_expenses'] === null) {
            $invalidProperties[] = "'capital_expenses' can't be null";
        }
        if ($this->container['bonus_depreciated_amount'] === null) {
            $invalidProperties[] = "'bonus_depreciated_amount' can't be null";
        }
        if ($this->container['bonus_depreciation'] === null) {
            $invalidProperties[] = "'bonus_depreciation' can't be null";
        }
        if ($this->container['factor'] === null) {
            $invalidProperties[] = "'factor' can't be null";
        }
        if ($this->container['depreciation_percentage'] === null) {
            $invalidProperties[] = "'depreciation_percentage' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets asset
     *
     * @return string
     */
    public function getAsset()
    {
        return $this->container['asset'];
    }

    /**
     * Sets asset
     *
     * @param string $asset <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_ASSET_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAsset($asset)
    {
        $this->container['asset'] = $asset;

        return $this;
    }

    /**
     * Gets book
     *
     * @return string
     */
    public function getBook()
    {
        return $this->container['book'];
    }

    /**
     * Sets book
     *
     * @param string $book <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_BOOK_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBook($book)
    {
        $this->container['book'] = $book;

        return $this;
    }

    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets depreciation_method
     *
     * @return string
     */
    public function getDepreciationMethod()
    {
        return $this->container['depreciation_method'];
    }

    /**
     * Sets depreciation_method
     *
     * @param string $depreciation_method <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_DEPR_METHOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepreciationMethod($depreciation_method)
    {
        $this->container['depreciation_method'] = $depreciation_method;

        return $this;
    }

    /**
     * Gets depreciable
     *
     * @return string
     */
    public function getDepreciable()
    {
        return $this->container['depreciable'];
    }

    /**
     * Sets depreciable
     *
     * @param string $depreciable <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_DEPRECIATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepreciable($depreciable)
    {
        $this->container['depreciable'] = $depreciable;

        return $this;
    }

    /**
     * Gets in_service_date
     *
     * @return \DateTime
     */
    public function getInServiceDate()
    {
        return $this->container['in_service_date'];
    }

    /**
     * Sets in_service_date
     *
     * @param \DateTime $in_service_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_INSERV_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInServiceDate($in_service_date)
    {
        $this->container['in_service_date'] = $in_service_date;

        return $this;
    }

    /**
     * Gets last_depreciated
     *
     * @return \DateTime
     */
    public function getLastDepreciated()
    {
        return $this->container['last_depreciated'];
    }

    /**
     * Sets last_depreciated
     *
     * @param \DateTime $last_depreciated <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_DEPR_THRU_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastDepreciated($last_depreciated)
    {
        $this->container['last_depreciated'] = $last_depreciated;

        return $this;
    }

    /**
     * Gets depreciate_to_date
     *
     * @return \DateTime
     */
    public function getDepreciateToDate()
    {
        return $this->container['depreciate_to_date'];
    }

    /**
     * Sets depreciate_to_date
     *
     * @param \DateTime $depreciate_to_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_DEPR_TO_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepreciateToDate($depreciate_to_date)
    {
        $this->container['depreciate_to_date'] = $depreciate_to_date;

        return $this;
    }

    /**
     * Gets book_value
     *
     * @return double
     */
    public function getBookValue()
    {
        return $this->container['book_value'];
    }

    /**
     * Sets book_value
     *
     * @param double $book_value <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_COST_BASIS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBookValue($book_value)
    {
        $this->container['book_value'] = $book_value;

        return $this;
    }

    /**
     * Gets accumulated_depreciation
     *
     * @return double
     */
    public function getAccumulatedDepreciation()
    {
        return $this->container['accumulated_depreciation'];
    }

    /**
     * Sets accumulated_depreciation
     *
     * @param double $accumulated_depreciation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_DEPR_TOTAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccumulatedDepreciation($accumulated_depreciation)
    {
        $this->container['accumulated_depreciation'] = $accumulated_depreciation;

        return $this;
    }

    /**
     * Gets salvage_value
     *
     * @return double
     */
    public function getSalvageValue()
    {
        return $this->container['salvage_value'];
    }

    /**
     * Sets salvage_value
     *
     * @param double $salvage_value <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_SALVAGE_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSalvageValue($salvage_value)
    {
        $this->container['salvage_value'] = $salvage_value;

        return $this;
    }

    /**
     * Gets fully_depreciated
     *
     * @return string
     */
    public function getFullyDepreciated()
    {
        return $this->container['fully_depreciated'];
    }

    /**
     * Sets fully_depreciated
     *
     * @param string $fully_depreciated <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_FULLY_DEPR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFullyDepreciated($fully_depreciated)
    {
        $this->container['fully_depreciated'] = $fully_depreciated;

        return $this;
    }

    /**
     * Gets net_book_value
     *
     * @return double
     */
    public function getNetBookValue()
    {
        return $this->container['net_book_value'];
    }

    /**
     * Sets net_book_value
     *
     * @param double $net_book_value <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_NET_BOOK_VAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNetBookValue($net_book_value)
    {
        $this->container['net_book_value'] = $net_book_value;

        return $this;
    }

    /**
     * Gets enteredon
     *
     * @return \DateTime
     */
    public function getEnteredon()
    {
        return $this->container['enteredon'];
    }

    /**
     * Sets enteredon
     *
     * @param \DateTime $enteredon <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredon($enteredon)
    {
        $this->container['enteredon'] = $enteredon;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets life_years
     *
     * @return int
     */
    public function getLifeYears()
    {
        return $this->container['life_years'];
    }

    /**
     * Sets life_years
     *
     * @param int $life_years <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_LIFE_YEARS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLifeYears($life_years)
    {
        $this->container['life_years'] = $life_years;

        return $this;
    }

    /**
     * Gets life_months
     *
     * @return int
     */
    public function getLifeMonths()
    {
        return $this->container['life_months'];
    }

    /**
     * Sets life_months
     *
     * @param int $life_months <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_LIFE_MONTHS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLifeMonths($life_months)
    {
        $this->container['life_months'] = $life_months;

        return $this;
    }

    /**
     * Gets convention
     *
     * @return string
     */
    public function getConvention()
    {
        return $this->container['convention'];
    }

    /**
     * Sets convention
     *
     * @param string $convention <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_AVG_CONVENTION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setConvention($convention)
    {
        $this->container['convention'] = $convention;

        return $this;
    }

    /**
     * Gets switch_to_straight_line
     *
     * @return string
     */
    public function getSwitchToStraightLine()
    {
        return $this->container['switch_to_straight_line'];
    }

    /**
     * Sets switch_to_straight_line
     *
     * @param string $switch_to_straight_line <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_SLN_SWITCH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSwitchToStraightLine($switch_to_straight_line)
    {
        $this->container['switch_to_straight_line'] = $switch_to_straight_line;

        return $this;
    }

    /**
     * Gets depreciation_start_date
     *
     * @return \DateTime
     */
    public function getDepreciationStartDate()
    {
        return $this->container['depreciation_start_date'];
    }

    /**
     * Sets depreciation_start_date
     *
     * @param \DateTime $depreciation_start_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_DEPR_START_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepreciationStartDate($depreciation_start_date)
    {
        $this->container['depreciation_start_date'] = $depreciation_start_date;

        return $this;
    }

    /**
     * Gets revision_sequence_nbr
     *
     * @return int
     */
    public function getRevisionSequenceNbr()
    {
        return $this->container['revision_sequence_nbr'];
    }

    /**
     * Sets revision_sequence_nbr
     *
     * @param int $revision_sequence_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_REVISION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRevisionSequenceNbr($revision_sequence_nbr)
    {
        $this->container['revision_sequence_nbr'] = $revision_sequence_nbr;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return double
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param double $quantity <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_QTY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets capital_expenses
     *
     * @return string
     */
    public function getCapitalExpenses()
    {
        return $this->container['capital_expenses'];
    }

    /**
     * Sets capital_expenses
     *
     * @param string $capital_expenses <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_CAP_EXP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCapitalExpenses($capital_expenses)
    {
        $this->container['capital_expenses'] = $capital_expenses;

        return $this;
    }

    /**
     * Gets bonus_depreciated_amount
     *
     * @return double
     */
    public function getBonusDepreciatedAmount()
    {
        return $this->container['bonus_depreciated_amount'];
    }

    /**
     * Sets bonus_depreciated_amount
     *
     * @param double $bonus_depreciated_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_BONUS_DEPR_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBonusDepreciatedAmount($bonus_depreciated_amount)
    {
        $this->container['bonus_depreciated_amount'] = $bonus_depreciated_amount;

        return $this;
    }

    /**
     * Gets bonus_depreciation
     *
     * @return string
     */
    public function getBonusDepreciation()
    {
        return $this->container['bonus_depreciation'];
    }

    /**
     * Sets bonus_depreciation
     *
     * @param string $bonus_depreciation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_BONUS_DEPR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBonusDepreciation($bonus_depreciation)
    {
        $this->container['bonus_depreciation'] = $bonus_depreciation;

        return $this;
    }

    /**
     * Gets factor
     *
     * @return string
     */
    public function getFactor()
    {
        return $this->container['factor'];
    }

    /**
     * Sets factor
     *
     * @param string $factor <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_FACTOR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFactor($factor)
    {
        $this->container['factor'] = $factor;

        return $this;
    }

    /**
     * Gets depreciation_percentage
     *
     * @return double
     */
    public function getDepreciationPercentage()
    {
        return $this->container['depreciation_percentage'];
    }

    /**
     * Sets depreciation_percentage
     *
     * @param double $depreciation_percentage <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX111_DEPR_PCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 52  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepreciationPercentage($depreciation_percentage)
    {
        $this->container['depreciation_percentage'] = $depreciation_percentage;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


