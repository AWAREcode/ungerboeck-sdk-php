<?php
/**
 * ReceivableTransactionTypesModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * ReceivableTransactionTypesModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ReceivableTransactionTypesModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ReceivableTransactionTypesModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'tsm' => 'string',
        'organization' => 'string',
        'type' => 'string',
        'source' => 'string',
        'method' => 'string',
        'description' => 'string',
        'status' => 'string',
        'memo_payment' => 'string',
        'indicator' => 'string',
        'additional_gl_entry' => 'string',
        'entry_trans_type' => 'string',
        'currency' => 'string',
        'gl_transfer' => 'string',
        'group' => 'string',
        'finance_charge' => 'string',
        'credit_card_first_position' => 'string',
        'entered_on' => '\DateTime',
        'entered_by_name' => 'string',
        'changed_on' => '\DateTime',
        'changed_by_name' => 'string',
        'allow_final_invoice' => 'string',
        'refund' => 'string',
        'alternate_description1' => 'string',
        'alternate_description2' => 'string',
        'alternate_description3' => 'string',
        'alternate_description4' => 'string',
        'alternate_description5' => 'string',
        'source_default' => 'string',
        'authorize' => 'string',
        'gl_distribution' => 'string',
        'payor_info' => 'string',
        'fee_transacton_type' => 'string',
        'fee_basis' => 'int',
        'fee_amount' => 'double',
        'credit_card_authorization_configuration' => 'int',
        'payment_gateway_configuration' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'tsm' => null,
        'organization' => null,
        'type' => null,
        'source' => null,
        'method' => null,
        'description' => null,
        'status' => null,
        'memo_payment' => null,
        'indicator' => null,
        'additional_gl_entry' => null,
        'entry_trans_type' => null,
        'currency' => null,
        'gl_transfer' => null,
        'group' => null,
        'finance_charge' => null,
        'credit_card_first_position' => null,
        'entered_on' => 'date-time',
        'entered_by_name' => null,
        'changed_on' => 'date-time',
        'changed_by_name' => null,
        'allow_final_invoice' => null,
        'refund' => null,
        'alternate_description1' => null,
        'alternate_description2' => null,
        'alternate_description3' => null,
        'alternate_description4' => null,
        'alternate_description5' => null,
        'source_default' => null,
        'authorize' => null,
        'gl_distribution' => null,
        'payor_info' => null,
        'fee_transacton_type' => null,
        'fee_basis' => 'int32',
        'fee_amount' => 'double',
        'credit_card_authorization_configuration' => 'int32',
        'payment_gateway_configuration' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'tsm' => 'TSM',
        'organization' => 'Organization',
        'type' => 'Type',
        'source' => 'Source',
        'method' => 'Method',
        'description' => 'Description',
        'status' => 'Status',
        'memo_payment' => 'MemoPayment',
        'indicator' => 'Indicator',
        'additional_gl_entry' => 'AdditionalGLEntry',
        'entry_trans_type' => 'EntryTransType',
        'currency' => 'Currency',
        'gl_transfer' => 'GLTransfer',
        'group' => 'Group',
        'finance_charge' => 'FinanceCharge',
        'credit_card_first_position' => 'CreditCardFirstPosition',
        'entered_on' => 'EnteredOn',
        'entered_by_name' => 'EnteredByName',
        'changed_on' => 'ChangedOn',
        'changed_by_name' => 'ChangedByName',
        'allow_final_invoice' => 'AllowFinalInvoice',
        'refund' => 'Refund',
        'alternate_description1' => 'AlternateDescription1',
        'alternate_description2' => 'AlternateDescription2',
        'alternate_description3' => 'AlternateDescription3',
        'alternate_description4' => 'AlternateDescription4',
        'alternate_description5' => 'AlternateDescription5',
        'source_default' => 'SourceDefault',
        'authorize' => 'Authorize',
        'gl_distribution' => 'GLDistribution',
        'payor_info' => 'PayorInfo',
        'fee_transacton_type' => 'FeeTransactonType',
        'fee_basis' => 'FeeBasis',
        'fee_amount' => 'FeeAmount',
        'credit_card_authorization_configuration' => 'CreditCardAuthorizationConfiguration',
        'payment_gateway_configuration' => 'PaymentGatewayConfiguration'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'tsm' => 'setTsm',
        'organization' => 'setOrganization',
        'type' => 'setType',
        'source' => 'setSource',
        'method' => 'setMethod',
        'description' => 'setDescription',
        'status' => 'setStatus',
        'memo_payment' => 'setMemoPayment',
        'indicator' => 'setIndicator',
        'additional_gl_entry' => 'setAdditionalGlEntry',
        'entry_trans_type' => 'setEntryTransType',
        'currency' => 'setCurrency',
        'gl_transfer' => 'setGlTransfer',
        'group' => 'setGroup',
        'finance_charge' => 'setFinanceCharge',
        'credit_card_first_position' => 'setCreditCardFirstPosition',
        'entered_on' => 'setEnteredOn',
        'entered_by_name' => 'setEnteredByName',
        'changed_on' => 'setChangedOn',
        'changed_by_name' => 'setChangedByName',
        'allow_final_invoice' => 'setAllowFinalInvoice',
        'refund' => 'setRefund',
        'alternate_description1' => 'setAlternateDescription1',
        'alternate_description2' => 'setAlternateDescription2',
        'alternate_description3' => 'setAlternateDescription3',
        'alternate_description4' => 'setAlternateDescription4',
        'alternate_description5' => 'setAlternateDescription5',
        'source_default' => 'setSourceDefault',
        'authorize' => 'setAuthorize',
        'gl_distribution' => 'setGlDistribution',
        'payor_info' => 'setPayorInfo',
        'fee_transacton_type' => 'setFeeTransactonType',
        'fee_basis' => 'setFeeBasis',
        'fee_amount' => 'setFeeAmount',
        'credit_card_authorization_configuration' => 'setCreditCardAuthorizationConfiguration',
        'payment_gateway_configuration' => 'setPaymentGatewayConfiguration'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'tsm' => 'getTsm',
        'organization' => 'getOrganization',
        'type' => 'getType',
        'source' => 'getSource',
        'method' => 'getMethod',
        'description' => 'getDescription',
        'status' => 'getStatus',
        'memo_payment' => 'getMemoPayment',
        'indicator' => 'getIndicator',
        'additional_gl_entry' => 'getAdditionalGlEntry',
        'entry_trans_type' => 'getEntryTransType',
        'currency' => 'getCurrency',
        'gl_transfer' => 'getGlTransfer',
        'group' => 'getGroup',
        'finance_charge' => 'getFinanceCharge',
        'credit_card_first_position' => 'getCreditCardFirstPosition',
        'entered_on' => 'getEnteredOn',
        'entered_by_name' => 'getEnteredByName',
        'changed_on' => 'getChangedOn',
        'changed_by_name' => 'getChangedByName',
        'allow_final_invoice' => 'getAllowFinalInvoice',
        'refund' => 'getRefund',
        'alternate_description1' => 'getAlternateDescription1',
        'alternate_description2' => 'getAlternateDescription2',
        'alternate_description3' => 'getAlternateDescription3',
        'alternate_description4' => 'getAlternateDescription4',
        'alternate_description5' => 'getAlternateDescription5',
        'source_default' => 'getSourceDefault',
        'authorize' => 'getAuthorize',
        'gl_distribution' => 'getGlDistribution',
        'payor_info' => 'getPayorInfo',
        'fee_transacton_type' => 'getFeeTransactonType',
        'fee_basis' => 'getFeeBasis',
        'fee_amount' => 'getFeeAmount',
        'credit_card_authorization_configuration' => 'getCreditCardAuthorizationConfiguration',
        'payment_gateway_configuration' => 'getPaymentGatewayConfiguration'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['tsm'] = isset($data['tsm']) ? $data['tsm'] : null;
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['source'] = isset($data['source']) ? $data['source'] : null;
        $this->container['method'] = isset($data['method']) ? $data['method'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['memo_payment'] = isset($data['memo_payment']) ? $data['memo_payment'] : null;
        $this->container['indicator'] = isset($data['indicator']) ? $data['indicator'] : null;
        $this->container['additional_gl_entry'] = isset($data['additional_gl_entry']) ? $data['additional_gl_entry'] : null;
        $this->container['entry_trans_type'] = isset($data['entry_trans_type']) ? $data['entry_trans_type'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['gl_transfer'] = isset($data['gl_transfer']) ? $data['gl_transfer'] : null;
        $this->container['group'] = isset($data['group']) ? $data['group'] : null;
        $this->container['finance_charge'] = isset($data['finance_charge']) ? $data['finance_charge'] : null;
        $this->container['credit_card_first_position'] = isset($data['credit_card_first_position']) ? $data['credit_card_first_position'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['entered_by_name'] = isset($data['entered_by_name']) ? $data['entered_by_name'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['changed_by_name'] = isset($data['changed_by_name']) ? $data['changed_by_name'] : null;
        $this->container['allow_final_invoice'] = isset($data['allow_final_invoice']) ? $data['allow_final_invoice'] : null;
        $this->container['refund'] = isset($data['refund']) ? $data['refund'] : null;
        $this->container['alternate_description1'] = isset($data['alternate_description1']) ? $data['alternate_description1'] : null;
        $this->container['alternate_description2'] = isset($data['alternate_description2']) ? $data['alternate_description2'] : null;
        $this->container['alternate_description3'] = isset($data['alternate_description3']) ? $data['alternate_description3'] : null;
        $this->container['alternate_description4'] = isset($data['alternate_description4']) ? $data['alternate_description4'] : null;
        $this->container['alternate_description5'] = isset($data['alternate_description5']) ? $data['alternate_description5'] : null;
        $this->container['source_default'] = isset($data['source_default']) ? $data['source_default'] : null;
        $this->container['authorize'] = isset($data['authorize']) ? $data['authorize'] : null;
        $this->container['gl_distribution'] = isset($data['gl_distribution']) ? $data['gl_distribution'] : null;
        $this->container['payor_info'] = isset($data['payor_info']) ? $data['payor_info'] : null;
        $this->container['fee_transacton_type'] = isset($data['fee_transacton_type']) ? $data['fee_transacton_type'] : null;
        $this->container['fee_basis'] = isset($data['fee_basis']) ? $data['fee_basis'] : null;
        $this->container['fee_amount'] = isset($data['fee_amount']) ? $data['fee_amount'] : null;
        $this->container['credit_card_authorization_configuration'] = isset($data['credit_card_authorization_configuration']) ? $data['credit_card_authorization_configuration'] : null;
        $this->container['payment_gateway_configuration'] = isset($data['payment_gateway_configuration']) ? $data['payment_gateway_configuration'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['tsm'] === null) {
            $invalidProperties[] = "'tsm' can't be null";
        }
        if ($this->container['organization'] === null) {
            $invalidProperties[] = "'organization' can't be null";
        }
        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['source'] === null) {
            $invalidProperties[] = "'source' can't be null";
        }
        if ($this->container['method'] === null) {
            $invalidProperties[] = "'method' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['memo_payment'] === null) {
            $invalidProperties[] = "'memo_payment' can't be null";
        }
        if ($this->container['indicator'] === null) {
            $invalidProperties[] = "'indicator' can't be null";
        }
        if ($this->container['additional_gl_entry'] === null) {
            $invalidProperties[] = "'additional_gl_entry' can't be null";
        }
        if ($this->container['entry_trans_type'] === null) {
            $invalidProperties[] = "'entry_trans_type' can't be null";
        }
        if ($this->container['currency'] === null) {
            $invalidProperties[] = "'currency' can't be null";
        }
        if ($this->container['gl_transfer'] === null) {
            $invalidProperties[] = "'gl_transfer' can't be null";
        }
        if ($this->container['group'] === null) {
            $invalidProperties[] = "'group' can't be null";
        }
        if ($this->container['finance_charge'] === null) {
            $invalidProperties[] = "'finance_charge' can't be null";
        }
        if ($this->container['credit_card_first_position'] === null) {
            $invalidProperties[] = "'credit_card_first_position' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['entered_by_name'] === null) {
            $invalidProperties[] = "'entered_by_name' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['changed_by_name'] === null) {
            $invalidProperties[] = "'changed_by_name' can't be null";
        }
        if ($this->container['allow_final_invoice'] === null) {
            $invalidProperties[] = "'allow_final_invoice' can't be null";
        }
        if ($this->container['refund'] === null) {
            $invalidProperties[] = "'refund' can't be null";
        }
        if ($this->container['alternate_description1'] === null) {
            $invalidProperties[] = "'alternate_description1' can't be null";
        }
        if ($this->container['alternate_description2'] === null) {
            $invalidProperties[] = "'alternate_description2' can't be null";
        }
        if ($this->container['alternate_description3'] === null) {
            $invalidProperties[] = "'alternate_description3' can't be null";
        }
        if ($this->container['alternate_description4'] === null) {
            $invalidProperties[] = "'alternate_description4' can't be null";
        }
        if ($this->container['alternate_description5'] === null) {
            $invalidProperties[] = "'alternate_description5' can't be null";
        }
        if ($this->container['source_default'] === null) {
            $invalidProperties[] = "'source_default' can't be null";
        }
        if ($this->container['authorize'] === null) {
            $invalidProperties[] = "'authorize' can't be null";
        }
        if ($this->container['gl_distribution'] === null) {
            $invalidProperties[] = "'gl_distribution' can't be null";
        }
        if ($this->container['payor_info'] === null) {
            $invalidProperties[] = "'payor_info' can't be null";
        }
        if ($this->container['fee_transacton_type'] === null) {
            $invalidProperties[] = "'fee_transacton_type' can't be null";
        }
        if ($this->container['fee_basis'] === null) {
            $invalidProperties[] = "'fee_basis' can't be null";
        }
        if ($this->container['fee_amount'] === null) {
            $invalidProperties[] = "'fee_amount' can't be null";
        }
        if ($this->container['credit_card_authorization_configuration'] === null) {
            $invalidProperties[] = "'credit_card_authorization_configuration' can't be null";
        }
        if ($this->container['payment_gateway_configuration'] === null) {
            $invalidProperties[] = "'payment_gateway_configuration' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets tsm
     *
     * @return string
     */
    public function getTsm()
    {
        return $this->container['tsm'];
    }

    /**
     * Sets tsm
     *
     * @param string $tsm <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_TSM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 11  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTsm($tsm)
    {
        $this->container['tsm'] = $tsm;

        return $this;
    }

    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_TRANS_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets source
     *
     * @return string
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param string $source <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_TRANS_SOURCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSource($source)
    {
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets method
     *
     * @return string
     */
    public function getMethod()
    {
        return $this->container['method'];
    }

    /**
     * Sets method
     *
     * @param string $method <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_TRANS_METHOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMethod($method)
    {
        $this->container['method'] = $method;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_TRANS_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets memo_payment
     *
     * @return string
     */
    public function getMemoPayment()
    {
        return $this->container['memo_payment'];
    }

    /**
     * Sets memo_payment
     *
     * @param string $memo_payment <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_MEMO_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMemoPayment($memo_payment)
    {
        $this->container['memo_payment'] = $memo_payment;

        return $this;
    }

    /**
     * Gets indicator
     *
     * @return string
     */
    public function getIndicator()
    {
        return $this->container['indicator'];
    }

    /**
     * Sets indicator
     *
     * @param string $indicator <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_TRANS_IND  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIndicator($indicator)
    {
        $this->container['indicator'] = $indicator;

        return $this;
    }

    /**
     * Gets additional_gl_entry
     *
     * @return string
     */
    public function getAdditionalGlEntry()
    {
        return $this->container['additional_gl_entry'];
    }

    /**
     * Sets additional_gl_entry
     *
     * @param string $additional_gl_entry <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_REV_DEPOSIT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAdditionalGlEntry($additional_gl_entry)
    {
        $this->container['additional_gl_entry'] = $additional_gl_entry;

        return $this;
    }

    /**
     * Gets entry_trans_type
     *
     * @return string
     */
    public function getEntryTransType()
    {
        return $this->container['entry_trans_type'];
    }

    /**
     * Sets entry_trans_type
     *
     * @param string $entry_trans_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_REV_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEntryTransType($entry_trans_type)
    {
        $this->container['entry_trans_type'] = $entry_trans_type;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_CURRENCY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets gl_transfer
     *
     * @return string
     */
    public function getGlTransfer()
    {
        return $this->container['gl_transfer'];
    }

    /**
     * Sets gl_transfer
     *
     * @param string $gl_transfer <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_TRANSFER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlTransfer($gl_transfer)
    {
        $this->container['gl_transfer'] = $gl_transfer;

        return $this;
    }

    /**
     * Gets group
     *
     * @return string
     */
    public function getGroup()
    {
        return $this->container['group'];
    }

    /**
     * Sets group
     *
     * @param string $group <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_GROUP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGroup($group)
    {
        $this->container['group'] = $group;

        return $this;
    }

    /**
     * Gets finance_charge
     *
     * @return string
     */
    public function getFinanceCharge()
    {
        return $this->container['finance_charge'];
    }

    /**
     * Sets finance_charge
     *
     * @param string $finance_charge <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_LATE_CHARGE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFinanceCharge($finance_charge)
    {
        $this->container['finance_charge'] = $finance_charge;

        return $this;
    }

    /**
     * Gets credit_card_first_position
     *
     * @return string
     */
    public function getCreditCardFirstPosition()
    {
        return $this->container['credit_card_first_position'];
    }

    /**
     * Sets credit_card_first_position
     *
     * @param string $credit_card_first_position <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_CC_FIRST_NUM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCreditCardFirstPosition($credit_card_first_position)
    {
        $this->container['credit_card_first_position'] = $credit_card_first_position;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets entered_by_name
     *
     * @return string
     */
    public function getEnteredByName()
    {
        return $this->container['entered_by_name'];
    }

    /**
     * Sets entered_by_name
     *
     * @param string $entered_by_name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredByName($entered_by_name)
    {
        $this->container['entered_by_name'] = $entered_by_name;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets changed_by_name
     *
     * @return string
     */
    public function getChangedByName()
    {
        return $this->container['changed_by_name'];
    }

    /**
     * Sets changed_by_name
     *
     * @param string $changed_by_name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedByName($changed_by_name)
    {
        $this->container['changed_by_name'] = $changed_by_name;

        return $this;
    }

    /**
     * Gets allow_final_invoice
     *
     * @return string
     */
    public function getAllowFinalInvoice()
    {
        return $this->container['allow_final_invoice'];
    }

    /**
     * Sets allow_final_invoice
     *
     * @param string $allow_final_invoice <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_ALLOW_FINAL_INV  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAllowFinalInvoice($allow_final_invoice)
    {
        $this->container['allow_final_invoice'] = $allow_final_invoice;

        return $this;
    }

    /**
     * Gets refund
     *
     * @return string
     */
    public function getRefund()
    {
        return $this->container['refund'];
    }

    /**
     * Sets refund
     *
     * @param string $refund <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_REFUND  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRefund($refund)
    {
        $this->container['refund'] = $refund;

        return $this;
    }

    /**
     * Gets alternate_description1
     *
     * @return string
     */
    public function getAlternateDescription1()
    {
        return $this->container['alternate_description1'];
    }

    /**
     * Sets alternate_description1
     *
     * @param string $alternate_description1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_ALT_TRANS_DESC_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription1($alternate_description1)
    {
        $this->container['alternate_description1'] = $alternate_description1;

        return $this;
    }

    /**
     * Gets alternate_description2
     *
     * @return string
     */
    public function getAlternateDescription2()
    {
        return $this->container['alternate_description2'];
    }

    /**
     * Sets alternate_description2
     *
     * @param string $alternate_description2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_ALT_TRANS_DESC_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription2($alternate_description2)
    {
        $this->container['alternate_description2'] = $alternate_description2;

        return $this;
    }

    /**
     * Gets alternate_description3
     *
     * @return string
     */
    public function getAlternateDescription3()
    {
        return $this->container['alternate_description3'];
    }

    /**
     * Sets alternate_description3
     *
     * @param string $alternate_description3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_ALT_TRANS_DESC_3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription3($alternate_description3)
    {
        $this->container['alternate_description3'] = $alternate_description3;

        return $this;
    }

    /**
     * Gets alternate_description4
     *
     * @return string
     */
    public function getAlternateDescription4()
    {
        return $this->container['alternate_description4'];
    }

    /**
     * Sets alternate_description4
     *
     * @param string $alternate_description4 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_ALT_TRANS_DESC_4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription4($alternate_description4)
    {
        $this->container['alternate_description4'] = $alternate_description4;

        return $this;
    }

    /**
     * Gets alternate_description5
     *
     * @return string
     */
    public function getAlternateDescription5()
    {
        return $this->container['alternate_description5'];
    }

    /**
     * Sets alternate_description5
     *
     * @param string $alternate_description5 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_ALT_TRANS_DESC_5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription5($alternate_description5)
    {
        $this->container['alternate_description5'] = $alternate_description5;

        return $this;
    }

    /**
     * Gets source_default
     *
     * @return string
     */
    public function getSourceDefault()
    {
        return $this->container['source_default'];
    }

    /**
     * Sets source_default
     *
     * @param string $source_default <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_SOURCE_DEFAULT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSourceDefault($source_default)
    {
        $this->container['source_default'] = $source_default;

        return $this;
    }

    /**
     * Gets authorize
     *
     * @return string
     */
    public function getAuthorize()
    {
        return $this->container['authorize'];
    }

    /**
     * Sets authorize
     *
     * @param string $authorize <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_AUTO_AUTHORIZE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAuthorize($authorize)
    {
        $this->container['authorize'] = $authorize;

        return $this;
    }

    /**
     * Gets gl_distribution
     *
     * @return string
     */
    public function getGlDistribution()
    {
        return $this->container['gl_distribution'];
    }

    /**
     * Sets gl_distribution
     *
     * @param string $gl_distribution <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_GL_HIDE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlDistribution($gl_distribution)
    {
        $this->container['gl_distribution'] = $gl_distribution;

        return $this;
    }

    /**
     * Gets payor_info
     *
     * @return string
     */
    public function getPayorInfo()
    {
        return $this->container['payor_info'];
    }

    /**
     * Sets payor_info
     *
     * @param string $payor_info <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_PAYOR_INFO_HIDE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPayorInfo($payor_info)
    {
        $this->container['payor_info'] = $payor_info;

        return $this;
    }

    /**
     * Gets fee_transacton_type
     *
     * @return string
     */
    public function getFeeTransactonType()
    {
        return $this->container['fee_transacton_type'];
    }

    /**
     * Sets fee_transacton_type
     *
     * @param string $fee_transacton_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_FEE_TSM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 11  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFeeTransactonType($fee_transacton_type)
    {
        $this->container['fee_transacton_type'] = $fee_transacton_type;

        return $this;
    }

    /**
     * Gets fee_basis
     *
     * @return int
     */
    public function getFeeBasis()
    {
        return $this->container['fee_basis'];
    }

    /**
     * Sets fee_basis
     *
     * @param int $fee_basis <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_FEE_BASIS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFeeBasis($fee_basis)
    {
        $this->container['fee_basis'] = $fee_basis;

        return $this;
    }

    /**
     * Gets fee_amount
     *
     * @return double
     */
    public function getFeeAmount()
    {
        return $this->container['fee_amount'];
    }

    /**
     * Sets fee_amount
     *
     * @param double $fee_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_FEE_PCT_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 84  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFeeAmount($fee_amount)
    {
        $this->container['fee_amount'] = $fee_amount;

        return $this;
    }

    /**
     * Gets credit_card_authorization_configuration
     *
     * @return int
     */
    public function getCreditCardAuthorizationConfiguration()
    {
        return $this->container['credit_card_authorization_configuration'];
    }

    /**
     * Sets credit_card_authorization_configuration
     *
     * @param int $credit_card_authorization_configuration <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_CC_AUTH_SPECS_SEQ_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCreditCardAuthorizationConfiguration($credit_card_authorization_configuration)
    {
        $this->container['credit_card_authorization_configuration'] = $credit_card_authorization_configuration;

        return $this;
    }

    /**
     * Gets payment_gateway_configuration
     *
     * @return int
     */
    public function getPaymentGatewayConfiguration()
    {
        return $this->container['payment_gateway_configuration'];
    }

    /**
     * Sets payment_gateway_configuration
     *
     * @param int $payment_gateway_configuration <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR005_PAY_GTWY_CONFIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPaymentGatewayConfiguration($payment_gateway_configuration)
    {
        $this->container['payment_gateway_configuration'] = $payment_gateway_configuration;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


