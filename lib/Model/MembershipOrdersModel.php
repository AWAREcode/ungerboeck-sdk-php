<?php
/**
 * MembershipOrdersModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * MembershipOrdersModel Class Doc Comment
 *
 * @category Class
 * @description This represents either a membership order or a standing membership order.
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MembershipOrdersModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'MembershipOrdersModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization_code' => 'string',
        'order_number' => 'int',
        'search_order' => 'string',
        'order_date' => '\DateTime',
        'order_status' => 'string',
        'type' => 'string',
        'account' => 'string',
        'bill_to_account' => 'string',
        'printed' => 'string',
        'po_number' => 'string',
        'price_list' => 'string',
        'membership_start' => '\DateTime',
        'membership_end' => '\DateTime',
        'close_date' => '\DateTime',
        'ordered_total' => 'double',
        'ordered_tax' => 'double',
        'net_due' => 'double',
        'actual_total' => 'double',
        'actual_net_due' => 'double',
        'description' => 'string',
        'entered_date_time' => '\DateTime',
        'entered_by_user_id' => 'string',
        'last_changed_date_time' => '\DateTime',
        'last_changed_by_user_id' => 'string',
        'terms' => 'string',
        'department' => 'string',
        'requester_account' => 'string',
        'billing_cycle' => 'string',
        'period_cycle' => 'string',
        'billing_date' => '\DateTime',
        'invoice_number' => 'int',
        'currency' => 'string',
        'taxable' => 'string',
        'contact' => 'string',
        'bill_to_contact' => 'string',
        'requester_contact' => 'string',
        'account_rep' => 'string',
        'gl_account' => 'string',
        'campaign' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization_code' => null,
        'order_number' => 'int32',
        'search_order' => null,
        'order_date' => 'date-time',
        'order_status' => null,
        'type' => null,
        'account' => null,
        'bill_to_account' => null,
        'printed' => null,
        'po_number' => null,
        'price_list' => null,
        'membership_start' => 'date-time',
        'membership_end' => 'date-time',
        'close_date' => 'date-time',
        'ordered_total' => 'double',
        'ordered_tax' => 'double',
        'net_due' => 'double',
        'actual_total' => 'double',
        'actual_net_due' => 'double',
        'description' => null,
        'entered_date_time' => 'date-time',
        'entered_by_user_id' => null,
        'last_changed_date_time' => 'date-time',
        'last_changed_by_user_id' => null,
        'terms' => null,
        'department' => null,
        'requester_account' => null,
        'billing_cycle' => null,
        'period_cycle' => null,
        'billing_date' => 'date-time',
        'invoice_number' => 'int32',
        'currency' => null,
        'taxable' => null,
        'contact' => null,
        'bill_to_contact' => null,
        'requester_contact' => null,
        'account_rep' => null,
        'gl_account' => null,
        'campaign' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization_code' => 'OrganizationCode',
        'order_number' => 'OrderNumber',
        'search_order' => 'SearchOrder',
        'order_date' => 'OrderDate',
        'order_status' => 'OrderStatus',
        'type' => 'Type',
        'account' => 'Account',
        'bill_to_account' => 'BillToAccount',
        'printed' => 'Printed',
        'po_number' => 'PONumber',
        'price_list' => 'PriceList',
        'membership_start' => 'MembershipStart',
        'membership_end' => 'MembershipEnd',
        'close_date' => 'CloseDate',
        'ordered_total' => 'OrderedTotal',
        'ordered_tax' => 'OrderedTax',
        'net_due' => 'NetDue',
        'actual_total' => 'ActualTotal',
        'actual_net_due' => 'ActualNetDue',
        'description' => 'Description',
        'entered_date_time' => 'EnteredDateTime',
        'entered_by_user_id' => 'EnteredByUserID',
        'last_changed_date_time' => 'LastChangedDateTime',
        'last_changed_by_user_id' => 'LastChangedByUserID',
        'terms' => 'Terms',
        'department' => 'Department',
        'requester_account' => 'RequesterAccount',
        'billing_cycle' => 'BillingCycle',
        'period_cycle' => 'PeriodCycle',
        'billing_date' => 'BillingDate',
        'invoice_number' => 'InvoiceNumber',
        'currency' => 'Currency',
        'taxable' => 'Taxable',
        'contact' => 'Contact',
        'bill_to_contact' => 'BillToContact',
        'requester_contact' => 'RequesterContact',
        'account_rep' => 'AccountRep',
        'gl_account' => 'GLAccount',
        'campaign' => 'Campaign'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization_code' => 'setOrganizationCode',
        'order_number' => 'setOrderNumber',
        'search_order' => 'setSearchOrder',
        'order_date' => 'setOrderDate',
        'order_status' => 'setOrderStatus',
        'type' => 'setType',
        'account' => 'setAccount',
        'bill_to_account' => 'setBillToAccount',
        'printed' => 'setPrinted',
        'po_number' => 'setPoNumber',
        'price_list' => 'setPriceList',
        'membership_start' => 'setMembershipStart',
        'membership_end' => 'setMembershipEnd',
        'close_date' => 'setCloseDate',
        'ordered_total' => 'setOrderedTotal',
        'ordered_tax' => 'setOrderedTax',
        'net_due' => 'setNetDue',
        'actual_total' => 'setActualTotal',
        'actual_net_due' => 'setActualNetDue',
        'description' => 'setDescription',
        'entered_date_time' => 'setEnteredDateTime',
        'entered_by_user_id' => 'setEnteredByUserId',
        'last_changed_date_time' => 'setLastChangedDateTime',
        'last_changed_by_user_id' => 'setLastChangedByUserId',
        'terms' => 'setTerms',
        'department' => 'setDepartment',
        'requester_account' => 'setRequesterAccount',
        'billing_cycle' => 'setBillingCycle',
        'period_cycle' => 'setPeriodCycle',
        'billing_date' => 'setBillingDate',
        'invoice_number' => 'setInvoiceNumber',
        'currency' => 'setCurrency',
        'taxable' => 'setTaxable',
        'contact' => 'setContact',
        'bill_to_contact' => 'setBillToContact',
        'requester_contact' => 'setRequesterContact',
        'account_rep' => 'setAccountRep',
        'gl_account' => 'setGlAccount',
        'campaign' => 'setCampaign'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization_code' => 'getOrganizationCode',
        'order_number' => 'getOrderNumber',
        'search_order' => 'getSearchOrder',
        'order_date' => 'getOrderDate',
        'order_status' => 'getOrderStatus',
        'type' => 'getType',
        'account' => 'getAccount',
        'bill_to_account' => 'getBillToAccount',
        'printed' => 'getPrinted',
        'po_number' => 'getPoNumber',
        'price_list' => 'getPriceList',
        'membership_start' => 'getMembershipStart',
        'membership_end' => 'getMembershipEnd',
        'close_date' => 'getCloseDate',
        'ordered_total' => 'getOrderedTotal',
        'ordered_tax' => 'getOrderedTax',
        'net_due' => 'getNetDue',
        'actual_total' => 'getActualTotal',
        'actual_net_due' => 'getActualNetDue',
        'description' => 'getDescription',
        'entered_date_time' => 'getEnteredDateTime',
        'entered_by_user_id' => 'getEnteredByUserId',
        'last_changed_date_time' => 'getLastChangedDateTime',
        'last_changed_by_user_id' => 'getLastChangedByUserId',
        'terms' => 'getTerms',
        'department' => 'getDepartment',
        'requester_account' => 'getRequesterAccount',
        'billing_cycle' => 'getBillingCycle',
        'period_cycle' => 'getPeriodCycle',
        'billing_date' => 'getBillingDate',
        'invoice_number' => 'getInvoiceNumber',
        'currency' => 'getCurrency',
        'taxable' => 'getTaxable',
        'contact' => 'getContact',
        'bill_to_contact' => 'getBillToContact',
        'requester_contact' => 'getRequesterContact',
        'account_rep' => 'getAccountRep',
        'gl_account' => 'getGlAccount',
        'campaign' => 'getCampaign'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['order_number'] = isset($data['order_number']) ? $data['order_number'] : null;
        $this->container['search_order'] = isset($data['search_order']) ? $data['search_order'] : null;
        $this->container['order_date'] = isset($data['order_date']) ? $data['order_date'] : null;
        $this->container['order_status'] = isset($data['order_status']) ? $data['order_status'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
        $this->container['bill_to_account'] = isset($data['bill_to_account']) ? $data['bill_to_account'] : null;
        $this->container['printed'] = isset($data['printed']) ? $data['printed'] : null;
        $this->container['po_number'] = isset($data['po_number']) ? $data['po_number'] : null;
        $this->container['price_list'] = isset($data['price_list']) ? $data['price_list'] : null;
        $this->container['membership_start'] = isset($data['membership_start']) ? $data['membership_start'] : null;
        $this->container['membership_end'] = isset($data['membership_end']) ? $data['membership_end'] : null;
        $this->container['close_date'] = isset($data['close_date']) ? $data['close_date'] : null;
        $this->container['ordered_total'] = isset($data['ordered_total']) ? $data['ordered_total'] : null;
        $this->container['ordered_tax'] = isset($data['ordered_tax']) ? $data['ordered_tax'] : null;
        $this->container['net_due'] = isset($data['net_due']) ? $data['net_due'] : null;
        $this->container['actual_total'] = isset($data['actual_total']) ? $data['actual_total'] : null;
        $this->container['actual_net_due'] = isset($data['actual_net_due']) ? $data['actual_net_due'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['entered_date_time'] = isset($data['entered_date_time']) ? $data['entered_date_time'] : null;
        $this->container['entered_by_user_id'] = isset($data['entered_by_user_id']) ? $data['entered_by_user_id'] : null;
        $this->container['last_changed_date_time'] = isset($data['last_changed_date_time']) ? $data['last_changed_date_time'] : null;
        $this->container['last_changed_by_user_id'] = isset($data['last_changed_by_user_id']) ? $data['last_changed_by_user_id'] : null;
        $this->container['terms'] = isset($data['terms']) ? $data['terms'] : null;
        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['requester_account'] = isset($data['requester_account']) ? $data['requester_account'] : null;
        $this->container['billing_cycle'] = isset($data['billing_cycle']) ? $data['billing_cycle'] : null;
        $this->container['period_cycle'] = isset($data['period_cycle']) ? $data['period_cycle'] : null;
        $this->container['billing_date'] = isset($data['billing_date']) ? $data['billing_date'] : null;
        $this->container['invoice_number'] = isset($data['invoice_number']) ? $data['invoice_number'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['taxable'] = isset($data['taxable']) ? $data['taxable'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['bill_to_contact'] = isset($data['bill_to_contact']) ? $data['bill_to_contact'] : null;
        $this->container['requester_contact'] = isset($data['requester_contact']) ? $data['requester_contact'] : null;
        $this->container['account_rep'] = isset($data['account_rep']) ? $data['account_rep'] : null;
        $this->container['gl_account'] = isset($data['gl_account']) ? $data['gl_account'] : null;
        $this->container['campaign'] = isset($data['campaign']) ? $data['campaign'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['order_number'] === null) {
            $invalidProperties[] = "'order_number' can't be null";
        }
        if ($this->container['search_order'] === null) {
            $invalidProperties[] = "'search_order' can't be null";
        }
        if ($this->container['order_date'] === null) {
            $invalidProperties[] = "'order_date' can't be null";
        }
        if ($this->container['order_status'] === null) {
            $invalidProperties[] = "'order_status' can't be null";
        }
        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['account'] === null) {
            $invalidProperties[] = "'account' can't be null";
        }
        if ($this->container['bill_to_account'] === null) {
            $invalidProperties[] = "'bill_to_account' can't be null";
        }
        if ($this->container['printed'] === null) {
            $invalidProperties[] = "'printed' can't be null";
        }
        if ($this->container['po_number'] === null) {
            $invalidProperties[] = "'po_number' can't be null";
        }
        if ($this->container['price_list'] === null) {
            $invalidProperties[] = "'price_list' can't be null";
        }
        if ($this->container['membership_start'] === null) {
            $invalidProperties[] = "'membership_start' can't be null";
        }
        if ($this->container['membership_end'] === null) {
            $invalidProperties[] = "'membership_end' can't be null";
        }
        if ($this->container['close_date'] === null) {
            $invalidProperties[] = "'close_date' can't be null";
        }
        if ($this->container['ordered_total'] === null) {
            $invalidProperties[] = "'ordered_total' can't be null";
        }
        if ($this->container['ordered_tax'] === null) {
            $invalidProperties[] = "'ordered_tax' can't be null";
        }
        if ($this->container['net_due'] === null) {
            $invalidProperties[] = "'net_due' can't be null";
        }
        if ($this->container['actual_total'] === null) {
            $invalidProperties[] = "'actual_total' can't be null";
        }
        if ($this->container['actual_net_due'] === null) {
            $invalidProperties[] = "'actual_net_due' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['entered_date_time'] === null) {
            $invalidProperties[] = "'entered_date_time' can't be null";
        }
        if ($this->container['entered_by_user_id'] === null) {
            $invalidProperties[] = "'entered_by_user_id' can't be null";
        }
        if ($this->container['last_changed_date_time'] === null) {
            $invalidProperties[] = "'last_changed_date_time' can't be null";
        }
        if ($this->container['last_changed_by_user_id'] === null) {
            $invalidProperties[] = "'last_changed_by_user_id' can't be null";
        }
        if ($this->container['terms'] === null) {
            $invalidProperties[] = "'terms' can't be null";
        }
        if ($this->container['department'] === null) {
            $invalidProperties[] = "'department' can't be null";
        }
        if ($this->container['requester_account'] === null) {
            $invalidProperties[] = "'requester_account' can't be null";
        }
        if ($this->container['billing_cycle'] === null) {
            $invalidProperties[] = "'billing_cycle' can't be null";
        }
        if ($this->container['period_cycle'] === null) {
            $invalidProperties[] = "'period_cycle' can't be null";
        }
        if ($this->container['billing_date'] === null) {
            $invalidProperties[] = "'billing_date' can't be null";
        }
        if ($this->container['invoice_number'] === null) {
            $invalidProperties[] = "'invoice_number' can't be null";
        }
        if ($this->container['currency'] === null) {
            $invalidProperties[] = "'currency' can't be null";
        }
        if ($this->container['taxable'] === null) {
            $invalidProperties[] = "'taxable' can't be null";
        }
        if ($this->container['contact'] === null) {
            $invalidProperties[] = "'contact' can't be null";
        }
        if ($this->container['bill_to_contact'] === null) {
            $invalidProperties[] = "'bill_to_contact' can't be null";
        }
        if ($this->container['requester_contact'] === null) {
            $invalidProperties[] = "'requester_contact' can't be null";
        }
        if ($this->container['account_rep'] === null) {
            $invalidProperties[] = "'account_rep' can't be null";
        }
        if ($this->container['gl_account'] === null) {
            $invalidProperties[] = "'gl_account' can't be null";
        }
        if ($this->container['campaign'] === null) {
            $invalidProperties[] = "'campaign' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets order_number
     *
     * @return int
     */
    public function getOrderNumber()
    {
        return $this->container['order_number'];
    }

    /**
     * Sets order_number
     *
     * @param int $order_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderNumber($order_number)
    {
        $this->container['order_number'] = $order_number;

        return $this;
    }

    /**
     * Gets search_order
     *
     * @return string
     */
    public function getSearchOrder()
    {
        return $this->container['search_order'];
    }

    /**
     * Sets search_order
     *
     * @param string $search_order <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_SO_SEARCH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSearchOrder($search_order)
    {
        $this->container['search_order'] = $search_order;

        return $this;
    }

    /**
     * Gets order_date
     *
     * @return \DateTime
     */
    public function getOrderDate()
    {
        return $this->container['order_date'];
    }

    /**
     * Sets order_date
     *
     * @param \DateTime $order_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderDate($order_date)
    {
        $this->container['order_date'] = $order_date;

        return $this;
    }

    /**
     * Gets order_status
     *
     * @return string
     */
    public function getOrderStatus()
    {
        return $this->container['order_status'];
    }

    /**
     * Sets order_status
     *
     * @param string $order_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_NEW_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderStatus($order_status)
    {
        $this->container['order_status'] = $order_status;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This will be automatically set to MB (membership order) or MS (standing membership order) based on whether it's prepared or not using the PrepareOrderForInvoicing endpoint.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> ER100_ORD_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets account
     *
     * @return string
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param string $account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets bill_to_account
     *
     * @return string
     */
    public function getBillToAccount()
    {
        return $this->container['bill_to_account'];
    }

    /**
     * Sets bill_to_account
     *
     * @param string $bill_to_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_BILL_TO_CUST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBillToAccount($bill_to_account)
    {
        $this->container['bill_to_account'] = $bill_to_account;

        return $this;
    }

    /**
     * Gets printed
     *
     * @return string
     */
    public function getPrinted()
    {
        return $this->container['printed'];
    }

    /**
     * Sets printed
     *
     * @param string $printed <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_PRT_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPrinted($printed)
    {
        $this->container['printed'] = $printed;

        return $this;
    }

    /**
     * Gets po_number
     *
     * @return string
     */
    public function getPoNumber()
    {
        return $this->container['po_number'];
    }

    /**
     * Sets po_number
     *
     * @param string $po_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_PO_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPoNumber($po_number)
    {
        $this->container['po_number'] = $po_number;

        return $this;
    }

    /**
     * Gets price_list
     *
     * @return string
     */
    public function getPriceList()
    {
        return $this->container['price_list'];
    }

    /**
     * Sets price_list
     *
     * @param string $price_list <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_PRICE_LIST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPriceList($price_list)
    {
        $this->container['price_list'] = $price_list;

        return $this;
    }

    /**
     * Gets membership_start
     *
     * @return \DateTime
     */
    public function getMembershipStart()
    {
        return $this->container['membership_start'];
    }

    /**
     * Sets membership_start
     *
     * @param \DateTime $membership_start <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ARR_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMembershipStart($membership_start)
    {
        $this->container['membership_start'] = $membership_start;

        return $this;
    }

    /**
     * Gets membership_end
     *
     * @return \DateTime
     */
    public function getMembershipEnd()
    {
        return $this->container['membership_end'];
    }

    /**
     * Sets membership_end
     *
     * @param \DateTime $membership_end <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_DEP_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMembershipEnd($membership_end)
    {
        $this->container['membership_end'] = $membership_end;

        return $this;
    }

    /**
     * Gets close_date
     *
     * @return \DateTime
     */
    public function getCloseDate()
    {
        return $this->container['close_date'];
    }

    /**
     * Sets close_date
     *
     * @param \DateTime $close_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Fill this in when closing the date.  Note: it will not clear if reopening the order.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> ER100_COMP_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCloseDate($close_date)
    {
        $this->container['close_date'] = $close_date;

        return $this;
    }

    /**
     * Gets ordered_total
     *
     * @return double
     */
    public function getOrderedTotal()
    {
        return $this->container['ordered_total'];
    }

    /**
     * Sets ordered_total
     *
     * @param double $ordered_total <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_TOT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderedTotal($ordered_total)
    {
        $this->container['ordered_total'] = $ordered_total;

        return $this;
    }

    /**
     * Gets ordered_tax
     *
     * @return double
     */
    public function getOrderedTax()
    {
        return $this->container['ordered_tax'];
    }

    /**
     * Sets ordered_tax
     *
     * @param double $ordered_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderedTax($ordered_tax)
    {
        $this->container['ordered_tax'] = $ordered_tax;

        return $this;
    }

    /**
     * Gets net_due
     *
     * @return double
     */
    public function getNetDue()
    {
        return $this->container['net_due'];
    }

    /**
     * Sets net_due
     *
     * @param double $net_due <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_DUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNetDue($net_due)
    {
        $this->container['net_due'] = $net_due;

        return $this;
    }

    /**
     * Gets actual_total
     *
     * @return double
     */
    public function getActualTotal()
    {
        return $this->container['actual_total'];
    }

    /**
     * Sets actual_total
     *
     * @param double $actual_total <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ACT_TOTAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualTotal($actual_total)
    {
        $this->container['actual_total'] = $actual_total;

        return $this;
    }

    /**
     * Gets actual_net_due
     *
     * @return double
     */
    public function getActualNetDue()
    {
        return $this->container['actual_net_due'];
    }

    /**
     * Sets actual_net_due
     *
     * @param double $actual_net_due <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ACT_DUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualNetDue($actual_net_due)
    {
        $this->container['actual_net_due'] = $actual_net_due;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 40  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets entered_date_time
     *
     * @return \DateTime
     */
    public function getEnteredDateTime()
    {
        return $this->container['entered_date_time'];
    }

    /**
     * Sets entered_date_time
     *
     * @param \DateTime $entered_date_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ENT_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredDateTime($entered_date_time)
    {
        $this->container['entered_date_time'] = $entered_date_time;

        return $this;
    }

    /**
     * Gets entered_by_user_id
     *
     * @return string
     */
    public function getEnteredByUserId()
    {
        return $this->container['entered_by_user_id'];
    }

    /**
     * Sets entered_by_user_id
     *
     * @param string $entered_by_user_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredByUserId($entered_by_user_id)
    {
        $this->container['entered_by_user_id'] = $entered_by_user_id;

        return $this;
    }

    /**
     * Gets last_changed_date_time
     *
     * @return \DateTime
     */
    public function getLastChangedDateTime()
    {
        return $this->container['last_changed_date_time'];
    }

    /**
     * Sets last_changed_date_time
     *
     * @param \DateTime $last_changed_date_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_UPD_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastChangedDateTime($last_changed_date_time)
    {
        $this->container['last_changed_date_time'] = $last_changed_date_time;

        return $this;
    }

    /**
     * Gets last_changed_by_user_id
     *
     * @return string
     */
    public function getLastChangedByUserId()
    {
        return $this->container['last_changed_by_user_id'];
    }

    /**
     * Sets last_changed_by_user_id
     *
     * @param string $last_changed_by_user_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastChangedByUserId($last_changed_by_user_id)
    {
        $this->container['last_changed_by_user_id'] = $last_changed_by_user_id;

        return $this;
    }

    /**
     * Gets terms
     *
     * @return string
     */
    public function getTerms()
    {
        return $this->container['terms'];
    }

    /**
     * Sets terms
     *
     * @param string $terms <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORDER_TERMS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTerms($terms)
    {
        $this->container['terms'] = $terms;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string $department <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_USER_6X  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets requester_account
     *
     * @return string
     */
    public function getRequesterAccount()
    {
        return $this->container['requester_account'];
    }

    /**
     * Sets requester_account
     *
     * @param string $requester_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_REQ_CUST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequesterAccount($requester_account)
    {
        $this->container['requester_account'] = $requester_account;

        return $this;
    }

    /**
     * Gets billing_cycle
     *
     * @return string
     */
    public function getBillingCycle()
    {
        return $this->container['billing_cycle'];
    }

    /**
     * Sets billing_cycle
     *
     * @param string $billing_cycle <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_BILL_CYCLE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBillingCycle($billing_cycle)
    {
        $this->container['billing_cycle'] = $billing_cycle;

        return $this;
    }

    /**
     * Gets period_cycle
     *
     * @return string
     */
    public function getPeriodCycle()
    {
        return $this->container['period_cycle'];
    }

    /**
     * Sets period_cycle
     *
     * @param string $period_cycle <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_DUES_CYCLE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPeriodCycle($period_cycle)
    {
        $this->container['period_cycle'] = $period_cycle;

        return $this;
    }

    /**
     * Gets billing_date
     *
     * @return \DateTime
     */
    public function getBillingDate()
    {
        return $this->container['billing_date'];
    }

    /**
     * Sets billing_date
     *
     * @param \DateTime $billing_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_CYCLE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBillingDate($billing_date)
    {
        $this->container['billing_date'] = $billing_date;

        return $this;
    }

    /**
     * Gets invoice_number
     *
     * @return int
     */
    public function getInvoiceNumber()
    {
        return $this->container['invoice_number'];
    }

    /**
     * Sets invoice_number
     *
     * @param int $invoice_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_INVOICE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoiceNumber($invoice_number)
    {
        $this->container['invoice_number'] = $invoice_number;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_CURRENCY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets taxable
     *
     * @return string
     */
    public function getTaxable()
    {
        return $this->container['taxable'];
    }

    /**
     * Sets taxable
     *
     * @param string $taxable <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_TAXABLE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxable($taxable)
    {
        $this->container['taxable'] = $taxable;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return string
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param string $contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_NG_ORD_CONTACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets bill_to_contact
     *
     * @return string
     */
    public function getBillToContact()
    {
        return $this->container['bill_to_contact'];
    }

    /**
     * Sets bill_to_contact
     *
     * @param string $bill_to_contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_NG_BTO_CONTACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBillToContact($bill_to_contact)
    {
        $this->container['bill_to_contact'] = $bill_to_contact;

        return $this;
    }

    /**
     * Gets requester_contact
     *
     * @return string
     */
    public function getRequesterContact()
    {
        return $this->container['requester_contact'];
    }

    /**
     * Sets requester_contact
     *
     * @param string $requester_contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_NG_REQ_CONTACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequesterContact($requester_contact)
    {
        $this->container['requester_contact'] = $requester_contact;

        return $this;
    }

    /**
     * Gets account_rep
     *
     * @return string
     */
    public function getAccountRep()
    {
        return $this->container['account_rep'];
    }

    /**
     * Sets account_rep
     *
     * @param string $account_rep <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_ACCT_REP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccountRep($account_rep)
    {
        $this->container['account_rep'] = $account_rep;

        return $this;
    }

    /**
     * Gets gl_account
     *
     * @return string
     */
    public function getGlAccount()
    {
        return $this->container['gl_account'];
    }

    /**
     * Sets gl_account
     *
     * @param string $gl_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_GLACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlAccount($gl_account)
    {
        $this->container['gl_account'] = $gl_account;

        return $this;
    }

    /**
     * Gets campaign
     *
     * @return string
     */
    public function getCampaign()
    {
        return $this->container['campaign'];
    }

    /**
     * Sets campaign
     *
     * @param string $campaign <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_PRJ_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCampaign($campaign)
    {
        $this->container['campaign'] = $campaign;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


