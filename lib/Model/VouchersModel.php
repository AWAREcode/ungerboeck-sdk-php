<?php
/**
 * VouchersModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * VouchersModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class VouchersModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'VouchersModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization' => 'string',
        'voucher' => 'int',
        'supplier' => 'string',
        'transaction_date' => '\DateTime',
        'status' => 'string',
        'bank_code' => 'string',
        'invoice' => 'string',
        'check' => 'int',
        'reference' => 'string',
        'local_invoice_amount' => 'double',
        'local_discount_amount' => 'double',
        'po_number' => 'int',
        'internal_note' => 'string',
        'invoice_date' => '\DateTime',
        'due_date' => '\DateTime',
        'net_date' => '\DateTime',
        'type' => 'string',
        'voided_voucher' => 'int',
        'gl_account' => 'string',
        'gl_sub_account' => 'string',
        'discount_gl_account' => 'string',
        'discount_gl_sub_account' => 'string',
        'terms' => 'string',
        'use_demographics' => 'string',
        'payee' => 'string',
        'address_line1' => 'string',
        'address_line2' => 'string',
        'city' => 'string',
        'state' => 'string',
        'postal_code' => 'string',
        'country' => 'string',
        'contact_name' => 'string',
        'batch' => 'string',
        'local_gross_due' => 'double',
        'local_discount_taken' => 'double',
        'local_gross_paid' => 'double',
        'local_net_due' => 'double',
        'local_discount_available' => 'double',
        'local_discount_lost' => 'double',
        'entered_on' => '\DateTime',
        'entered_by' => 'string',
        'changed_on' => '\DateTime',
        'changed_by' => 'string',
        'local_withheld_amount' => 'double',
        'hold_payment' => 'string',
        'payment_method' => 'string',
        'local_withheld_actual' => 'double',
        'local_tax_amount' => 'double',
        'local_tax_paid' => 'double',
        'local_discount_tax' => 'double',
        'local_discount_tax_actual' => 'double',
        'local_discount_withheld' => 'double',
        'local_discount_withheld_actual' => 'double',
        'tax_id' => 'string',
        'address_line3' => 'string',
        'receipt_sequence' => 'int',
        'currency' => 'string',
        'invoice_amount' => 'double',
        'discount_amount' => 'double',
        'gross_paid' => 'double',
        'gross_due' => 'double',
        'discount_taken' => 'double',
        'net_due_open' => 'double',
        'discount_available' => 'double',
        'discount_lost' => 'double',
        'withheld_amount' => 'double',
        'withheld_actual' => 'double',
        'tax_amount' => 'double',
        'tax_paid' => 'double',
        'discount_tax' => 'double',
        'discount_tax_actual' => 'double',
        'discount_withheld' => 'double',
        'discount_withheld_actual' => 'double',
        'local_prepaid_amount' => 'double',
        'local_prepaid_amount_open' => 'double',
        'prepaid_amount' => 'double',
        'prepaid_amount_open' => 'double',
        'department' => 'string',
        'approval_level' => 'string',
        'approval_status' => 'string',
        'approved_by' => 'string',
        'approved_on' => '\DateTime',
        'book_control' => 'string',
        'division' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization' => null,
        'voucher' => 'int32',
        'supplier' => null,
        'transaction_date' => 'date-time',
        'status' => null,
        'bank_code' => null,
        'invoice' => null,
        'check' => 'int32',
        'reference' => null,
        'local_invoice_amount' => 'double',
        'local_discount_amount' => 'double',
        'po_number' => 'int32',
        'internal_note' => null,
        'invoice_date' => 'date-time',
        'due_date' => 'date-time',
        'net_date' => 'date-time',
        'type' => null,
        'voided_voucher' => 'int32',
        'gl_account' => null,
        'gl_sub_account' => null,
        'discount_gl_account' => null,
        'discount_gl_sub_account' => null,
        'terms' => null,
        'use_demographics' => null,
        'payee' => null,
        'address_line1' => null,
        'address_line2' => null,
        'city' => null,
        'state' => null,
        'postal_code' => null,
        'country' => null,
        'contact_name' => null,
        'batch' => null,
        'local_gross_due' => 'double',
        'local_discount_taken' => 'double',
        'local_gross_paid' => 'double',
        'local_net_due' => 'double',
        'local_discount_available' => 'double',
        'local_discount_lost' => 'double',
        'entered_on' => 'date-time',
        'entered_by' => null,
        'changed_on' => 'date-time',
        'changed_by' => null,
        'local_withheld_amount' => 'double',
        'hold_payment' => null,
        'payment_method' => null,
        'local_withheld_actual' => 'double',
        'local_tax_amount' => 'double',
        'local_tax_paid' => 'double',
        'local_discount_tax' => 'double',
        'local_discount_tax_actual' => 'double',
        'local_discount_withheld' => 'double',
        'local_discount_withheld_actual' => 'double',
        'tax_id' => null,
        'address_line3' => null,
        'receipt_sequence' => 'int32',
        'currency' => null,
        'invoice_amount' => 'double',
        'discount_amount' => 'double',
        'gross_paid' => 'double',
        'gross_due' => 'double',
        'discount_taken' => 'double',
        'net_due_open' => 'double',
        'discount_available' => 'double',
        'discount_lost' => 'double',
        'withheld_amount' => 'double',
        'withheld_actual' => 'double',
        'tax_amount' => 'double',
        'tax_paid' => 'double',
        'discount_tax' => 'double',
        'discount_tax_actual' => 'double',
        'discount_withheld' => 'double',
        'discount_withheld_actual' => 'double',
        'local_prepaid_amount' => 'double',
        'local_prepaid_amount_open' => 'double',
        'prepaid_amount' => 'double',
        'prepaid_amount_open' => 'double',
        'department' => null,
        'approval_level' => null,
        'approval_status' => null,
        'approved_by' => null,
        'approved_on' => 'date-time',
        'book_control' => null,
        'division' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization' => 'Organization',
        'voucher' => 'Voucher',
        'supplier' => 'Supplier',
        'transaction_date' => 'TransactionDate',
        'status' => 'Status',
        'bank_code' => 'BankCode',
        'invoice' => 'Invoice',
        'check' => 'Check',
        'reference' => 'Reference',
        'local_invoice_amount' => 'LocalInvoiceAmount',
        'local_discount_amount' => 'LocalDiscountAmount',
        'po_number' => 'PONumber',
        'internal_note' => 'InternalNote',
        'invoice_date' => 'InvoiceDate',
        'due_date' => 'DueDate',
        'net_date' => 'NetDate',
        'type' => 'Type',
        'voided_voucher' => 'VoidedVoucher',
        'gl_account' => 'GLAccount',
        'gl_sub_account' => 'GLSubAccount',
        'discount_gl_account' => 'DiscountGLAccount',
        'discount_gl_sub_account' => 'DiscountGLSubAccount',
        'terms' => 'Terms',
        'use_demographics' => 'UseDemographics',
        'payee' => 'Payee',
        'address_line1' => 'AddressLine1',
        'address_line2' => 'AddressLine2',
        'city' => 'City',
        'state' => 'State',
        'postal_code' => 'PostalCode',
        'country' => 'Country',
        'contact_name' => 'ContactName',
        'batch' => 'Batch',
        'local_gross_due' => 'LocalGrossDue',
        'local_discount_taken' => 'LocalDiscountTaken',
        'local_gross_paid' => 'LocalGrossPaid',
        'local_net_due' => 'LocalNetDue',
        'local_discount_available' => 'LocalDiscountAvailable',
        'local_discount_lost' => 'LocalDiscountLost',
        'entered_on' => 'EnteredOn',
        'entered_by' => 'EnteredBy',
        'changed_on' => 'ChangedOn',
        'changed_by' => 'ChangedBy',
        'local_withheld_amount' => 'LocalWithheldAmount',
        'hold_payment' => 'HoldPayment',
        'payment_method' => 'PaymentMethod',
        'local_withheld_actual' => 'LocalWithheldActual',
        'local_tax_amount' => 'LocalTaxAmount',
        'local_tax_paid' => 'LocalTaxPaid',
        'local_discount_tax' => 'LocalDiscountTax',
        'local_discount_tax_actual' => 'LocalDiscountTaxActual',
        'local_discount_withheld' => 'LocalDiscountWithheld',
        'local_discount_withheld_actual' => 'LocalDiscountWithheldActual',
        'tax_id' => 'TaxID',
        'address_line3' => 'AddressLine3',
        'receipt_sequence' => 'ReceiptSequence',
        'currency' => 'Currency',
        'invoice_amount' => 'InvoiceAmount',
        'discount_amount' => 'DiscountAmount',
        'gross_paid' => 'GrossPaid',
        'gross_due' => 'GrossDue',
        'discount_taken' => 'DiscountTaken',
        'net_due_open' => 'NetDueOpen',
        'discount_available' => 'DiscountAvailable',
        'discount_lost' => 'DiscountLost',
        'withheld_amount' => 'WithheldAmount',
        'withheld_actual' => 'WithheldActual',
        'tax_amount' => 'TaxAmount',
        'tax_paid' => 'TaxPaid',
        'discount_tax' => 'DiscountTax',
        'discount_tax_actual' => 'DiscountTaxActual',
        'discount_withheld' => 'DiscountWithheld',
        'discount_withheld_actual' => 'DiscountWithheldActual',
        'local_prepaid_amount' => 'LocalPrepaidAmount',
        'local_prepaid_amount_open' => 'LocalPrepaidAmountOpen',
        'prepaid_amount' => 'PrepaidAmount',
        'prepaid_amount_open' => 'PrepaidAmountOpen',
        'department' => 'Department',
        'approval_level' => 'ApprovalLevel',
        'approval_status' => 'ApprovalStatus',
        'approved_by' => 'ApprovedBy',
        'approved_on' => 'ApprovedOn',
        'book_control' => 'BookControl',
        'division' => 'Division'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization' => 'setOrganization',
        'voucher' => 'setVoucher',
        'supplier' => 'setSupplier',
        'transaction_date' => 'setTransactionDate',
        'status' => 'setStatus',
        'bank_code' => 'setBankCode',
        'invoice' => 'setInvoice',
        'check' => 'setCheck',
        'reference' => 'setReference',
        'local_invoice_amount' => 'setLocalInvoiceAmount',
        'local_discount_amount' => 'setLocalDiscountAmount',
        'po_number' => 'setPoNumber',
        'internal_note' => 'setInternalNote',
        'invoice_date' => 'setInvoiceDate',
        'due_date' => 'setDueDate',
        'net_date' => 'setNetDate',
        'type' => 'setType',
        'voided_voucher' => 'setVoidedVoucher',
        'gl_account' => 'setGlAccount',
        'gl_sub_account' => 'setGlSubAccount',
        'discount_gl_account' => 'setDiscountGlAccount',
        'discount_gl_sub_account' => 'setDiscountGlSubAccount',
        'terms' => 'setTerms',
        'use_demographics' => 'setUseDemographics',
        'payee' => 'setPayee',
        'address_line1' => 'setAddressLine1',
        'address_line2' => 'setAddressLine2',
        'city' => 'setCity',
        'state' => 'setState',
        'postal_code' => 'setPostalCode',
        'country' => 'setCountry',
        'contact_name' => 'setContactName',
        'batch' => 'setBatch',
        'local_gross_due' => 'setLocalGrossDue',
        'local_discount_taken' => 'setLocalDiscountTaken',
        'local_gross_paid' => 'setLocalGrossPaid',
        'local_net_due' => 'setLocalNetDue',
        'local_discount_available' => 'setLocalDiscountAvailable',
        'local_discount_lost' => 'setLocalDiscountLost',
        'entered_on' => 'setEnteredOn',
        'entered_by' => 'setEnteredBy',
        'changed_on' => 'setChangedOn',
        'changed_by' => 'setChangedBy',
        'local_withheld_amount' => 'setLocalWithheldAmount',
        'hold_payment' => 'setHoldPayment',
        'payment_method' => 'setPaymentMethod',
        'local_withheld_actual' => 'setLocalWithheldActual',
        'local_tax_amount' => 'setLocalTaxAmount',
        'local_tax_paid' => 'setLocalTaxPaid',
        'local_discount_tax' => 'setLocalDiscountTax',
        'local_discount_tax_actual' => 'setLocalDiscountTaxActual',
        'local_discount_withheld' => 'setLocalDiscountWithheld',
        'local_discount_withheld_actual' => 'setLocalDiscountWithheldActual',
        'tax_id' => 'setTaxId',
        'address_line3' => 'setAddressLine3',
        'receipt_sequence' => 'setReceiptSequence',
        'currency' => 'setCurrency',
        'invoice_amount' => 'setInvoiceAmount',
        'discount_amount' => 'setDiscountAmount',
        'gross_paid' => 'setGrossPaid',
        'gross_due' => 'setGrossDue',
        'discount_taken' => 'setDiscountTaken',
        'net_due_open' => 'setNetDueOpen',
        'discount_available' => 'setDiscountAvailable',
        'discount_lost' => 'setDiscountLost',
        'withheld_amount' => 'setWithheldAmount',
        'withheld_actual' => 'setWithheldActual',
        'tax_amount' => 'setTaxAmount',
        'tax_paid' => 'setTaxPaid',
        'discount_tax' => 'setDiscountTax',
        'discount_tax_actual' => 'setDiscountTaxActual',
        'discount_withheld' => 'setDiscountWithheld',
        'discount_withheld_actual' => 'setDiscountWithheldActual',
        'local_prepaid_amount' => 'setLocalPrepaidAmount',
        'local_prepaid_amount_open' => 'setLocalPrepaidAmountOpen',
        'prepaid_amount' => 'setPrepaidAmount',
        'prepaid_amount_open' => 'setPrepaidAmountOpen',
        'department' => 'setDepartment',
        'approval_level' => 'setApprovalLevel',
        'approval_status' => 'setApprovalStatus',
        'approved_by' => 'setApprovedBy',
        'approved_on' => 'setApprovedOn',
        'book_control' => 'setBookControl',
        'division' => 'setDivision'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization' => 'getOrganization',
        'voucher' => 'getVoucher',
        'supplier' => 'getSupplier',
        'transaction_date' => 'getTransactionDate',
        'status' => 'getStatus',
        'bank_code' => 'getBankCode',
        'invoice' => 'getInvoice',
        'check' => 'getCheck',
        'reference' => 'getReference',
        'local_invoice_amount' => 'getLocalInvoiceAmount',
        'local_discount_amount' => 'getLocalDiscountAmount',
        'po_number' => 'getPoNumber',
        'internal_note' => 'getInternalNote',
        'invoice_date' => 'getInvoiceDate',
        'due_date' => 'getDueDate',
        'net_date' => 'getNetDate',
        'type' => 'getType',
        'voided_voucher' => 'getVoidedVoucher',
        'gl_account' => 'getGlAccount',
        'gl_sub_account' => 'getGlSubAccount',
        'discount_gl_account' => 'getDiscountGlAccount',
        'discount_gl_sub_account' => 'getDiscountGlSubAccount',
        'terms' => 'getTerms',
        'use_demographics' => 'getUseDemographics',
        'payee' => 'getPayee',
        'address_line1' => 'getAddressLine1',
        'address_line2' => 'getAddressLine2',
        'city' => 'getCity',
        'state' => 'getState',
        'postal_code' => 'getPostalCode',
        'country' => 'getCountry',
        'contact_name' => 'getContactName',
        'batch' => 'getBatch',
        'local_gross_due' => 'getLocalGrossDue',
        'local_discount_taken' => 'getLocalDiscountTaken',
        'local_gross_paid' => 'getLocalGrossPaid',
        'local_net_due' => 'getLocalNetDue',
        'local_discount_available' => 'getLocalDiscountAvailable',
        'local_discount_lost' => 'getLocalDiscountLost',
        'entered_on' => 'getEnteredOn',
        'entered_by' => 'getEnteredBy',
        'changed_on' => 'getChangedOn',
        'changed_by' => 'getChangedBy',
        'local_withheld_amount' => 'getLocalWithheldAmount',
        'hold_payment' => 'getHoldPayment',
        'payment_method' => 'getPaymentMethod',
        'local_withheld_actual' => 'getLocalWithheldActual',
        'local_tax_amount' => 'getLocalTaxAmount',
        'local_tax_paid' => 'getLocalTaxPaid',
        'local_discount_tax' => 'getLocalDiscountTax',
        'local_discount_tax_actual' => 'getLocalDiscountTaxActual',
        'local_discount_withheld' => 'getLocalDiscountWithheld',
        'local_discount_withheld_actual' => 'getLocalDiscountWithheldActual',
        'tax_id' => 'getTaxId',
        'address_line3' => 'getAddressLine3',
        'receipt_sequence' => 'getReceiptSequence',
        'currency' => 'getCurrency',
        'invoice_amount' => 'getInvoiceAmount',
        'discount_amount' => 'getDiscountAmount',
        'gross_paid' => 'getGrossPaid',
        'gross_due' => 'getGrossDue',
        'discount_taken' => 'getDiscountTaken',
        'net_due_open' => 'getNetDueOpen',
        'discount_available' => 'getDiscountAvailable',
        'discount_lost' => 'getDiscountLost',
        'withheld_amount' => 'getWithheldAmount',
        'withheld_actual' => 'getWithheldActual',
        'tax_amount' => 'getTaxAmount',
        'tax_paid' => 'getTaxPaid',
        'discount_tax' => 'getDiscountTax',
        'discount_tax_actual' => 'getDiscountTaxActual',
        'discount_withheld' => 'getDiscountWithheld',
        'discount_withheld_actual' => 'getDiscountWithheldActual',
        'local_prepaid_amount' => 'getLocalPrepaidAmount',
        'local_prepaid_amount_open' => 'getLocalPrepaidAmountOpen',
        'prepaid_amount' => 'getPrepaidAmount',
        'prepaid_amount_open' => 'getPrepaidAmountOpen',
        'department' => 'getDepartment',
        'approval_level' => 'getApprovalLevel',
        'approval_status' => 'getApprovalStatus',
        'approved_by' => 'getApprovedBy',
        'approved_on' => 'getApprovedOn',
        'book_control' => 'getBookControl',
        'division' => 'getDivision'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['voucher'] = isset($data['voucher']) ? $data['voucher'] : null;
        $this->container['supplier'] = isset($data['supplier']) ? $data['supplier'] : null;
        $this->container['transaction_date'] = isset($data['transaction_date']) ? $data['transaction_date'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['bank_code'] = isset($data['bank_code']) ? $data['bank_code'] : null;
        $this->container['invoice'] = isset($data['invoice']) ? $data['invoice'] : null;
        $this->container['check'] = isset($data['check']) ? $data['check'] : null;
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['local_invoice_amount'] = isset($data['local_invoice_amount']) ? $data['local_invoice_amount'] : null;
        $this->container['local_discount_amount'] = isset($data['local_discount_amount']) ? $data['local_discount_amount'] : null;
        $this->container['po_number'] = isset($data['po_number']) ? $data['po_number'] : null;
        $this->container['internal_note'] = isset($data['internal_note']) ? $data['internal_note'] : null;
        $this->container['invoice_date'] = isset($data['invoice_date']) ? $data['invoice_date'] : null;
        $this->container['due_date'] = isset($data['due_date']) ? $data['due_date'] : null;
        $this->container['net_date'] = isset($data['net_date']) ? $data['net_date'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['voided_voucher'] = isset($data['voided_voucher']) ? $data['voided_voucher'] : null;
        $this->container['gl_account'] = isset($data['gl_account']) ? $data['gl_account'] : null;
        $this->container['gl_sub_account'] = isset($data['gl_sub_account']) ? $data['gl_sub_account'] : null;
        $this->container['discount_gl_account'] = isset($data['discount_gl_account']) ? $data['discount_gl_account'] : null;
        $this->container['discount_gl_sub_account'] = isset($data['discount_gl_sub_account']) ? $data['discount_gl_sub_account'] : null;
        $this->container['terms'] = isset($data['terms']) ? $data['terms'] : null;
        $this->container['use_demographics'] = isset($data['use_demographics']) ? $data['use_demographics'] : null;
        $this->container['payee'] = isset($data['payee']) ? $data['payee'] : null;
        $this->container['address_line1'] = isset($data['address_line1']) ? $data['address_line1'] : null;
        $this->container['address_line2'] = isset($data['address_line2']) ? $data['address_line2'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['state'] = isset($data['state']) ? $data['state'] : null;
        $this->container['postal_code'] = isset($data['postal_code']) ? $data['postal_code'] : null;
        $this->container['country'] = isset($data['country']) ? $data['country'] : null;
        $this->container['contact_name'] = isset($data['contact_name']) ? $data['contact_name'] : null;
        $this->container['batch'] = isset($data['batch']) ? $data['batch'] : null;
        $this->container['local_gross_due'] = isset($data['local_gross_due']) ? $data['local_gross_due'] : null;
        $this->container['local_discount_taken'] = isset($data['local_discount_taken']) ? $data['local_discount_taken'] : null;
        $this->container['local_gross_paid'] = isset($data['local_gross_paid']) ? $data['local_gross_paid'] : null;
        $this->container['local_net_due'] = isset($data['local_net_due']) ? $data['local_net_due'] : null;
        $this->container['local_discount_available'] = isset($data['local_discount_available']) ? $data['local_discount_available'] : null;
        $this->container['local_discount_lost'] = isset($data['local_discount_lost']) ? $data['local_discount_lost'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['local_withheld_amount'] = isset($data['local_withheld_amount']) ? $data['local_withheld_amount'] : null;
        $this->container['hold_payment'] = isset($data['hold_payment']) ? $data['hold_payment'] : null;
        $this->container['payment_method'] = isset($data['payment_method']) ? $data['payment_method'] : null;
        $this->container['local_withheld_actual'] = isset($data['local_withheld_actual']) ? $data['local_withheld_actual'] : null;
        $this->container['local_tax_amount'] = isset($data['local_tax_amount']) ? $data['local_tax_amount'] : null;
        $this->container['local_tax_paid'] = isset($data['local_tax_paid']) ? $data['local_tax_paid'] : null;
        $this->container['local_discount_tax'] = isset($data['local_discount_tax']) ? $data['local_discount_tax'] : null;
        $this->container['local_discount_tax_actual'] = isset($data['local_discount_tax_actual']) ? $data['local_discount_tax_actual'] : null;
        $this->container['local_discount_withheld'] = isset($data['local_discount_withheld']) ? $data['local_discount_withheld'] : null;
        $this->container['local_discount_withheld_actual'] = isset($data['local_discount_withheld_actual']) ? $data['local_discount_withheld_actual'] : null;
        $this->container['tax_id'] = isset($data['tax_id']) ? $data['tax_id'] : null;
        $this->container['address_line3'] = isset($data['address_line3']) ? $data['address_line3'] : null;
        $this->container['receipt_sequence'] = isset($data['receipt_sequence']) ? $data['receipt_sequence'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['invoice_amount'] = isset($data['invoice_amount']) ? $data['invoice_amount'] : null;
        $this->container['discount_amount'] = isset($data['discount_amount']) ? $data['discount_amount'] : null;
        $this->container['gross_paid'] = isset($data['gross_paid']) ? $data['gross_paid'] : null;
        $this->container['gross_due'] = isset($data['gross_due']) ? $data['gross_due'] : null;
        $this->container['discount_taken'] = isset($data['discount_taken']) ? $data['discount_taken'] : null;
        $this->container['net_due_open'] = isset($data['net_due_open']) ? $data['net_due_open'] : null;
        $this->container['discount_available'] = isset($data['discount_available']) ? $data['discount_available'] : null;
        $this->container['discount_lost'] = isset($data['discount_lost']) ? $data['discount_lost'] : null;
        $this->container['withheld_amount'] = isset($data['withheld_amount']) ? $data['withheld_amount'] : null;
        $this->container['withheld_actual'] = isset($data['withheld_actual']) ? $data['withheld_actual'] : null;
        $this->container['tax_amount'] = isset($data['tax_amount']) ? $data['tax_amount'] : null;
        $this->container['tax_paid'] = isset($data['tax_paid']) ? $data['tax_paid'] : null;
        $this->container['discount_tax'] = isset($data['discount_tax']) ? $data['discount_tax'] : null;
        $this->container['discount_tax_actual'] = isset($data['discount_tax_actual']) ? $data['discount_tax_actual'] : null;
        $this->container['discount_withheld'] = isset($data['discount_withheld']) ? $data['discount_withheld'] : null;
        $this->container['discount_withheld_actual'] = isset($data['discount_withheld_actual']) ? $data['discount_withheld_actual'] : null;
        $this->container['local_prepaid_amount'] = isset($data['local_prepaid_amount']) ? $data['local_prepaid_amount'] : null;
        $this->container['local_prepaid_amount_open'] = isset($data['local_prepaid_amount_open']) ? $data['local_prepaid_amount_open'] : null;
        $this->container['prepaid_amount'] = isset($data['prepaid_amount']) ? $data['prepaid_amount'] : null;
        $this->container['prepaid_amount_open'] = isset($data['prepaid_amount_open']) ? $data['prepaid_amount_open'] : null;
        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['approval_level'] = isset($data['approval_level']) ? $data['approval_level'] : null;
        $this->container['approval_status'] = isset($data['approval_status']) ? $data['approval_status'] : null;
        $this->container['approved_by'] = isset($data['approved_by']) ? $data['approved_by'] : null;
        $this->container['approved_on'] = isset($data['approved_on']) ? $data['approved_on'] : null;
        $this->container['book_control'] = isset($data['book_control']) ? $data['book_control'] : null;
        $this->container['division'] = isset($data['division']) ? $data['division'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization'] === null) {
            $invalidProperties[] = "'organization' can't be null";
        }
        if ($this->container['voucher'] === null) {
            $invalidProperties[] = "'voucher' can't be null";
        }
        if ($this->container['supplier'] === null) {
            $invalidProperties[] = "'supplier' can't be null";
        }
        if ($this->container['transaction_date'] === null) {
            $invalidProperties[] = "'transaction_date' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['bank_code'] === null) {
            $invalidProperties[] = "'bank_code' can't be null";
        }
        if ($this->container['invoice'] === null) {
            $invalidProperties[] = "'invoice' can't be null";
        }
        if ($this->container['check'] === null) {
            $invalidProperties[] = "'check' can't be null";
        }
        if ($this->container['reference'] === null) {
            $invalidProperties[] = "'reference' can't be null";
        }
        if ($this->container['local_invoice_amount'] === null) {
            $invalidProperties[] = "'local_invoice_amount' can't be null";
        }
        if ($this->container['local_discount_amount'] === null) {
            $invalidProperties[] = "'local_discount_amount' can't be null";
        }
        if ($this->container['po_number'] === null) {
            $invalidProperties[] = "'po_number' can't be null";
        }
        if ($this->container['internal_note'] === null) {
            $invalidProperties[] = "'internal_note' can't be null";
        }
        if ($this->container['invoice_date'] === null) {
            $invalidProperties[] = "'invoice_date' can't be null";
        }
        if ($this->container['due_date'] === null) {
            $invalidProperties[] = "'due_date' can't be null";
        }
        if ($this->container['net_date'] === null) {
            $invalidProperties[] = "'net_date' can't be null";
        }
        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['voided_voucher'] === null) {
            $invalidProperties[] = "'voided_voucher' can't be null";
        }
        if ($this->container['gl_account'] === null) {
            $invalidProperties[] = "'gl_account' can't be null";
        }
        if ($this->container['gl_sub_account'] === null) {
            $invalidProperties[] = "'gl_sub_account' can't be null";
        }
        if ($this->container['discount_gl_account'] === null) {
            $invalidProperties[] = "'discount_gl_account' can't be null";
        }
        if ($this->container['discount_gl_sub_account'] === null) {
            $invalidProperties[] = "'discount_gl_sub_account' can't be null";
        }
        if ($this->container['terms'] === null) {
            $invalidProperties[] = "'terms' can't be null";
        }
        if ($this->container['use_demographics'] === null) {
            $invalidProperties[] = "'use_demographics' can't be null";
        }
        if ($this->container['payee'] === null) {
            $invalidProperties[] = "'payee' can't be null";
        }
        if ($this->container['address_line1'] === null) {
            $invalidProperties[] = "'address_line1' can't be null";
        }
        if ($this->container['address_line2'] === null) {
            $invalidProperties[] = "'address_line2' can't be null";
        }
        if ($this->container['city'] === null) {
            $invalidProperties[] = "'city' can't be null";
        }
        if ($this->container['state'] === null) {
            $invalidProperties[] = "'state' can't be null";
        }
        if ($this->container['postal_code'] === null) {
            $invalidProperties[] = "'postal_code' can't be null";
        }
        if ($this->container['country'] === null) {
            $invalidProperties[] = "'country' can't be null";
        }
        if ($this->container['contact_name'] === null) {
            $invalidProperties[] = "'contact_name' can't be null";
        }
        if ($this->container['batch'] === null) {
            $invalidProperties[] = "'batch' can't be null";
        }
        if ($this->container['local_gross_due'] === null) {
            $invalidProperties[] = "'local_gross_due' can't be null";
        }
        if ($this->container['local_discount_taken'] === null) {
            $invalidProperties[] = "'local_discount_taken' can't be null";
        }
        if ($this->container['local_gross_paid'] === null) {
            $invalidProperties[] = "'local_gross_paid' can't be null";
        }
        if ($this->container['local_net_due'] === null) {
            $invalidProperties[] = "'local_net_due' can't be null";
        }
        if ($this->container['local_discount_available'] === null) {
            $invalidProperties[] = "'local_discount_available' can't be null";
        }
        if ($this->container['local_discount_lost'] === null) {
            $invalidProperties[] = "'local_discount_lost' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['local_withheld_amount'] === null) {
            $invalidProperties[] = "'local_withheld_amount' can't be null";
        }
        if ($this->container['hold_payment'] === null) {
            $invalidProperties[] = "'hold_payment' can't be null";
        }
        if ($this->container['payment_method'] === null) {
            $invalidProperties[] = "'payment_method' can't be null";
        }
        if ($this->container['local_withheld_actual'] === null) {
            $invalidProperties[] = "'local_withheld_actual' can't be null";
        }
        if ($this->container['local_tax_amount'] === null) {
            $invalidProperties[] = "'local_tax_amount' can't be null";
        }
        if ($this->container['local_tax_paid'] === null) {
            $invalidProperties[] = "'local_tax_paid' can't be null";
        }
        if ($this->container['local_discount_tax'] === null) {
            $invalidProperties[] = "'local_discount_tax' can't be null";
        }
        if ($this->container['local_discount_tax_actual'] === null) {
            $invalidProperties[] = "'local_discount_tax_actual' can't be null";
        }
        if ($this->container['local_discount_withheld'] === null) {
            $invalidProperties[] = "'local_discount_withheld' can't be null";
        }
        if ($this->container['local_discount_withheld_actual'] === null) {
            $invalidProperties[] = "'local_discount_withheld_actual' can't be null";
        }
        if ($this->container['tax_id'] === null) {
            $invalidProperties[] = "'tax_id' can't be null";
        }
        if ($this->container['address_line3'] === null) {
            $invalidProperties[] = "'address_line3' can't be null";
        }
        if ($this->container['receipt_sequence'] === null) {
            $invalidProperties[] = "'receipt_sequence' can't be null";
        }
        if ($this->container['currency'] === null) {
            $invalidProperties[] = "'currency' can't be null";
        }
        if ($this->container['invoice_amount'] === null) {
            $invalidProperties[] = "'invoice_amount' can't be null";
        }
        if ($this->container['discount_amount'] === null) {
            $invalidProperties[] = "'discount_amount' can't be null";
        }
        if ($this->container['gross_paid'] === null) {
            $invalidProperties[] = "'gross_paid' can't be null";
        }
        if ($this->container['gross_due'] === null) {
            $invalidProperties[] = "'gross_due' can't be null";
        }
        if ($this->container['discount_taken'] === null) {
            $invalidProperties[] = "'discount_taken' can't be null";
        }
        if ($this->container['net_due_open'] === null) {
            $invalidProperties[] = "'net_due_open' can't be null";
        }
        if ($this->container['discount_available'] === null) {
            $invalidProperties[] = "'discount_available' can't be null";
        }
        if ($this->container['discount_lost'] === null) {
            $invalidProperties[] = "'discount_lost' can't be null";
        }
        if ($this->container['withheld_amount'] === null) {
            $invalidProperties[] = "'withheld_amount' can't be null";
        }
        if ($this->container['withheld_actual'] === null) {
            $invalidProperties[] = "'withheld_actual' can't be null";
        }
        if ($this->container['tax_amount'] === null) {
            $invalidProperties[] = "'tax_amount' can't be null";
        }
        if ($this->container['tax_paid'] === null) {
            $invalidProperties[] = "'tax_paid' can't be null";
        }
        if ($this->container['discount_tax'] === null) {
            $invalidProperties[] = "'discount_tax' can't be null";
        }
        if ($this->container['discount_tax_actual'] === null) {
            $invalidProperties[] = "'discount_tax_actual' can't be null";
        }
        if ($this->container['discount_withheld'] === null) {
            $invalidProperties[] = "'discount_withheld' can't be null";
        }
        if ($this->container['discount_withheld_actual'] === null) {
            $invalidProperties[] = "'discount_withheld_actual' can't be null";
        }
        if ($this->container['local_prepaid_amount'] === null) {
            $invalidProperties[] = "'local_prepaid_amount' can't be null";
        }
        if ($this->container['local_prepaid_amount_open'] === null) {
            $invalidProperties[] = "'local_prepaid_amount_open' can't be null";
        }
        if ($this->container['prepaid_amount'] === null) {
            $invalidProperties[] = "'prepaid_amount' can't be null";
        }
        if ($this->container['prepaid_amount_open'] === null) {
            $invalidProperties[] = "'prepaid_amount_open' can't be null";
        }
        if ($this->container['department'] === null) {
            $invalidProperties[] = "'department' can't be null";
        }
        if ($this->container['approval_level'] === null) {
            $invalidProperties[] = "'approval_level' can't be null";
        }
        if ($this->container['approval_status'] === null) {
            $invalidProperties[] = "'approval_status' can't be null";
        }
        if ($this->container['approved_by'] === null) {
            $invalidProperties[] = "'approved_by' can't be null";
        }
        if ($this->container['approved_on'] === null) {
            $invalidProperties[] = "'approved_on' can't be null";
        }
        if ($this->container['book_control'] === null) {
            $invalidProperties[] = "'book_control' can't be null";
        }
        if ($this->container['division'] === null) {
            $invalidProperties[] = "'division' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets voucher
     *
     * @return int
     */
    public function getVoucher()
    {
        return $this->container['voucher'];
    }

    /**
     * Sets voucher
     *
     * @param int $voucher <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_VOUCHER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setVoucher($voucher)
    {
        $this->container['voucher'] = $voucher;

        return $this;
    }

    /**
     * Gets supplier
     *
     * @return string
     */
    public function getSupplier()
    {
        return $this->container['supplier'];
    }

    /**
     * Sets supplier
     *
     * @param string $supplier <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_EXT_ACCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSupplier($supplier)
    {
        $this->container['supplier'] = $supplier;

        return $this;
    }

    /**
     * Gets transaction_date
     *
     * @return \DateTime
     */
    public function getTransactionDate()
    {
        return $this->container['transaction_date'];
    }

    /**
     * Sets transaction_date
     *
     * @param \DateTime $transaction_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_TRANS_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTransactionDate($transaction_date)
    {
        $this->container['transaction_date'] = $transaction_date;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets bank_code
     *
     * @return string
     */
    public function getBankCode()
    {
        return $this->container['bank_code'];
    }

    /**
     * Sets bank_code
     *
     * @param string $bank_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_BANK_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBankCode($bank_code)
    {
        $this->container['bank_code'] = $bank_code;

        return $this;
    }

    /**
     * Gets invoice
     *
     * @return string
     */
    public function getInvoice()
    {
        return $this->container['invoice'];
    }

    /**
     * Sets invoice
     *
     * @param string $invoice <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_VENDOR_INVOICE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoice($invoice)
    {
        $this->container['invoice'] = $invoice;

        return $this;
    }

    /**
     * Gets check
     *
     * @return int
     */
    public function getCheck()
    {
        return $this->container['check'];
    }

    /**
     * Sets check
     *
     * @param int $check <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_CHECK  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCheck($check)
    {
        $this->container['check'] = $check;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string $reference <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_REFERENCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets local_invoice_amount
     *
     * @return double
     */
    public function getLocalInvoiceAmount()
    {
        return $this->container['local_invoice_amount'];
    }

    /**
     * Sets local_invoice_amount
     *
     * @param double $local_invoice_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_INVOICE_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalInvoiceAmount($local_invoice_amount)
    {
        $this->container['local_invoice_amount'] = $local_invoice_amount;

        return $this;
    }

    /**
     * Gets local_discount_amount
     *
     * @return double
     */
    public function getLocalDiscountAmount()
    {
        return $this->container['local_discount_amount'];
    }

    /**
     * Sets local_discount_amount
     *
     * @param double $local_discount_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_DISCOUNT_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalDiscountAmount($local_discount_amount)
    {
        $this->container['local_discount_amount'] = $local_discount_amount;

        return $this;
    }

    /**
     * Gets po_number
     *
     * @return int
     */
    public function getPoNumber()
    {
        return $this->container['po_number'];
    }

    /**
     * Sets po_number
     *
     * @param int $po_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_PO_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPoNumber($po_number)
    {
        $this->container['po_number'] = $po_number;

        return $this;
    }

    /**
     * Gets internal_note
     *
     * @return string
     */
    public function getInternalNote()
    {
        return $this->container['internal_note'];
    }

    /**
     * Sets internal_note
     *
     * @param string $internal_note <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_NOTE_REF  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInternalNote($internal_note)
    {
        $this->container['internal_note'] = $internal_note;

        return $this;
    }

    /**
     * Gets invoice_date
     *
     * @return \DateTime
     */
    public function getInvoiceDate()
    {
        return $this->container['invoice_date'];
    }

    /**
     * Sets invoice_date
     *
     * @param \DateTime $invoice_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_INVOICE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoiceDate($invoice_date)
    {
        $this->container['invoice_date'] = $invoice_date;

        return $this;
    }

    /**
     * Gets due_date
     *
     * @return \DateTime
     */
    public function getDueDate()
    {
        return $this->container['due_date'];
    }

    /**
     * Sets due_date
     *
     * @param \DateTime $due_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_DUE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDueDate($due_date)
    {
        $this->container['due_date'] = $due_date;

        return $this;
    }

    /**
     * Gets net_date
     *
     * @return \DateTime
     */
    public function getNetDate()
    {
        return $this->container['net_date'];
    }

    /**
     * Sets net_date
     *
     * @param \DateTime $net_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_NET_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNetDate($net_date)
    {
        $this->container['net_date'] = $net_date;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_VOUCHER_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets voided_voucher
     *
     * @return int
     */
    public function getVoidedVoucher()
    {
        return $this->container['voided_voucher'];
    }

    /**
     * Sets voided_voucher
     *
     * @param int $voided_voucher <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_VOIDED_VOUCHER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setVoidedVoucher($voided_voucher)
    {
        $this->container['voided_voucher'] = $voided_voucher;

        return $this;
    }

    /**
     * Gets gl_account
     *
     * @return string
     */
    public function getGlAccount()
    {
        return $this->container['gl_account'];
    }

    /**
     * Sets gl_account
     *
     * @param string $gl_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_GLACCT_AP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlAccount($gl_account)
    {
        $this->container['gl_account'] = $gl_account;

        return $this;
    }

    /**
     * Gets gl_sub_account
     *
     * @return string
     */
    public function getGlSubAccount()
    {
        return $this->container['gl_sub_account'];
    }

    /**
     * Sets gl_sub_account
     *
     * @param string $gl_sub_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_GLSUB_AP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlSubAccount($gl_sub_account)
    {
        $this->container['gl_sub_account'] = $gl_sub_account;

        return $this;
    }

    /**
     * Gets discount_gl_account
     *
     * @return string
     */
    public function getDiscountGlAccount()
    {
        return $this->container['discount_gl_account'];
    }

    /**
     * Sets discount_gl_account
     *
     * @param string $discount_gl_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_GLACCT_DISC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDiscountGlAccount($discount_gl_account)
    {
        $this->container['discount_gl_account'] = $discount_gl_account;

        return $this;
    }

    /**
     * Gets discount_gl_sub_account
     *
     * @return string
     */
    public function getDiscountGlSubAccount()
    {
        return $this->container['discount_gl_sub_account'];
    }

    /**
     * Sets discount_gl_sub_account
     *
     * @param string $discount_gl_sub_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_GLSUB_DISC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDiscountGlSubAccount($discount_gl_sub_account)
    {
        $this->container['discount_gl_sub_account'] = $discount_gl_sub_account;

        return $this;
    }

    /**
     * Gets terms
     *
     * @return string
     */
    public function getTerms()
    {
        return $this->container['terms'];
    }

    /**
     * Sets terms
     *
     * @param string $terms <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_TERMS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTerms($terms)
    {
        $this->container['terms'] = $terms;

        return $this;
    }

    /**
     * Gets use_demographics
     *
     * @return string
     */
    public function getUseDemographics()
    {
        return $this->container['use_demographics'];
    }

    /**
     * Sets use_demographics
     *
     * @param string $use_demographics <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_USE_REMIT_ADDRESS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUseDemographics($use_demographics)
    {
        $this->container['use_demographics'] = $use_demographics;

        return $this;
    }

    /**
     * Gets payee
     *
     * @return string
     */
    public function getPayee()
    {
        return $this->container['payee'];
    }

    /**
     * Sets payee
     *
     * @param string $payee <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_NAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPayee($payee)
    {
        $this->container['payee'] = $payee;

        return $this;
    }

    /**
     * Gets address_line1
     *
     * @return string
     */
    public function getAddressLine1()
    {
        return $this->container['address_line1'];
    }

    /**
     * Sets address_line1
     *
     * @param string $address_line1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_ADDRESS1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAddressLine1($address_line1)
    {
        $this->container['address_line1'] = $address_line1;

        return $this;
    }

    /**
     * Gets address_line2
     *
     * @return string
     */
    public function getAddressLine2()
    {
        return $this->container['address_line2'];
    }

    /**
     * Sets address_line2
     *
     * @param string $address_line2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_ADDRESS2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAddressLine2($address_line2)
    {
        $this->container['address_line2'] = $address_line2;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string $city <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_CITY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string $state <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_STATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets postal_code
     *
     * @return string
     */
    public function getPostalCode()
    {
        return $this->container['postal_code'];
    }

    /**
     * Sets postal_code
     *
     * @param string $postal_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_POSTAL_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 25  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPostalCode($postal_code)
    {
        $this->container['postal_code'] = $postal_code;

        return $this;
    }

    /**
     * Gets country
     *
     * @return string
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     *
     * @param string $country <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_COUNTRY_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets contact_name
     *
     * @return string
     */
    public function getContactName()
    {
        return $this->container['contact_name'];
    }

    /**
     * Sets contact_name
     *
     * @param string $contact_name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_CONTACT_NAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 40  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContactName($contact_name)
    {
        $this->container['contact_name'] = $contact_name;

        return $this;
    }

    /**
     * Gets batch
     *
     * @return string
     */
    public function getBatch()
    {
        return $this->container['batch'];
    }

    /**
     * Sets batch
     *
     * @param string $batch <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_BATCH_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBatch($batch)
    {
        $this->container['batch'] = $batch;

        return $this;
    }

    /**
     * Gets local_gross_due
     *
     * @return double
     */
    public function getLocalGrossDue()
    {
        return $this->container['local_gross_due'];
    }

    /**
     * Sets local_gross_due
     *
     * @param double $local_gross_due <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_GROSS_DUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalGrossDue($local_gross_due)
    {
        $this->container['local_gross_due'] = $local_gross_due;

        return $this;
    }

    /**
     * Gets local_discount_taken
     *
     * @return double
     */
    public function getLocalDiscountTaken()
    {
        return $this->container['local_discount_taken'];
    }

    /**
     * Sets local_discount_taken
     *
     * @param double $local_discount_taken <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_DISC_TAKEN  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalDiscountTaken($local_discount_taken)
    {
        $this->container['local_discount_taken'] = $local_discount_taken;

        return $this;
    }

    /**
     * Gets local_gross_paid
     *
     * @return double
     */
    public function getLocalGrossPaid()
    {
        return $this->container['local_gross_paid'];
    }

    /**
     * Sets local_gross_paid
     *
     * @param double $local_gross_paid <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_GROSS_PAID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalGrossPaid($local_gross_paid)
    {
        $this->container['local_gross_paid'] = $local_gross_paid;

        return $this;
    }

    /**
     * Gets local_net_due
     *
     * @return double
     */
    public function getLocalNetDue()
    {
        return $this->container['local_net_due'];
    }

    /**
     * Sets local_net_due
     *
     * @param double $local_net_due <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_NET_DUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalNetDue($local_net_due)
    {
        $this->container['local_net_due'] = $local_net_due;

        return $this;
    }

    /**
     * Gets local_discount_available
     *
     * @return double
     */
    public function getLocalDiscountAvailable()
    {
        return $this->container['local_discount_available'];
    }

    /**
     * Sets local_discount_available
     *
     * @param double $local_discount_available <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_DISC_AVAILABLE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalDiscountAvailable($local_discount_available)
    {
        $this->container['local_discount_available'] = $local_discount_available;

        return $this;
    }

    /**
     * Gets local_discount_lost
     *
     * @return double
     */
    public function getLocalDiscountLost()
    {
        return $this->container['local_discount_lost'];
    }

    /**
     * Sets local_discount_lost
     *
     * @param double $local_discount_lost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_DISC_LOST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalDiscountLost($local_discount_lost)
    {
        $this->container['local_discount_lost'] = $local_discount_lost;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets local_withheld_amount
     *
     * @return double
     */
    public function getLocalWithheldAmount()
    {
        return $this->container['local_withheld_amount'];
    }

    /**
     * Sets local_withheld_amount
     *
     * @param double $local_withheld_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_WITHHELD_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalWithheldAmount($local_withheld_amount)
    {
        $this->container['local_withheld_amount'] = $local_withheld_amount;

        return $this;
    }

    /**
     * Gets hold_payment
     *
     * @return string
     */
    public function getHoldPayment()
    {
        return $this->container['hold_payment'];
    }

    /**
     * Sets hold_payment
     *
     * @param string $hold_payment <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_HOLD_PAYMENT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setHoldPayment($hold_payment)
    {
        $this->container['hold_payment'] = $hold_payment;

        return $this;
    }

    /**
     * Gets payment_method
     *
     * @return string
     */
    public function getPaymentMethod()
    {
        return $this->container['payment_method'];
    }

    /**
     * Sets payment_method
     *
     * @param string $payment_method <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_PAY_METHOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPaymentMethod($payment_method)
    {
        $this->container['payment_method'] = $payment_method;

        return $this;
    }

    /**
     * Gets local_withheld_actual
     *
     * @return double
     */
    public function getLocalWithheldActual()
    {
        return $this->container['local_withheld_actual'];
    }

    /**
     * Sets local_withheld_actual
     *
     * @param double $local_withheld_actual <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_WITHHELD_ACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalWithheldActual($local_withheld_actual)
    {
        $this->container['local_withheld_actual'] = $local_withheld_actual;

        return $this;
    }

    /**
     * Gets local_tax_amount
     *
     * @return double
     */
    public function getLocalTaxAmount()
    {
        return $this->container['local_tax_amount'];
    }

    /**
     * Sets local_tax_amount
     *
     * @param double $local_tax_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_TAX_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalTaxAmount($local_tax_amount)
    {
        $this->container['local_tax_amount'] = $local_tax_amount;

        return $this;
    }

    /**
     * Gets local_tax_paid
     *
     * @return double
     */
    public function getLocalTaxPaid()
    {
        return $this->container['local_tax_paid'];
    }

    /**
     * Sets local_tax_paid
     *
     * @param double $local_tax_paid <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_TAX_PAID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalTaxPaid($local_tax_paid)
    {
        $this->container['local_tax_paid'] = $local_tax_paid;

        return $this;
    }

    /**
     * Gets local_discount_tax
     *
     * @return double
     */
    public function getLocalDiscountTax()
    {
        return $this->container['local_discount_tax'];
    }

    /**
     * Sets local_discount_tax
     *
     * @param double $local_discount_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_DISCOUNT_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalDiscountTax($local_discount_tax)
    {
        $this->container['local_discount_tax'] = $local_discount_tax;

        return $this;
    }

    /**
     * Gets local_discount_tax_actual
     *
     * @return double
     */
    public function getLocalDiscountTaxActual()
    {
        return $this->container['local_discount_tax_actual'];
    }

    /**
     * Sets local_discount_tax_actual
     *
     * @param double $local_discount_tax_actual <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_DISCOUNT_TAX_ACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalDiscountTaxActual($local_discount_tax_actual)
    {
        $this->container['local_discount_tax_actual'] = $local_discount_tax_actual;

        return $this;
    }

    /**
     * Gets local_discount_withheld
     *
     * @return double
     */
    public function getLocalDiscountWithheld()
    {
        return $this->container['local_discount_withheld'];
    }

    /**
     * Sets local_discount_withheld
     *
     * @param double $local_discount_withheld <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_DISCOUNT_WH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalDiscountWithheld($local_discount_withheld)
    {
        $this->container['local_discount_withheld'] = $local_discount_withheld;

        return $this;
    }

    /**
     * Gets local_discount_withheld_actual
     *
     * @return double
     */
    public function getLocalDiscountWithheldActual()
    {
        return $this->container['local_discount_withheld_actual'];
    }

    /**
     * Sets local_discount_withheld_actual
     *
     * @param double $local_discount_withheld_actual <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_DISCOUNT_WH_ACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalDiscountWithheldActual($local_discount_withheld_actual)
    {
        $this->container['local_discount_withheld_actual'] = $local_discount_withheld_actual;

        return $this;
    }

    /**
     * Gets tax_id
     *
     * @return string
     */
    public function getTaxId()
    {
        return $this->container['tax_id'];
    }

    /**
     * Sets tax_id
     *
     * @param string $tax_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_TAX_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxId($tax_id)
    {
        $this->container['tax_id'] = $tax_id;

        return $this;
    }

    /**
     * Gets address_line3
     *
     * @return string
     */
    public function getAddressLine3()
    {
        return $this->container['address_line3'];
    }

    /**
     * Sets address_line3
     *
     * @param string $address_line3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_ADDRESS3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAddressLine3($address_line3)
    {
        $this->container['address_line3'] = $address_line3;

        return $this;
    }

    /**
     * Gets receipt_sequence
     *
     * @return int
     */
    public function getReceiptSequence()
    {
        return $this->container['receipt_sequence'];
    }

    /**
     * Sets receipt_sequence
     *
     * @param int $receipt_sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_INVOICE_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setReceiptSequence($receipt_sequence)
    {
        $this->container['receipt_sequence'] = $receipt_sequence;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_CURRENCY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets invoice_amount
     *
     * @return double
     */
    public function getInvoiceAmount()
    {
        return $this->container['invoice_amount'];
    }

    /**
     * Sets invoice_amount
     *
     * @param double $invoice_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_INVOICE_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoiceAmount($invoice_amount)
    {
        $this->container['invoice_amount'] = $invoice_amount;

        return $this;
    }

    /**
     * Gets discount_amount
     *
     * @return double
     */
    public function getDiscountAmount()
    {
        return $this->container['discount_amount'];
    }

    /**
     * Sets discount_amount
     *
     * @param double $discount_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_DISCOUNT_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDiscountAmount($discount_amount)
    {
        $this->container['discount_amount'] = $discount_amount;

        return $this;
    }

    /**
     * Gets gross_paid
     *
     * @return double
     */
    public function getGrossPaid()
    {
        return $this->container['gross_paid'];
    }

    /**
     * Sets gross_paid
     *
     * @param double $gross_paid <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_GROSS_PAID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGrossPaid($gross_paid)
    {
        $this->container['gross_paid'] = $gross_paid;

        return $this;
    }

    /**
     * Gets gross_due
     *
     * @return double
     */
    public function getGrossDue()
    {
        return $this->container['gross_due'];
    }

    /**
     * Sets gross_due
     *
     * @param double $gross_due <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_GROSS_DUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGrossDue($gross_due)
    {
        $this->container['gross_due'] = $gross_due;

        return $this;
    }

    /**
     * Gets discount_taken
     *
     * @return double
     */
    public function getDiscountTaken()
    {
        return $this->container['discount_taken'];
    }

    /**
     * Sets discount_taken
     *
     * @param double $discount_taken <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_DISCOUNT_TAKEN  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDiscountTaken($discount_taken)
    {
        $this->container['discount_taken'] = $discount_taken;

        return $this;
    }

    /**
     * Gets net_due_open
     *
     * @return double
     */
    public function getNetDueOpen()
    {
        return $this->container['net_due_open'];
    }

    /**
     * Sets net_due_open
     *
     * @param double $net_due_open <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_NET_DUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNetDueOpen($net_due_open)
    {
        $this->container['net_due_open'] = $net_due_open;

        return $this;
    }

    /**
     * Gets discount_available
     *
     * @return double
     */
    public function getDiscountAvailable()
    {
        return $this->container['discount_available'];
    }

    /**
     * Sets discount_available
     *
     * @param double $discount_available <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_DISC_AVAILABLE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDiscountAvailable($discount_available)
    {
        $this->container['discount_available'] = $discount_available;

        return $this;
    }

    /**
     * Gets discount_lost
     *
     * @return double
     */
    public function getDiscountLost()
    {
        return $this->container['discount_lost'];
    }

    /**
     * Sets discount_lost
     *
     * @param double $discount_lost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_DISC_LOST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDiscountLost($discount_lost)
    {
        $this->container['discount_lost'] = $discount_lost;

        return $this;
    }

    /**
     * Gets withheld_amount
     *
     * @return double
     */
    public function getWithheldAmount()
    {
        return $this->container['withheld_amount'];
    }

    /**
     * Sets withheld_amount
     *
     * @param double $withheld_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_WITHHELD_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setWithheldAmount($withheld_amount)
    {
        $this->container['withheld_amount'] = $withheld_amount;

        return $this;
    }

    /**
     * Gets withheld_actual
     *
     * @return double
     */
    public function getWithheldActual()
    {
        return $this->container['withheld_actual'];
    }

    /**
     * Sets withheld_actual
     *
     * @param double $withheld_actual <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_WITHHELD_ACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setWithheldActual($withheld_actual)
    {
        $this->container['withheld_actual'] = $withheld_actual;

        return $this;
    }

    /**
     * Gets tax_amount
     *
     * @return double
     */
    public function getTaxAmount()
    {
        return $this->container['tax_amount'];
    }

    /**
     * Sets tax_amount
     *
     * @param double $tax_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_TAX_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxAmount($tax_amount)
    {
        $this->container['tax_amount'] = $tax_amount;

        return $this;
    }

    /**
     * Gets tax_paid
     *
     * @return double
     */
    public function getTaxPaid()
    {
        return $this->container['tax_paid'];
    }

    /**
     * Sets tax_paid
     *
     * @param double $tax_paid <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_TAX_PAID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxPaid($tax_paid)
    {
        $this->container['tax_paid'] = $tax_paid;

        return $this;
    }

    /**
     * Gets discount_tax
     *
     * @return double
     */
    public function getDiscountTax()
    {
        return $this->container['discount_tax'];
    }

    /**
     * Sets discount_tax
     *
     * @param double $discount_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_DISCOUNT_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDiscountTax($discount_tax)
    {
        $this->container['discount_tax'] = $discount_tax;

        return $this;
    }

    /**
     * Gets discount_tax_actual
     *
     * @return double
     */
    public function getDiscountTaxActual()
    {
        return $this->container['discount_tax_actual'];
    }

    /**
     * Sets discount_tax_actual
     *
     * @param double $discount_tax_actual <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_DISCOUNT_TAX_ACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDiscountTaxActual($discount_tax_actual)
    {
        $this->container['discount_tax_actual'] = $discount_tax_actual;

        return $this;
    }

    /**
     * Gets discount_withheld
     *
     * @return double
     */
    public function getDiscountWithheld()
    {
        return $this->container['discount_withheld'];
    }

    /**
     * Sets discount_withheld
     *
     * @param double $discount_withheld <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_DISCOUNT_WH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDiscountWithheld($discount_withheld)
    {
        $this->container['discount_withheld'] = $discount_withheld;

        return $this;
    }

    /**
     * Gets discount_withheld_actual
     *
     * @return double
     */
    public function getDiscountWithheldActual()
    {
        return $this->container['discount_withheld_actual'];
    }

    /**
     * Sets discount_withheld_actual
     *
     * @param double $discount_withheld_actual <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_DISCOUNT_WH_ACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDiscountWithheldActual($discount_withheld_actual)
    {
        $this->container['discount_withheld_actual'] = $discount_withheld_actual;

        return $this;
    }

    /**
     * Gets local_prepaid_amount
     *
     * @return double
     */
    public function getLocalPrepaidAmount()
    {
        return $this->container['local_prepaid_amount'];
    }

    /**
     * Sets local_prepaid_amount
     *
     * @param double $local_prepaid_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_PP_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalPrepaidAmount($local_prepaid_amount)
    {
        $this->container['local_prepaid_amount'] = $local_prepaid_amount;

        return $this;
    }

    /**
     * Gets local_prepaid_amount_open
     *
     * @return double
     */
    public function getLocalPrepaidAmountOpen()
    {
        return $this->container['local_prepaid_amount_open'];
    }

    /**
     * Sets local_prepaid_amount_open
     *
     * @param double $local_prepaid_amount_open <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_PP_AMT_OPEN  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalPrepaidAmountOpen($local_prepaid_amount_open)
    {
        $this->container['local_prepaid_amount_open'] = $local_prepaid_amount_open;

        return $this;
    }

    /**
     * Gets prepaid_amount
     *
     * @return double
     */
    public function getPrepaidAmount()
    {
        return $this->container['prepaid_amount'];
    }

    /**
     * Sets prepaid_amount
     *
     * @param double $prepaid_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_PP_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPrepaidAmount($prepaid_amount)
    {
        $this->container['prepaid_amount'] = $prepaid_amount;

        return $this;
    }

    /**
     * Gets prepaid_amount_open
     *
     * @return double
     */
    public function getPrepaidAmountOpen()
    {
        return $this->container['prepaid_amount_open'];
    }

    /**
     * Sets prepaid_amount_open
     *
     * @param double $prepaid_amount_open <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_FC_PP_AMT_OPEN  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPrepaidAmountOpen($prepaid_amount_open)
    {
        $this->container['prepaid_amount_open'] = $prepaid_amount_open;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string $department <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_DEPT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets approval_level
     *
     * @return string
     */
    public function getApprovalLevel()
    {
        return $this->container['approval_level'];
    }

    /**
     * Sets approval_level
     *
     * @param string $approval_level <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_APPROVAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setApprovalLevel($approval_level)
    {
        $this->container['approval_level'] = $approval_level;

        return $this;
    }

    /**
     * Gets approval_status
     *
     * @return string
     */
    public function getApprovalStatus()
    {
        return $this->container['approval_status'];
    }

    /**
     * Sets approval_status
     *
     * @param string $approval_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_APPR_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setApprovalStatus($approval_status)
    {
        $this->container['approval_status'] = $approval_status;

        return $this;
    }

    /**
     * Gets approved_by
     *
     * @return string
     */
    public function getApprovedBy()
    {
        return $this->container['approved_by'];
    }

    /**
     * Sets approved_by
     *
     * @param string $approved_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_APPR_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setApprovedBy($approved_by)
    {
        $this->container['approved_by'] = $approved_by;

        return $this;
    }

    /**
     * Gets approved_on
     *
     * @return \DateTime
     */
    public function getApprovedOn()
    {
        return $this->container['approved_on'];
    }

    /**
     * Sets approved_on
     *
     * @param \DateTime $approved_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_APPR_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setApprovedOn($approved_on)
    {
        $this->container['approved_on'] = $approved_on;

        return $this;
    }

    /**
     * Gets book_control
     *
     * @return string
     */
    public function getBookControl()
    {
        return $this->container['book_control'];
    }

    /**
     * Sets book_control
     *
     * @param string $book_control <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_BOOK_CONTROL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBookControl($book_control)
    {
        $this->container['book_control'] = $book_control;

        return $this;
    }

    /**
     * Gets division
     *
     * @return string
     */
    public function getDivision()
    {
        return $this->container['division'];
    }

    /**
     * Sets division
     *
     * @param string $division <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP100_DIVISION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDivision($division)
    {
        $this->container['division'] = $division;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


