<?php
/**
 * DepartmentsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * DepartmentsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DepartmentsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'DepartmentsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'code' => 'string',
        'organization_code' => 'string',
        'description' => 'string',
        'group' => 'string',
        'sequence' => 'string',
        'format' => 'string',
        'printer' => 'string',
        'entered_by' => 'string',
        'entered_on' => '\DateTime',
        'changed_by' => 'string',
        'changed_on' => '\DateTime',
        'active' => 'string',
        'order' => 'string',
        'personnel' => 'string',
        'resource' => 'string',
        'inventory' => 'string',
        'purchasing' => 'string',
        'alt_description1' => 'string',
        'alt_description2' => 'string',
        'gl_distribution' => 'string',
        'account' => 'string',
        'services' => 'string',
        'function' => 'string',
        'contact' => 'string',
        'alt_description3' => 'string',
        'alt_description4' => 'string',
        'alt_description5' => 'string',
        'e_mail' => 'string',
        'responsibility_distribution' => 'string',
        'inventory_trace_list' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'code' => null,
        'organization_code' => null,
        'description' => null,
        'group' => null,
        'sequence' => null,
        'format' => null,
        'printer' => null,
        'entered_by' => null,
        'entered_on' => 'date-time',
        'changed_by' => null,
        'changed_on' => 'date-time',
        'active' => null,
        'order' => null,
        'personnel' => null,
        'resource' => null,
        'inventory' => null,
        'purchasing' => null,
        'alt_description1' => null,
        'alt_description2' => null,
        'gl_distribution' => null,
        'account' => null,
        'services' => null,
        'function' => null,
        'contact' => null,
        'alt_description3' => null,
        'alt_description4' => null,
        'alt_description5' => null,
        'e_mail' => null,
        'responsibility_distribution' => null,
        'inventory_trace_list' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'code' => 'Code',
        'organization_code' => 'OrganizationCode',
        'description' => 'Description',
        'group' => 'Group',
        'sequence' => 'Sequence',
        'format' => 'Format',
        'printer' => 'Printer',
        'entered_by' => 'EnteredBy',
        'entered_on' => 'EnteredOn',
        'changed_by' => 'ChangedBy',
        'changed_on' => 'ChangedOn',
        'active' => 'Active',
        'order' => 'Order',
        'personnel' => 'Personnel',
        'resource' => 'Resource',
        'inventory' => 'Inventory',
        'purchasing' => 'Purchasing',
        'alt_description1' => 'AltDescription1',
        'alt_description2' => 'AltDescription2',
        'gl_distribution' => 'GLDistribution',
        'account' => 'Account',
        'services' => 'Services',
        'function' => 'Function',
        'contact' => 'Contact',
        'alt_description3' => 'AltDescription3',
        'alt_description4' => 'AltDescription4',
        'alt_description5' => 'AltDescription5',
        'e_mail' => 'EMail',
        'responsibility_distribution' => 'ResponsibilityDistribution',
        'inventory_trace_list' => 'InventoryTraceList'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'code' => 'setCode',
        'organization_code' => 'setOrganizationCode',
        'description' => 'setDescription',
        'group' => 'setGroup',
        'sequence' => 'setSequence',
        'format' => 'setFormat',
        'printer' => 'setPrinter',
        'entered_by' => 'setEnteredBy',
        'entered_on' => 'setEnteredOn',
        'changed_by' => 'setChangedBy',
        'changed_on' => 'setChangedOn',
        'active' => 'setActive',
        'order' => 'setOrder',
        'personnel' => 'setPersonnel',
        'resource' => 'setResource',
        'inventory' => 'setInventory',
        'purchasing' => 'setPurchasing',
        'alt_description1' => 'setAltDescription1',
        'alt_description2' => 'setAltDescription2',
        'gl_distribution' => 'setGlDistribution',
        'account' => 'setAccount',
        'services' => 'setServices',
        'function' => 'setFunction',
        'contact' => 'setContact',
        'alt_description3' => 'setAltDescription3',
        'alt_description4' => 'setAltDescription4',
        'alt_description5' => 'setAltDescription5',
        'e_mail' => 'setEMail',
        'responsibility_distribution' => 'setResponsibilityDistribution',
        'inventory_trace_list' => 'setInventoryTraceList'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'code' => 'getCode',
        'organization_code' => 'getOrganizationCode',
        'description' => 'getDescription',
        'group' => 'getGroup',
        'sequence' => 'getSequence',
        'format' => 'getFormat',
        'printer' => 'getPrinter',
        'entered_by' => 'getEnteredBy',
        'entered_on' => 'getEnteredOn',
        'changed_by' => 'getChangedBy',
        'changed_on' => 'getChangedOn',
        'active' => 'getActive',
        'order' => 'getOrder',
        'personnel' => 'getPersonnel',
        'resource' => 'getResource',
        'inventory' => 'getInventory',
        'purchasing' => 'getPurchasing',
        'alt_description1' => 'getAltDescription1',
        'alt_description2' => 'getAltDescription2',
        'gl_distribution' => 'getGlDistribution',
        'account' => 'getAccount',
        'services' => 'getServices',
        'function' => 'getFunction',
        'contact' => 'getContact',
        'alt_description3' => 'getAltDescription3',
        'alt_description4' => 'getAltDescription4',
        'alt_description5' => 'getAltDescription5',
        'e_mail' => 'getEMail',
        'responsibility_distribution' => 'getResponsibilityDistribution',
        'inventory_trace_list' => 'getInventoryTraceList'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['code'] = isset($data['code']) ? $data['code'] : null;
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['group'] = isset($data['group']) ? $data['group'] : null;
        $this->container['sequence'] = isset($data['sequence']) ? $data['sequence'] : null;
        $this->container['format'] = isset($data['format']) ? $data['format'] : null;
        $this->container['printer'] = isset($data['printer']) ? $data['printer'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['active'] = isset($data['active']) ? $data['active'] : null;
        $this->container['order'] = isset($data['order']) ? $data['order'] : null;
        $this->container['personnel'] = isset($data['personnel']) ? $data['personnel'] : null;
        $this->container['resource'] = isset($data['resource']) ? $data['resource'] : null;
        $this->container['inventory'] = isset($data['inventory']) ? $data['inventory'] : null;
        $this->container['purchasing'] = isset($data['purchasing']) ? $data['purchasing'] : null;
        $this->container['alt_description1'] = isset($data['alt_description1']) ? $data['alt_description1'] : null;
        $this->container['alt_description2'] = isset($data['alt_description2']) ? $data['alt_description2'] : null;
        $this->container['gl_distribution'] = isset($data['gl_distribution']) ? $data['gl_distribution'] : null;
        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
        $this->container['services'] = isset($data['services']) ? $data['services'] : null;
        $this->container['function'] = isset($data['function']) ? $data['function'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['alt_description3'] = isset($data['alt_description3']) ? $data['alt_description3'] : null;
        $this->container['alt_description4'] = isset($data['alt_description4']) ? $data['alt_description4'] : null;
        $this->container['alt_description5'] = isset($data['alt_description5']) ? $data['alt_description5'] : null;
        $this->container['e_mail'] = isset($data['e_mail']) ? $data['e_mail'] : null;
        $this->container['responsibility_distribution'] = isset($data['responsibility_distribution']) ? $data['responsibility_distribution'] : null;
        $this->container['inventory_trace_list'] = isset($data['inventory_trace_list']) ? $data['inventory_trace_list'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['code'] === null) {
            $invalidProperties[] = "'code' can't be null";
        }
        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['group'] === null) {
            $invalidProperties[] = "'group' can't be null";
        }
        if ($this->container['sequence'] === null) {
            $invalidProperties[] = "'sequence' can't be null";
        }
        if ($this->container['format'] === null) {
            $invalidProperties[] = "'format' can't be null";
        }
        if ($this->container['printer'] === null) {
            $invalidProperties[] = "'printer' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['active'] === null) {
            $invalidProperties[] = "'active' can't be null";
        }
        if ($this->container['order'] === null) {
            $invalidProperties[] = "'order' can't be null";
        }
        if ($this->container['personnel'] === null) {
            $invalidProperties[] = "'personnel' can't be null";
        }
        if ($this->container['resource'] === null) {
            $invalidProperties[] = "'resource' can't be null";
        }
        if ($this->container['inventory'] === null) {
            $invalidProperties[] = "'inventory' can't be null";
        }
        if ($this->container['purchasing'] === null) {
            $invalidProperties[] = "'purchasing' can't be null";
        }
        if ($this->container['alt_description1'] === null) {
            $invalidProperties[] = "'alt_description1' can't be null";
        }
        if ($this->container['alt_description2'] === null) {
            $invalidProperties[] = "'alt_description2' can't be null";
        }
        if ($this->container['gl_distribution'] === null) {
            $invalidProperties[] = "'gl_distribution' can't be null";
        }
        if ($this->container['account'] === null) {
            $invalidProperties[] = "'account' can't be null";
        }
        if ($this->container['services'] === null) {
            $invalidProperties[] = "'services' can't be null";
        }
        if ($this->container['function'] === null) {
            $invalidProperties[] = "'function' can't be null";
        }
        if ($this->container['contact'] === null) {
            $invalidProperties[] = "'contact' can't be null";
        }
        if ($this->container['alt_description3'] === null) {
            $invalidProperties[] = "'alt_description3' can't be null";
        }
        if ($this->container['alt_description4'] === null) {
            $invalidProperties[] = "'alt_description4' can't be null";
        }
        if ($this->container['alt_description5'] === null) {
            $invalidProperties[] = "'alt_description5' can't be null";
        }
        if ($this->container['e_mail'] === null) {
            $invalidProperties[] = "'e_mail' can't be null";
        }
        if ($this->container['responsibility_distribution'] === null) {
            $invalidProperties[] = "'responsibility_distribution' can't be null";
        }
        if ($this->container['inventory_trace_list'] === null) {
            $invalidProperties[] = "'inventory_trace_list' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets code
     *
     * @return string
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string $code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_DEPT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_DEPT_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets group
     *
     * @return string
     */
    public function getGroup()
    {
        return $this->container['group'];
    }

    /**
     * Sets group
     *
     * @param string $group <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_DEPT_GROUP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGroup($group)
    {
        $this->container['group'] = $group;

        return $this;
    }

    /**
     * Gets sequence
     *
     * @return string
     */
    public function getSequence()
    {
        return $this->container['sequence'];
    }

    /**
     * Sets sequence
     *
     * @param string $sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_DEPT_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSequence($sequence)
    {
        $this->container['sequence'] = $sequence;

        return $this;
    }

    /**
     * Gets format
     *
     * @return string
     */
    public function getFormat()
    {
        return $this->container['format'];
    }

    /**
     * Sets format
     *
     * @param string $format <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_DEPT_FORMAT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFormat($format)
    {
        $this->container['format'] = $format;

        return $this;
    }

    /**
     * Gets printer
     *
     * @return string
     */
    public function getPrinter()
    {
        return $this->container['printer'];
    }

    /**
     * Sets printer
     *
     * @param string $printer <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_DEPT_PRINTER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPrinter($printer)
    {
        $this->container['printer'] = $printer;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets active
     *
     * @return string
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param string $active <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets order
     *
     * @return string
     */
    public function getOrder()
    {
        return $this->container['order'];
    }

    /**
     * Sets order
     *
     * @param string $order <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_ORD_DPT_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrder($order)
    {
        $this->container['order'] = $order;

        return $this;
    }

    /**
     * Gets personnel
     *
     * @return string
     */
    public function getPersonnel()
    {
        return $this->container['personnel'];
    }

    /**
     * Sets personnel
     *
     * @param string $personnel <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_PRS_DPT_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPersonnel($personnel)
    {
        $this->container['personnel'] = $personnel;

        return $this;
    }

    /**
     * Gets resource
     *
     * @return string
     */
    public function getResource()
    {
        return $this->container['resource'];
    }

    /**
     * Sets resource
     *
     * @param string $resource <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_RES_DPT_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setResource($resource)
    {
        $this->container['resource'] = $resource;

        return $this;
    }

    /**
     * Gets inventory
     *
     * @return string
     */
    public function getInventory()
    {
        return $this->container['inventory'];
    }

    /**
     * Sets inventory
     *
     * @param string $inventory <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_INV_DPT_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInventory($inventory)
    {
        $this->container['inventory'] = $inventory;

        return $this;
    }

    /**
     * Gets purchasing
     *
     * @return string
     */
    public function getPurchasing()
    {
        return $this->container['purchasing'];
    }

    /**
     * Sets purchasing
     *
     * @param string $purchasing <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_POR_DPT_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPurchasing($purchasing)
    {
        $this->container['purchasing'] = $purchasing;

        return $this;
    }

    /**
     * Gets alt_description1
     *
     * @return string
     */
    public function getAltDescription1()
    {
        return $this->container['alt_description1'];
    }

    /**
     * Sets alt_description1
     *
     * @param string $alt_description1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_ALT_DEPT_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAltDescription1($alt_description1)
    {
        $this->container['alt_description1'] = $alt_description1;

        return $this;
    }

    /**
     * Gets alt_description2
     *
     * @return string
     */
    public function getAltDescription2()
    {
        return $this->container['alt_description2'];
    }

    /**
     * Sets alt_description2
     *
     * @param string $alt_description2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_ALT_DEPT_DESC2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAltDescription2($alt_description2)
    {
        $this->container['alt_description2'] = $alt_description2;

        return $this;
    }

    /**
     * Gets gl_distribution
     *
     * @return string
     */
    public function getGlDistribution()
    {
        return $this->container['gl_distribution'];
    }

    /**
     * Sets gl_distribution
     *
     * @param string $gl_distribution <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_RVD_DPT_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlDistribution($gl_distribution)
    {
        $this->container['gl_distribution'] = $gl_distribution;

        return $this;
    }

    /**
     * Gets account
     *
     * @return string
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param string $account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_ACCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets services
     *
     * @return string
     */
    public function getServices()
    {
        return $this->container['services'];
    }

    /**
     * Sets services
     *
     * @param string $services <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_SVC_DPT_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setServices($services)
    {
        $this->container['services'] = $services;

        return $this;
    }

    /**
     * Gets function
     *
     * @return string
     */
    public function getFunction()
    {
        return $this->container['function'];
    }

    /**
     * Sets function
     *
     * @param string $function <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_FNC_DPT_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFunction($function)
    {
        $this->container['function'] = $function;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return string
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param string $contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_CNTCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets alt_description3
     *
     * @return string
     */
    public function getAltDescription3()
    {
        return $this->container['alt_description3'];
    }

    /**
     * Sets alt_description3
     *
     * @param string $alt_description3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_ALT_DEPT_DESC3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAltDescription3($alt_description3)
    {
        $this->container['alt_description3'] = $alt_description3;

        return $this;
    }

    /**
     * Gets alt_description4
     *
     * @return string
     */
    public function getAltDescription4()
    {
        return $this->container['alt_description4'];
    }

    /**
     * Sets alt_description4
     *
     * @param string $alt_description4 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_ALT_DEPT_DESC4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAltDescription4($alt_description4)
    {
        $this->container['alt_description4'] = $alt_description4;

        return $this;
    }

    /**
     * Gets alt_description5
     *
     * @return string
     */
    public function getAltDescription5()
    {
        return $this->container['alt_description5'];
    }

    /**
     * Sets alt_description5
     *
     * @param string $alt_description5 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_ALT_DEPT_DESC5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAltDescription5($alt_description5)
    {
        $this->container['alt_description5'] = $alt_description5;

        return $this;
    }

    /**
     * Gets e_mail
     *
     * @return string
     */
    public function getEMail()
    {
        return $this->container['e_mail'];
    }

    /**
     * Sets e_mail
     *
     * @param string $e_mail <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_DEPT_EMAIL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEMail($e_mail)
    {
        $this->container['e_mail'] = $e_mail;

        return $this;
    }

    /**
     * Gets responsibility_distribution
     *
     * @return string
     */
    public function getResponsibilityDistribution()
    {
        return $this->container['responsibility_distribution'];
    }

    /**
     * Sets responsibility_distribution
     *
     * @param string $responsibility_distribution <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_DIST_FLAG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setResponsibilityDistribution($responsibility_distribution)
    {
        $this->container['responsibility_distribution'] = $responsibility_distribution;

        return $this;
    }

    /**
     * Gets inventory_trace_list
     *
     * @return string
     */
    public function getInventoryTraceList()
    {
        return $this->container['inventory_trace_list'];
    }

    /**
     * Sets inventory_trace_list
     *
     * @param string $inventory_trace_list <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV065_INV_TRC_LIST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInventoryTraceList($inventory_trace_list)
    {
        $this->container['inventory_trace_list'] = $inventory_trace_list;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


