<?php
/**
 * InvoiceDetailTaxesModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * InvoiceDetailTaxesModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InvoiceDetailTaxesModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'InvoiceDetailTaxesModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'order_number' => 'int',
        'order_line_number' => 'int',
        'sequence_number' => 'int',
        'invoice_number' => 'int',
        'organization_code' => 'string',
        'tax_resource_type' => 'string',
        'tax_resource_code' => 'string',
        'extended_charge' => 'double',
        'fc_extended_charge' => 'double',
        'unit_charge' => 'double',
        'fc_unit_charge' => 'double',
        'item_units' => 'double',
        'fc_item_units' => 'double',
        'tax_order_line' => 'int',
        'exclusive_inclusive_tax_flag' => 'string',
        'entered_date_time' => '\DateTime',
        'entered_by_user_id' => 'string',
        'last_changed_date_time' => '\DateTime',
        'last_changed_by_user_id' => 'string',
        'tax_basis' => 'string',
        'round_charge_flag' => 'string',
        'round_to_nearest' => 'double',
        'per_units' => 'int',
        'item_tax_category' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'order_number' => 'int32',
        'order_line_number' => 'int32',
        'sequence_number' => 'int32',
        'invoice_number' => 'int32',
        'organization_code' => null,
        'tax_resource_type' => null,
        'tax_resource_code' => null,
        'extended_charge' => 'double',
        'fc_extended_charge' => 'double',
        'unit_charge' => 'double',
        'fc_unit_charge' => 'double',
        'item_units' => 'double',
        'fc_item_units' => 'double',
        'tax_order_line' => 'int32',
        'exclusive_inclusive_tax_flag' => null,
        'entered_date_time' => 'date-time',
        'entered_by_user_id' => null,
        'last_changed_date_time' => 'date-time',
        'last_changed_by_user_id' => null,
        'tax_basis' => null,
        'round_charge_flag' => null,
        'round_to_nearest' => 'double',
        'per_units' => 'int32',
        'item_tax_category' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'order_number' => 'OrderNumber',
        'order_line_number' => 'OrderLineNumber',
        'sequence_number' => 'SequenceNumber',
        'invoice_number' => 'InvoiceNumber',
        'organization_code' => 'OrganizationCode',
        'tax_resource_type' => 'TaxResourceType',
        'tax_resource_code' => 'TaxResourceCode',
        'extended_charge' => 'ExtendedCharge',
        'fc_extended_charge' => 'FCExtendedCharge',
        'unit_charge' => 'UnitCharge',
        'fc_unit_charge' => 'FCUnitCharge',
        'item_units' => 'ItemUnits',
        'fc_item_units' => 'FCItemUnits',
        'tax_order_line' => 'TaxOrderLine',
        'exclusive_inclusive_tax_flag' => 'ExclusiveInclusiveTaxFlag',
        'entered_date_time' => 'EnteredDateTime',
        'entered_by_user_id' => 'EnteredByUserID',
        'last_changed_date_time' => 'LastChangedDateTime',
        'last_changed_by_user_id' => 'LastChangedByUserID',
        'tax_basis' => 'TaxBasis',
        'round_charge_flag' => 'RoundChargeFlag',
        'round_to_nearest' => 'RoundToNearest',
        'per_units' => 'PerUnits',
        'item_tax_category' => 'ItemTaxCategory'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'order_number' => 'setOrderNumber',
        'order_line_number' => 'setOrderLineNumber',
        'sequence_number' => 'setSequenceNumber',
        'invoice_number' => 'setInvoiceNumber',
        'organization_code' => 'setOrganizationCode',
        'tax_resource_type' => 'setTaxResourceType',
        'tax_resource_code' => 'setTaxResourceCode',
        'extended_charge' => 'setExtendedCharge',
        'fc_extended_charge' => 'setFcExtendedCharge',
        'unit_charge' => 'setUnitCharge',
        'fc_unit_charge' => 'setFcUnitCharge',
        'item_units' => 'setItemUnits',
        'fc_item_units' => 'setFcItemUnits',
        'tax_order_line' => 'setTaxOrderLine',
        'exclusive_inclusive_tax_flag' => 'setExclusiveInclusiveTaxFlag',
        'entered_date_time' => 'setEnteredDateTime',
        'entered_by_user_id' => 'setEnteredByUserId',
        'last_changed_date_time' => 'setLastChangedDateTime',
        'last_changed_by_user_id' => 'setLastChangedByUserId',
        'tax_basis' => 'setTaxBasis',
        'round_charge_flag' => 'setRoundChargeFlag',
        'round_to_nearest' => 'setRoundToNearest',
        'per_units' => 'setPerUnits',
        'item_tax_category' => 'setItemTaxCategory'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'order_number' => 'getOrderNumber',
        'order_line_number' => 'getOrderLineNumber',
        'sequence_number' => 'getSequenceNumber',
        'invoice_number' => 'getInvoiceNumber',
        'organization_code' => 'getOrganizationCode',
        'tax_resource_type' => 'getTaxResourceType',
        'tax_resource_code' => 'getTaxResourceCode',
        'extended_charge' => 'getExtendedCharge',
        'fc_extended_charge' => 'getFcExtendedCharge',
        'unit_charge' => 'getUnitCharge',
        'fc_unit_charge' => 'getFcUnitCharge',
        'item_units' => 'getItemUnits',
        'fc_item_units' => 'getFcItemUnits',
        'tax_order_line' => 'getTaxOrderLine',
        'exclusive_inclusive_tax_flag' => 'getExclusiveInclusiveTaxFlag',
        'entered_date_time' => 'getEnteredDateTime',
        'entered_by_user_id' => 'getEnteredByUserId',
        'last_changed_date_time' => 'getLastChangedDateTime',
        'last_changed_by_user_id' => 'getLastChangedByUserId',
        'tax_basis' => 'getTaxBasis',
        'round_charge_flag' => 'getRoundChargeFlag',
        'round_to_nearest' => 'getRoundToNearest',
        'per_units' => 'getPerUnits',
        'item_tax_category' => 'getItemTaxCategory'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['order_number'] = isset($data['order_number']) ? $data['order_number'] : null;
        $this->container['order_line_number'] = isset($data['order_line_number']) ? $data['order_line_number'] : null;
        $this->container['sequence_number'] = isset($data['sequence_number']) ? $data['sequence_number'] : null;
        $this->container['invoice_number'] = isset($data['invoice_number']) ? $data['invoice_number'] : null;
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['tax_resource_type'] = isset($data['tax_resource_type']) ? $data['tax_resource_type'] : null;
        $this->container['tax_resource_code'] = isset($data['tax_resource_code']) ? $data['tax_resource_code'] : null;
        $this->container['extended_charge'] = isset($data['extended_charge']) ? $data['extended_charge'] : null;
        $this->container['fc_extended_charge'] = isset($data['fc_extended_charge']) ? $data['fc_extended_charge'] : null;
        $this->container['unit_charge'] = isset($data['unit_charge']) ? $data['unit_charge'] : null;
        $this->container['fc_unit_charge'] = isset($data['fc_unit_charge']) ? $data['fc_unit_charge'] : null;
        $this->container['item_units'] = isset($data['item_units']) ? $data['item_units'] : null;
        $this->container['fc_item_units'] = isset($data['fc_item_units']) ? $data['fc_item_units'] : null;
        $this->container['tax_order_line'] = isset($data['tax_order_line']) ? $data['tax_order_line'] : null;
        $this->container['exclusive_inclusive_tax_flag'] = isset($data['exclusive_inclusive_tax_flag']) ? $data['exclusive_inclusive_tax_flag'] : null;
        $this->container['entered_date_time'] = isset($data['entered_date_time']) ? $data['entered_date_time'] : null;
        $this->container['entered_by_user_id'] = isset($data['entered_by_user_id']) ? $data['entered_by_user_id'] : null;
        $this->container['last_changed_date_time'] = isset($data['last_changed_date_time']) ? $data['last_changed_date_time'] : null;
        $this->container['last_changed_by_user_id'] = isset($data['last_changed_by_user_id']) ? $data['last_changed_by_user_id'] : null;
        $this->container['tax_basis'] = isset($data['tax_basis']) ? $data['tax_basis'] : null;
        $this->container['round_charge_flag'] = isset($data['round_charge_flag']) ? $data['round_charge_flag'] : null;
        $this->container['round_to_nearest'] = isset($data['round_to_nearest']) ? $data['round_to_nearest'] : null;
        $this->container['per_units'] = isset($data['per_units']) ? $data['per_units'] : null;
        $this->container['item_tax_category'] = isset($data['item_tax_category']) ? $data['item_tax_category'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['order_number'] === null) {
            $invalidProperties[] = "'order_number' can't be null";
        }
        if ($this->container['order_line_number'] === null) {
            $invalidProperties[] = "'order_line_number' can't be null";
        }
        if ($this->container['sequence_number'] === null) {
            $invalidProperties[] = "'sequence_number' can't be null";
        }
        if ($this->container['invoice_number'] === null) {
            $invalidProperties[] = "'invoice_number' can't be null";
        }
        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['tax_resource_type'] === null) {
            $invalidProperties[] = "'tax_resource_type' can't be null";
        }
        if ($this->container['tax_resource_code'] === null) {
            $invalidProperties[] = "'tax_resource_code' can't be null";
        }
        if ($this->container['extended_charge'] === null) {
            $invalidProperties[] = "'extended_charge' can't be null";
        }
        if ($this->container['fc_extended_charge'] === null) {
            $invalidProperties[] = "'fc_extended_charge' can't be null";
        }
        if ($this->container['unit_charge'] === null) {
            $invalidProperties[] = "'unit_charge' can't be null";
        }
        if ($this->container['fc_unit_charge'] === null) {
            $invalidProperties[] = "'fc_unit_charge' can't be null";
        }
        if ($this->container['item_units'] === null) {
            $invalidProperties[] = "'item_units' can't be null";
        }
        if ($this->container['fc_item_units'] === null) {
            $invalidProperties[] = "'fc_item_units' can't be null";
        }
        if ($this->container['tax_order_line'] === null) {
            $invalidProperties[] = "'tax_order_line' can't be null";
        }
        if ($this->container['exclusive_inclusive_tax_flag'] === null) {
            $invalidProperties[] = "'exclusive_inclusive_tax_flag' can't be null";
        }
        if ($this->container['entered_date_time'] === null) {
            $invalidProperties[] = "'entered_date_time' can't be null";
        }
        if ($this->container['entered_by_user_id'] === null) {
            $invalidProperties[] = "'entered_by_user_id' can't be null";
        }
        if ($this->container['last_changed_date_time'] === null) {
            $invalidProperties[] = "'last_changed_date_time' can't be null";
        }
        if ($this->container['last_changed_by_user_id'] === null) {
            $invalidProperties[] = "'last_changed_by_user_id' can't be null";
        }
        if ($this->container['tax_basis'] === null) {
            $invalidProperties[] = "'tax_basis' can't be null";
        }
        if ($this->container['round_charge_flag'] === null) {
            $invalidProperties[] = "'round_charge_flag' can't be null";
        }
        if ($this->container['round_to_nearest'] === null) {
            $invalidProperties[] = "'round_to_nearest' can't be null";
        }
        if ($this->container['per_units'] === null) {
            $invalidProperties[] = "'per_units' can't be null";
        }
        if ($this->container['item_tax_category'] === null) {
            $invalidProperties[] = "'item_tax_category' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets order_number
     *
     * @return int
     */
    public function getOrderNumber()
    {
        return $this->container['order_number'];
    }

    /**
     * Sets order_number
     *
     * @param int $order_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_ORD_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderNumber($order_number)
    {
        $this->container['order_number'] = $order_number;

        return $this;
    }

    /**
     * Gets order_line_number
     *
     * @return int
     */
    public function getOrderLineNumber()
    {
        return $this->container['order_line_number'];
    }

    /**
     * Sets order_line_number
     *
     * @param int $order_line_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_ORD_LINE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderLineNumber($order_line_number)
    {
        $this->container['order_line_number'] = $order_line_number;

        return $this;
    }

    /**
     * Gets sequence_number
     *
     * @return int
     */
    public function getSequenceNumber()
    {
        return $this->container['sequence_number'];
    }

    /**
     * Sets sequence_number
     *
     * @param int $sequence_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_SEQ_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSequenceNumber($sequence_number)
    {
        $this->container['sequence_number'] = $sequence_number;

        return $this;
    }

    /**
     * Gets invoice_number
     *
     * @return int
     */
    public function getInvoiceNumber()
    {
        return $this->container['invoice_number'];
    }

    /**
     * Sets invoice_number
     *
     * @param int $invoice_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_INVOICE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoiceNumber($invoice_number)
    {
        $this->container['invoice_number'] = $invoice_number;

        return $this;
    }

    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets tax_resource_type
     *
     * @return string
     */
    public function getTaxResourceType()
    {
        return $this->container['tax_resource_type'];
    }

    /**
     * Sets tax_resource_type
     *
     * @param string $tax_resource_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_RES_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxResourceType($tax_resource_type)
    {
        $this->container['tax_resource_type'] = $tax_resource_type;

        return $this;
    }

    /**
     * Gets tax_resource_code
     *
     * @return string
     */
    public function getTaxResourceCode()
    {
        return $this->container['tax_resource_code'];
    }

    /**
     * Sets tax_resource_code
     *
     * @param string $tax_resource_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_RES_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxResourceCode($tax_resource_code)
    {
        $this->container['tax_resource_code'] = $tax_resource_code;

        return $this;
    }

    /**
     * Gets extended_charge
     *
     * @return double
     */
    public function getExtendedCharge()
    {
        return $this->container['extended_charge'];
    }

    /**
     * Sets extended_charge
     *
     * @param double $extended_charge <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_EXT_CHRG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 198  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExtendedCharge($extended_charge)
    {
        $this->container['extended_charge'] = $extended_charge;

        return $this;
    }

    /**
     * Gets fc_extended_charge
     *
     * @return double
     */
    public function getFcExtendedCharge()
    {
        return $this->container['fc_extended_charge'];
    }

    /**
     * Sets fc_extended_charge
     *
     * @param double $fc_extended_charge <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_EXT_CHRG_FC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 198  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcExtendedCharge($fc_extended_charge)
    {
        $this->container['fc_extended_charge'] = $fc_extended_charge;

        return $this;
    }

    /**
     * Gets unit_charge
     *
     * @return double
     */
    public function getUnitCharge()
    {
        return $this->container['unit_charge'];
    }

    /**
     * Sets unit_charge
     *
     * @param double $unit_charge <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_UNIT_CHRG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 198  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUnitCharge($unit_charge)
    {
        $this->container['unit_charge'] = $unit_charge;

        return $this;
    }

    /**
     * Gets fc_unit_charge
     *
     * @return double
     */
    public function getFcUnitCharge()
    {
        return $this->container['fc_unit_charge'];
    }

    /**
     * Sets fc_unit_charge
     *
     * @param double $fc_unit_charge <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_UNIT_CHRG_FC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 198  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcUnitCharge($fc_unit_charge)
    {
        $this->container['fc_unit_charge'] = $fc_unit_charge;

        return $this;
    }

    /**
     * Gets item_units
     *
     * @return double
     */
    public function getItemUnits()
    {
        return $this->container['item_units'];
    }

    /**
     * Sets item_units
     *
     * @param double $item_units <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_RES_QTY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 198  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setItemUnits($item_units)
    {
        $this->container['item_units'] = $item_units;

        return $this;
    }

    /**
     * Gets fc_item_units
     *
     * @return double
     */
    public function getFcItemUnits()
    {
        return $this->container['fc_item_units'];
    }

    /**
     * Sets fc_item_units
     *
     * @param double $fc_item_units <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_RES_QTY_FC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 198  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcItemUnits($fc_item_units)
    {
        $this->container['fc_item_units'] = $fc_item_units;

        return $this;
    }

    /**
     * Gets tax_order_line
     *
     * @return int
     */
    public function getTaxOrderLine()
    {
        return $this->container['tax_order_line'];
    }

    /**
     * Sets tax_order_line
     *
     * @param int $tax_order_line <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_TAX_ORD_LINE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxOrderLine($tax_order_line)
    {
        $this->container['tax_order_line'] = $tax_order_line;

        return $this;
    }

    /**
     * Gets exclusive_inclusive_tax_flag
     *
     * @return string
     */
    public function getExclusiveInclusiveTaxFlag()
    {
        return $this->container['exclusive_inclusive_tax_flag'];
    }

    /**
     * Sets exclusive_inclusive_tax_flag
     *
     * @param string $exclusive_inclusive_tax_flag <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_TAX_EI  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExclusiveInclusiveTaxFlag($exclusive_inclusive_tax_flag)
    {
        $this->container['exclusive_inclusive_tax_flag'] = $exclusive_inclusive_tax_flag;

        return $this;
    }

    /**
     * Gets entered_date_time
     *
     * @return \DateTime
     */
    public function getEnteredDateTime()
    {
        return $this->container['entered_date_time'];
    }

    /**
     * Sets entered_date_time
     *
     * @param \DateTime $entered_date_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredDateTime($entered_date_time)
    {
        $this->container['entered_date_time'] = $entered_date_time;

        return $this;
    }

    /**
     * Gets entered_by_user_id
     *
     * @return string
     */
    public function getEnteredByUserId()
    {
        return $this->container['entered_by_user_id'];
    }

    /**
     * Sets entered_by_user_id
     *
     * @param string $entered_by_user_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredByUserId($entered_by_user_id)
    {
        $this->container['entered_by_user_id'] = $entered_by_user_id;

        return $this;
    }

    /**
     * Gets last_changed_date_time
     *
     * @return \DateTime
     */
    public function getLastChangedDateTime()
    {
        return $this->container['last_changed_date_time'];
    }

    /**
     * Sets last_changed_date_time
     *
     * @param \DateTime $last_changed_date_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastChangedDateTime($last_changed_date_time)
    {
        $this->container['last_changed_date_time'] = $last_changed_date_time;

        return $this;
    }

    /**
     * Gets last_changed_by_user_id
     *
     * @return string
     */
    public function getLastChangedByUserId()
    {
        return $this->container['last_changed_by_user_id'];
    }

    /**
     * Sets last_changed_by_user_id
     *
     * @param string $last_changed_by_user_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastChangedByUserId($last_changed_by_user_id)
    {
        $this->container['last_changed_by_user_id'] = $last_changed_by_user_id;

        return $this;
    }

    /**
     * Gets tax_basis
     *
     * @return string
     */
    public function getTaxBasis()
    {
        return $this->container['tax_basis'];
    }

    /**
     * Sets tax_basis
     *
     * @param string $tax_basis <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_TAX_BASIS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxBasis($tax_basis)
    {
        $this->container['tax_basis'] = $tax_basis;

        return $this;
    }

    /**
     * Gets round_charge_flag
     *
     * @return string
     */
    public function getRoundChargeFlag()
    {
        return $this->container['round_charge_flag'];
    }

    /**
     * Sets round_charge_flag
     *
     * @param string $round_charge_flag <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_ROUND_CHRG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRoundChargeFlag($round_charge_flag)
    {
        $this->container['round_charge_flag'] = $round_charge_flag;

        return $this;
    }

    /**
     * Gets round_to_nearest
     *
     * @return double
     */
    public function getRoundToNearest()
    {
        return $this->container['round_to_nearest'];
    }

    /**
     * Sets round_to_nearest
     *
     * @param double $round_to_nearest <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_ROUND_NEAREST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 72  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRoundToNearest($round_to_nearest)
    {
        $this->container['round_to_nearest'] = $round_to_nearest;

        return $this;
    }

    /**
     * Gets per_units
     *
     * @return int
     */
    public function getPerUnits()
    {
        return $this->container['per_units'];
    }

    /**
     * Sets per_units
     *
     * @param int $per_units <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_RES_PER_UNITS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPerUnits($per_units)
    {
        $this->container['per_units'] = $per_units;

        return $this;
    }

    /**
     * Gets item_tax_category
     *
     * @return string
     */
    public function getItemTaxCategory()
    {
        return $this->container['item_tax_category'];
    }

    /**
     * Sets item_tax_category
     *
     * @param string $item_tax_category <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER207_RES_CATEGORY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setItemTaxCategory($item_tax_category)
    {
        $this->container['item_tax_category'] = $item_tax_category;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


