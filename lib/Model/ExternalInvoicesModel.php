<?php
/**
 * ExternalInvoicesModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * ExternalInvoicesModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ExternalInvoicesModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ExternalInvoicesModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'header_id_ext' => 'int',
        'summary_id_ext' => 'int',
        'due_date_ext' => '\DateTime',
        'amount_due_ext' => 'double',
        'external_bank_number_ext' => 'string',
        'constant_symbol_ext' => 'string',
        'customer_number_ext' => 'string',
        'date_issued_ext' => '\DateTime',
        'iban_ext' => 'string',
        'invoice_ext' => 'string',
        'order_number_ext' => 'string',
        'recipient_address_ext' => 'string',
        'recipient_tax_number_ext' => 'string',
        'recipient_customer_id_ext' => 'string',
        'recipient_name_ext' => 'string',
        'recipient_vat_number_ext' => 'string',
        'supplier_address_ext' => 'string',
        'supplier_tax_number_ext' => 'string',
        'supplier_company_id_ext' => 'string',
        'supplier_name_ext' => 'string',
        'supplier_vat_number_ext' => 'string',
        'specific_symbol_ext' => 'string',
        'terms_ext' => 'string',
        'currency_ext' => 'string',
        'language_ext' => 'string',
        'total_amount_ext' => 'double',
        'amount_paid_ext' => 'double',
        'tax_base_total_ext' => 'double',
        'tax_total_ext' => 'double',
        'changed_by' => 'string',
        'entered_by' => 'string',
        'changed_on' => '\DateTime',
        'entered_on' => '\DateTime',
        'external_bank_code_ext' => 'string',
        'external_bank_identifier_code_ext' => 'string',
        'account_supplier' => 'string',
        'invoice' => 'string',
        'terms' => 'string',
        'invoice_date' => '\DateTime',
        'due_date' => '\DateTime',
        'currency' => 'string',
        'department' => 'string',
        'book' => 'string',
        'invoice_amount' => 'double',
        'voucher' => 'int',
        'status' => 'string',
        'message' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'header_id_ext' => 'int32',
        'summary_id_ext' => 'int32',
        'due_date_ext' => 'date-time',
        'amount_due_ext' => 'double',
        'external_bank_number_ext' => null,
        'constant_symbol_ext' => null,
        'customer_number_ext' => null,
        'date_issued_ext' => 'date-time',
        'iban_ext' => null,
        'invoice_ext' => null,
        'order_number_ext' => null,
        'recipient_address_ext' => null,
        'recipient_tax_number_ext' => null,
        'recipient_customer_id_ext' => null,
        'recipient_name_ext' => null,
        'recipient_vat_number_ext' => null,
        'supplier_address_ext' => null,
        'supplier_tax_number_ext' => null,
        'supplier_company_id_ext' => null,
        'supplier_name_ext' => null,
        'supplier_vat_number_ext' => null,
        'specific_symbol_ext' => null,
        'terms_ext' => null,
        'currency_ext' => null,
        'language_ext' => null,
        'total_amount_ext' => 'double',
        'amount_paid_ext' => 'double',
        'tax_base_total_ext' => 'double',
        'tax_total_ext' => 'double',
        'changed_by' => null,
        'entered_by' => null,
        'changed_on' => 'date-time',
        'entered_on' => 'date-time',
        'external_bank_code_ext' => null,
        'external_bank_identifier_code_ext' => null,
        'account_supplier' => null,
        'invoice' => null,
        'terms' => null,
        'invoice_date' => 'date-time',
        'due_date' => 'date-time',
        'currency' => null,
        'department' => null,
        'book' => null,
        'invoice_amount' => 'double',
        'voucher' => 'int32',
        'status' => null,
        'message' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'header_id_ext' => 'HeaderIDExt',
        'summary_id_ext' => 'SummaryIDExt',
        'due_date_ext' => 'DueDateExt',
        'amount_due_ext' => 'AmountDueExt',
        'external_bank_number_ext' => 'ExternalBankNumberExt',
        'constant_symbol_ext' => 'ConstantSymbolExt',
        'customer_number_ext' => 'CustomerNumberExt',
        'date_issued_ext' => 'DateIssuedExt',
        'iban_ext' => 'IBANExt',
        'invoice_ext' => 'InvoiceExt',
        'order_number_ext' => 'OrderNumberExt',
        'recipient_address_ext' => 'RecipientAddressExt',
        'recipient_tax_number_ext' => 'RecipientTaxNumberExt',
        'recipient_customer_id_ext' => 'RecipientCustomerIDExt',
        'recipient_name_ext' => 'RecipientNameExt',
        'recipient_vat_number_ext' => 'RecipientVATNumberExt',
        'supplier_address_ext' => 'SupplierAddressExt',
        'supplier_tax_number_ext' => 'SupplierTaxNumberExt',
        'supplier_company_id_ext' => 'SupplierCompanyIDExt',
        'supplier_name_ext' => 'SupplierNameExt',
        'supplier_vat_number_ext' => 'SupplierVATNumberExt',
        'specific_symbol_ext' => 'SpecificSymbolExt',
        'terms_ext' => 'TermsExt',
        'currency_ext' => 'CurrencyExt',
        'language_ext' => 'LanguageExt',
        'total_amount_ext' => 'TotalAmountExt',
        'amount_paid_ext' => 'AmountPaidExt',
        'tax_base_total_ext' => 'TaxBaseTotalExt',
        'tax_total_ext' => 'TaxTotalExt',
        'changed_by' => 'ChangedBy',
        'entered_by' => 'EnteredBy',
        'changed_on' => 'ChangedOn',
        'entered_on' => 'EnteredOn',
        'external_bank_code_ext' => 'ExternalBankCodeExt',
        'external_bank_identifier_code_ext' => 'ExternalBankIdentifierCodeExt',
        'account_supplier' => 'AccountSupplier',
        'invoice' => 'Invoice',
        'terms' => 'Terms',
        'invoice_date' => 'InvoiceDate',
        'due_date' => 'DueDate',
        'currency' => 'Currency',
        'department' => 'Department',
        'book' => 'Book',
        'invoice_amount' => 'InvoiceAmount',
        'voucher' => 'Voucher',
        'status' => 'Status',
        'message' => 'Message'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'header_id_ext' => 'setHeaderIdExt',
        'summary_id_ext' => 'setSummaryIdExt',
        'due_date_ext' => 'setDueDateExt',
        'amount_due_ext' => 'setAmountDueExt',
        'external_bank_number_ext' => 'setExternalBankNumberExt',
        'constant_symbol_ext' => 'setConstantSymbolExt',
        'customer_number_ext' => 'setCustomerNumberExt',
        'date_issued_ext' => 'setDateIssuedExt',
        'iban_ext' => 'setIbanExt',
        'invoice_ext' => 'setInvoiceExt',
        'order_number_ext' => 'setOrderNumberExt',
        'recipient_address_ext' => 'setRecipientAddressExt',
        'recipient_tax_number_ext' => 'setRecipientTaxNumberExt',
        'recipient_customer_id_ext' => 'setRecipientCustomerIdExt',
        'recipient_name_ext' => 'setRecipientNameExt',
        'recipient_vat_number_ext' => 'setRecipientVatNumberExt',
        'supplier_address_ext' => 'setSupplierAddressExt',
        'supplier_tax_number_ext' => 'setSupplierTaxNumberExt',
        'supplier_company_id_ext' => 'setSupplierCompanyIdExt',
        'supplier_name_ext' => 'setSupplierNameExt',
        'supplier_vat_number_ext' => 'setSupplierVatNumberExt',
        'specific_symbol_ext' => 'setSpecificSymbolExt',
        'terms_ext' => 'setTermsExt',
        'currency_ext' => 'setCurrencyExt',
        'language_ext' => 'setLanguageExt',
        'total_amount_ext' => 'setTotalAmountExt',
        'amount_paid_ext' => 'setAmountPaidExt',
        'tax_base_total_ext' => 'setTaxBaseTotalExt',
        'tax_total_ext' => 'setTaxTotalExt',
        'changed_by' => 'setChangedBy',
        'entered_by' => 'setEnteredBy',
        'changed_on' => 'setChangedOn',
        'entered_on' => 'setEnteredOn',
        'external_bank_code_ext' => 'setExternalBankCodeExt',
        'external_bank_identifier_code_ext' => 'setExternalBankIdentifierCodeExt',
        'account_supplier' => 'setAccountSupplier',
        'invoice' => 'setInvoice',
        'terms' => 'setTerms',
        'invoice_date' => 'setInvoiceDate',
        'due_date' => 'setDueDate',
        'currency' => 'setCurrency',
        'department' => 'setDepartment',
        'book' => 'setBook',
        'invoice_amount' => 'setInvoiceAmount',
        'voucher' => 'setVoucher',
        'status' => 'setStatus',
        'message' => 'setMessage'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'header_id_ext' => 'getHeaderIdExt',
        'summary_id_ext' => 'getSummaryIdExt',
        'due_date_ext' => 'getDueDateExt',
        'amount_due_ext' => 'getAmountDueExt',
        'external_bank_number_ext' => 'getExternalBankNumberExt',
        'constant_symbol_ext' => 'getConstantSymbolExt',
        'customer_number_ext' => 'getCustomerNumberExt',
        'date_issued_ext' => 'getDateIssuedExt',
        'iban_ext' => 'getIbanExt',
        'invoice_ext' => 'getInvoiceExt',
        'order_number_ext' => 'getOrderNumberExt',
        'recipient_address_ext' => 'getRecipientAddressExt',
        'recipient_tax_number_ext' => 'getRecipientTaxNumberExt',
        'recipient_customer_id_ext' => 'getRecipientCustomerIdExt',
        'recipient_name_ext' => 'getRecipientNameExt',
        'recipient_vat_number_ext' => 'getRecipientVatNumberExt',
        'supplier_address_ext' => 'getSupplierAddressExt',
        'supplier_tax_number_ext' => 'getSupplierTaxNumberExt',
        'supplier_company_id_ext' => 'getSupplierCompanyIdExt',
        'supplier_name_ext' => 'getSupplierNameExt',
        'supplier_vat_number_ext' => 'getSupplierVatNumberExt',
        'specific_symbol_ext' => 'getSpecificSymbolExt',
        'terms_ext' => 'getTermsExt',
        'currency_ext' => 'getCurrencyExt',
        'language_ext' => 'getLanguageExt',
        'total_amount_ext' => 'getTotalAmountExt',
        'amount_paid_ext' => 'getAmountPaidExt',
        'tax_base_total_ext' => 'getTaxBaseTotalExt',
        'tax_total_ext' => 'getTaxTotalExt',
        'changed_by' => 'getChangedBy',
        'entered_by' => 'getEnteredBy',
        'changed_on' => 'getChangedOn',
        'entered_on' => 'getEnteredOn',
        'external_bank_code_ext' => 'getExternalBankCodeExt',
        'external_bank_identifier_code_ext' => 'getExternalBankIdentifierCodeExt',
        'account_supplier' => 'getAccountSupplier',
        'invoice' => 'getInvoice',
        'terms' => 'getTerms',
        'invoice_date' => 'getInvoiceDate',
        'due_date' => 'getDueDate',
        'currency' => 'getCurrency',
        'department' => 'getDepartment',
        'book' => 'getBook',
        'invoice_amount' => 'getInvoiceAmount',
        'voucher' => 'getVoucher',
        'status' => 'getStatus',
        'message' => 'getMessage'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['header_id_ext'] = isset($data['header_id_ext']) ? $data['header_id_ext'] : null;
        $this->container['summary_id_ext'] = isset($data['summary_id_ext']) ? $data['summary_id_ext'] : null;
        $this->container['due_date_ext'] = isset($data['due_date_ext']) ? $data['due_date_ext'] : null;
        $this->container['amount_due_ext'] = isset($data['amount_due_ext']) ? $data['amount_due_ext'] : null;
        $this->container['external_bank_number_ext'] = isset($data['external_bank_number_ext']) ? $data['external_bank_number_ext'] : null;
        $this->container['constant_symbol_ext'] = isset($data['constant_symbol_ext']) ? $data['constant_symbol_ext'] : null;
        $this->container['customer_number_ext'] = isset($data['customer_number_ext']) ? $data['customer_number_ext'] : null;
        $this->container['date_issued_ext'] = isset($data['date_issued_ext']) ? $data['date_issued_ext'] : null;
        $this->container['iban_ext'] = isset($data['iban_ext']) ? $data['iban_ext'] : null;
        $this->container['invoice_ext'] = isset($data['invoice_ext']) ? $data['invoice_ext'] : null;
        $this->container['order_number_ext'] = isset($data['order_number_ext']) ? $data['order_number_ext'] : null;
        $this->container['recipient_address_ext'] = isset($data['recipient_address_ext']) ? $data['recipient_address_ext'] : null;
        $this->container['recipient_tax_number_ext'] = isset($data['recipient_tax_number_ext']) ? $data['recipient_tax_number_ext'] : null;
        $this->container['recipient_customer_id_ext'] = isset($data['recipient_customer_id_ext']) ? $data['recipient_customer_id_ext'] : null;
        $this->container['recipient_name_ext'] = isset($data['recipient_name_ext']) ? $data['recipient_name_ext'] : null;
        $this->container['recipient_vat_number_ext'] = isset($data['recipient_vat_number_ext']) ? $data['recipient_vat_number_ext'] : null;
        $this->container['supplier_address_ext'] = isset($data['supplier_address_ext']) ? $data['supplier_address_ext'] : null;
        $this->container['supplier_tax_number_ext'] = isset($data['supplier_tax_number_ext']) ? $data['supplier_tax_number_ext'] : null;
        $this->container['supplier_company_id_ext'] = isset($data['supplier_company_id_ext']) ? $data['supplier_company_id_ext'] : null;
        $this->container['supplier_name_ext'] = isset($data['supplier_name_ext']) ? $data['supplier_name_ext'] : null;
        $this->container['supplier_vat_number_ext'] = isset($data['supplier_vat_number_ext']) ? $data['supplier_vat_number_ext'] : null;
        $this->container['specific_symbol_ext'] = isset($data['specific_symbol_ext']) ? $data['specific_symbol_ext'] : null;
        $this->container['terms_ext'] = isset($data['terms_ext']) ? $data['terms_ext'] : null;
        $this->container['currency_ext'] = isset($data['currency_ext']) ? $data['currency_ext'] : null;
        $this->container['language_ext'] = isset($data['language_ext']) ? $data['language_ext'] : null;
        $this->container['total_amount_ext'] = isset($data['total_amount_ext']) ? $data['total_amount_ext'] : null;
        $this->container['amount_paid_ext'] = isset($data['amount_paid_ext']) ? $data['amount_paid_ext'] : null;
        $this->container['tax_base_total_ext'] = isset($data['tax_base_total_ext']) ? $data['tax_base_total_ext'] : null;
        $this->container['tax_total_ext'] = isset($data['tax_total_ext']) ? $data['tax_total_ext'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['external_bank_code_ext'] = isset($data['external_bank_code_ext']) ? $data['external_bank_code_ext'] : null;
        $this->container['external_bank_identifier_code_ext'] = isset($data['external_bank_identifier_code_ext']) ? $data['external_bank_identifier_code_ext'] : null;
        $this->container['account_supplier'] = isset($data['account_supplier']) ? $data['account_supplier'] : null;
        $this->container['invoice'] = isset($data['invoice']) ? $data['invoice'] : null;
        $this->container['terms'] = isset($data['terms']) ? $data['terms'] : null;
        $this->container['invoice_date'] = isset($data['invoice_date']) ? $data['invoice_date'] : null;
        $this->container['due_date'] = isset($data['due_date']) ? $data['due_date'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['book'] = isset($data['book']) ? $data['book'] : null;
        $this->container['invoice_amount'] = isset($data['invoice_amount']) ? $data['invoice_amount'] : null;
        $this->container['voucher'] = isset($data['voucher']) ? $data['voucher'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['message'] = isset($data['message']) ? $data['message'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['header_id_ext'] === null) {
            $invalidProperties[] = "'header_id_ext' can't be null";
        }
        if ($this->container['summary_id_ext'] === null) {
            $invalidProperties[] = "'summary_id_ext' can't be null";
        }
        if ($this->container['due_date_ext'] === null) {
            $invalidProperties[] = "'due_date_ext' can't be null";
        }
        if ($this->container['amount_due_ext'] === null) {
            $invalidProperties[] = "'amount_due_ext' can't be null";
        }
        if ($this->container['external_bank_number_ext'] === null) {
            $invalidProperties[] = "'external_bank_number_ext' can't be null";
        }
        if ($this->container['constant_symbol_ext'] === null) {
            $invalidProperties[] = "'constant_symbol_ext' can't be null";
        }
        if ($this->container['customer_number_ext'] === null) {
            $invalidProperties[] = "'customer_number_ext' can't be null";
        }
        if ($this->container['date_issued_ext'] === null) {
            $invalidProperties[] = "'date_issued_ext' can't be null";
        }
        if ($this->container['iban_ext'] === null) {
            $invalidProperties[] = "'iban_ext' can't be null";
        }
        if ($this->container['invoice_ext'] === null) {
            $invalidProperties[] = "'invoice_ext' can't be null";
        }
        if ($this->container['order_number_ext'] === null) {
            $invalidProperties[] = "'order_number_ext' can't be null";
        }
        if ($this->container['recipient_address_ext'] === null) {
            $invalidProperties[] = "'recipient_address_ext' can't be null";
        }
        if ($this->container['recipient_tax_number_ext'] === null) {
            $invalidProperties[] = "'recipient_tax_number_ext' can't be null";
        }
        if ($this->container['recipient_customer_id_ext'] === null) {
            $invalidProperties[] = "'recipient_customer_id_ext' can't be null";
        }
        if ($this->container['recipient_name_ext'] === null) {
            $invalidProperties[] = "'recipient_name_ext' can't be null";
        }
        if ($this->container['recipient_vat_number_ext'] === null) {
            $invalidProperties[] = "'recipient_vat_number_ext' can't be null";
        }
        if ($this->container['supplier_address_ext'] === null) {
            $invalidProperties[] = "'supplier_address_ext' can't be null";
        }
        if ($this->container['supplier_tax_number_ext'] === null) {
            $invalidProperties[] = "'supplier_tax_number_ext' can't be null";
        }
        if ($this->container['supplier_company_id_ext'] === null) {
            $invalidProperties[] = "'supplier_company_id_ext' can't be null";
        }
        if ($this->container['supplier_name_ext'] === null) {
            $invalidProperties[] = "'supplier_name_ext' can't be null";
        }
        if ($this->container['supplier_vat_number_ext'] === null) {
            $invalidProperties[] = "'supplier_vat_number_ext' can't be null";
        }
        if ($this->container['specific_symbol_ext'] === null) {
            $invalidProperties[] = "'specific_symbol_ext' can't be null";
        }
        if ($this->container['terms_ext'] === null) {
            $invalidProperties[] = "'terms_ext' can't be null";
        }
        if ($this->container['currency_ext'] === null) {
            $invalidProperties[] = "'currency_ext' can't be null";
        }
        if ($this->container['language_ext'] === null) {
            $invalidProperties[] = "'language_ext' can't be null";
        }
        if ($this->container['total_amount_ext'] === null) {
            $invalidProperties[] = "'total_amount_ext' can't be null";
        }
        if ($this->container['amount_paid_ext'] === null) {
            $invalidProperties[] = "'amount_paid_ext' can't be null";
        }
        if ($this->container['tax_base_total_ext'] === null) {
            $invalidProperties[] = "'tax_base_total_ext' can't be null";
        }
        if ($this->container['tax_total_ext'] === null) {
            $invalidProperties[] = "'tax_total_ext' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['external_bank_code_ext'] === null) {
            $invalidProperties[] = "'external_bank_code_ext' can't be null";
        }
        if ($this->container['external_bank_identifier_code_ext'] === null) {
            $invalidProperties[] = "'external_bank_identifier_code_ext' can't be null";
        }
        if ($this->container['account_supplier'] === null) {
            $invalidProperties[] = "'account_supplier' can't be null";
        }
        if ($this->container['invoice'] === null) {
            $invalidProperties[] = "'invoice' can't be null";
        }
        if ($this->container['terms'] === null) {
            $invalidProperties[] = "'terms' can't be null";
        }
        if ($this->container['invoice_date'] === null) {
            $invalidProperties[] = "'invoice_date' can't be null";
        }
        if ($this->container['due_date'] === null) {
            $invalidProperties[] = "'due_date' can't be null";
        }
        if ($this->container['currency'] === null) {
            $invalidProperties[] = "'currency' can't be null";
        }
        if ($this->container['department'] === null) {
            $invalidProperties[] = "'department' can't be null";
        }
        if ($this->container['book'] === null) {
            $invalidProperties[] = "'book' can't be null";
        }
        if ($this->container['invoice_amount'] === null) {
            $invalidProperties[] = "'invoice_amount' can't be null";
        }
        if ($this->container['voucher'] === null) {
            $invalidProperties[] = "'voucher' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['message'] === null) {
            $invalidProperties[] = "'message' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets header_id_ext
     *
     * @return int
     */
    public function getHeaderIdExt()
    {
        return $this->container['header_id_ext'];
    }

    /**
     * Sets header_id_ext
     *
     * @param int $header_id_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EXT_INV_HDR_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setHeaderIdExt($header_id_ext)
    {
        $this->container['header_id_ext'] = $header_id_ext;

        return $this;
    }

    /**
     * Gets summary_id_ext
     *
     * @return int
     */
    public function getSummaryIdExt()
    {
        return $this->container['summary_id_ext'];
    }

    /**
     * Sets summary_id_ext
     *
     * @param int $summary_id_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EXT_INV_SMRY_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSummaryIdExt($summary_id_ext)
    {
        $this->container['summary_id_ext'] = $summary_id_ext;

        return $this;
    }

    /**
     * Gets due_date_ext
     *
     * @return \DateTime
     */
    public function getDueDateExt()
    {
        return $this->container['due_date_ext'];
    }

    /**
     * Sets due_date_ext
     *
     * @param \DateTime $due_date_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> DUE_DATE_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDueDateExt($due_date_ext)
    {
        $this->container['due_date_ext'] = $due_date_ext;

        return $this;
    }

    /**
     * Gets amount_due_ext
     *
     * @return double
     */
    public function getAmountDueExt()
    {
        return $this->container['amount_due_ext'];
    }

    /**
     * Sets amount_due_ext
     *
     * @param double $amount_due_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AMT_DUE_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAmountDueExt($amount_due_ext)
    {
        $this->container['amount_due_ext'] = $amount_due_ext;

        return $this;
    }

    /**
     * Gets external_bank_number_ext
     *
     * @return string
     */
    public function getExternalBankNumberExt()
    {
        return $this->container['external_bank_number_ext'];
    }

    /**
     * Sets external_bank_number_ext
     *
     * @param string $external_bank_number_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> BANK_ACCT_NUM_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExternalBankNumberExt($external_bank_number_ext)
    {
        $this->container['external_bank_number_ext'] = $external_bank_number_ext;

        return $this;
    }

    /**
     * Gets constant_symbol_ext
     *
     * @return string
     */
    public function getConstantSymbolExt()
    {
        return $this->container['constant_symbol_ext'];
    }

    /**
     * Sets constant_symbol_ext
     *
     * @param string $constant_symbol_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CONST_SYM_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setConstantSymbolExt($constant_symbol_ext)
    {
        $this->container['constant_symbol_ext'] = $constant_symbol_ext;

        return $this;
    }

    /**
     * Gets customer_number_ext
     *
     * @return string
     */
    public function getCustomerNumberExt()
    {
        return $this->container['customer_number_ext'];
    }

    /**
     * Sets customer_number_ext
     *
     * @param string $customer_number_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CUST_ID_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCustomerNumberExt($customer_number_ext)
    {
        $this->container['customer_number_ext'] = $customer_number_ext;

        return $this;
    }

    /**
     * Gets date_issued_ext
     *
     * @return \DateTime
     */
    public function getDateIssuedExt()
    {
        return $this->container['date_issued_ext'];
    }

    /**
     * Sets date_issued_ext
     *
     * @param \DateTime $date_issued_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> DATE_ISSUE_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDateIssuedExt($date_issued_ext)
    {
        $this->container['date_issued_ext'] = $date_issued_ext;

        return $this;
    }

    /**
     * Gets iban_ext
     *
     * @return string
     */
    public function getIbanExt()
    {
        return $this->container['iban_ext'];
    }

    /**
     * Sets iban_ext
     *
     * @param string $iban_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> IBAN_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIbanExt($iban_ext)
    {
        $this->container['iban_ext'] = $iban_ext;

        return $this;
    }

    /**
     * Gets invoice_ext
     *
     * @return string
     */
    public function getInvoiceExt()
    {
        return $this->container['invoice_ext'];
    }

    /**
     * Sets invoice_ext
     *
     * @param string $invoice_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> INVOICE_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoiceExt($invoice_ext)
    {
        $this->container['invoice_ext'] = $invoice_ext;

        return $this;
    }

    /**
     * Gets order_number_ext
     *
     * @return string
     */
    public function getOrderNumberExt()
    {
        return $this->container['order_number_ext'];
    }

    /**
     * Sets order_number_ext
     *
     * @param string $order_number_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO_REQ_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderNumberExt($order_number_ext)
    {
        $this->container['order_number_ext'] = $order_number_ext;

        return $this;
    }

    /**
     * Gets recipient_address_ext
     *
     * @return string
     */
    public function getRecipientAddressExt()
    {
        return $this->container['recipient_address_ext'];
    }

    /**
     * Sets recipient_address_ext
     *
     * @param string $recipient_address_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> RECIPIENT_ADDRESS_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 250  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecipientAddressExt($recipient_address_ext)
    {
        $this->container['recipient_address_ext'] = $recipient_address_ext;

        return $this;
    }

    /**
     * Gets recipient_tax_number_ext
     *
     * @return string
     */
    public function getRecipientTaxNumberExt()
    {
        return $this->container['recipient_tax_number_ext'];
    }

    /**
     * Sets recipient_tax_number_ext
     *
     * @param string $recipient_tax_number_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> RECIPIENT_TAX_ID_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecipientTaxNumberExt($recipient_tax_number_ext)
    {
        $this->container['recipient_tax_number_ext'] = $recipient_tax_number_ext;

        return $this;
    }

    /**
     * Gets recipient_customer_id_ext
     *
     * @return string
     */
    public function getRecipientCustomerIdExt()
    {
        return $this->container['recipient_customer_id_ext'];
    }

    /**
     * Sets recipient_customer_id_ext
     *
     * @param string $recipient_customer_id_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> RECIPIENT_IC_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecipientCustomerIdExt($recipient_customer_id_ext)
    {
        $this->container['recipient_customer_id_ext'] = $recipient_customer_id_ext;

        return $this;
    }

    /**
     * Gets recipient_name_ext
     *
     * @return string
     */
    public function getRecipientNameExt()
    {
        return $this->container['recipient_name_ext'];
    }

    /**
     * Sets recipient_name_ext
     *
     * @param string $recipient_name_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> RECIPIENT_NAME_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecipientNameExt($recipient_name_ext)
    {
        $this->container['recipient_name_ext'] = $recipient_name_ext;

        return $this;
    }

    /**
     * Gets recipient_vat_number_ext
     *
     * @return string
     */
    public function getRecipientVatNumberExt()
    {
        return $this->container['recipient_vat_number_ext'];
    }

    /**
     * Sets recipient_vat_number_ext
     *
     * @param string $recipient_vat_number_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> RECIPIENT_VAT_ID_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecipientVatNumberExt($recipient_vat_number_ext)
    {
        $this->container['recipient_vat_number_ext'] = $recipient_vat_number_ext;

        return $this;
    }

    /**
     * Gets supplier_address_ext
     *
     * @return string
     */
    public function getSupplierAddressExt()
    {
        return $this->container['supplier_address_ext'];
    }

    /**
     * Sets supplier_address_ext
     *
     * @param string $supplier_address_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> SUPPLIER_ADDRESS_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 250  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSupplierAddressExt($supplier_address_ext)
    {
        $this->container['supplier_address_ext'] = $supplier_address_ext;

        return $this;
    }

    /**
     * Gets supplier_tax_number_ext
     *
     * @return string
     */
    public function getSupplierTaxNumberExt()
    {
        return $this->container['supplier_tax_number_ext'];
    }

    /**
     * Sets supplier_tax_number_ext
     *
     * @param string $supplier_tax_number_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> SUPPLIER_TAX_ID_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSupplierTaxNumberExt($supplier_tax_number_ext)
    {
        $this->container['supplier_tax_number_ext'] = $supplier_tax_number_ext;

        return $this;
    }

    /**
     * Gets supplier_company_id_ext
     *
     * @return string
     */
    public function getSupplierCompanyIdExt()
    {
        return $this->container['supplier_company_id_ext'];
    }

    /**
     * Sets supplier_company_id_ext
     *
     * @param string $supplier_company_id_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> SUPPLIER_IC_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSupplierCompanyIdExt($supplier_company_id_ext)
    {
        $this->container['supplier_company_id_ext'] = $supplier_company_id_ext;

        return $this;
    }

    /**
     * Gets supplier_name_ext
     *
     * @return string
     */
    public function getSupplierNameExt()
    {
        return $this->container['supplier_name_ext'];
    }

    /**
     * Sets supplier_name_ext
     *
     * @param string $supplier_name_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> SUPPLIER_NAME_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSupplierNameExt($supplier_name_ext)
    {
        $this->container['supplier_name_ext'] = $supplier_name_ext;

        return $this;
    }

    /**
     * Gets supplier_vat_number_ext
     *
     * @return string
     */
    public function getSupplierVatNumberExt()
    {
        return $this->container['supplier_vat_number_ext'];
    }

    /**
     * Sets supplier_vat_number_ext
     *
     * @param string $supplier_vat_number_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> SUPPLIER_VAT_ID_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSupplierVatNumberExt($supplier_vat_number_ext)
    {
        $this->container['supplier_vat_number_ext'] = $supplier_vat_number_ext;

        return $this;
    }

    /**
     * Gets specific_symbol_ext
     *
     * @return string
     */
    public function getSpecificSymbolExt()
    {
        return $this->container['specific_symbol_ext'];
    }

    /**
     * Sets specific_symbol_ext
     *
     * @param string $specific_symbol_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> SPEC_SYM_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSpecificSymbolExt($specific_symbol_ext)
    {
        $this->container['specific_symbol_ext'] = $specific_symbol_ext;

        return $this;
    }

    /**
     * Gets terms_ext
     *
     * @return string
     */
    public function getTermsExt()
    {
        return $this->container['terms_ext'];
    }

    /**
     * Sets terms_ext
     *
     * @param string $terms_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> TERMS_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTermsExt($terms_ext)
    {
        $this->container['terms_ext'] = $terms_ext;

        return $this;
    }

    /**
     * Gets currency_ext
     *
     * @return string
     */
    public function getCurrencyExt()
    {
        return $this->container['currency_ext'];
    }

    /**
     * Sets currency_ext
     *
     * @param string $currency_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CURRENCY_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCurrencyExt($currency_ext)
    {
        $this->container['currency_ext'] = $currency_ext;

        return $this;
    }

    /**
     * Gets language_ext
     *
     * @return string
     */
    public function getLanguageExt()
    {
        return $this->container['language_ext'];
    }

    /**
     * Sets language_ext
     *
     * @param string $language_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> LANGUAGE_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLanguageExt($language_ext)
    {
        $this->container['language_ext'] = $language_ext;

        return $this;
    }

    /**
     * Gets total_amount_ext
     *
     * @return double
     */
    public function getTotalAmountExt()
    {
        return $this->container['total_amount_ext'];
    }

    /**
     * Sets total_amount_ext
     *
     * @param double $total_amount_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AMT_TOT_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTotalAmountExt($total_amount_ext)
    {
        $this->container['total_amount_ext'] = $total_amount_ext;

        return $this;
    }

    /**
     * Gets amount_paid_ext
     *
     * @return double
     */
    public function getAmountPaidExt()
    {
        return $this->container['amount_paid_ext'];
    }

    /**
     * Sets amount_paid_ext
     *
     * @param double $amount_paid_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AMT_PAID_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAmountPaidExt($amount_paid_ext)
    {
        $this->container['amount_paid_ext'] = $amount_paid_ext;

        return $this;
    }

    /**
     * Gets tax_base_total_ext
     *
     * @return double
     */
    public function getTaxBaseTotalExt()
    {
        return $this->container['tax_base_total_ext'];
    }

    /**
     * Sets tax_base_total_ext
     *
     * @param double $tax_base_total_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AMT_TOT_BASE_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxBaseTotalExt($tax_base_total_ext)
    {
        $this->container['tax_base_total_ext'] = $tax_base_total_ext;

        return $this;
    }

    /**
     * Gets tax_total_ext
     *
     * @return double
     */
    public function getTaxTotalExt()
    {
        return $this->container['tax_total_ext'];
    }

    /**
     * Sets tax_total_ext
     *
     * @param double $tax_total_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AMT_TOT_TAX_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxTotalExt($tax_total_ext)
    {
        $this->container['tax_total_ext'] = $tax_total_ext;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets external_bank_code_ext
     *
     * @return string
     */
    public function getExternalBankCodeExt()
    {
        return $this->container['external_bank_code_ext'];
    }

    /**
     * Sets external_bank_code_ext
     *
     * @param string $external_bank_code_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> BANK_CODE_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExternalBankCodeExt($external_bank_code_ext)
    {
        $this->container['external_bank_code_ext'] = $external_bank_code_ext;

        return $this;
    }

    /**
     * Gets external_bank_identifier_code_ext
     *
     * @return string
     */
    public function getExternalBankIdentifierCodeExt()
    {
        return $this->container['external_bank_identifier_code_ext'];
    }

    /**
     * Sets external_bank_identifier_code_ext
     *
     * @param string $external_bank_identifier_code_ext <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> BIC_EXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExternalBankIdentifierCodeExt($external_bank_identifier_code_ext)
    {
        $this->container['external_bank_identifier_code_ext'] = $external_bank_identifier_code_ext;

        return $this;
    }

    /**
     * Gets account_supplier
     *
     * @return string
     */
    public function getAccountSupplier()
    {
        return $this->container['account_supplier'];
    }

    /**
     * Sets account_supplier
     *
     * @param string $account_supplier <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ACCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccountSupplier($account_supplier)
    {
        $this->container['account_supplier'] = $account_supplier;

        return $this;
    }

    /**
     * Gets invoice
     *
     * @return string
     */
    public function getInvoice()
    {
        return $this->container['invoice'];
    }

    /**
     * Sets invoice
     *
     * @param string $invoice <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> INVOICE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoice($invoice)
    {
        $this->container['invoice'] = $invoice;

        return $this;
    }

    /**
     * Gets terms
     *
     * @return string
     */
    public function getTerms()
    {
        return $this->container['terms'];
    }

    /**
     * Sets terms
     *
     * @param string $terms <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> TERMS_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTerms($terms)
    {
        $this->container['terms'] = $terms;

        return $this;
    }

    /**
     * Gets invoice_date
     *
     * @return \DateTime
     */
    public function getInvoiceDate()
    {
        return $this->container['invoice_date'];
    }

    /**
     * Sets invoice_date
     *
     * @param \DateTime $invoice_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> INVOICE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoiceDate($invoice_date)
    {
        $this->container['invoice_date'] = $invoice_date;

        return $this;
    }

    /**
     * Gets due_date
     *
     * @return \DateTime
     */
    public function getDueDate()
    {
        return $this->container['due_date'];
    }

    /**
     * Sets due_date
     *
     * @param \DateTime $due_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> DUE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDueDate($due_date)
    {
        $this->container['due_date'] = $due_date;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CURRENCY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string $department <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> DEPT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets book
     *
     * @return string
     */
    public function getBook()
    {
        return $this->container['book'];
    }

    /**
     * Sets book
     *
     * @param string $book <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> BOOK_CONTROL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBook($book)
    {
        $this->container['book'] = $book;

        return $this;
    }

    /**
     * Gets invoice_amount
     *
     * @return double
     */
    public function getInvoiceAmount()
    {
        return $this->container['invoice_amount'];
    }

    /**
     * Sets invoice_amount
     *
     * @param double $invoice_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> INVOICE_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoiceAmount($invoice_amount)
    {
        $this->container['invoice_amount'] = $invoice_amount;

        return $this;
    }

    /**
     * Gets voucher
     *
     * @return int
     */
    public function getVoucher()
    {
        return $this->container['voucher'];
    }

    /**
     * Sets voucher
     *
     * @param int $voucher <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> VOUCHER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setVoucher($voucher)
    {
        $this->container['voucher'] = $voucher;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets message
     *
     * @return string
     */
    public function getMessage()
    {
        return $this->container['message'];
    }

    /**
     * Sets message
     *
     * @param string $message <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MESSAGE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMessage($message)
    {
        $this->container['message'] = $message;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


