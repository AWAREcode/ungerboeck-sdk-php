<?php
/**
 * AllAccountsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * AllAccountsModel Class Doc Comment
 *
 * @category Class
 * @description This represents an account
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AllAccountsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AllAccountsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization' => 'string',
        'account_code' => 'string',
        'middle_initial' => 'string',
        'first_name' => 'string',
        'last_name' => 'string',
        'name' => 'string',
        'search' => 'string',
        'salutation' => 'string',
        'title' => 'string',
        'address1' => 'string',
        'address2' => 'string',
        'address3' => 'string',
        'address4' => 'string',
        'address5' => 'string',
        'address6' => 'string',
        'city' => 'string',
        'state' => 'string',
        'postal_code' => 'string',
        'country' => 'string',
        'region' => 'string',
        'keyword' => 'string',
        'keyword2' => 'string',
        'legal_name' => 'string',
        'nickname' => 'string',
        'class' => 'string',
        'phone' => 'string',
        'fax' => 'string',
        'mobile' => 'string',
        'direct' => 'string',
        'market_segment_major' => 'string',
        'market_segment_minor' => 'string',
        'email' => 'string',
        'website' => 'string',
        'company' => 'string',
        'second_last_name' => 'string',
        'prefix' => 'string',
        'suffix' => 'string',
        'type' => 'string',
        'account_rep' => 'string',
        'entered_by' => 'string',
        'entered_on' => '\DateTime',
        'status' => 'string',
        'direct_mail_opt_in' => 'string',
        'changed_by' => 'string',
        'changed_on' => '\DateTime',
        'position' => 'string',
        'birth_date' => '\DateTime',
        'gender' => 'string',
        'language' => 'string',
        'e_fax' => 'string',
        'department' => 'string',
        'second_title' => 'string',
        'acronym' => 'string',
        'market_size' => 'double',
        'tax_id' => 'string',
        'ar_control' => 'string',
        'privileged' => 'string',
        'user_id' => 'string',
        'iacvb' => 'string',
        'language_preference' => 'string',
        'multi_org_account' => 'string',
        'personnel_position' => 'string',
        'personnel_department' => 'string',
        'synchronized_organization' => 'string',
        'synchronized_account' => 'string',
        'synchronization_status' => 'string',
        'birth_place' => 'string',
        'nationality' => 'string',
        'identification_nbr' => 'string',
        'select' => 'string',
        'accuracy' => 'string',
        'internet_logon' => 'string',
        'market_size_um' => 'string',
        'external_code' => 'string',
        'event_sales_status' => 'string',
        'tour_sales' => 'string',
        'public_relations' => 'string',
        'membership' => 'string',
        'receivables' => 'string',
        'payables' => 'string',
        'visitor_inquiry' => 'string',
        'registration' => 'string',
        'personnel' => 'string',
        'speaker' => 'string',
        'account_rep2' => 'string',
        'account_rep3' => 'string',
        'main_account' => 'string',
        'tax_scheme' => 'string',
        'tax_registration_status' => 'string',
        'preferred_contact_method' => 'string',
        'facebook' => 'string',
        'twitter' => 'string',
        'linked_in' => 'string',
        'primary_account' => 'string',
        'annual_revenue' => 'int',
        'numberof_employees' => 'int',
        'gender_id' => 'int',
        'member_type' => 'string',
        'member_status' => 'string',
        'member_status_date' => '\DateTime',
        'last_billed_date' => '\DateTime',
        'last_billed_amount' => 'double',
        'last_paid_date' => '\DateTime',
        'last_paid_amount' => 'double',
        'member_since' => '\DateTime',
        'member_inactive_date' => '\DateTime',
        'member_category' => 'string',
        'member_rank' => 'int',
        'member_type_date' => '\DateTime',
        'member_category_date' => '\DateTime',
        'reason_application_code' => 'string',
        'member_reason' => 'string',
        'account_user_field_sets' => '\FomF\Ungerboeck\Client\Model\UserFields[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization' => null,
        'account_code' => null,
        'middle_initial' => null,
        'first_name' => null,
        'last_name' => null,
        'name' => null,
        'search' => null,
        'salutation' => null,
        'title' => null,
        'address1' => null,
        'address2' => null,
        'address3' => null,
        'address4' => null,
        'address5' => null,
        'address6' => null,
        'city' => null,
        'state' => null,
        'postal_code' => null,
        'country' => null,
        'region' => null,
        'keyword' => null,
        'keyword2' => null,
        'legal_name' => null,
        'nickname' => null,
        'class' => null,
        'phone' => null,
        'fax' => null,
        'mobile' => null,
        'direct' => null,
        'market_segment_major' => null,
        'market_segment_minor' => null,
        'email' => null,
        'website' => null,
        'company' => null,
        'second_last_name' => null,
        'prefix' => null,
        'suffix' => null,
        'type' => null,
        'account_rep' => null,
        'entered_by' => null,
        'entered_on' => 'date-time',
        'status' => null,
        'direct_mail_opt_in' => null,
        'changed_by' => null,
        'changed_on' => 'date-time',
        'position' => null,
        'birth_date' => 'date-time',
        'gender' => null,
        'language' => null,
        'e_fax' => null,
        'department' => null,
        'second_title' => null,
        'acronym' => null,
        'market_size' => 'double',
        'tax_id' => null,
        'ar_control' => null,
        'privileged' => null,
        'user_id' => null,
        'iacvb' => null,
        'language_preference' => null,
        'multi_org_account' => null,
        'personnel_position' => null,
        'personnel_department' => null,
        'synchronized_organization' => null,
        'synchronized_account' => null,
        'synchronization_status' => null,
        'birth_place' => null,
        'nationality' => null,
        'identification_nbr' => null,
        'select' => null,
        'accuracy' => null,
        'internet_logon' => null,
        'market_size_um' => null,
        'external_code' => null,
        'event_sales_status' => null,
        'tour_sales' => null,
        'public_relations' => null,
        'membership' => null,
        'receivables' => null,
        'payables' => null,
        'visitor_inquiry' => null,
        'registration' => null,
        'personnel' => null,
        'speaker' => null,
        'account_rep2' => null,
        'account_rep3' => null,
        'main_account' => null,
        'tax_scheme' => null,
        'tax_registration_status' => null,
        'preferred_contact_method' => null,
        'facebook' => null,
        'twitter' => null,
        'linked_in' => null,
        'primary_account' => null,
        'annual_revenue' => 'int32',
        'numberof_employees' => 'int32',
        'gender_id' => 'int32',
        'member_type' => null,
        'member_status' => null,
        'member_status_date' => 'date-time',
        'last_billed_date' => 'date-time',
        'last_billed_amount' => 'double',
        'last_paid_date' => 'date-time',
        'last_paid_amount' => 'double',
        'member_since' => 'date-time',
        'member_inactive_date' => 'date-time',
        'member_category' => null,
        'member_rank' => 'int32',
        'member_type_date' => 'date-time',
        'member_category_date' => 'date-time',
        'reason_application_code' => null,
        'member_reason' => null,
        'account_user_field_sets' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization' => 'Organization',
        'account_code' => 'AccountCode',
        'middle_initial' => 'MiddleInitial',
        'first_name' => 'FirstName',
        'last_name' => 'LastName',
        'name' => 'Name',
        'search' => 'Search',
        'salutation' => 'Salutation',
        'title' => 'Title',
        'address1' => 'Address1',
        'address2' => 'Address2',
        'address3' => 'Address3',
        'address4' => 'Address4',
        'address5' => 'Address5',
        'address6' => 'Address6',
        'city' => 'City',
        'state' => 'State',
        'postal_code' => 'PostalCode',
        'country' => 'Country',
        'region' => 'Region',
        'keyword' => 'Keyword',
        'keyword2' => 'Keyword2',
        'legal_name' => 'LegalName',
        'nickname' => 'Nickname',
        'class' => 'Class',
        'phone' => 'Phone',
        'fax' => 'Fax',
        'mobile' => 'Mobile',
        'direct' => 'Direct',
        'market_segment_major' => 'MarketSegmentMajor',
        'market_segment_minor' => 'MarketSegmentMinor',
        'email' => 'Email',
        'website' => 'Website',
        'company' => 'Company',
        'second_last_name' => 'SecondLastName',
        'prefix' => 'Prefix',
        'suffix' => 'Suffix',
        'type' => 'Type',
        'account_rep' => 'AccountRep',
        'entered_by' => 'EnteredBy',
        'entered_on' => 'EnteredOn',
        'status' => 'Status',
        'direct_mail_opt_in' => 'DirectMailOptIn',
        'changed_by' => 'ChangedBy',
        'changed_on' => 'ChangedOn',
        'position' => 'Position',
        'birth_date' => 'BirthDate',
        'gender' => 'Gender',
        'language' => 'Language',
        'e_fax' => 'EFax',
        'department' => 'Department',
        'second_title' => 'SecondTitle',
        'acronym' => 'Acronym',
        'market_size' => 'MarketSize',
        'tax_id' => 'TaxID',
        'ar_control' => 'ARControl',
        'privileged' => 'Privileged',
        'user_id' => 'UserID',
        'iacvb' => 'IACVB',
        'language_preference' => 'LanguagePreference',
        'multi_org_account' => 'MultiOrgAccount',
        'personnel_position' => 'PersonnelPosition',
        'personnel_department' => 'PersonnelDepartment',
        'synchronized_organization' => 'SynchronizedOrganization',
        'synchronized_account' => 'SynchronizedAccount',
        'synchronization_status' => 'SynchronizationStatus',
        'birth_place' => 'BirthPlace',
        'nationality' => 'Nationality',
        'identification_nbr' => 'IdentificationNbr',
        'select' => 'Select',
        'accuracy' => 'Accuracy',
        'internet_logon' => 'InternetLogon',
        'market_size_um' => 'MarketSizeUM',
        'external_code' => 'ExternalCode',
        'event_sales_status' => 'EventSalesStatus',
        'tour_sales' => 'TourSales',
        'public_relations' => 'PublicRelations',
        'membership' => 'Membership',
        'receivables' => 'Receivables',
        'payables' => 'Payables',
        'visitor_inquiry' => 'VisitorInquiry',
        'registration' => 'Registration',
        'personnel' => 'Personnel',
        'speaker' => 'Speaker',
        'account_rep2' => 'AccountRep2',
        'account_rep3' => 'AccountRep3',
        'main_account' => 'MainAccount',
        'tax_scheme' => 'TaxScheme',
        'tax_registration_status' => 'TaxRegistrationStatus',
        'preferred_contact_method' => 'PreferredContactMethod',
        'facebook' => 'Facebook',
        'twitter' => 'Twitter',
        'linked_in' => 'LinkedIn',
        'primary_account' => 'PrimaryAccount',
        'annual_revenue' => 'AnnualRevenue',
        'numberof_employees' => 'NumberofEmployees',
        'gender_id' => 'GenderID',
        'member_type' => 'MemberType',
        'member_status' => 'MemberStatus',
        'member_status_date' => 'MemberStatusDate',
        'last_billed_date' => 'LastBilledDate',
        'last_billed_amount' => 'LastBilledAmount',
        'last_paid_date' => 'LastPaidDate',
        'last_paid_amount' => 'LastPaidAmount',
        'member_since' => 'MemberSince',
        'member_inactive_date' => 'MemberInactiveDate',
        'member_category' => 'MemberCategory',
        'member_rank' => 'MemberRank',
        'member_type_date' => 'MemberTypeDate',
        'member_category_date' => 'MemberCategoryDate',
        'reason_application_code' => 'ReasonApplicationCode',
        'member_reason' => 'MemberReason',
        'account_user_field_sets' => 'AccountUserFieldSets'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization' => 'setOrganization',
        'account_code' => 'setAccountCode',
        'middle_initial' => 'setMiddleInitial',
        'first_name' => 'setFirstName',
        'last_name' => 'setLastName',
        'name' => 'setName',
        'search' => 'setSearch',
        'salutation' => 'setSalutation',
        'title' => 'setTitle',
        'address1' => 'setAddress1',
        'address2' => 'setAddress2',
        'address3' => 'setAddress3',
        'address4' => 'setAddress4',
        'address5' => 'setAddress5',
        'address6' => 'setAddress6',
        'city' => 'setCity',
        'state' => 'setState',
        'postal_code' => 'setPostalCode',
        'country' => 'setCountry',
        'region' => 'setRegion',
        'keyword' => 'setKeyword',
        'keyword2' => 'setKeyword2',
        'legal_name' => 'setLegalName',
        'nickname' => 'setNickname',
        'class' => 'setClass',
        'phone' => 'setPhone',
        'fax' => 'setFax',
        'mobile' => 'setMobile',
        'direct' => 'setDirect',
        'market_segment_major' => 'setMarketSegmentMajor',
        'market_segment_minor' => 'setMarketSegmentMinor',
        'email' => 'setEmail',
        'website' => 'setWebsite',
        'company' => 'setCompany',
        'second_last_name' => 'setSecondLastName',
        'prefix' => 'setPrefix',
        'suffix' => 'setSuffix',
        'type' => 'setType',
        'account_rep' => 'setAccountRep',
        'entered_by' => 'setEnteredBy',
        'entered_on' => 'setEnteredOn',
        'status' => 'setStatus',
        'direct_mail_opt_in' => 'setDirectMailOptIn',
        'changed_by' => 'setChangedBy',
        'changed_on' => 'setChangedOn',
        'position' => 'setPosition',
        'birth_date' => 'setBirthDate',
        'gender' => 'setGender',
        'language' => 'setLanguage',
        'e_fax' => 'setEFax',
        'department' => 'setDepartment',
        'second_title' => 'setSecondTitle',
        'acronym' => 'setAcronym',
        'market_size' => 'setMarketSize',
        'tax_id' => 'setTaxId',
        'ar_control' => 'setArControl',
        'privileged' => 'setPrivileged',
        'user_id' => 'setUserId',
        'iacvb' => 'setIacvb',
        'language_preference' => 'setLanguagePreference',
        'multi_org_account' => 'setMultiOrgAccount',
        'personnel_position' => 'setPersonnelPosition',
        'personnel_department' => 'setPersonnelDepartment',
        'synchronized_organization' => 'setSynchronizedOrganization',
        'synchronized_account' => 'setSynchronizedAccount',
        'synchronization_status' => 'setSynchronizationStatus',
        'birth_place' => 'setBirthPlace',
        'nationality' => 'setNationality',
        'identification_nbr' => 'setIdentificationNbr',
        'select' => 'setSelect',
        'accuracy' => 'setAccuracy',
        'internet_logon' => 'setInternetLogon',
        'market_size_um' => 'setMarketSizeUm',
        'external_code' => 'setExternalCode',
        'event_sales_status' => 'setEventSalesStatus',
        'tour_sales' => 'setTourSales',
        'public_relations' => 'setPublicRelations',
        'membership' => 'setMembership',
        'receivables' => 'setReceivables',
        'payables' => 'setPayables',
        'visitor_inquiry' => 'setVisitorInquiry',
        'registration' => 'setRegistration',
        'personnel' => 'setPersonnel',
        'speaker' => 'setSpeaker',
        'account_rep2' => 'setAccountRep2',
        'account_rep3' => 'setAccountRep3',
        'main_account' => 'setMainAccount',
        'tax_scheme' => 'setTaxScheme',
        'tax_registration_status' => 'setTaxRegistrationStatus',
        'preferred_contact_method' => 'setPreferredContactMethod',
        'facebook' => 'setFacebook',
        'twitter' => 'setTwitter',
        'linked_in' => 'setLinkedIn',
        'primary_account' => 'setPrimaryAccount',
        'annual_revenue' => 'setAnnualRevenue',
        'numberof_employees' => 'setNumberofEmployees',
        'gender_id' => 'setGenderId',
        'member_type' => 'setMemberType',
        'member_status' => 'setMemberStatus',
        'member_status_date' => 'setMemberStatusDate',
        'last_billed_date' => 'setLastBilledDate',
        'last_billed_amount' => 'setLastBilledAmount',
        'last_paid_date' => 'setLastPaidDate',
        'last_paid_amount' => 'setLastPaidAmount',
        'member_since' => 'setMemberSince',
        'member_inactive_date' => 'setMemberInactiveDate',
        'member_category' => 'setMemberCategory',
        'member_rank' => 'setMemberRank',
        'member_type_date' => 'setMemberTypeDate',
        'member_category_date' => 'setMemberCategoryDate',
        'reason_application_code' => 'setReasonApplicationCode',
        'member_reason' => 'setMemberReason',
        'account_user_field_sets' => 'setAccountUserFieldSets'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization' => 'getOrganization',
        'account_code' => 'getAccountCode',
        'middle_initial' => 'getMiddleInitial',
        'first_name' => 'getFirstName',
        'last_name' => 'getLastName',
        'name' => 'getName',
        'search' => 'getSearch',
        'salutation' => 'getSalutation',
        'title' => 'getTitle',
        'address1' => 'getAddress1',
        'address2' => 'getAddress2',
        'address3' => 'getAddress3',
        'address4' => 'getAddress4',
        'address5' => 'getAddress5',
        'address6' => 'getAddress6',
        'city' => 'getCity',
        'state' => 'getState',
        'postal_code' => 'getPostalCode',
        'country' => 'getCountry',
        'region' => 'getRegion',
        'keyword' => 'getKeyword',
        'keyword2' => 'getKeyword2',
        'legal_name' => 'getLegalName',
        'nickname' => 'getNickname',
        'class' => 'getClass',
        'phone' => 'getPhone',
        'fax' => 'getFax',
        'mobile' => 'getMobile',
        'direct' => 'getDirect',
        'market_segment_major' => 'getMarketSegmentMajor',
        'market_segment_minor' => 'getMarketSegmentMinor',
        'email' => 'getEmail',
        'website' => 'getWebsite',
        'company' => 'getCompany',
        'second_last_name' => 'getSecondLastName',
        'prefix' => 'getPrefix',
        'suffix' => 'getSuffix',
        'type' => 'getType',
        'account_rep' => 'getAccountRep',
        'entered_by' => 'getEnteredBy',
        'entered_on' => 'getEnteredOn',
        'status' => 'getStatus',
        'direct_mail_opt_in' => 'getDirectMailOptIn',
        'changed_by' => 'getChangedBy',
        'changed_on' => 'getChangedOn',
        'position' => 'getPosition',
        'birth_date' => 'getBirthDate',
        'gender' => 'getGender',
        'language' => 'getLanguage',
        'e_fax' => 'getEFax',
        'department' => 'getDepartment',
        'second_title' => 'getSecondTitle',
        'acronym' => 'getAcronym',
        'market_size' => 'getMarketSize',
        'tax_id' => 'getTaxId',
        'ar_control' => 'getArControl',
        'privileged' => 'getPrivileged',
        'user_id' => 'getUserId',
        'iacvb' => 'getIacvb',
        'language_preference' => 'getLanguagePreference',
        'multi_org_account' => 'getMultiOrgAccount',
        'personnel_position' => 'getPersonnelPosition',
        'personnel_department' => 'getPersonnelDepartment',
        'synchronized_organization' => 'getSynchronizedOrganization',
        'synchronized_account' => 'getSynchronizedAccount',
        'synchronization_status' => 'getSynchronizationStatus',
        'birth_place' => 'getBirthPlace',
        'nationality' => 'getNationality',
        'identification_nbr' => 'getIdentificationNbr',
        'select' => 'getSelect',
        'accuracy' => 'getAccuracy',
        'internet_logon' => 'getInternetLogon',
        'market_size_um' => 'getMarketSizeUm',
        'external_code' => 'getExternalCode',
        'event_sales_status' => 'getEventSalesStatus',
        'tour_sales' => 'getTourSales',
        'public_relations' => 'getPublicRelations',
        'membership' => 'getMembership',
        'receivables' => 'getReceivables',
        'payables' => 'getPayables',
        'visitor_inquiry' => 'getVisitorInquiry',
        'registration' => 'getRegistration',
        'personnel' => 'getPersonnel',
        'speaker' => 'getSpeaker',
        'account_rep2' => 'getAccountRep2',
        'account_rep3' => 'getAccountRep3',
        'main_account' => 'getMainAccount',
        'tax_scheme' => 'getTaxScheme',
        'tax_registration_status' => 'getTaxRegistrationStatus',
        'preferred_contact_method' => 'getPreferredContactMethod',
        'facebook' => 'getFacebook',
        'twitter' => 'getTwitter',
        'linked_in' => 'getLinkedIn',
        'primary_account' => 'getPrimaryAccount',
        'annual_revenue' => 'getAnnualRevenue',
        'numberof_employees' => 'getNumberofEmployees',
        'gender_id' => 'getGenderId',
        'member_type' => 'getMemberType',
        'member_status' => 'getMemberStatus',
        'member_status_date' => 'getMemberStatusDate',
        'last_billed_date' => 'getLastBilledDate',
        'last_billed_amount' => 'getLastBilledAmount',
        'last_paid_date' => 'getLastPaidDate',
        'last_paid_amount' => 'getLastPaidAmount',
        'member_since' => 'getMemberSince',
        'member_inactive_date' => 'getMemberInactiveDate',
        'member_category' => 'getMemberCategory',
        'member_rank' => 'getMemberRank',
        'member_type_date' => 'getMemberTypeDate',
        'member_category_date' => 'getMemberCategoryDate',
        'reason_application_code' => 'getReasonApplicationCode',
        'member_reason' => 'getMemberReason',
        'account_user_field_sets' => 'getAccountUserFieldSets'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['account_code'] = isset($data['account_code']) ? $data['account_code'] : null;
        $this->container['middle_initial'] = isset($data['middle_initial']) ? $data['middle_initial'] : null;
        $this->container['first_name'] = isset($data['first_name']) ? $data['first_name'] : null;
        $this->container['last_name'] = isset($data['last_name']) ? $data['last_name'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['search'] = isset($data['search']) ? $data['search'] : null;
        $this->container['salutation'] = isset($data['salutation']) ? $data['salutation'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['address1'] = isset($data['address1']) ? $data['address1'] : null;
        $this->container['address2'] = isset($data['address2']) ? $data['address2'] : null;
        $this->container['address3'] = isset($data['address3']) ? $data['address3'] : null;
        $this->container['address4'] = isset($data['address4']) ? $data['address4'] : null;
        $this->container['address5'] = isset($data['address5']) ? $data['address5'] : null;
        $this->container['address6'] = isset($data['address6']) ? $data['address6'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['state'] = isset($data['state']) ? $data['state'] : null;
        $this->container['postal_code'] = isset($data['postal_code']) ? $data['postal_code'] : null;
        $this->container['country'] = isset($data['country']) ? $data['country'] : null;
        $this->container['region'] = isset($data['region']) ? $data['region'] : null;
        $this->container['keyword'] = isset($data['keyword']) ? $data['keyword'] : null;
        $this->container['keyword2'] = isset($data['keyword2']) ? $data['keyword2'] : null;
        $this->container['legal_name'] = isset($data['legal_name']) ? $data['legal_name'] : null;
        $this->container['nickname'] = isset($data['nickname']) ? $data['nickname'] : null;
        $this->container['class'] = isset($data['class']) ? $data['class'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['fax'] = isset($data['fax']) ? $data['fax'] : null;
        $this->container['mobile'] = isset($data['mobile']) ? $data['mobile'] : null;
        $this->container['direct'] = isset($data['direct']) ? $data['direct'] : null;
        $this->container['market_segment_major'] = isset($data['market_segment_major']) ? $data['market_segment_major'] : null;
        $this->container['market_segment_minor'] = isset($data['market_segment_minor']) ? $data['market_segment_minor'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['website'] = isset($data['website']) ? $data['website'] : null;
        $this->container['company'] = isset($data['company']) ? $data['company'] : null;
        $this->container['second_last_name'] = isset($data['second_last_name']) ? $data['second_last_name'] : null;
        $this->container['prefix'] = isset($data['prefix']) ? $data['prefix'] : null;
        $this->container['suffix'] = isset($data['suffix']) ? $data['suffix'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['account_rep'] = isset($data['account_rep']) ? $data['account_rep'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['direct_mail_opt_in'] = isset($data['direct_mail_opt_in']) ? $data['direct_mail_opt_in'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['position'] = isset($data['position']) ? $data['position'] : null;
        $this->container['birth_date'] = isset($data['birth_date']) ? $data['birth_date'] : null;
        $this->container['gender'] = isset($data['gender']) ? $data['gender'] : null;
        $this->container['language'] = isset($data['language']) ? $data['language'] : null;
        $this->container['e_fax'] = isset($data['e_fax']) ? $data['e_fax'] : null;
        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['second_title'] = isset($data['second_title']) ? $data['second_title'] : null;
        $this->container['acronym'] = isset($data['acronym']) ? $data['acronym'] : null;
        $this->container['market_size'] = isset($data['market_size']) ? $data['market_size'] : null;
        $this->container['tax_id'] = isset($data['tax_id']) ? $data['tax_id'] : null;
        $this->container['ar_control'] = isset($data['ar_control']) ? $data['ar_control'] : null;
        $this->container['privileged'] = isset($data['privileged']) ? $data['privileged'] : null;
        $this->container['user_id'] = isset($data['user_id']) ? $data['user_id'] : null;
        $this->container['iacvb'] = isset($data['iacvb']) ? $data['iacvb'] : null;
        $this->container['language_preference'] = isset($data['language_preference']) ? $data['language_preference'] : null;
        $this->container['multi_org_account'] = isset($data['multi_org_account']) ? $data['multi_org_account'] : null;
        $this->container['personnel_position'] = isset($data['personnel_position']) ? $data['personnel_position'] : null;
        $this->container['personnel_department'] = isset($data['personnel_department']) ? $data['personnel_department'] : null;
        $this->container['synchronized_organization'] = isset($data['synchronized_organization']) ? $data['synchronized_organization'] : null;
        $this->container['synchronized_account'] = isset($data['synchronized_account']) ? $data['synchronized_account'] : null;
        $this->container['synchronization_status'] = isset($data['synchronization_status']) ? $data['synchronization_status'] : null;
        $this->container['birth_place'] = isset($data['birth_place']) ? $data['birth_place'] : null;
        $this->container['nationality'] = isset($data['nationality']) ? $data['nationality'] : null;
        $this->container['identification_nbr'] = isset($data['identification_nbr']) ? $data['identification_nbr'] : null;
        $this->container['select'] = isset($data['select']) ? $data['select'] : null;
        $this->container['accuracy'] = isset($data['accuracy']) ? $data['accuracy'] : null;
        $this->container['internet_logon'] = isset($data['internet_logon']) ? $data['internet_logon'] : null;
        $this->container['market_size_um'] = isset($data['market_size_um']) ? $data['market_size_um'] : null;
        $this->container['external_code'] = isset($data['external_code']) ? $data['external_code'] : null;
        $this->container['event_sales_status'] = isset($data['event_sales_status']) ? $data['event_sales_status'] : null;
        $this->container['tour_sales'] = isset($data['tour_sales']) ? $data['tour_sales'] : null;
        $this->container['public_relations'] = isset($data['public_relations']) ? $data['public_relations'] : null;
        $this->container['membership'] = isset($data['membership']) ? $data['membership'] : null;
        $this->container['receivables'] = isset($data['receivables']) ? $data['receivables'] : null;
        $this->container['payables'] = isset($data['payables']) ? $data['payables'] : null;
        $this->container['visitor_inquiry'] = isset($data['visitor_inquiry']) ? $data['visitor_inquiry'] : null;
        $this->container['registration'] = isset($data['registration']) ? $data['registration'] : null;
        $this->container['personnel'] = isset($data['personnel']) ? $data['personnel'] : null;
        $this->container['speaker'] = isset($data['speaker']) ? $data['speaker'] : null;
        $this->container['account_rep2'] = isset($data['account_rep2']) ? $data['account_rep2'] : null;
        $this->container['account_rep3'] = isset($data['account_rep3']) ? $data['account_rep3'] : null;
        $this->container['main_account'] = isset($data['main_account']) ? $data['main_account'] : null;
        $this->container['tax_scheme'] = isset($data['tax_scheme']) ? $data['tax_scheme'] : null;
        $this->container['tax_registration_status'] = isset($data['tax_registration_status']) ? $data['tax_registration_status'] : null;
        $this->container['preferred_contact_method'] = isset($data['preferred_contact_method']) ? $data['preferred_contact_method'] : null;
        $this->container['facebook'] = isset($data['facebook']) ? $data['facebook'] : null;
        $this->container['twitter'] = isset($data['twitter']) ? $data['twitter'] : null;
        $this->container['linked_in'] = isset($data['linked_in']) ? $data['linked_in'] : null;
        $this->container['primary_account'] = isset($data['primary_account']) ? $data['primary_account'] : null;
        $this->container['annual_revenue'] = isset($data['annual_revenue']) ? $data['annual_revenue'] : null;
        $this->container['numberof_employees'] = isset($data['numberof_employees']) ? $data['numberof_employees'] : null;
        $this->container['gender_id'] = isset($data['gender_id']) ? $data['gender_id'] : null;
        $this->container['member_type'] = isset($data['member_type']) ? $data['member_type'] : null;
        $this->container['member_status'] = isset($data['member_status']) ? $data['member_status'] : null;
        $this->container['member_status_date'] = isset($data['member_status_date']) ? $data['member_status_date'] : null;
        $this->container['last_billed_date'] = isset($data['last_billed_date']) ? $data['last_billed_date'] : null;
        $this->container['last_billed_amount'] = isset($data['last_billed_amount']) ? $data['last_billed_amount'] : null;
        $this->container['last_paid_date'] = isset($data['last_paid_date']) ? $data['last_paid_date'] : null;
        $this->container['last_paid_amount'] = isset($data['last_paid_amount']) ? $data['last_paid_amount'] : null;
        $this->container['member_since'] = isset($data['member_since']) ? $data['member_since'] : null;
        $this->container['member_inactive_date'] = isset($data['member_inactive_date']) ? $data['member_inactive_date'] : null;
        $this->container['member_category'] = isset($data['member_category']) ? $data['member_category'] : null;
        $this->container['member_rank'] = isset($data['member_rank']) ? $data['member_rank'] : null;
        $this->container['member_type_date'] = isset($data['member_type_date']) ? $data['member_type_date'] : null;
        $this->container['member_category_date'] = isset($data['member_category_date']) ? $data['member_category_date'] : null;
        $this->container['reason_application_code'] = isset($data['reason_application_code']) ? $data['reason_application_code'] : null;
        $this->container['member_reason'] = isset($data['member_reason']) ? $data['member_reason'] : null;
        $this->container['account_user_field_sets'] = isset($data['account_user_field_sets']) ? $data['account_user_field_sets'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization'] === null) {
            $invalidProperties[] = "'organization' can't be null";
        }
        if ($this->container['account_code'] === null) {
            $invalidProperties[] = "'account_code' can't be null";
        }
        if ($this->container['middle_initial'] === null) {
            $invalidProperties[] = "'middle_initial' can't be null";
        }
        if ($this->container['first_name'] === null) {
            $invalidProperties[] = "'first_name' can't be null";
        }
        if ($this->container['last_name'] === null) {
            $invalidProperties[] = "'last_name' can't be null";
        }
        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['search'] === null) {
            $invalidProperties[] = "'search' can't be null";
        }
        if ($this->container['salutation'] === null) {
            $invalidProperties[] = "'salutation' can't be null";
        }
        if ($this->container['title'] === null) {
            $invalidProperties[] = "'title' can't be null";
        }
        if ($this->container['address1'] === null) {
            $invalidProperties[] = "'address1' can't be null";
        }
        if ($this->container['address2'] === null) {
            $invalidProperties[] = "'address2' can't be null";
        }
        if ($this->container['address3'] === null) {
            $invalidProperties[] = "'address3' can't be null";
        }
        if ($this->container['address4'] === null) {
            $invalidProperties[] = "'address4' can't be null";
        }
        if ($this->container['address5'] === null) {
            $invalidProperties[] = "'address5' can't be null";
        }
        if ($this->container['address6'] === null) {
            $invalidProperties[] = "'address6' can't be null";
        }
        if ($this->container['city'] === null) {
            $invalidProperties[] = "'city' can't be null";
        }
        if ($this->container['state'] === null) {
            $invalidProperties[] = "'state' can't be null";
        }
        if ($this->container['postal_code'] === null) {
            $invalidProperties[] = "'postal_code' can't be null";
        }
        if ($this->container['country'] === null) {
            $invalidProperties[] = "'country' can't be null";
        }
        if ($this->container['region'] === null) {
            $invalidProperties[] = "'region' can't be null";
        }
        if ($this->container['keyword'] === null) {
            $invalidProperties[] = "'keyword' can't be null";
        }
        if ($this->container['keyword2'] === null) {
            $invalidProperties[] = "'keyword2' can't be null";
        }
        if ($this->container['legal_name'] === null) {
            $invalidProperties[] = "'legal_name' can't be null";
        }
        if ($this->container['nickname'] === null) {
            $invalidProperties[] = "'nickname' can't be null";
        }
        if ($this->container['class'] === null) {
            $invalidProperties[] = "'class' can't be null";
        }
        if ($this->container['phone'] === null) {
            $invalidProperties[] = "'phone' can't be null";
        }
        if ($this->container['fax'] === null) {
            $invalidProperties[] = "'fax' can't be null";
        }
        if ($this->container['mobile'] === null) {
            $invalidProperties[] = "'mobile' can't be null";
        }
        if ($this->container['direct'] === null) {
            $invalidProperties[] = "'direct' can't be null";
        }
        if ($this->container['market_segment_major'] === null) {
            $invalidProperties[] = "'market_segment_major' can't be null";
        }
        if ($this->container['market_segment_minor'] === null) {
            $invalidProperties[] = "'market_segment_minor' can't be null";
        }
        if ($this->container['email'] === null) {
            $invalidProperties[] = "'email' can't be null";
        }
        if ($this->container['website'] === null) {
            $invalidProperties[] = "'website' can't be null";
        }
        if ($this->container['company'] === null) {
            $invalidProperties[] = "'company' can't be null";
        }
        if ($this->container['second_last_name'] === null) {
            $invalidProperties[] = "'second_last_name' can't be null";
        }
        if ($this->container['prefix'] === null) {
            $invalidProperties[] = "'prefix' can't be null";
        }
        if ($this->container['suffix'] === null) {
            $invalidProperties[] = "'suffix' can't be null";
        }
        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['account_rep'] === null) {
            $invalidProperties[] = "'account_rep' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['direct_mail_opt_in'] === null) {
            $invalidProperties[] = "'direct_mail_opt_in' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['position'] === null) {
            $invalidProperties[] = "'position' can't be null";
        }
        if ($this->container['birth_date'] === null) {
            $invalidProperties[] = "'birth_date' can't be null";
        }
        if ($this->container['gender'] === null) {
            $invalidProperties[] = "'gender' can't be null";
        }
        if ($this->container['language'] === null) {
            $invalidProperties[] = "'language' can't be null";
        }
        if ($this->container['e_fax'] === null) {
            $invalidProperties[] = "'e_fax' can't be null";
        }
        if ($this->container['department'] === null) {
            $invalidProperties[] = "'department' can't be null";
        }
        if ($this->container['second_title'] === null) {
            $invalidProperties[] = "'second_title' can't be null";
        }
        if ($this->container['acronym'] === null) {
            $invalidProperties[] = "'acronym' can't be null";
        }
        if ($this->container['market_size'] === null) {
            $invalidProperties[] = "'market_size' can't be null";
        }
        if ($this->container['tax_id'] === null) {
            $invalidProperties[] = "'tax_id' can't be null";
        }
        if ($this->container['ar_control'] === null) {
            $invalidProperties[] = "'ar_control' can't be null";
        }
        if ($this->container['privileged'] === null) {
            $invalidProperties[] = "'privileged' can't be null";
        }
        if ($this->container['user_id'] === null) {
            $invalidProperties[] = "'user_id' can't be null";
        }
        if ($this->container['iacvb'] === null) {
            $invalidProperties[] = "'iacvb' can't be null";
        }
        if ($this->container['language_preference'] === null) {
            $invalidProperties[] = "'language_preference' can't be null";
        }
        if ($this->container['multi_org_account'] === null) {
            $invalidProperties[] = "'multi_org_account' can't be null";
        }
        if ($this->container['personnel_position'] === null) {
            $invalidProperties[] = "'personnel_position' can't be null";
        }
        if ($this->container['personnel_department'] === null) {
            $invalidProperties[] = "'personnel_department' can't be null";
        }
        if ($this->container['synchronized_organization'] === null) {
            $invalidProperties[] = "'synchronized_organization' can't be null";
        }
        if ($this->container['synchronized_account'] === null) {
            $invalidProperties[] = "'synchronized_account' can't be null";
        }
        if ($this->container['synchronization_status'] === null) {
            $invalidProperties[] = "'synchronization_status' can't be null";
        }
        if ($this->container['birth_place'] === null) {
            $invalidProperties[] = "'birth_place' can't be null";
        }
        if ($this->container['nationality'] === null) {
            $invalidProperties[] = "'nationality' can't be null";
        }
        if ($this->container['identification_nbr'] === null) {
            $invalidProperties[] = "'identification_nbr' can't be null";
        }
        if ($this->container['select'] === null) {
            $invalidProperties[] = "'select' can't be null";
        }
        if ($this->container['accuracy'] === null) {
            $invalidProperties[] = "'accuracy' can't be null";
        }
        if ($this->container['internet_logon'] === null) {
            $invalidProperties[] = "'internet_logon' can't be null";
        }
        if ($this->container['market_size_um'] === null) {
            $invalidProperties[] = "'market_size_um' can't be null";
        }
        if ($this->container['external_code'] === null) {
            $invalidProperties[] = "'external_code' can't be null";
        }
        if ($this->container['event_sales_status'] === null) {
            $invalidProperties[] = "'event_sales_status' can't be null";
        }
        if ($this->container['tour_sales'] === null) {
            $invalidProperties[] = "'tour_sales' can't be null";
        }
        if ($this->container['public_relations'] === null) {
            $invalidProperties[] = "'public_relations' can't be null";
        }
        if ($this->container['membership'] === null) {
            $invalidProperties[] = "'membership' can't be null";
        }
        if ($this->container['receivables'] === null) {
            $invalidProperties[] = "'receivables' can't be null";
        }
        if ($this->container['payables'] === null) {
            $invalidProperties[] = "'payables' can't be null";
        }
        if ($this->container['visitor_inquiry'] === null) {
            $invalidProperties[] = "'visitor_inquiry' can't be null";
        }
        if ($this->container['registration'] === null) {
            $invalidProperties[] = "'registration' can't be null";
        }
        if ($this->container['personnel'] === null) {
            $invalidProperties[] = "'personnel' can't be null";
        }
        if ($this->container['speaker'] === null) {
            $invalidProperties[] = "'speaker' can't be null";
        }
        if ($this->container['account_rep2'] === null) {
            $invalidProperties[] = "'account_rep2' can't be null";
        }
        if ($this->container['account_rep3'] === null) {
            $invalidProperties[] = "'account_rep3' can't be null";
        }
        if ($this->container['main_account'] === null) {
            $invalidProperties[] = "'main_account' can't be null";
        }
        if ($this->container['tax_scheme'] === null) {
            $invalidProperties[] = "'tax_scheme' can't be null";
        }
        if ($this->container['tax_registration_status'] === null) {
            $invalidProperties[] = "'tax_registration_status' can't be null";
        }
        if ($this->container['preferred_contact_method'] === null) {
            $invalidProperties[] = "'preferred_contact_method' can't be null";
        }
        if ($this->container['facebook'] === null) {
            $invalidProperties[] = "'facebook' can't be null";
        }
        if ($this->container['twitter'] === null) {
            $invalidProperties[] = "'twitter' can't be null";
        }
        if ($this->container['linked_in'] === null) {
            $invalidProperties[] = "'linked_in' can't be null";
        }
        if ($this->container['primary_account'] === null) {
            $invalidProperties[] = "'primary_account' can't be null";
        }
        if ($this->container['annual_revenue'] === null) {
            $invalidProperties[] = "'annual_revenue' can't be null";
        }
        if ($this->container['numberof_employees'] === null) {
            $invalidProperties[] = "'numberof_employees' can't be null";
        }
        if ($this->container['gender_id'] === null) {
            $invalidProperties[] = "'gender_id' can't be null";
        }
        if ($this->container['member_type'] === null) {
            $invalidProperties[] = "'member_type' can't be null";
        }
        if ($this->container['member_status'] === null) {
            $invalidProperties[] = "'member_status' can't be null";
        }
        if ($this->container['member_status_date'] === null) {
            $invalidProperties[] = "'member_status_date' can't be null";
        }
        if ($this->container['last_billed_date'] === null) {
            $invalidProperties[] = "'last_billed_date' can't be null";
        }
        if ($this->container['last_billed_amount'] === null) {
            $invalidProperties[] = "'last_billed_amount' can't be null";
        }
        if ($this->container['last_paid_date'] === null) {
            $invalidProperties[] = "'last_paid_date' can't be null";
        }
        if ($this->container['last_paid_amount'] === null) {
            $invalidProperties[] = "'last_paid_amount' can't be null";
        }
        if ($this->container['member_since'] === null) {
            $invalidProperties[] = "'member_since' can't be null";
        }
        if ($this->container['member_inactive_date'] === null) {
            $invalidProperties[] = "'member_inactive_date' can't be null";
        }
        if ($this->container['member_category'] === null) {
            $invalidProperties[] = "'member_category' can't be null";
        }
        if ($this->container['member_rank'] === null) {
            $invalidProperties[] = "'member_rank' can't be null";
        }
        if ($this->container['member_type_date'] === null) {
            $invalidProperties[] = "'member_type_date' can't be null";
        }
        if ($this->container['member_category_date'] === null) {
            $invalidProperties[] = "'member_category_date' can't be null";
        }
        if ($this->container['reason_application_code'] === null) {
            $invalidProperties[] = "'reason_application_code' can't be null";
        }
        if ($this->container['member_reason'] === null) {
            $invalidProperties[] = "'member_reason' can't be null";
        }
        if ($this->container['account_user_field_sets'] === null) {
            $invalidProperties[] = "'account_user_field_sets' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is used to identify an account.  Use on the URL for GET or PUT commands.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets account_code
     *
     * @return string
     */
    public function getAccountCode()
    {
        return $this->container['account_code'];
    }

    /**
     * Sets account_code
     *
     * @param string $account_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is used to identify an account.  Use on the URL for GET or PUT commands.  Also, setting this to \"*AUTO\" when adding new account will make the code auto-generated if this is configured in Ungerboeck.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_ACCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccountCode($account_code)
    {
        $this->container['account_code'] = $account_code;

        return $this;
    }

    /**
     * Gets middle_initial
     *
     * @return string
     */
    public function getMiddleInitial()
    {
        return $this->container['middle_initial'];
    }

    /**
     * Sets middle_initial
     *
     * @param string $middle_initial <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Used for individual accounts only.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_MIDDLE_INITIAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMiddleInitial($middle_initial)
    {
        $this->container['middle_initial'] = $middle_initial;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string $first_name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_FIRST_NAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 70  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string $last_name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Cannot be blank for individual accounts  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_LAST_NAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 70  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Cannot be blank for organization accounts.  This will fill in automatically for individual accounts.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_NAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets search
     *
     * @return string
     */
    public function getSearch()
    {
        return $this->container['search'];
    }

    /**
     * Sets search
     *
     * @param string $search <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_ALPHA_SEARCH_KEY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSearch($search)
    {
        $this->container['search'] = $search;

        return $this;
    }

    /**
     * Gets salutation
     *
     * @return string
     */
    public function getSalutation()
    {
        return $this->container['salutation'];
    }

    /**
     * Sets salutation
     *
     * @param string $salutation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_SALUTATION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSalutation($salutation)
    {
        $this->container['salutation'] = $salutation;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string $title <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Used for individual accounts only.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_TITLE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets address1
     *
     * @return string
     */
    public function getAddress1()
    {
        return $this->container['address1'];
    }

    /**
     * Sets address1
     *
     * @param string $address1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_ADDRESS_L1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAddress1($address1)
    {
        $this->container['address1'] = $address1;

        return $this;
    }

    /**
     * Gets address2
     *
     * @return string
     */
    public function getAddress2()
    {
        return $this->container['address2'];
    }

    /**
     * Sets address2
     *
     * @param string $address2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_ADDRESS_L2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAddress2($address2)
    {
        $this->container['address2'] = $address2;

        return $this;
    }

    /**
     * Gets address3
     *
     * @return string
     */
    public function getAddress3()
    {
        return $this->container['address3'];
    }

    /**
     * Sets address3
     *
     * @param string $address3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_ADDRESS_L3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAddress3($address3)
    {
        $this->container['address3'] = $address3;

        return $this;
    }

    /**
     * Gets address4
     *
     * @return string
     */
    public function getAddress4()
    {
        return $this->container['address4'];
    }

    /**
     * Sets address4
     *
     * @param string $address4 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_ADDRESS_L4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAddress4($address4)
    {
        $this->container['address4'] = $address4;

        return $this;
    }

    /**
     * Gets address5
     *
     * @return string
     */
    public function getAddress5()
    {
        return $this->container['address5'];
    }

    /**
     * Sets address5
     *
     * @param string $address5 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_ADDRESS_L5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAddress5($address5)
    {
        $this->container['address5'] = $address5;

        return $this;
    }

    /**
     * Gets address6
     *
     * @return string
     */
    public function getAddress6()
    {
        return $this->container['address6'];
    }

    /**
     * Sets address6
     *
     * @param string $address6 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_ADDRESS_L6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAddress6($address6)
    {
        $this->container['address6'] = $address6;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string $city <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_CITY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string $state <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_STATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets postal_code
     *
     * @return string
     */
    public function getPostalCode()
    {
        return $this->container['postal_code'];
    }

    /**
     * Sets postal_code
     *
     * @param string $postal_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_POSTAL_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 25  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPostalCode($postal_code)
    {
        $this->container['postal_code'] = $postal_code;

        return $this;
    }

    /**
     * Gets country
     *
     * @return string
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     *
     * @param string $country <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_COUNTRY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets region
     *
     * @return string
     */
    public function getRegion()
    {
        return $this->container['region'];
    }

    /**
     * Sets region
     *
     * @param string $region <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_SALES_REGION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRegion($region)
    {
        $this->container['region'] = $region;

        return $this;
    }

    /**
     * Gets keyword
     *
     * @return string
     */
    public function getKeyword()
    {
        return $this->container['keyword'];
    }

    /**
     * Sets keyword
     *
     * @param string $keyword <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_KEYWORD_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setKeyword($keyword)
    {
        $this->container['keyword'] = $keyword;

        return $this;
    }

    /**
     * Gets keyword2
     *
     * @return string
     */
    public function getKeyword2()
    {
        return $this->container['keyword2'];
    }

    /**
     * Sets keyword2
     *
     * @param string $keyword2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_KEYWORD_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setKeyword2($keyword2)
    {
        $this->container['keyword2'] = $keyword2;

        return $this;
    }

    /**
     * Gets legal_name
     *
     * @return string
     */
    public function getLegalName()
    {
        return $this->container['legal_name'];
    }

    /**
     * Sets legal_name
     *
     * @param string $legal_name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_LEGAL_NAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLegalName($legal_name)
    {
        $this->container['legal_name'] = $legal_name;

        return $this;
    }

    /**
     * Gets nickname
     *
     * @return string
     */
    public function getNickname()
    {
        return $this->container['nickname'];
    }

    /**
     * Sets nickname
     *
     * @param string $nickname <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Used for individual accounts only.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_NICKNAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNickname($nickname)
    {
        $this->container['nickname'] = $nickname;

        return $this;
    }

    /**
     * Gets class
     *
     * @return string
     */
    public function getClass()
    {
        return $this->container['class'];
    }

    /**
     * Sets class
     *
     * @param string $class <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This needs to be included when doing a POST or PUT.  An error will occur otherwise.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_CLASS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setClass($class)
    {
        $this->container['class'] = $class;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string $phone <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Adding/Changing this will modify the associated communication (CC810) record  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_MAIN_PHONE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets fax
     *
     * @return string
     */
    public function getFax()
    {
        return $this->container['fax'];
    }

    /**
     * Sets fax
     *
     * @param string $fax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Adding/Changing this will modify the associated communication (CC810) record  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_MAIN_FAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFax($fax)
    {
        $this->container['fax'] = $fax;

        return $this;
    }

    /**
     * Gets mobile
     *
     * @return string
     */
    public function getMobile()
    {
        return $this->container['mobile'];
    }

    /**
     * Sets mobile
     *
     * @param string $mobile <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_MOBILE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMobile($mobile)
    {
        $this->container['mobile'] = $mobile;

        return $this;
    }

    /**
     * Gets direct
     *
     * @return string
     */
    public function getDirect()
    {
        return $this->container['direct'];
    }

    /**
     * Sets direct
     *
     * @param string $direct <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Adding/Changing this will modify the associated communication (CC810) record  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_PERS_PHONE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDirect($direct)
    {
        $this->container['direct'] = $direct;

        return $this;
    }

    /**
     * Gets market_segment_major
     *
     * @return string
     */
    public function getMarketSegmentMajor()
    {
        return $this->container['market_segment_major'];
    }

    /**
     * Sets market_segment_major
     *
     * @param string $market_segment_major <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_MKT_SEG_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMarketSegmentMajor($market_segment_major)
    {
        $this->container['market_segment_major'] = $market_segment_major;

        return $this;
    }

    /**
     * Gets market_segment_minor
     *
     * @return string
     */
    public function getMarketSegmentMinor()
    {
        return $this->container['market_segment_minor'];
    }

    /**
     * Sets market_segment_minor
     *
     * @param string $market_segment_minor <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_MKT_SEG_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMarketSegmentMinor($market_segment_minor)
    {
        $this->container['market_segment_minor'] = $market_segment_minor;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Adding/Changing this will modify the associated communication (CC810) record  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_EMAIL_ADDRESS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets website
     *
     * @return string
     */
    public function getWebsite()
    {
        return $this->container['website'];
    }

    /**
     * Sets website
     *
     * @param string $website <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Adding/Changing this will modify the associated communication (CC810) record  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_WEB_ADDRESS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setWebsite($website)
    {
        $this->container['website'] = $website;

        return $this;
    }

    /**
     * Gets company
     *
     * @return string
     */
    public function getCompany()
    {
        return $this->container['company'];
    }

    /**
     * Sets company
     *
     * @param string $company <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Note that this is the company name, and not the account code of the company.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_COMPANY_NAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCompany($company)
    {
        $this->container['company'] = $company;

        return $this;
    }

    /**
     * Gets second_last_name
     *
     * @return string
     */
    public function getSecondLastName()
    {
        return $this->container['second_last_name'];
    }

    /**
     * Sets second_last_name
     *
     * @param string $second_last_name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Used for individual accounts only.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_LAST_NAME2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 70  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSecondLastName($second_last_name)
    {
        $this->container['second_last_name'] = $second_last_name;

        return $this;
    }

    /**
     * Gets prefix
     *
     * @return string
     */
    public function getPrefix()
    {
        return $this->container['prefix'];
    }

    /**
     * Sets prefix
     *
     * @param string $prefix <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_PREFIX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPrefix($prefix)
    {
        $this->container['prefix'] = $prefix;

        return $this;
    }

    /**
     * Gets suffix
     *
     * @return string
     */
    public function getSuffix()
    {
        return $this->container['suffix'];
    }

    /**
     * Sets suffix
     *
     * @param string $suffix <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_SUFFIX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSuffix($suffix)
    {
        $this->container['suffix'] = $suffix;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets account_rep
     *
     * @return string
     */
    public function getAccountRep()
    {
        return $this->container['account_rep'];
    }

    /**
     * Sets account_rep
     *
     * @param string $account_rep <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_REP_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccountRep($account_rep)
    {
        $this->container['account_rep'] = $account_rep;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Automatically set by API  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_ENTER_USERID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Automatically set by API  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_ENTER_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets direct_mail_opt_in
     *
     * @return string
     */
    public function getDirectMailOptIn()
    {
        return $this->container['direct_mail_opt_in'];
    }

    /**
     * Sets direct_mail_opt_in
     *
     * @param string $direct_mail_opt_in <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Adding/Changing this will modify the associated communication (CC810) record  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_DIRECT_MAIL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDirectMailOptIn($direct_mail_opt_in)
    {
        $this->container['direct_mail_opt_in'] = $direct_mail_opt_in;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Automatically set by API  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_UPD_USERID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Automatically set by API  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets position
     *
     * @return string
     */
    public function getPosition()
    {
        return $this->container['position'];
    }

    /**
     * Sets position
     *
     * @param string $position <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_POSITION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPosition($position)
    {
        $this->container['position'] = $position;

        return $this;
    }

    /**
     * Gets birth_date
     *
     * @return \DateTime
     */
    public function getBirthDate()
    {
        return $this->container['birth_date'];
    }

    /**
     * Sets birth_date
     *
     * @param \DateTime $birth_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_BIRTHDAY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBirthDate($birth_date)
    {
        $this->container['birth_date'] = $birth_date;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return string
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param string $gender <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Contains the code for the gender of the person 'M', 'F', 'O'.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_GENDER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets language
     *
     * @return string
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param string $language <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_LANG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLanguage($language)
    {
        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets e_fax
     *
     * @return string
     */
    public function getEFax()
    {
        return $this->container['e_fax'];
    }

    /**
     * Sets e_fax
     *
     * @param string $e_fax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Adding/Changing this will modify the associated communication (CC810) record  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_EFAX_ADDRESS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEFax($e_fax)
    {
        $this->container['e_fax'] = $e_fax;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string $department <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_DEPT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets second_title
     *
     * @return string
     */
    public function getSecondTitle()
    {
        return $this->container['second_title'];
    }

    /**
     * Sets second_title
     *
     * @param string $second_title <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Used for individual accounts only.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_TITLE_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSecondTitle($second_title)
    {
        $this->container['second_title'] = $second_title;

        return $this;
    }

    /**
     * Gets acronym
     *
     * @return string
     */
    public function getAcronym()
    {
        return $this->container['acronym'];
    }

    /**
     * Sets acronym
     *
     * @param string $acronym <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_ACRONYM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAcronym($acronym)
    {
        $this->container['acronym'] = $acronym;

        return $this;
    }

    /**
     * Gets market_size
     *
     * @return double
     */
    public function getMarketSize()
    {
        return $this->container['market_size'];
    }

    /**
     * Sets market_size
     *
     * @param double $market_size <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_MKT_SIZE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 152  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMarketSize($market_size)
    {
        $this->container['market_size'] = $market_size;

        return $this;
    }

    /**
     * Gets tax_id
     *
     * @return string
     */
    public function getTaxId()
    {
        return $this->container['tax_id'];
    }

    /**
     * Sets tax_id
     *
     * @param string $tax_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_TAX_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxId($tax_id)
    {
        $this->container['tax_id'] = $tax_id;

        return $this;
    }

    /**
     * Gets ar_control
     *
     * @return string
     */
    public function getArControl()
    {
        return $this->container['ar_control'];
    }

    /**
     * Sets ar_control
     *
     * @param string $ar_control <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_ACCT_SECURITY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setArControl($ar_control)
    {
        $this->container['ar_control'] = $ar_control;

        return $this;
    }

    /**
     * Gets privileged
     *
     * @return string
     */
    public function getPrivileged()
    {
        return $this->container['privileged'];
    }

    /**
     * Sets privileged
     *
     * @param string $privileged <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_PRIVILEGED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPrivileged($privileged)
    {
        $this->container['privileged'] = $privileged;

        return $this;
    }

    /**
     * Gets user_id
     *
     * @return string
     */
    public function getUserId()
    {
        return $this->container['user_id'];
    }

    /**
     * Sets user_id
     *
     * @param string $user_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Note that this should be filled in for personnel accounts only  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_USERID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserId($user_id)
    {
        $this->container['user_id'] = $user_id;

        return $this;
    }

    /**
     * Gets iacvb
     *
     * @return string
     */
    public function getIacvb()
    {
        return $this->container['iacvb'];
    }

    /**
     * Sets iacvb
     *
     * @param string $iacvb <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_IACVB_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIacvb($iacvb)
    {
        $this->container['iacvb'] = $iacvb;

        return $this;
    }

    /**
     * Gets language_preference
     *
     * @return string
     */
    public function getLanguagePreference()
    {
        return $this->container['language_preference'];
    }

    /**
     * Sets language_preference
     *
     * @param string $language_preference <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_LANG_PREF  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLanguagePreference($language_preference)
    {
        $this->container['language_preference'] = $language_preference;

        return $this;
    }

    /**
     * Gets multi_org_account
     *
     * @return string
     */
    public function getMultiOrgAccount()
    {
        return $this->container['multi_org_account'];
    }

    /**
     * Sets multi_org_account
     *
     * @param string $multi_org_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_MULTI_ORG_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMultiOrgAccount($multi_org_account)
    {
        $this->container['multi_org_account'] = $multi_org_account;

        return $this;
    }

    /**
     * Gets personnel_position
     *
     * @return string
     */
    public function getPersonnelPosition()
    {
        return $this->container['personnel_position'];
    }

    /**
     * Sets personnel_position
     *
     * @param string $personnel_position <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Note that this should be filled in for personnel accounts only  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_PRS_POSITION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPersonnelPosition($personnel_position)
    {
        $this->container['personnel_position'] = $personnel_position;

        return $this;
    }

    /**
     * Gets personnel_department
     *
     * @return string
     */
    public function getPersonnelDepartment()
    {
        return $this->container['personnel_department'];
    }

    /**
     * Sets personnel_department
     *
     * @param string $personnel_department <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Note that this should be filled in for personnel accounts only  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_PRS_DEPT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPersonnelDepartment($personnel_department)
    {
        $this->container['personnel_department'] = $personnel_department;

        return $this;
    }

    /**
     * Gets synchronized_organization
     *
     * @return string
     */
    public function getSynchronizedOrganization()
    {
        return $this->container['synchronized_organization'];
    }

    /**
     * Sets synchronized_organization
     *
     * @param string $synchronized_organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_SYNC_ORG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSynchronizedOrganization($synchronized_organization)
    {
        $this->container['synchronized_organization'] = $synchronized_organization;

        return $this;
    }

    /**
     * Gets synchronized_account
     *
     * @return string
     */
    public function getSynchronizedAccount()
    {
        return $this->container['synchronized_account'];
    }

    /**
     * Sets synchronized_account
     *
     * @param string $synchronized_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_SYNC_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSynchronizedAccount($synchronized_account)
    {
        $this->container['synchronized_account'] = $synchronized_account;

        return $this;
    }

    /**
     * Gets synchronization_status
     *
     * @return string
     */
    public function getSynchronizationStatus()
    {
        return $this->container['synchronization_status'];
    }

    /**
     * Sets synchronization_status
     *
     * @param string $synchronization_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_SYNC_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSynchronizationStatus($synchronization_status)
    {
        $this->container['synchronization_status'] = $synchronization_status;

        return $this;
    }

    /**
     * Gets birth_place
     *
     * @return string
     */
    public function getBirthPlace()
    {
        return $this->container['birth_place'];
    }

    /**
     * Sets birth_place
     *
     * @param string $birth_place <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_BIRTH_PLACE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 200  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBirthPlace($birth_place)
    {
        $this->container['birth_place'] = $birth_place;

        return $this;
    }

    /**
     * Gets nationality
     *
     * @return string
     */
    public function getNationality()
    {
        return $this->container['nationality'];
    }

    /**
     * Sets nationality
     *
     * @param string $nationality <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_NATIONALITY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNationality($nationality)
    {
        $this->container['nationality'] = $nationality;

        return $this;
    }

    /**
     * Gets identification_nbr
     *
     * @return string
     */
    public function getIdentificationNbr()
    {
        return $this->container['identification_nbr'];
    }

    /**
     * Sets identification_nbr
     *
     * @param string $identification_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_ID_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 200  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIdentificationNbr($identification_nbr)
    {
        $this->container['identification_nbr'] = $identification_nbr;

        return $this;
    }

    /**
     * Gets select
     *
     * @return string
     */
    public function getSelect()
    {
        return $this->container['select'];
    }

    /**
     * Sets select
     *
     * @param string $select <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_SELECT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSelect($select)
    {
        $this->container['select'] = $select;

        return $this;
    }

    /**
     * Gets accuracy
     *
     * @return string
     */
    public function getAccuracy()
    {
        return $this->container['accuracy'];
    }

    /**
     * Sets accuracy
     *
     * @param string $accuracy <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_ACCURACY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccuracy($accuracy)
    {
        $this->container['accuracy'] = $accuracy;

        return $this;
    }

    /**
     * Gets internet_logon
     *
     * @return string
     */
    public function getInternetLogon()
    {
        return $this->container['internet_logon'];
    }

    /**
     * Sets internet_logon
     *
     * @param string $internet_logon <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_INET_LOGON  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInternetLogon($internet_logon)
    {
        $this->container['internet_logon'] = $internet_logon;

        return $this;
    }

    /**
     * Gets market_size_um
     *
     * @return string
     */
    public function getMarketSizeUm()
    {
        return $this->container['market_size_um'];
    }

    /**
     * Sets market_size_um
     *
     * @param string $market_size_um <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_MKT_SIZE_UOM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMarketSizeUm($market_size_um)
    {
        $this->container['market_size_um'] = $market_size_um;

        return $this;
    }

    /**
     * Gets external_code
     *
     * @return string
     */
    public function getExternalCode()
    {
        return $this->container['external_code'];
    }

    /**
     * Sets external_code
     *
     * @param string $external_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_EXTERNAL_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 40  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExternalCode($external_code)
    {
        $this->container['external_code'] = $external_code;

        return $this;
    }

    /**
     * Gets event_sales_status
     *
     * @return string
     */
    public function getEventSalesStatus()
    {
        return $this->container['event_sales_status'];
    }

    /**
     * Sets event_sales_status
     *
     * @param string $event_sales_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You can set this to the code value of the Account Status.  At least one designation needs to be set on a new account.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_EVT_SALES_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEventSalesStatus($event_sales_status)
    {
        $this->container['event_sales_status'] = $event_sales_status;

        return $this;
    }

    /**
     * Gets tour_sales
     *
     * @return string
     */
    public function getTourSales()
    {
        return $this->container['tour_sales'];
    }

    /**
     * Sets tour_sales
     *
     * @param string $tour_sales <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You can set this to the code value of the Account Status.  At least one designation needs to be set on a new account.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_TOUR_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTourSales($tour_sales)
    {
        $this->container['tour_sales'] = $tour_sales;

        return $this;
    }

    /**
     * Gets public_relations
     *
     * @return string
     */
    public function getPublicRelations()
    {
        return $this->container['public_relations'];
    }

    /**
     * Sets public_relations
     *
     * @param string $public_relations <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You can set this to the code value of the Account Status.  At least one designation needs to be set on a new account.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_PUBREL_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPublicRelations($public_relations)
    {
        $this->container['public_relations'] = $public_relations;

        return $this;
    }

    /**
     * Gets membership
     *
     * @return string
     */
    public function getMembership()
    {
        return $this->container['membership'];
    }

    /**
     * Sets membership
     *
     * @param string $membership <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You can set this to the code value of the Account Status.  At least one designation needs to be set on a new account.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_MEMBER_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMembership($membership)
    {
        $this->container['membership'] = $membership;

        return $this;
    }

    /**
     * Gets receivables
     *
     * @return string
     */
    public function getReceivables()
    {
        return $this->container['receivables'];
    }

    /**
     * Sets receivables
     *
     * @param string $receivables <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You can set this to the code value of the Account Status.  At least one designation needs to be set on a new account.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_AR_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setReceivables($receivables)
    {
        $this->container['receivables'] = $receivables;

        return $this;
    }

    /**
     * Gets payables
     *
     * @return string
     */
    public function getPayables()
    {
        return $this->container['payables'];
    }

    /**
     * Sets payables
     *
     * @param string $payables <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You can set this to the code value of the Account Status.  At least one designation needs to be set on a new account.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_AP_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPayables($payables)
    {
        $this->container['payables'] = $payables;

        return $this;
    }

    /**
     * Gets visitor_inquiry
     *
     * @return string
     */
    public function getVisitorInquiry()
    {
        return $this->container['visitor_inquiry'];
    }

    /**
     * Sets visitor_inquiry
     *
     * @param string $visitor_inquiry <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You can set this to the code value of the Account Status.  At least one designation needs to be set on a new account.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_VISITOR_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setVisitorInquiry($visitor_inquiry)
    {
        $this->container['visitor_inquiry'] = $visitor_inquiry;

        return $this;
    }

    /**
     * Gets registration
     *
     * @return string
     */
    public function getRegistration()
    {
        return $this->container['registration'];
    }

    /**
     * Sets registration
     *
     * @param string $registration <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You can set this to the code value of the Account Status.  At least one designation needs to be set on a new account.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_REGIS_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRegistration($registration)
    {
        $this->container['registration'] = $registration;

        return $this;
    }

    /**
     * Gets personnel
     *
     * @return string
     */
    public function getPersonnel()
    {
        return $this->container['personnel'];
    }

    /**
     * Sets personnel
     *
     * @param string $personnel <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You can set this to the code value of the Account Status.  At least one designation needs to be set on a new account.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_PERS_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPersonnel($personnel)
    {
        $this->container['personnel'] = $personnel;

        return $this;
    }

    /**
     * Gets speaker
     *
     * @return string
     */
    public function getSpeaker()
    {
        return $this->container['speaker'];
    }

    /**
     * Sets speaker
     *
     * @param string $speaker <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You can set this to the code value of the Account Status.  At least one designation needs to be set on a new account.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_SPKR_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSpeaker($speaker)
    {
        $this->container['speaker'] = $speaker;

        return $this;
    }

    /**
     * Gets account_rep2
     *
     * @return string
     */
    public function getAccountRep2()
    {
        return $this->container['account_rep2'];
    }

    /**
     * Sets account_rep2
     *
     * @param string $account_rep2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_REP_CODE_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccountRep2($account_rep2)
    {
        $this->container['account_rep2'] = $account_rep2;

        return $this;
    }

    /**
     * Gets account_rep3
     *
     * @return string
     */
    public function getAccountRep3()
    {
        return $this->container['account_rep3'];
    }

    /**
     * Sets account_rep3
     *
     * @param string $account_rep3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_REP_CODE_3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccountRep3($account_rep3)
    {
        $this->container['account_rep3'] = $account_rep3;

        return $this;
    }

    /**
     * Gets main_account
     *
     * @return string
     */
    public function getMainAccount()
    {
        return $this->container['main_account'];
    }

    /**
     * Sets main_account
     *
     * @param string $main_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is affected by adding relationships.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_MAIN_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMainAccount($main_account)
    {
        $this->container['main_account'] = $main_account;

        return $this;
    }

    /**
     * Gets tax_scheme
     *
     * @return string
     */
    public function getTaxScheme()
    {
        return $this->container['tax_scheme'];
    }

    /**
     * Sets tax_scheme
     *
     * @param string $tax_scheme <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_TAX_SCHEME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxScheme($tax_scheme)
    {
        $this->container['tax_scheme'] = $tax_scheme;

        return $this;
    }

    /**
     * Gets tax_registration_status
     *
     * @return string
     */
    public function getTaxRegistrationStatus()
    {
        return $this->container['tax_registration_status'];
    }

    /**
     * Sets tax_registration_status
     *
     * @param string $tax_registration_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_TAX_REG_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxRegistrationStatus($tax_registration_status)
    {
        $this->container['tax_registration_status'] = $tax_registration_status;

        return $this;
    }

    /**
     * Gets preferred_contact_method
     *
     * @return string
     */
    public function getPreferredContactMethod()
    {
        return $this->container['preferred_contact_method'];
    }

    /**
     * Sets preferred_contact_method
     *
     * @param string $preferred_contact_method <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_PREF_CNTCT_METHOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPreferredContactMethod($preferred_contact_method)
    {
        $this->container['preferred_contact_method'] = $preferred_contact_method;

        return $this;
    }

    /**
     * Gets facebook
     *
     * @return string
     */
    public function getFacebook()
    {
        return $this->container['facebook'];
    }

    /**
     * Sets facebook
     *
     * @param string $facebook <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_SOCIAL_NETWORK_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFacebook($facebook)
    {
        $this->container['facebook'] = $facebook;

        return $this;
    }

    /**
     * Gets twitter
     *
     * @return string
     */
    public function getTwitter()
    {
        return $this->container['twitter'];
    }

    /**
     * Sets twitter
     *
     * @param string $twitter <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_SOCIAL_NETWORK_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTwitter($twitter)
    {
        $this->container['twitter'] = $twitter;

        return $this;
    }

    /**
     * Gets linked_in
     *
     * @return string
     */
    public function getLinkedIn()
    {
        return $this->container['linked_in'];
    }

    /**
     * Sets linked_in
     *
     * @param string $linked_in <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_SOCIAL_NETWORK_3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLinkedIn($linked_in)
    {
        $this->container['linked_in'] = $linked_in;

        return $this;
    }

    /**
     * Gets primary_account
     *
     * @return string
     */
    public function getPrimaryAccount()
    {
        return $this->container['primary_account'];
    }

    /**
     * Sets primary_account
     *
     * @param string $primary_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> If you want to add a primary account, use the API to add a master account relationship.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_PRIMARY_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPrimaryAccount($primary_account)
    {
        $this->container['primary_account'] = $primary_account;

        return $this;
    }

    /**
     * Gets annual_revenue
     *
     * @return int
     */
    public function getAnnualRevenue()
    {
        return $this->container['annual_revenue'];
    }

    /**
     * Sets annual_revenue
     *
     * @param int $annual_revenue <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_ANNUAL_REVENUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAnnualRevenue($annual_revenue)
    {
        $this->container['annual_revenue'] = $annual_revenue;

        return $this;
    }

    /**
     * Gets numberof_employees
     *
     * @return int
     */
    public function getNumberofEmployees()
    {
        return $this->container['numberof_employees'];
    }

    /**
     * Sets numberof_employees
     *
     * @param int $numberof_employees <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV870_NUM_EMPLOYEES  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNumberofEmployees($numberof_employees)
    {
        $this->container['numberof_employees'] = $numberof_employees;

        return $this;
    }

    /**
     * Gets gender_id
     *
     * @return int
     */
    public function getGenderId()
    {
        return $this->container['gender_id'];
    }

    /**
     * Sets gender_id
     *
     * @param int $gender_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Contains IDs for the gender of a person from the customizable gender table.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV870_GENDER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGenderId($gender_id)
    {
        $this->container['gender_id'] = $gender_id;

        return $this;
    }

    /**
     * Gets member_type
     *
     * @return string
     */
    public function getMemberType()
    {
        return $this->container['member_type'];
    }

    /**
     * Sets member_type
     *
     * @param string $member_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV885_MEMBER_INFO_EV885_MEMBER_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMemberType($member_type)
    {
        $this->container['member_type'] = $member_type;

        return $this;
    }

    /**
     * Gets member_status
     *
     * @return string
     */
    public function getMemberStatus()
    {
        return $this->container['member_status'];
    }

    /**
     * Sets member_status
     *
     * @param string $member_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV885_MEMBER_INFO_EV885_MEMBER_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMemberStatus($member_status)
    {
        $this->container['member_status'] = $member_status;

        return $this;
    }

    /**
     * Gets member_status_date
     *
     * @return \DateTime
     */
    public function getMemberStatusDate()
    {
        return $this->container['member_status_date'];
    }

    /**
     * Sets member_status_date
     *
     * @param \DateTime $member_status_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV885_MEMBER_INFO_EV885_STS_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMemberStatusDate($member_status_date)
    {
        $this->container['member_status_date'] = $member_status_date;

        return $this;
    }

    /**
     * Gets last_billed_date
     *
     * @return \DateTime
     */
    public function getLastBilledDate()
    {
        return $this->container['last_billed_date'];
    }

    /**
     * Sets last_billed_date
     *
     * @param \DateTime $last_billed_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV885_MEMBER_INFO_EV885_LAST_BILLED_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastBilledDate($last_billed_date)
    {
        $this->container['last_billed_date'] = $last_billed_date;

        return $this;
    }

    /**
     * Gets last_billed_amount
     *
     * @return double
     */
    public function getLastBilledAmount()
    {
        return $this->container['last_billed_amount'];
    }

    /**
     * Sets last_billed_amount
     *
     * @param double $last_billed_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV885_MEMBER_INFO_EV885_LAST_BILLED_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 92  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastBilledAmount($last_billed_amount)
    {
        $this->container['last_billed_amount'] = $last_billed_amount;

        return $this;
    }

    /**
     * Gets last_paid_date
     *
     * @return \DateTime
     */
    public function getLastPaidDate()
    {
        return $this->container['last_paid_date'];
    }

    /**
     * Sets last_paid_date
     *
     * @param \DateTime $last_paid_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV885_MEMBER_INFO_EV885_LAST_PAID_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastPaidDate($last_paid_date)
    {
        $this->container['last_paid_date'] = $last_paid_date;

        return $this;
    }

    /**
     * Gets last_paid_amount
     *
     * @return double
     */
    public function getLastPaidAmount()
    {
        return $this->container['last_paid_amount'];
    }

    /**
     * Sets last_paid_amount
     *
     * @param double $last_paid_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV885_MEMBER_INFO_EV885_LAST_PAID_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 92  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastPaidAmount($last_paid_amount)
    {
        $this->container['last_paid_amount'] = $last_paid_amount;

        return $this;
    }

    /**
     * Gets member_since
     *
     * @return \DateTime
     */
    public function getMemberSince()
    {
        return $this->container['member_since'];
    }

    /**
     * Sets member_since
     *
     * @param \DateTime $member_since <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV885_MEMBER_INFO_EV885_MBR_SINCE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMemberSince($member_since)
    {
        $this->container['member_since'] = $member_since;

        return $this;
    }

    /**
     * Gets member_inactive_date
     *
     * @return \DateTime
     */
    public function getMemberInactiveDate()
    {
        return $this->container['member_inactive_date'];
    }

    /**
     * Sets member_inactive_date
     *
     * @param \DateTime $member_inactive_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV885_MEMBER_INFO_EV885_INACTIVE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMemberInactiveDate($member_inactive_date)
    {
        $this->container['member_inactive_date'] = $member_inactive_date;

        return $this;
    }

    /**
     * Gets member_category
     *
     * @return string
     */
    public function getMemberCategory()
    {
        return $this->container['member_category'];
    }

    /**
     * Sets member_category
     *
     * @param string $member_category <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV885_MEMBER_INFO_EV885_MBR_CATEGORY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMemberCategory($member_category)
    {
        $this->container['member_category'] = $member_category;

        return $this;
    }

    /**
     * Gets member_rank
     *
     * @return int
     */
    public function getMemberRank()
    {
        return $this->container['member_rank'];
    }

    /**
     * Sets member_rank
     *
     * @param int $member_rank <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV885_MEMBER_INFO_EV885_MBR_RANK  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMemberRank($member_rank)
    {
        $this->container['member_rank'] = $member_rank;

        return $this;
    }

    /**
     * Gets member_type_date
     *
     * @return \DateTime
     */
    public function getMemberTypeDate()
    {
        return $this->container['member_type_date'];
    }

    /**
     * Sets member_type_date
     *
     * @param \DateTime $member_type_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV885_MEMBER_INFO_EV885_MBR_TYPE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMemberTypeDate($member_type_date)
    {
        $this->container['member_type_date'] = $member_type_date;

        return $this;
    }

    /**
     * Gets member_category_date
     *
     * @return \DateTime
     */
    public function getMemberCategoryDate()
    {
        return $this->container['member_category_date'];
    }

    /**
     * Sets member_category_date
     *
     * @param \DateTime $member_category_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV885_MEMBER_INFO_EV885_MBR_CAT_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMemberCategoryDate($member_category_date)
    {
        $this->container['member_category_date'] = $member_category_date;

        return $this;
    }

    /**
     * Gets reason_application_code
     *
     * @return string
     */
    public function getReasonApplicationCode()
    {
        return $this->container['reason_application_code'];
    }

    /**
     * Sets reason_application_code
     *
     * @param string $reason_application_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV885_MEMBER_INFO_EV885_REASON_APPL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setReasonApplicationCode($reason_application_code)
    {
        $this->container['reason_application_code'] = $reason_application_code;

        return $this;
    }

    /**
     * Gets member_reason
     *
     * @return string
     */
    public function getMemberReason()
    {
        return $this->container['member_reason'];
    }

    /**
     * Sets member_reason
     *
     * @param string $member_reason <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV885_MEMBER_INFO_EV885_REASON_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMemberReason($member_reason)
    {
        $this->container['member_reason'] = $member_reason;

        return $this;
    }

    /**
     * Gets account_user_field_sets
     *
     * @return \FomF\Ungerboeck\Client\Model\UserFields[]
     */
    public function getAccountUserFieldSets()
    {
        return $this->container['account_user_field_sets'];
    }

    /**
     * Sets account_user_field_sets
     *
     * @param \FomF\Ungerboeck\Client\Model\UserFields[] $account_user_field_sets <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This holds the list of Account User Field set values.  This is not filled on searches unless explicitly requested in the SELECT OData query.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CR073_ISSUES Table</span></div>
     *
     * @return $this
     */
    public function setAccountUserFieldSets($account_user_field_sets)
    {
        $this->container['account_user_field_sets'] = $account_user_field_sets;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


