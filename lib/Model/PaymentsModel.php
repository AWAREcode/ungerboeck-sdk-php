<?php
/**
 * PaymentsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * PaymentsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PaymentsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PaymentsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization' => 'string',
        'sequence' => 'int',
        'account' => 'string',
        'date' => '\DateTime',
        'reference' => 'string',
        'check_expiration_date' => '\DateTime',
        'due_date' => '\DateTime',
        'type' => 'string',
        'source' => 'string',
        'control' => 'string',
        'event' => 'int',
        'payment_schedule' => 'string',
        'payment_plan' => 'int',
        'invoice' => 'int',
        'amount' => 'double',
        'open_amount' => 'double',
        'address1' => 'string',
        'address2' => 'string',
        'order_department' => 'string',
        'internal' => 'string',
        'address3' => 'string',
        'city' => 'string',
        'gl_posted' => 'string',
        'state' => 'string',
        'postal_code' => 'string',
        'function' => 'int',
        'order_number' => 'int',
        'closed_date' => '\DateTime',
        'country' => 'string',
        'name' => 'string',
        'fc_amount' => 'double',
        'fc_open_amount' => 'double',
        'first_name' => 'string',
        'last_name' => 'string',
        'user_reference' => 'string',
        'memo_payment' => 'string',
        'batch_id' => 'string',
        'transaction_amount' => 'double',
        'fc_transaction_amount' => 'double',
        'multiple_transactions' => 'string',
        'currency' => 'string',
        'payment_number' => 'string',
        'note' => 'string',
        'from_account' => 'string',
        'to_account' => 'string',
        'applied_sequence' => 'int',
        'applied_to_sequence' => 'int',
        'entered_by' => 'string',
        'changed_by_code' => 'string',
        'entered_on' => '\DateTime',
        'changed_on' => '\DateTime',
        'method' => 'string',
        'printed' => 'string',
        'contact' => 'string',
        'paid_currency' => 'string',
        'paid_amount' => 'double',
        'transaction_class' => 'string',
        'fc_adjustment' => 'string',
        'fc_adjustment_amount' => 'double',
        'override_amount' => 'double',
        'original_trans' => 'string',
        'indicator' => 'string',
        'security_code' => 'string',
        'transaction' => 'string',
        'expiration_date' => 'string',
        'credit_card' => 'string',
        'cash_book_transaction_number' => 'int',
        'issue_number' => 'string',
        'debit_card_start_month' => 'string',
        'debit_card_start_year' => 'string',
        'cybersource_cc_token' => 'string',
        'swiped' => 'string',
        'routing_number' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization' => null,
        'sequence' => 'int32',
        'account' => null,
        'date' => 'date-time',
        'reference' => null,
        'check_expiration_date' => 'date-time',
        'due_date' => 'date-time',
        'type' => null,
        'source' => null,
        'control' => null,
        'event' => 'int32',
        'payment_schedule' => null,
        'payment_plan' => 'int32',
        'invoice' => 'int32',
        'amount' => 'double',
        'open_amount' => 'double',
        'address1' => null,
        'address2' => null,
        'order_department' => null,
        'internal' => null,
        'address3' => null,
        'city' => null,
        'gl_posted' => null,
        'state' => null,
        'postal_code' => null,
        'function' => 'int32',
        'order_number' => 'int32',
        'closed_date' => 'date-time',
        'country' => null,
        'name' => null,
        'fc_amount' => 'double',
        'fc_open_amount' => 'double',
        'first_name' => null,
        'last_name' => null,
        'user_reference' => null,
        'memo_payment' => null,
        'batch_id' => null,
        'transaction_amount' => 'double',
        'fc_transaction_amount' => 'double',
        'multiple_transactions' => null,
        'currency' => null,
        'payment_number' => null,
        'note' => null,
        'from_account' => null,
        'to_account' => null,
        'applied_sequence' => 'int32',
        'applied_to_sequence' => 'int32',
        'entered_by' => null,
        'changed_by_code' => null,
        'entered_on' => 'date-time',
        'changed_on' => 'date-time',
        'method' => null,
        'printed' => null,
        'contact' => null,
        'paid_currency' => null,
        'paid_amount' => 'double',
        'transaction_class' => null,
        'fc_adjustment' => null,
        'fc_adjustment_amount' => 'double',
        'override_amount' => 'double',
        'original_trans' => null,
        'indicator' => null,
        'security_code' => null,
        'transaction' => null,
        'expiration_date' => null,
        'credit_card' => null,
        'cash_book_transaction_number' => 'int32',
        'issue_number' => null,
        'debit_card_start_month' => null,
        'debit_card_start_year' => null,
        'cybersource_cc_token' => null,
        'swiped' => null,
        'routing_number' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization' => 'Organization',
        'sequence' => 'Sequence',
        'account' => 'Account',
        'date' => 'Date',
        'reference' => 'Reference',
        'check_expiration_date' => 'CheckExpirationDate',
        'due_date' => 'DueDate',
        'type' => 'Type',
        'source' => 'Source',
        'control' => 'Control',
        'event' => 'Event',
        'payment_schedule' => 'PaymentSchedule',
        'payment_plan' => 'PaymentPlan',
        'invoice' => 'Invoice',
        'amount' => 'Amount',
        'open_amount' => 'OpenAmount',
        'address1' => 'Address1',
        'address2' => 'Address2',
        'order_department' => 'OrderDepartment',
        'internal' => 'Internal',
        'address3' => 'Address3',
        'city' => 'City',
        'gl_posted' => 'GLPosted',
        'state' => 'State',
        'postal_code' => 'PostalCode',
        'function' => 'Function',
        'order_number' => 'OrderNumber',
        'closed_date' => 'ClosedDate',
        'country' => 'Country',
        'name' => 'Name',
        'fc_amount' => 'FCAmount',
        'fc_open_amount' => 'FCOpenAmount',
        'first_name' => 'FirstName',
        'last_name' => 'LastName',
        'user_reference' => 'UserReference',
        'memo_payment' => 'MemoPayment',
        'batch_id' => 'BatchID',
        'transaction_amount' => 'TransactionAmount',
        'fc_transaction_amount' => 'FCTransactionAmount',
        'multiple_transactions' => 'MultipleTransactions',
        'currency' => 'Currency',
        'payment_number' => 'PaymentNumber',
        'note' => 'Note',
        'from_account' => 'FromAccount',
        'to_account' => 'ToAccount',
        'applied_sequence' => 'AppliedSequence',
        'applied_to_sequence' => 'AppliedToSequence',
        'entered_by' => 'EnteredBy',
        'changed_by_code' => 'ChangedByCode',
        'entered_on' => 'EnteredOn',
        'changed_on' => 'ChangedOn',
        'method' => 'Method',
        'printed' => 'Printed',
        'contact' => 'Contact',
        'paid_currency' => 'PaidCurrency',
        'paid_amount' => 'PaidAmount',
        'transaction_class' => 'TransactionClass',
        'fc_adjustment' => 'FCAdjustment',
        'fc_adjustment_amount' => 'FCAdjustmentAmount',
        'override_amount' => 'OverrideAmount',
        'original_trans' => 'OriginalTrans',
        'indicator' => 'Indicator',
        'security_code' => 'SecurityCode',
        'transaction' => 'Transaction',
        'expiration_date' => 'ExpirationDate',
        'credit_card' => 'CreditCard',
        'cash_book_transaction_number' => 'CashBookTransactionNumber',
        'issue_number' => 'IssueNumber',
        'debit_card_start_month' => 'DebitCardStartMonth',
        'debit_card_start_year' => 'DebitCardStartYear',
        'cybersource_cc_token' => 'CybersourceCCToken',
        'swiped' => 'Swiped',
        'routing_number' => 'RoutingNumber'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization' => 'setOrganization',
        'sequence' => 'setSequence',
        'account' => 'setAccount',
        'date' => 'setDate',
        'reference' => 'setReference',
        'check_expiration_date' => 'setCheckExpirationDate',
        'due_date' => 'setDueDate',
        'type' => 'setType',
        'source' => 'setSource',
        'control' => 'setControl',
        'event' => 'setEvent',
        'payment_schedule' => 'setPaymentSchedule',
        'payment_plan' => 'setPaymentPlan',
        'invoice' => 'setInvoice',
        'amount' => 'setAmount',
        'open_amount' => 'setOpenAmount',
        'address1' => 'setAddress1',
        'address2' => 'setAddress2',
        'order_department' => 'setOrderDepartment',
        'internal' => 'setInternal',
        'address3' => 'setAddress3',
        'city' => 'setCity',
        'gl_posted' => 'setGlPosted',
        'state' => 'setState',
        'postal_code' => 'setPostalCode',
        'function' => 'setFunction',
        'order_number' => 'setOrderNumber',
        'closed_date' => 'setClosedDate',
        'country' => 'setCountry',
        'name' => 'setName',
        'fc_amount' => 'setFcAmount',
        'fc_open_amount' => 'setFcOpenAmount',
        'first_name' => 'setFirstName',
        'last_name' => 'setLastName',
        'user_reference' => 'setUserReference',
        'memo_payment' => 'setMemoPayment',
        'batch_id' => 'setBatchId',
        'transaction_amount' => 'setTransactionAmount',
        'fc_transaction_amount' => 'setFcTransactionAmount',
        'multiple_transactions' => 'setMultipleTransactions',
        'currency' => 'setCurrency',
        'payment_number' => 'setPaymentNumber',
        'note' => 'setNote',
        'from_account' => 'setFromAccount',
        'to_account' => 'setToAccount',
        'applied_sequence' => 'setAppliedSequence',
        'applied_to_sequence' => 'setAppliedToSequence',
        'entered_by' => 'setEnteredBy',
        'changed_by_code' => 'setChangedByCode',
        'entered_on' => 'setEnteredOn',
        'changed_on' => 'setChangedOn',
        'method' => 'setMethod',
        'printed' => 'setPrinted',
        'contact' => 'setContact',
        'paid_currency' => 'setPaidCurrency',
        'paid_amount' => 'setPaidAmount',
        'transaction_class' => 'setTransactionClass',
        'fc_adjustment' => 'setFcAdjustment',
        'fc_adjustment_amount' => 'setFcAdjustmentAmount',
        'override_amount' => 'setOverrideAmount',
        'original_trans' => 'setOriginalTrans',
        'indicator' => 'setIndicator',
        'security_code' => 'setSecurityCode',
        'transaction' => 'setTransaction',
        'expiration_date' => 'setExpirationDate',
        'credit_card' => 'setCreditCard',
        'cash_book_transaction_number' => 'setCashBookTransactionNumber',
        'issue_number' => 'setIssueNumber',
        'debit_card_start_month' => 'setDebitCardStartMonth',
        'debit_card_start_year' => 'setDebitCardStartYear',
        'cybersource_cc_token' => 'setCybersourceCcToken',
        'swiped' => 'setSwiped',
        'routing_number' => 'setRoutingNumber'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization' => 'getOrganization',
        'sequence' => 'getSequence',
        'account' => 'getAccount',
        'date' => 'getDate',
        'reference' => 'getReference',
        'check_expiration_date' => 'getCheckExpirationDate',
        'due_date' => 'getDueDate',
        'type' => 'getType',
        'source' => 'getSource',
        'control' => 'getControl',
        'event' => 'getEvent',
        'payment_schedule' => 'getPaymentSchedule',
        'payment_plan' => 'getPaymentPlan',
        'invoice' => 'getInvoice',
        'amount' => 'getAmount',
        'open_amount' => 'getOpenAmount',
        'address1' => 'getAddress1',
        'address2' => 'getAddress2',
        'order_department' => 'getOrderDepartment',
        'internal' => 'getInternal',
        'address3' => 'getAddress3',
        'city' => 'getCity',
        'gl_posted' => 'getGlPosted',
        'state' => 'getState',
        'postal_code' => 'getPostalCode',
        'function' => 'getFunction',
        'order_number' => 'getOrderNumber',
        'closed_date' => 'getClosedDate',
        'country' => 'getCountry',
        'name' => 'getName',
        'fc_amount' => 'getFcAmount',
        'fc_open_amount' => 'getFcOpenAmount',
        'first_name' => 'getFirstName',
        'last_name' => 'getLastName',
        'user_reference' => 'getUserReference',
        'memo_payment' => 'getMemoPayment',
        'batch_id' => 'getBatchId',
        'transaction_amount' => 'getTransactionAmount',
        'fc_transaction_amount' => 'getFcTransactionAmount',
        'multiple_transactions' => 'getMultipleTransactions',
        'currency' => 'getCurrency',
        'payment_number' => 'getPaymentNumber',
        'note' => 'getNote',
        'from_account' => 'getFromAccount',
        'to_account' => 'getToAccount',
        'applied_sequence' => 'getAppliedSequence',
        'applied_to_sequence' => 'getAppliedToSequence',
        'entered_by' => 'getEnteredBy',
        'changed_by_code' => 'getChangedByCode',
        'entered_on' => 'getEnteredOn',
        'changed_on' => 'getChangedOn',
        'method' => 'getMethod',
        'printed' => 'getPrinted',
        'contact' => 'getContact',
        'paid_currency' => 'getPaidCurrency',
        'paid_amount' => 'getPaidAmount',
        'transaction_class' => 'getTransactionClass',
        'fc_adjustment' => 'getFcAdjustment',
        'fc_adjustment_amount' => 'getFcAdjustmentAmount',
        'override_amount' => 'getOverrideAmount',
        'original_trans' => 'getOriginalTrans',
        'indicator' => 'getIndicator',
        'security_code' => 'getSecurityCode',
        'transaction' => 'getTransaction',
        'expiration_date' => 'getExpirationDate',
        'credit_card' => 'getCreditCard',
        'cash_book_transaction_number' => 'getCashBookTransactionNumber',
        'issue_number' => 'getIssueNumber',
        'debit_card_start_month' => 'getDebitCardStartMonth',
        'debit_card_start_year' => 'getDebitCardStartYear',
        'cybersource_cc_token' => 'getCybersourceCcToken',
        'swiped' => 'getSwiped',
        'routing_number' => 'getRoutingNumber'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['sequence'] = isset($data['sequence']) ? $data['sequence'] : null;
        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
        $this->container['date'] = isset($data['date']) ? $data['date'] : null;
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['check_expiration_date'] = isset($data['check_expiration_date']) ? $data['check_expiration_date'] : null;
        $this->container['due_date'] = isset($data['due_date']) ? $data['due_date'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['source'] = isset($data['source']) ? $data['source'] : null;
        $this->container['control'] = isset($data['control']) ? $data['control'] : null;
        $this->container['event'] = isset($data['event']) ? $data['event'] : null;
        $this->container['payment_schedule'] = isset($data['payment_schedule']) ? $data['payment_schedule'] : null;
        $this->container['payment_plan'] = isset($data['payment_plan']) ? $data['payment_plan'] : null;
        $this->container['invoice'] = isset($data['invoice']) ? $data['invoice'] : null;
        $this->container['amount'] = isset($data['amount']) ? $data['amount'] : null;
        $this->container['open_amount'] = isset($data['open_amount']) ? $data['open_amount'] : null;
        $this->container['address1'] = isset($data['address1']) ? $data['address1'] : null;
        $this->container['address2'] = isset($data['address2']) ? $data['address2'] : null;
        $this->container['order_department'] = isset($data['order_department']) ? $data['order_department'] : null;
        $this->container['internal'] = isset($data['internal']) ? $data['internal'] : null;
        $this->container['address3'] = isset($data['address3']) ? $data['address3'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['gl_posted'] = isset($data['gl_posted']) ? $data['gl_posted'] : null;
        $this->container['state'] = isset($data['state']) ? $data['state'] : null;
        $this->container['postal_code'] = isset($data['postal_code']) ? $data['postal_code'] : null;
        $this->container['function'] = isset($data['function']) ? $data['function'] : null;
        $this->container['order_number'] = isset($data['order_number']) ? $data['order_number'] : null;
        $this->container['closed_date'] = isset($data['closed_date']) ? $data['closed_date'] : null;
        $this->container['country'] = isset($data['country']) ? $data['country'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['fc_amount'] = isset($data['fc_amount']) ? $data['fc_amount'] : null;
        $this->container['fc_open_amount'] = isset($data['fc_open_amount']) ? $data['fc_open_amount'] : null;
        $this->container['first_name'] = isset($data['first_name']) ? $data['first_name'] : null;
        $this->container['last_name'] = isset($data['last_name']) ? $data['last_name'] : null;
        $this->container['user_reference'] = isset($data['user_reference']) ? $data['user_reference'] : null;
        $this->container['memo_payment'] = isset($data['memo_payment']) ? $data['memo_payment'] : null;
        $this->container['batch_id'] = isset($data['batch_id']) ? $data['batch_id'] : null;
        $this->container['transaction_amount'] = isset($data['transaction_amount']) ? $data['transaction_amount'] : null;
        $this->container['fc_transaction_amount'] = isset($data['fc_transaction_amount']) ? $data['fc_transaction_amount'] : null;
        $this->container['multiple_transactions'] = isset($data['multiple_transactions']) ? $data['multiple_transactions'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['payment_number'] = isset($data['payment_number']) ? $data['payment_number'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['from_account'] = isset($data['from_account']) ? $data['from_account'] : null;
        $this->container['to_account'] = isset($data['to_account']) ? $data['to_account'] : null;
        $this->container['applied_sequence'] = isset($data['applied_sequence']) ? $data['applied_sequence'] : null;
        $this->container['applied_to_sequence'] = isset($data['applied_to_sequence']) ? $data['applied_to_sequence'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['changed_by_code'] = isset($data['changed_by_code']) ? $data['changed_by_code'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['method'] = isset($data['method']) ? $data['method'] : null;
        $this->container['printed'] = isset($data['printed']) ? $data['printed'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['paid_currency'] = isset($data['paid_currency']) ? $data['paid_currency'] : null;
        $this->container['paid_amount'] = isset($data['paid_amount']) ? $data['paid_amount'] : null;
        $this->container['transaction_class'] = isset($data['transaction_class']) ? $data['transaction_class'] : null;
        $this->container['fc_adjustment'] = isset($data['fc_adjustment']) ? $data['fc_adjustment'] : null;
        $this->container['fc_adjustment_amount'] = isset($data['fc_adjustment_amount']) ? $data['fc_adjustment_amount'] : null;
        $this->container['override_amount'] = isset($data['override_amount']) ? $data['override_amount'] : null;
        $this->container['original_trans'] = isset($data['original_trans']) ? $data['original_trans'] : null;
        $this->container['indicator'] = isset($data['indicator']) ? $data['indicator'] : null;
        $this->container['security_code'] = isset($data['security_code']) ? $data['security_code'] : null;
        $this->container['transaction'] = isset($data['transaction']) ? $data['transaction'] : null;
        $this->container['expiration_date'] = isset($data['expiration_date']) ? $data['expiration_date'] : null;
        $this->container['credit_card'] = isset($data['credit_card']) ? $data['credit_card'] : null;
        $this->container['cash_book_transaction_number'] = isset($data['cash_book_transaction_number']) ? $data['cash_book_transaction_number'] : null;
        $this->container['issue_number'] = isset($data['issue_number']) ? $data['issue_number'] : null;
        $this->container['debit_card_start_month'] = isset($data['debit_card_start_month']) ? $data['debit_card_start_month'] : null;
        $this->container['debit_card_start_year'] = isset($data['debit_card_start_year']) ? $data['debit_card_start_year'] : null;
        $this->container['cybersource_cc_token'] = isset($data['cybersource_cc_token']) ? $data['cybersource_cc_token'] : null;
        $this->container['swiped'] = isset($data['swiped']) ? $data['swiped'] : null;
        $this->container['routing_number'] = isset($data['routing_number']) ? $data['routing_number'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization'] === null) {
            $invalidProperties[] = "'organization' can't be null";
        }
        if ($this->container['sequence'] === null) {
            $invalidProperties[] = "'sequence' can't be null";
        }
        if ($this->container['account'] === null) {
            $invalidProperties[] = "'account' can't be null";
        }
        if ($this->container['date'] === null) {
            $invalidProperties[] = "'date' can't be null";
        }
        if ($this->container['reference'] === null) {
            $invalidProperties[] = "'reference' can't be null";
        }
        if ($this->container['check_expiration_date'] === null) {
            $invalidProperties[] = "'check_expiration_date' can't be null";
        }
        if ($this->container['due_date'] === null) {
            $invalidProperties[] = "'due_date' can't be null";
        }
        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['source'] === null) {
            $invalidProperties[] = "'source' can't be null";
        }
        if ($this->container['control'] === null) {
            $invalidProperties[] = "'control' can't be null";
        }
        if ($this->container['event'] === null) {
            $invalidProperties[] = "'event' can't be null";
        }
        if ($this->container['payment_schedule'] === null) {
            $invalidProperties[] = "'payment_schedule' can't be null";
        }
        if ($this->container['payment_plan'] === null) {
            $invalidProperties[] = "'payment_plan' can't be null";
        }
        if ($this->container['invoice'] === null) {
            $invalidProperties[] = "'invoice' can't be null";
        }
        if ($this->container['amount'] === null) {
            $invalidProperties[] = "'amount' can't be null";
        }
        if ($this->container['open_amount'] === null) {
            $invalidProperties[] = "'open_amount' can't be null";
        }
        if ($this->container['address1'] === null) {
            $invalidProperties[] = "'address1' can't be null";
        }
        if ($this->container['address2'] === null) {
            $invalidProperties[] = "'address2' can't be null";
        }
        if ($this->container['order_department'] === null) {
            $invalidProperties[] = "'order_department' can't be null";
        }
        if ($this->container['internal'] === null) {
            $invalidProperties[] = "'internal' can't be null";
        }
        if ($this->container['address3'] === null) {
            $invalidProperties[] = "'address3' can't be null";
        }
        if ($this->container['city'] === null) {
            $invalidProperties[] = "'city' can't be null";
        }
        if ($this->container['gl_posted'] === null) {
            $invalidProperties[] = "'gl_posted' can't be null";
        }
        if ($this->container['state'] === null) {
            $invalidProperties[] = "'state' can't be null";
        }
        if ($this->container['postal_code'] === null) {
            $invalidProperties[] = "'postal_code' can't be null";
        }
        if ($this->container['function'] === null) {
            $invalidProperties[] = "'function' can't be null";
        }
        if ($this->container['order_number'] === null) {
            $invalidProperties[] = "'order_number' can't be null";
        }
        if ($this->container['closed_date'] === null) {
            $invalidProperties[] = "'closed_date' can't be null";
        }
        if ($this->container['country'] === null) {
            $invalidProperties[] = "'country' can't be null";
        }
        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['fc_amount'] === null) {
            $invalidProperties[] = "'fc_amount' can't be null";
        }
        if ($this->container['fc_open_amount'] === null) {
            $invalidProperties[] = "'fc_open_amount' can't be null";
        }
        if ($this->container['first_name'] === null) {
            $invalidProperties[] = "'first_name' can't be null";
        }
        if ($this->container['last_name'] === null) {
            $invalidProperties[] = "'last_name' can't be null";
        }
        if ($this->container['user_reference'] === null) {
            $invalidProperties[] = "'user_reference' can't be null";
        }
        if ($this->container['memo_payment'] === null) {
            $invalidProperties[] = "'memo_payment' can't be null";
        }
        if ($this->container['batch_id'] === null) {
            $invalidProperties[] = "'batch_id' can't be null";
        }
        if ($this->container['transaction_amount'] === null) {
            $invalidProperties[] = "'transaction_amount' can't be null";
        }
        if ($this->container['fc_transaction_amount'] === null) {
            $invalidProperties[] = "'fc_transaction_amount' can't be null";
        }
        if ($this->container['multiple_transactions'] === null) {
            $invalidProperties[] = "'multiple_transactions' can't be null";
        }
        if ($this->container['currency'] === null) {
            $invalidProperties[] = "'currency' can't be null";
        }
        if ($this->container['payment_number'] === null) {
            $invalidProperties[] = "'payment_number' can't be null";
        }
        if ($this->container['note'] === null) {
            $invalidProperties[] = "'note' can't be null";
        }
        if ($this->container['from_account'] === null) {
            $invalidProperties[] = "'from_account' can't be null";
        }
        if ($this->container['to_account'] === null) {
            $invalidProperties[] = "'to_account' can't be null";
        }
        if ($this->container['applied_sequence'] === null) {
            $invalidProperties[] = "'applied_sequence' can't be null";
        }
        if ($this->container['applied_to_sequence'] === null) {
            $invalidProperties[] = "'applied_to_sequence' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['changed_by_code'] === null) {
            $invalidProperties[] = "'changed_by_code' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['method'] === null) {
            $invalidProperties[] = "'method' can't be null";
        }
        if ($this->container['printed'] === null) {
            $invalidProperties[] = "'printed' can't be null";
        }
        if ($this->container['contact'] === null) {
            $invalidProperties[] = "'contact' can't be null";
        }
        if ($this->container['paid_currency'] === null) {
            $invalidProperties[] = "'paid_currency' can't be null";
        }
        if ($this->container['paid_amount'] === null) {
            $invalidProperties[] = "'paid_amount' can't be null";
        }
        if ($this->container['transaction_class'] === null) {
            $invalidProperties[] = "'transaction_class' can't be null";
        }
        if ($this->container['fc_adjustment'] === null) {
            $invalidProperties[] = "'fc_adjustment' can't be null";
        }
        if ($this->container['fc_adjustment_amount'] === null) {
            $invalidProperties[] = "'fc_adjustment_amount' can't be null";
        }
        if ($this->container['override_amount'] === null) {
            $invalidProperties[] = "'override_amount' can't be null";
        }
        if ($this->container['original_trans'] === null) {
            $invalidProperties[] = "'original_trans' can't be null";
        }
        if ($this->container['indicator'] === null) {
            $invalidProperties[] = "'indicator' can't be null";
        }
        if ($this->container['security_code'] === null) {
            $invalidProperties[] = "'security_code' can't be null";
        }
        if ($this->container['transaction'] === null) {
            $invalidProperties[] = "'transaction' can't be null";
        }
        if ($this->container['expiration_date'] === null) {
            $invalidProperties[] = "'expiration_date' can't be null";
        }
        if ($this->container['credit_card'] === null) {
            $invalidProperties[] = "'credit_card' can't be null";
        }
        if ($this->container['cash_book_transaction_number'] === null) {
            $invalidProperties[] = "'cash_book_transaction_number' can't be null";
        }
        if ($this->container['issue_number'] === null) {
            $invalidProperties[] = "'issue_number' can't be null";
        }
        if ($this->container['debit_card_start_month'] === null) {
            $invalidProperties[] = "'debit_card_start_month' can't be null";
        }
        if ($this->container['debit_card_start_year'] === null) {
            $invalidProperties[] = "'debit_card_start_year' can't be null";
        }
        if ($this->container['cybersource_cc_token'] === null) {
            $invalidProperties[] = "'cybersource_cc_token' can't be null";
        }
        if ($this->container['swiped'] === null) {
            $invalidProperties[] = "'swiped' can't be null";
        }
        if ($this->container['routing_number'] === null) {
            $invalidProperties[] = "'routing_number' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Identifier - use this for GET and PUT operations when targeting a specific payment  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> AR020_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets sequence
     *
     * @return int
     */
    public function getSequence()
    {
        return $this->container['sequence'];
    }

    /**
     * Sets sequence
     *
     * @param int $sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Identifier - use this for GET and PUT operations when targeting a specific payment  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> AR020_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSequence($sequence)
    {
        $this->container['sequence'] = $sequence;

        return $this;
    }

    /**
     * Gets account
     *
     * @return string
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param string $account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Identifier - use this for GET and PUT operations when targeting a specific payment  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> AR020_EXT_ACCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets date
     *
     * @return \DateTime
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     *
     * @param \DateTime $date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_TRANS_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string $reference <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_CC_CHECK  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets check_expiration_date
     *
     * @return \DateTime
     */
    public function getCheckExpirationDate()
    {
        return $this->container['check_expiration_date'];
    }

    /**
     * Sets check_expiration_date
     *
     * @param \DateTime $check_expiration_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_CC_EXP_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCheckExpirationDate($check_expiration_date)
    {
        $this->container['check_expiration_date'] = $check_expiration_date;

        return $this;
    }

    /**
     * Gets due_date
     *
     * @return \DateTime
     */
    public function getDueDate()
    {
        return $this->container['due_date'];
    }

    /**
     * Sets due_date
     *
     * @param \DateTime $due_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_DUE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDueDate($due_date)
    {
        $this->container['due_date'] = $due_date;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_TRANS_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets source
     *
     * @return string
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param string $source <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_TRANS_SOURCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSource($source)
    {
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets control
     *
     * @return string
     */
    public function getControl()
    {
        return $this->container['control'];
    }

    /**
     * Sets control
     *
     * @param string $control <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_CC_CONTROL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1000  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setControl($control)
    {
        $this->container['control'] = $control;

        return $this;
    }

    /**
     * Gets event
     *
     * @return int
     */
    public function getEvent()
    {
        return $this->container['event'];
    }

    /**
     * Sets event
     *
     * @param int $event <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is automatically set from the Invoice or Order  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> AR020_EVT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEvent($event)
    {
        $this->container['event'] = $event;

        return $this;
    }

    /**
     * Gets payment_schedule
     *
     * @return string
     */
    public function getPaymentSchedule()
    {
        return $this->container['payment_schedule'];
    }

    /**
     * Sets payment_schedule
     *
     * @param string $payment_schedule <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_PP_SCHED_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPaymentSchedule($payment_schedule)
    {
        $this->container['payment_schedule'] = $payment_schedule;

        return $this;
    }

    /**
     * Gets payment_plan
     *
     * @return int
     */
    public function getPaymentPlan()
    {
        return $this->container['payment_plan'];
    }

    /**
     * Sets payment_plan
     *
     * @param int $payment_plan <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_PAY_PLAN_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPaymentPlan($payment_plan)
    {
        $this->container['payment_plan'] = $payment_plan;

        return $this;
    }

    /**
     * Gets invoice
     *
     * @return int
     */
    public function getInvoice()
    {
        return $this->container['invoice'];
    }

    /**
     * Sets invoice
     *
     * @param int $invoice <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_INVOICE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoice($invoice)
    {
        $this->container['invoice'] = $invoice;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return double
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param double $amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets open_amount
     *
     * @return double
     */
    public function getOpenAmount()
    {
        return $this->container['open_amount'];
    }

    /**
     * Sets open_amount
     *
     * @param double $open_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_OPEN_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOpenAmount($open_amount)
    {
        $this->container['open_amount'] = $open_amount;

        return $this;
    }

    /**
     * Gets address1
     *
     * @return string
     */
    public function getAddress1()
    {
        return $this->container['address1'];
    }

    /**
     * Sets address1
     *
     * @param string $address1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_ADDR1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAddress1($address1)
    {
        $this->container['address1'] = $address1;

        return $this;
    }

    /**
     * Gets address2
     *
     * @return string
     */
    public function getAddress2()
    {
        return $this->container['address2'];
    }

    /**
     * Sets address2
     *
     * @param string $address2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_ADDR2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAddress2($address2)
    {
        $this->container['address2'] = $address2;

        return $this;
    }

    /**
     * Gets order_department
     *
     * @return string
     */
    public function getOrderDepartment()
    {
        return $this->container['order_department'];
    }

    /**
     * Sets order_department
     *
     * @param string $order_department <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_ORD_DEPT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderDepartment($order_department)
    {
        $this->container['order_department'] = $order_department;

        return $this;
    }

    /**
     * Gets internal
     *
     * @return string
     */
    public function getInternal()
    {
        return $this->container['internal'];
    }

    /**
     * Sets internal
     *
     * @param string $internal <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_INTERNAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInternal($internal)
    {
        $this->container['internal'] = $internal;

        return $this;
    }

    /**
     * Gets address3
     *
     * @return string
     */
    public function getAddress3()
    {
        return $this->container['address3'];
    }

    /**
     * Sets address3
     *
     * @param string $address3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_ADDR3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAddress3($address3)
    {
        $this->container['address3'] = $address3;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string $city <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_CITY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets gl_posted
     *
     * @return string
     */
    public function getGlPosted()
    {
        return $this->container['gl_posted'];
    }

    /**
     * Sets gl_posted
     *
     * @param string $gl_posted <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_GL_POSTED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlPosted($gl_posted)
    {
        $this->container['gl_posted'] = $gl_posted;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string $state <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_STATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets postal_code
     *
     * @return string
     */
    public function getPostalCode()
    {
        return $this->container['postal_code'];
    }

    /**
     * Sets postal_code
     *
     * @param string $postal_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_POSTAL_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 25  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPostalCode($postal_code)
    {
        $this->container['postal_code'] = $postal_code;

        return $this;
    }

    /**
     * Gets function
     *
     * @return int
     */
    public function getFunction()
    {
        return $this->container['function'];
    }

    /**
     * Sets function
     *
     * @param int $function <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_FUNC_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFunction($function)
    {
        $this->container['function'] = $function;

        return $this;
    }

    /**
     * Gets order_number
     *
     * @return int
     */
    public function getOrderNumber()
    {
        return $this->container['order_number'];
    }

    /**
     * Sets order_number
     *
     * @param int $order_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_ORD_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderNumber($order_number)
    {
        $this->container['order_number'] = $order_number;

        return $this;
    }

    /**
     * Gets closed_date
     *
     * @return \DateTime
     */
    public function getClosedDate()
    {
        return $this->container['closed_date'];
    }

    /**
     * Sets closed_date
     *
     * @param \DateTime $closed_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_CLOSED_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setClosedDate($closed_date)
    {
        $this->container['closed_date'] = $closed_date;

        return $this;
    }

    /**
     * Gets country
     *
     * @return string
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     *
     * @param string $country <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_COUNTRY_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_NAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets fc_amount
     *
     * @return double
     */
    public function getFcAmount()
    {
        return $this->container['fc_amount'];
    }

    /**
     * Sets fc_amount
     *
     * @param double $fc_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_FC_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcAmount($fc_amount)
    {
        $this->container['fc_amount'] = $fc_amount;

        return $this;
    }

    /**
     * Gets fc_open_amount
     *
     * @return double
     */
    public function getFcOpenAmount()
    {
        return $this->container['fc_open_amount'];
    }

    /**
     * Sets fc_open_amount
     *
     * @param double $fc_open_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_FC_OPEN_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcOpenAmount($fc_open_amount)
    {
        $this->container['fc_open_amount'] = $fc_open_amount;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string $first_name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_FIRST_NAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 70  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string $last_name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_LAST_NAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 70  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets user_reference
     *
     * @return string
     */
    public function getUserReference()
    {
        return $this->container['user_reference'];
    }

    /**
     * Sets user_reference
     *
     * @param string $user_reference <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_USER_REFERENCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserReference($user_reference)
    {
        $this->container['user_reference'] = $user_reference;

        return $this;
    }

    /**
     * Gets memo_payment
     *
     * @return string
     */
    public function getMemoPayment()
    {
        return $this->container['memo_payment'];
    }

    /**
     * Sets memo_payment
     *
     * @param string $memo_payment <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_MEMO_TRANS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMemoPayment($memo_payment)
    {
        $this->container['memo_payment'] = $memo_payment;

        return $this;
    }

    /**
     * Gets batch_id
     *
     * @return string
     */
    public function getBatchId()
    {
        return $this->container['batch_id'];
    }

    /**
     * Sets batch_id
     *
     * @param string $batch_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_INT_BATCH_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBatchId($batch_id)
    {
        $this->container['batch_id'] = $batch_id;

        return $this;
    }

    /**
     * Gets transaction_amount
     *
     * @return double
     */
    public function getTransactionAmount()
    {
        return $this->container['transaction_amount'];
    }

    /**
     * Sets transaction_amount
     *
     * @param double $transaction_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_TOTAL_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTransactionAmount($transaction_amount)
    {
        $this->container['transaction_amount'] = $transaction_amount;

        return $this;
    }

    /**
     * Gets fc_transaction_amount
     *
     * @return double
     */
    public function getFcTransactionAmount()
    {
        return $this->container['fc_transaction_amount'];
    }

    /**
     * Sets fc_transaction_amount
     *
     * @param double $fc_transaction_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_TOTAL_FC_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcTransactionAmount($fc_transaction_amount)
    {
        $this->container['fc_transaction_amount'] = $fc_transaction_amount;

        return $this;
    }

    /**
     * Gets multiple_transactions
     *
     * @return string
     */
    public function getMultipleTransactions()
    {
        return $this->container['multiple_transactions'];
    }

    /**
     * Sets multiple_transactions
     *
     * @param string $multiple_transactions <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_TOTAL_INDIC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMultipleTransactions($multiple_transactions)
    {
        $this->container['multiple_transactions'] = $multiple_transactions;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_FC_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets payment_number
     *
     * @return string
     */
    public function getPaymentNumber()
    {
        return $this->container['payment_number'];
    }

    /**
     * Sets payment_number
     *
     * @param string $payment_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_CONTROL_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPaymentNumber($payment_number)
    {
        $this->container['payment_number'] = $payment_number;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_REFERENCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets from_account
     *
     * @return string
     */
    public function getFromAccount()
    {
        return $this->container['from_account'];
    }

    /**
     * Sets from_account
     *
     * @param string $from_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_FROM_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFromAccount($from_account)
    {
        $this->container['from_account'] = $from_account;

        return $this;
    }

    /**
     * Gets to_account
     *
     * @return string
     */
    public function getToAccount()
    {
        return $this->container['to_account'];
    }

    /**
     * Sets to_account
     *
     * @param string $to_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_TO_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setToAccount($to_account)
    {
        $this->container['to_account'] = $to_account;

        return $this;
    }

    /**
     * Gets applied_sequence
     *
     * @return int
     */
    public function getAppliedSequence()
    {
        return $this->container['applied_sequence'];
    }

    /**
     * Sets applied_sequence
     *
     * @param int $applied_sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_APPLIED_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAppliedSequence($applied_sequence)
    {
        $this->container['applied_sequence'] = $applied_sequence;

        return $this;
    }

    /**
     * Gets applied_to_sequence
     *
     * @return int
     */
    public function getAppliedToSequence()
    {
        return $this->container['applied_to_sequence'];
    }

    /**
     * Sets applied_to_sequence
     *
     * @param int $applied_to_sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_APPLIED_TO_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAppliedToSequence($applied_to_sequence)
    {
        $this->container['applied_to_sequence'] = $applied_to_sequence;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets changed_by_code
     *
     * @return string
     */
    public function getChangedByCode()
    {
        return $this->container['changed_by_code'];
    }

    /**
     * Sets changed_by_code
     *
     * @param string $changed_by_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedByCode($changed_by_code)
    {
        $this->container['changed_by_code'] = $changed_by_code;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_ENT_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_UPD_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets method
     *
     * @return string
     */
    public function getMethod()
    {
        return $this->container['method'];
    }

    /**
     * Sets method
     *
     * @param string $method <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_TRANS_METHOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMethod($method)
    {
        $this->container['method'] = $method;

        return $this;
    }

    /**
     * Gets printed
     *
     * @return string
     */
    public function getPrinted()
    {
        return $this->container['printed'];
    }

    /**
     * Sets printed
     *
     * @param string $printed <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_TRANS_PRINT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPrinted($printed)
    {
        $this->container['printed'] = $printed;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return string
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param string $contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_CONTACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets paid_currency
     *
     * @return string
     */
    public function getPaidCurrency()
    {
        return $this->container['paid_currency'];
    }

    /**
     * Sets paid_currency
     *
     * @param string $paid_currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_PAID_CURRENCY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPaidCurrency($paid_currency)
    {
        $this->container['paid_currency'] = $paid_currency;

        return $this;
    }

    /**
     * Gets paid_amount
     *
     * @return double
     */
    public function getPaidAmount()
    {
        return $this->container['paid_amount'];
    }

    /**
     * Sets paid_amount
     *
     * @param double $paid_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_PAID_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPaidAmount($paid_amount)
    {
        $this->container['paid_amount'] = $paid_amount;

        return $this;
    }

    /**
     * Gets transaction_class
     *
     * @return string
     */
    public function getTransactionClass()
    {
        return $this->container['transaction_class'];
    }

    /**
     * Sets transaction_class
     *
     * @param string $transaction_class <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_TRANS_CLASS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTransactionClass($transaction_class)
    {
        $this->container['transaction_class'] = $transaction_class;

        return $this;
    }

    /**
     * Gets fc_adjustment
     *
     * @return string
     */
    public function getFcAdjustment()
    {
        return $this->container['fc_adjustment'];
    }

    /**
     * Sets fc_adjustment
     *
     * @param string $fc_adjustment <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_FC_ADJ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcAdjustment($fc_adjustment)
    {
        $this->container['fc_adjustment'] = $fc_adjustment;

        return $this;
    }

    /**
     * Gets fc_adjustment_amount
     *
     * @return double
     */
    public function getFcAdjustmentAmount()
    {
        return $this->container['fc_adjustment_amount'];
    }

    /**
     * Sets fc_adjustment_amount
     *
     * @param double $fc_adjustment_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_FC_ADJ_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcAdjustmentAmount($fc_adjustment_amount)
    {
        $this->container['fc_adjustment_amount'] = $fc_adjustment_amount;

        return $this;
    }

    /**
     * Gets override_amount
     *
     * @return double
     */
    public function getOverrideAmount()
    {
        return $this->container['override_amount'];
    }

    /**
     * Sets override_amount
     *
     * @param double $override_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_FCO_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOverrideAmount($override_amount)
    {
        $this->container['override_amount'] = $override_amount;

        return $this;
    }

    /**
     * Gets original_trans
     *
     * @return string
     */
    public function getOriginalTrans()
    {
        return $this->container['original_trans'];
    }

    /**
     * Sets original_trans
     *
     * @param string $original_trans <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_ORIG_CC_CONTROL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1000  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOriginalTrans($original_trans)
    {
        $this->container['original_trans'] = $original_trans;

        return $this;
    }

    /**
     * Gets indicator
     *
     * @return string
     */
    public function getIndicator()
    {
        return $this->container['indicator'];
    }

    /**
     * Sets indicator
     *
     * @param string $indicator <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_TRANS_IND  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIndicator($indicator)
    {
        $this->container['indicator'] = $indicator;

        return $this;
    }

    /**
     * Gets security_code
     *
     * @return string
     */
    public function getSecurityCode()
    {
        return $this->container['security_code'];
    }

    /**
     * Sets security_code
     *
     * @param string $security_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_CC_ID_FIELD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSecurityCode($security_code)
    {
        $this->container['security_code'] = $security_code;

        return $this;
    }

    /**
     * Gets transaction
     *
     * @return string
     */
    public function getTransaction()
    {
        return $this->container['transaction'];
    }

    /**
     * Sets transaction
     *
     * @param string $transaction <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Required for add.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> AR020_TSM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTransaction($transaction)
    {
        $this->container['transaction'] = $transaction;

        return $this;
    }

    /**
     * Gets expiration_date
     *
     * @return string
     */
    public function getExpirationDate()
    {
        return $this->container['expiration_date'];
    }

    /**
     * Sets expiration_date
     *
     * @param string $expiration_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_CC_EXP_DATE_ENC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExpirationDate($expiration_date)
    {
        $this->container['expiration_date'] = $expiration_date;

        return $this;
    }

    /**
     * Gets credit_card
     *
     * @return string
     */
    public function getCreditCard()
    {
        return $this->container['credit_card'];
    }

    /**
     * Sets credit_card
     *
     * @param string $credit_card <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_CC_NBR_ENC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCreditCard($credit_card)
    {
        $this->container['credit_card'] = $credit_card;

        return $this;
    }

    /**
     * Gets cash_book_transaction_number
     *
     * @return int
     */
    public function getCashBookTransactionNumber()
    {
        return $this->container['cash_book_transaction_number'];
    }

    /**
     * Sets cash_book_transaction_number
     *
     * @param int $cash_book_transaction_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_CB_DEPOSIT_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCashBookTransactionNumber($cash_book_transaction_number)
    {
        $this->container['cash_book_transaction_number'] = $cash_book_transaction_number;

        return $this;
    }

    /**
     * Gets issue_number
     *
     * @return string
     */
    public function getIssueNumber()
    {
        return $this->container['issue_number'];
    }

    /**
     * Sets issue_number
     *
     * @param string $issue_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_CARD_ISSUE_NBR_ENC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIssueNumber($issue_number)
    {
        $this->container['issue_number'] = $issue_number;

        return $this;
    }

    /**
     * Gets debit_card_start_month
     *
     * @return string
     */
    public function getDebitCardStartMonth()
    {
        return $this->container['debit_card_start_month'];
    }

    /**
     * Sets debit_card_start_month
     *
     * @param string $debit_card_start_month <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_CARD_START_MONTH_ENC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDebitCardStartMonth($debit_card_start_month)
    {
        $this->container['debit_card_start_month'] = $debit_card_start_month;

        return $this;
    }

    /**
     * Gets debit_card_start_year
     *
     * @return string
     */
    public function getDebitCardStartYear()
    {
        return $this->container['debit_card_start_year'];
    }

    /**
     * Sets debit_card_start_year
     *
     * @param string $debit_card_start_year <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_CARD_START_YEAR_ENC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDebitCardStartYear($debit_card_start_year)
    {
        $this->container['debit_card_start_year'] = $debit_card_start_year;

        return $this;
    }

    /**
     * Gets cybersource_cc_token
     *
     * @return string
     */
    public function getCybersourceCcToken()
    {
        return $this->container['cybersource_cc_token'];
    }

    /**
     * Sets cybersource_cc_token
     *
     * @param string $cybersource_cc_token <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_CC_TOKEN  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 256  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCybersourceCcToken($cybersource_cc_token)
    {
        $this->container['cybersource_cc_token'] = $cybersource_cc_token;

        return $this;
    }

    /**
     * Gets swiped
     *
     * @return string
     */
    public function getSwiped()
    {
        return $this->container['swiped'];
    }

    /**
     * Sets swiped
     *
     * @param string $swiped <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_CC_SWIPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSwiped($swiped)
    {
        $this->container['swiped'] = $swiped;

        return $this;
    }

    /**
     * Gets routing_number
     *
     * @return string
     */
    public function getRoutingNumber()
    {
        return $this->container['routing_number'];
    }

    /**
     * Sets routing_number
     *
     * @param string $routing_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR020_TRANSIT_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRoutingNumber($routing_number)
    {
        $this->container['routing_number'] = $routing_number;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


