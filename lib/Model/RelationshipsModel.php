<?php
/**
 * RelationshipsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * RelationshipsModel Class Doc Comment
 *
 * @category Class
 * @description This represents a relationship between two accounts, master and subordinate.
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RelationshipsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'RelationshipsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'master_organization_code' => 'string',
        'master_account_code' => 'string',
        'relationship_type' => 'string',
        'subordinate_organization_code' => 'string',
        'subordinate_account_code' => 'string',
        'entered_date_time' => '\DateTime',
        'entered_by_user_id' => 'string',
        'last_changed_date_time' => '\DateTime',
        'last_changed_by_user_id' => 'string',
        'event_sales_designation' => 'string',
        'tour_sales_designation' => 'string',
        'public_relations_designation' => 'string',
        'membership_designation' => 'string',
        'receivables_designation' => 'string',
        'payables_designation' => 'string',
        'visitor_inquiry_designation' => 'string',
        'registration_designation' => 'string',
        'personnel_designation' => 'string',
        'relationship_class' => 'string',
        'contact' => 'string',
        'relationship_status' => 'string',
        'speaker_mgmt_designation' => 'string',
        'relationship_note' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'master_organization_code' => null,
        'master_account_code' => null,
        'relationship_type' => null,
        'subordinate_organization_code' => null,
        'subordinate_account_code' => null,
        'entered_date_time' => 'date-time',
        'entered_by_user_id' => null,
        'last_changed_date_time' => 'date-time',
        'last_changed_by_user_id' => null,
        'event_sales_designation' => null,
        'tour_sales_designation' => null,
        'public_relations_designation' => null,
        'membership_designation' => null,
        'receivables_designation' => null,
        'payables_designation' => null,
        'visitor_inquiry_designation' => null,
        'registration_designation' => null,
        'personnel_designation' => null,
        'relationship_class' => null,
        'contact' => null,
        'relationship_status' => null,
        'speaker_mgmt_designation' => null,
        'relationship_note' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'master_organization_code' => 'MasterOrganizationCode',
        'master_account_code' => 'MasterAccountCode',
        'relationship_type' => 'RelationshipType',
        'subordinate_organization_code' => 'SubordinateOrganizationCode',
        'subordinate_account_code' => 'SubordinateAccountCode',
        'entered_date_time' => 'EnteredDateTime',
        'entered_by_user_id' => 'EnteredByUserID',
        'last_changed_date_time' => 'LastChangedDateTime',
        'last_changed_by_user_id' => 'LastChangedByUserID',
        'event_sales_designation' => 'EventSalesDesignation',
        'tour_sales_designation' => 'TourSalesDesignation',
        'public_relations_designation' => 'PublicRelationsDesignation',
        'membership_designation' => 'MembershipDesignation',
        'receivables_designation' => 'ReceivablesDesignation',
        'payables_designation' => 'PayablesDesignation',
        'visitor_inquiry_designation' => 'VisitorInquiryDesignation',
        'registration_designation' => 'RegistrationDesignation',
        'personnel_designation' => 'PersonnelDesignation',
        'relationship_class' => 'RelationshipClass',
        'contact' => 'Contact',
        'relationship_status' => 'RelationshipStatus',
        'speaker_mgmt_designation' => 'SpeakerMgmtDesignation',
        'relationship_note' => 'RelationshipNote'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'master_organization_code' => 'setMasterOrganizationCode',
        'master_account_code' => 'setMasterAccountCode',
        'relationship_type' => 'setRelationshipType',
        'subordinate_organization_code' => 'setSubordinateOrganizationCode',
        'subordinate_account_code' => 'setSubordinateAccountCode',
        'entered_date_time' => 'setEnteredDateTime',
        'entered_by_user_id' => 'setEnteredByUserId',
        'last_changed_date_time' => 'setLastChangedDateTime',
        'last_changed_by_user_id' => 'setLastChangedByUserId',
        'event_sales_designation' => 'setEventSalesDesignation',
        'tour_sales_designation' => 'setTourSalesDesignation',
        'public_relations_designation' => 'setPublicRelationsDesignation',
        'membership_designation' => 'setMembershipDesignation',
        'receivables_designation' => 'setReceivablesDesignation',
        'payables_designation' => 'setPayablesDesignation',
        'visitor_inquiry_designation' => 'setVisitorInquiryDesignation',
        'registration_designation' => 'setRegistrationDesignation',
        'personnel_designation' => 'setPersonnelDesignation',
        'relationship_class' => 'setRelationshipClass',
        'contact' => 'setContact',
        'relationship_status' => 'setRelationshipStatus',
        'speaker_mgmt_designation' => 'setSpeakerMgmtDesignation',
        'relationship_note' => 'setRelationshipNote'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'master_organization_code' => 'getMasterOrganizationCode',
        'master_account_code' => 'getMasterAccountCode',
        'relationship_type' => 'getRelationshipType',
        'subordinate_organization_code' => 'getSubordinateOrganizationCode',
        'subordinate_account_code' => 'getSubordinateAccountCode',
        'entered_date_time' => 'getEnteredDateTime',
        'entered_by_user_id' => 'getEnteredByUserId',
        'last_changed_date_time' => 'getLastChangedDateTime',
        'last_changed_by_user_id' => 'getLastChangedByUserId',
        'event_sales_designation' => 'getEventSalesDesignation',
        'tour_sales_designation' => 'getTourSalesDesignation',
        'public_relations_designation' => 'getPublicRelationsDesignation',
        'membership_designation' => 'getMembershipDesignation',
        'receivables_designation' => 'getReceivablesDesignation',
        'payables_designation' => 'getPayablesDesignation',
        'visitor_inquiry_designation' => 'getVisitorInquiryDesignation',
        'registration_designation' => 'getRegistrationDesignation',
        'personnel_designation' => 'getPersonnelDesignation',
        'relationship_class' => 'getRelationshipClass',
        'contact' => 'getContact',
        'relationship_status' => 'getRelationshipStatus',
        'speaker_mgmt_designation' => 'getSpeakerMgmtDesignation',
        'relationship_note' => 'getRelationshipNote'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['master_organization_code'] = isset($data['master_organization_code']) ? $data['master_organization_code'] : null;
        $this->container['master_account_code'] = isset($data['master_account_code']) ? $data['master_account_code'] : null;
        $this->container['relationship_type'] = isset($data['relationship_type']) ? $data['relationship_type'] : null;
        $this->container['subordinate_organization_code'] = isset($data['subordinate_organization_code']) ? $data['subordinate_organization_code'] : null;
        $this->container['subordinate_account_code'] = isset($data['subordinate_account_code']) ? $data['subordinate_account_code'] : null;
        $this->container['entered_date_time'] = isset($data['entered_date_time']) ? $data['entered_date_time'] : null;
        $this->container['entered_by_user_id'] = isset($data['entered_by_user_id']) ? $data['entered_by_user_id'] : null;
        $this->container['last_changed_date_time'] = isset($data['last_changed_date_time']) ? $data['last_changed_date_time'] : null;
        $this->container['last_changed_by_user_id'] = isset($data['last_changed_by_user_id']) ? $data['last_changed_by_user_id'] : null;
        $this->container['event_sales_designation'] = isset($data['event_sales_designation']) ? $data['event_sales_designation'] : null;
        $this->container['tour_sales_designation'] = isset($data['tour_sales_designation']) ? $data['tour_sales_designation'] : null;
        $this->container['public_relations_designation'] = isset($data['public_relations_designation']) ? $data['public_relations_designation'] : null;
        $this->container['membership_designation'] = isset($data['membership_designation']) ? $data['membership_designation'] : null;
        $this->container['receivables_designation'] = isset($data['receivables_designation']) ? $data['receivables_designation'] : null;
        $this->container['payables_designation'] = isset($data['payables_designation']) ? $data['payables_designation'] : null;
        $this->container['visitor_inquiry_designation'] = isset($data['visitor_inquiry_designation']) ? $data['visitor_inquiry_designation'] : null;
        $this->container['registration_designation'] = isset($data['registration_designation']) ? $data['registration_designation'] : null;
        $this->container['personnel_designation'] = isset($data['personnel_designation']) ? $data['personnel_designation'] : null;
        $this->container['relationship_class'] = isset($data['relationship_class']) ? $data['relationship_class'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['relationship_status'] = isset($data['relationship_status']) ? $data['relationship_status'] : null;
        $this->container['speaker_mgmt_designation'] = isset($data['speaker_mgmt_designation']) ? $data['speaker_mgmt_designation'] : null;
        $this->container['relationship_note'] = isset($data['relationship_note']) ? $data['relationship_note'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['master_organization_code'] === null) {
            $invalidProperties[] = "'master_organization_code' can't be null";
        }
        if ($this->container['master_account_code'] === null) {
            $invalidProperties[] = "'master_account_code' can't be null";
        }
        if ($this->container['relationship_type'] === null) {
            $invalidProperties[] = "'relationship_type' can't be null";
        }
        if ($this->container['subordinate_organization_code'] === null) {
            $invalidProperties[] = "'subordinate_organization_code' can't be null";
        }
        if ($this->container['subordinate_account_code'] === null) {
            $invalidProperties[] = "'subordinate_account_code' can't be null";
        }
        if ($this->container['entered_date_time'] === null) {
            $invalidProperties[] = "'entered_date_time' can't be null";
        }
        if ($this->container['entered_by_user_id'] === null) {
            $invalidProperties[] = "'entered_by_user_id' can't be null";
        }
        if ($this->container['last_changed_date_time'] === null) {
            $invalidProperties[] = "'last_changed_date_time' can't be null";
        }
        if ($this->container['last_changed_by_user_id'] === null) {
            $invalidProperties[] = "'last_changed_by_user_id' can't be null";
        }
        if ($this->container['event_sales_designation'] === null) {
            $invalidProperties[] = "'event_sales_designation' can't be null";
        }
        if ($this->container['tour_sales_designation'] === null) {
            $invalidProperties[] = "'tour_sales_designation' can't be null";
        }
        if ($this->container['public_relations_designation'] === null) {
            $invalidProperties[] = "'public_relations_designation' can't be null";
        }
        if ($this->container['membership_designation'] === null) {
            $invalidProperties[] = "'membership_designation' can't be null";
        }
        if ($this->container['receivables_designation'] === null) {
            $invalidProperties[] = "'receivables_designation' can't be null";
        }
        if ($this->container['payables_designation'] === null) {
            $invalidProperties[] = "'payables_designation' can't be null";
        }
        if ($this->container['visitor_inquiry_designation'] === null) {
            $invalidProperties[] = "'visitor_inquiry_designation' can't be null";
        }
        if ($this->container['registration_designation'] === null) {
            $invalidProperties[] = "'registration_designation' can't be null";
        }
        if ($this->container['personnel_designation'] === null) {
            $invalidProperties[] = "'personnel_designation' can't be null";
        }
        if ($this->container['relationship_class'] === null) {
            $invalidProperties[] = "'relationship_class' can't be null";
        }
        if ($this->container['contact'] === null) {
            $invalidProperties[] = "'contact' can't be null";
        }
        if ($this->container['relationship_status'] === null) {
            $invalidProperties[] = "'relationship_status' can't be null";
        }
        if ($this->container['speaker_mgmt_designation'] === null) {
            $invalidProperties[] = "'speaker_mgmt_designation' can't be null";
        }
        if ($this->container['relationship_note'] === null) {
            $invalidProperties[] = "'relationship_note' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets master_organization_code
     *
     * @return string
     */
    public function getMasterOrganizationCode()
    {
        return $this->container['master_organization_code'];
    }

    /**
     * Sets master_organization_code
     *
     * @param string $master_organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Indentifier - Use for GET and PUT URLs  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_ORG_CODE1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMasterOrganizationCode($master_organization_code)
    {
        $this->container['master_organization_code'] = $master_organization_code;

        return $this;
    }

    /**
     * Gets master_account_code
     *
     * @return string
     */
    public function getMasterAccountCode()
    {
        return $this->container['master_account_code'];
    }

    /**
     * Sets master_account_code
     *
     * @param string $master_account_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Indentifier  - Use for GET and PUT URLs.  For URLs, this is currently combined with Subordinate Organization Code.  Multi-Org relationships are not yet supported by the API  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_ACCT_CODE1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMasterAccountCode($master_account_code)
    {
        $this->container['master_account_code'] = $master_account_code;

        return $this;
    }

    /**
     * Gets relationship_type
     *
     * @return string
     */
    public function getRelationshipType()
    {
        return $this->container['relationship_type'];
    }

    /**
     * Sets relationship_type
     *
     * @param string $relationship_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Indentifier - Use for GET and PUT URL.  Note, since it's an identifier, you cannot change the Relationship Type within the SDK.  Doing so will just target another relationship.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_LINK  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRelationshipType($relationship_type)
    {
        $this->container['relationship_type'] = $relationship_type;

        return $this;
    }

    /**
     * Gets subordinate_organization_code
     *
     * @return string
     */
    public function getSubordinateOrganizationCode()
    {
        return $this->container['subordinate_organization_code'];
    }

    /**
     * Sets subordinate_organization_code
     *
     * @param string $subordinate_organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Indentifier  - Use for GET and PUT URLs.  For URLs, this is currently combined with Subordinate Organization Code.  Multi-Org relationships are not yet supported by the API  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_ORG_CODE2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSubordinateOrganizationCode($subordinate_organization_code)
    {
        $this->container['subordinate_organization_code'] = $subordinate_organization_code;

        return $this;
    }

    /**
     * Gets subordinate_account_code
     *
     * @return string
     */
    public function getSubordinateAccountCode()
    {
        return $this->container['subordinate_account_code'];
    }

    /**
     * Sets subordinate_account_code
     *
     * @param string $subordinate_account_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Indentifier - Use for GET and PUT URLs  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_ACCT_CODE2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSubordinateAccountCode($subordinate_account_code)
    {
        $this->container['subordinate_account_code'] = $subordinate_account_code;

        return $this;
    }

    /**
     * Gets entered_date_time
     *
     * @return \DateTime
     */
    public function getEnteredDateTime()
    {
        return $this->container['entered_date_time'];
    }

    /**
     * Sets entered_date_time
     *
     * @param \DateTime $entered_date_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Automatically set by API.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredDateTime($entered_date_time)
    {
        $this->container['entered_date_time'] = $entered_date_time;

        return $this;
    }

    /**
     * Gets entered_by_user_id
     *
     * @return string
     */
    public function getEnteredByUserId()
    {
        return $this->container['entered_by_user_id'];
    }

    /**
     * Sets entered_by_user_id
     *
     * @param string $entered_by_user_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Automatically set by API.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_ENT_USERID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredByUserId($entered_by_user_id)
    {
        $this->container['entered_by_user_id'] = $entered_by_user_id;

        return $this;
    }

    /**
     * Gets last_changed_date_time
     *
     * @return \DateTime
     */
    public function getLastChangedDateTime()
    {
        return $this->container['last_changed_date_time'];
    }

    /**
     * Sets last_changed_date_time
     *
     * @param \DateTime $last_changed_date_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Automatically set by API.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastChangedDateTime($last_changed_date_time)
    {
        $this->container['last_changed_date_time'] = $last_changed_date_time;

        return $this;
    }

    /**
     * Gets last_changed_by_user_id
     *
     * @return string
     */
    public function getLastChangedByUserId()
    {
        return $this->container['last_changed_by_user_id'];
    }

    /**
     * Sets last_changed_by_user_id
     *
     * @param string $last_changed_by_user_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Automatically set by API.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_UPD_USERID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastChangedByUserId($last_changed_by_user_id)
    {
        $this->container['last_changed_by_user_id'] = $last_changed_by_user_id;

        return $this;
    }

    /**
     * Gets event_sales_designation
     *
     * @return string
     */
    public function getEventSalesDesignation()
    {
        return $this->container['event_sales_designation'];
    }

    /**
     * Sets event_sales_designation
     *
     * @param string $event_sales_designation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Set using code for account status (EV871)  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_EVT_SALES_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEventSalesDesignation($event_sales_designation)
    {
        $this->container['event_sales_designation'] = $event_sales_designation;

        return $this;
    }

    /**
     * Gets tour_sales_designation
     *
     * @return string
     */
    public function getTourSalesDesignation()
    {
        return $this->container['tour_sales_designation'];
    }

    /**
     * Sets tour_sales_designation
     *
     * @param string $tour_sales_designation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Set using code for account status (EV871)  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_TOUR_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTourSalesDesignation($tour_sales_designation)
    {
        $this->container['tour_sales_designation'] = $tour_sales_designation;

        return $this;
    }

    /**
     * Gets public_relations_designation
     *
     * @return string
     */
    public function getPublicRelationsDesignation()
    {
        return $this->container['public_relations_designation'];
    }

    /**
     * Sets public_relations_designation
     *
     * @param string $public_relations_designation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Set using code for account status (EV871)  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_PUBREL_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPublicRelationsDesignation($public_relations_designation)
    {
        $this->container['public_relations_designation'] = $public_relations_designation;

        return $this;
    }

    /**
     * Gets membership_designation
     *
     * @return string
     */
    public function getMembershipDesignation()
    {
        return $this->container['membership_designation'];
    }

    /**
     * Sets membership_designation
     *
     * @param string $membership_designation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Set using code for account status (EV871)  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_MEMBER_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMembershipDesignation($membership_designation)
    {
        $this->container['membership_designation'] = $membership_designation;

        return $this;
    }

    /**
     * Gets receivables_designation
     *
     * @return string
     */
    public function getReceivablesDesignation()
    {
        return $this->container['receivables_designation'];
    }

    /**
     * Sets receivables_designation
     *
     * @param string $receivables_designation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Set using code for account status (EV871)  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_AR_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setReceivablesDesignation($receivables_designation)
    {
        $this->container['receivables_designation'] = $receivables_designation;

        return $this;
    }

    /**
     * Gets payables_designation
     *
     * @return string
     */
    public function getPayablesDesignation()
    {
        return $this->container['payables_designation'];
    }

    /**
     * Sets payables_designation
     *
     * @param string $payables_designation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Set using code for account status (EV871)  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_AP_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPayablesDesignation($payables_designation)
    {
        $this->container['payables_designation'] = $payables_designation;

        return $this;
    }

    /**
     * Gets visitor_inquiry_designation
     *
     * @return string
     */
    public function getVisitorInquiryDesignation()
    {
        return $this->container['visitor_inquiry_designation'];
    }

    /**
     * Sets visitor_inquiry_designation
     *
     * @param string $visitor_inquiry_designation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Set using code for account status (EV871)  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_VISITOR_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setVisitorInquiryDesignation($visitor_inquiry_designation)
    {
        $this->container['visitor_inquiry_designation'] = $visitor_inquiry_designation;

        return $this;
    }

    /**
     * Gets registration_designation
     *
     * @return string
     */
    public function getRegistrationDesignation()
    {
        return $this->container['registration_designation'];
    }

    /**
     * Sets registration_designation
     *
     * @param string $registration_designation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Set using code for account status (EV871)  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_REGIS_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRegistrationDesignation($registration_designation)
    {
        $this->container['registration_designation'] = $registration_designation;

        return $this;
    }

    /**
     * Gets personnel_designation
     *
     * @return string
     */
    public function getPersonnelDesignation()
    {
        return $this->container['personnel_designation'];
    }

    /**
     * Sets personnel_designation
     *
     * @param string $personnel_designation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Set using code for account status (EV871)  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_PERS_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPersonnelDesignation($personnel_designation)
    {
        $this->container['personnel_designation'] = $personnel_designation;

        return $this;
    }

    /**
     * Gets relationship_class
     *
     * @return string
     */
    public function getRelationshipClass()
    {
        return $this->container['relationship_class'];
    }

    /**
     * Sets relationship_class
     *
     * @param string $relationship_class <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Set automatically by the API  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_LINK_CLASS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRelationshipClass($relationship_class)
    {
        $this->container['relationship_class'] = $relationship_class;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return string
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param string $contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV875_ACCT_CODE3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets relationship_status
     *
     * @return string
     */
    public function getRelationshipStatus()
    {
        return $this->container['relationship_status'];
    }

    /**
     * Sets relationship_status
     *
     * @param string $relationship_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV875_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRelationshipStatus($relationship_status)
    {
        $this->container['relationship_status'] = $relationship_status;

        return $this;
    }

    /**
     * Gets speaker_mgmt_designation
     *
     * @return string
     */
    public function getSpeakerMgmtDesignation()
    {
        return $this->container['speaker_mgmt_designation'];
    }

    /**
     * Sets speaker_mgmt_designation
     *
     * @param string $speaker_mgmt_designation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Set using code for account status (EV871)  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV875_SPKR_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSpeakerMgmtDesignation($speaker_mgmt_designation)
    {
        $this->container['speaker_mgmt_designation'] = $speaker_mgmt_designation;

        return $this;
    }

    /**
     * Gets relationship_note
     *
     * @return string
     */
    public function getRelationshipNote()
    {
        return $this->container['relationship_note'];
    }

    /**
     * Sets relationship_note
     *
     * @param string $relationship_note <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV875_LINK_NOTE_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRelationshipNote($relationship_note)
    {
        $this->container['relationship_note'] = $relationship_note;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


