<?php
/**
 * FunctionsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * FunctionsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FunctionsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'FunctionsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization_code' => 'string',
        'event_id' => 'int',
        'function_id' => 'int',
        'display_order' => 'int',
        'level' => 'int',
        'search' => 'string',
        'description' => 'string',
        'space' => 'string',
        'status_code' => 'string',
        'class' => 'string',
        'usage' => 'string',
        'department' => 'string',
        'booking_link' => 'int',
        'parent_function_id' => 'int',
        'booking_function_flag' => 'string',
        'entered_by' => 'string',
        'account' => 'string',
        'contact' => 'string',
        'coordinator' => 'string',
        'start_date' => '\DateTime',
        'end_date' => '\DateTime',
        'start_time' => '\DateTime',
        'end_time' => '\DateTime',
        'entered_on' => '\DateTime',
        'changed_on' => '\DateTime',
        'check_registration_conflicts' => 'string',
        'user_number' => 'double',
        'statistics' => 'string',
        'registration' => 'string',
        'ordered_attendance' => 'int',
        'actual_attendance' => 'int',
        'forecast_attendance' => 'int',
        'revised_attendance' => 'int',
        'alternate_description' => 'string',
        'text_color' => 'int',
        'background_color' => 'int',
        'alternate_description2' => 'string',
        'syncwith_event_attendance' => 'string',
        'so_checklist' => 'string',
        'alternate_description3' => 'string',
        'alternate_description4' => 'string',
        'alternate_description5' => 'string',
        'registration_qualification' => 'string',
        'function_gl_code' => 'string',
        'event_function_space' => 'string',
        'user_text' => 'string',
        'default_payment_schedule' => 'string',
        'booth_issue' => 'string',
        'location' => 'string',
        'user_changed_by' => 'string',
        'user_changed_on' => '\DateTime',
        'linked_function_id' => 'int',
        'web_address' => 'string',
        'track_id' => 'int',
        'session_details' => 'string',
        'early_deadline' => '\DateTime',
        'standard_deadline' => '\DateTime',
        'space_description' => 'string',
        'track_description' => 'string',
        'function_user_field_sets' => '\FomF\Ungerboeck\Client\Model\UserFields[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization_code' => null,
        'event_id' => 'int32',
        'function_id' => 'int32',
        'display_order' => 'int32',
        'level' => 'int32',
        'search' => null,
        'description' => null,
        'space' => null,
        'status_code' => null,
        'class' => null,
        'usage' => null,
        'department' => null,
        'booking_link' => 'int32',
        'parent_function_id' => 'int32',
        'booking_function_flag' => null,
        'entered_by' => null,
        'account' => null,
        'contact' => null,
        'coordinator' => null,
        'start_date' => 'date-time',
        'end_date' => 'date-time',
        'start_time' => 'date-time',
        'end_time' => 'date-time',
        'entered_on' => 'date-time',
        'changed_on' => 'date-time',
        'check_registration_conflicts' => null,
        'user_number' => 'double',
        'statistics' => null,
        'registration' => null,
        'ordered_attendance' => 'int32',
        'actual_attendance' => 'int32',
        'forecast_attendance' => 'int32',
        'revised_attendance' => 'int32',
        'alternate_description' => null,
        'text_color' => 'int32',
        'background_color' => 'int32',
        'alternate_description2' => null,
        'syncwith_event_attendance' => null,
        'so_checklist' => null,
        'alternate_description3' => null,
        'alternate_description4' => null,
        'alternate_description5' => null,
        'registration_qualification' => null,
        'function_gl_code' => null,
        'event_function_space' => null,
        'user_text' => null,
        'default_payment_schedule' => null,
        'booth_issue' => null,
        'location' => null,
        'user_changed_by' => null,
        'user_changed_on' => 'date-time',
        'linked_function_id' => 'int32',
        'web_address' => null,
        'track_id' => 'int32',
        'session_details' => null,
        'early_deadline' => 'date-time',
        'standard_deadline' => 'date-time',
        'space_description' => null,
        'track_description' => null,
        'function_user_field_sets' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization_code' => 'OrganizationCode',
        'event_id' => 'EventID',
        'function_id' => 'FunctionID',
        'display_order' => 'DisplayOrder',
        'level' => 'Level',
        'search' => 'Search',
        'description' => 'Description',
        'space' => 'Space',
        'status_code' => 'StatusCode',
        'class' => 'Class',
        'usage' => 'Usage',
        'department' => 'Department',
        'booking_link' => 'BookingLink',
        'parent_function_id' => 'ParentFunctionID',
        'booking_function_flag' => 'BookingFunctionFlag',
        'entered_by' => 'EnteredBy',
        'account' => 'Account',
        'contact' => 'Contact',
        'coordinator' => 'Coordinator',
        'start_date' => 'StartDate',
        'end_date' => 'EndDate',
        'start_time' => 'StartTime',
        'end_time' => 'EndTime',
        'entered_on' => 'EnteredOn',
        'changed_on' => 'ChangedOn',
        'check_registration_conflicts' => 'CheckRegistrationConflicts',
        'user_number' => 'UserNumber',
        'statistics' => 'Statistics',
        'registration' => 'Registration',
        'ordered_attendance' => 'OrderedAttendance',
        'actual_attendance' => 'ActualAttendance',
        'forecast_attendance' => 'ForecastAttendance',
        'revised_attendance' => 'RevisedAttendance',
        'alternate_description' => 'AlternateDescription',
        'text_color' => 'TextColor',
        'background_color' => 'BackgroundColor',
        'alternate_description2' => 'AlternateDescription2',
        'syncwith_event_attendance' => 'SyncwithEventAttendance',
        'so_checklist' => 'SOChecklist',
        'alternate_description3' => 'AlternateDescription3',
        'alternate_description4' => 'AlternateDescription4',
        'alternate_description5' => 'AlternateDescription5',
        'registration_qualification' => 'RegistrationQualification',
        'function_gl_code' => 'FunctionGLCode',
        'event_function_space' => 'EventFunctionSpace',
        'user_text' => 'UserText',
        'default_payment_schedule' => 'DefaultPaymentSchedule',
        'booth_issue' => 'BoothIssue',
        'location' => 'Location',
        'user_changed_by' => 'UserChangedBy',
        'user_changed_on' => 'UserChangedOn',
        'linked_function_id' => 'LinkedFunctionID',
        'web_address' => 'WebAddress',
        'track_id' => 'TrackID',
        'session_details' => 'SessionDetails',
        'early_deadline' => 'EarlyDeadline',
        'standard_deadline' => 'StandardDeadline',
        'space_description' => 'SpaceDescription',
        'track_description' => 'TrackDescription',
        'function_user_field_sets' => 'FunctionUserFieldSets'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization_code' => 'setOrganizationCode',
        'event_id' => 'setEventId',
        'function_id' => 'setFunctionId',
        'display_order' => 'setDisplayOrder',
        'level' => 'setLevel',
        'search' => 'setSearch',
        'description' => 'setDescription',
        'space' => 'setSpace',
        'status_code' => 'setStatusCode',
        'class' => 'setClass',
        'usage' => 'setUsage',
        'department' => 'setDepartment',
        'booking_link' => 'setBookingLink',
        'parent_function_id' => 'setParentFunctionId',
        'booking_function_flag' => 'setBookingFunctionFlag',
        'entered_by' => 'setEnteredBy',
        'account' => 'setAccount',
        'contact' => 'setContact',
        'coordinator' => 'setCoordinator',
        'start_date' => 'setStartDate',
        'end_date' => 'setEndDate',
        'start_time' => 'setStartTime',
        'end_time' => 'setEndTime',
        'entered_on' => 'setEnteredOn',
        'changed_on' => 'setChangedOn',
        'check_registration_conflicts' => 'setCheckRegistrationConflicts',
        'user_number' => 'setUserNumber',
        'statistics' => 'setStatistics',
        'registration' => 'setRegistration',
        'ordered_attendance' => 'setOrderedAttendance',
        'actual_attendance' => 'setActualAttendance',
        'forecast_attendance' => 'setForecastAttendance',
        'revised_attendance' => 'setRevisedAttendance',
        'alternate_description' => 'setAlternateDescription',
        'text_color' => 'setTextColor',
        'background_color' => 'setBackgroundColor',
        'alternate_description2' => 'setAlternateDescription2',
        'syncwith_event_attendance' => 'setSyncwithEventAttendance',
        'so_checklist' => 'setSoChecklist',
        'alternate_description3' => 'setAlternateDescription3',
        'alternate_description4' => 'setAlternateDescription4',
        'alternate_description5' => 'setAlternateDescription5',
        'registration_qualification' => 'setRegistrationQualification',
        'function_gl_code' => 'setFunctionGlCode',
        'event_function_space' => 'setEventFunctionSpace',
        'user_text' => 'setUserText',
        'default_payment_schedule' => 'setDefaultPaymentSchedule',
        'booth_issue' => 'setBoothIssue',
        'location' => 'setLocation',
        'user_changed_by' => 'setUserChangedBy',
        'user_changed_on' => 'setUserChangedOn',
        'linked_function_id' => 'setLinkedFunctionId',
        'web_address' => 'setWebAddress',
        'track_id' => 'setTrackId',
        'session_details' => 'setSessionDetails',
        'early_deadline' => 'setEarlyDeadline',
        'standard_deadline' => 'setStandardDeadline',
        'space_description' => 'setSpaceDescription',
        'track_description' => 'setTrackDescription',
        'function_user_field_sets' => 'setFunctionUserFieldSets'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization_code' => 'getOrganizationCode',
        'event_id' => 'getEventId',
        'function_id' => 'getFunctionId',
        'display_order' => 'getDisplayOrder',
        'level' => 'getLevel',
        'search' => 'getSearch',
        'description' => 'getDescription',
        'space' => 'getSpace',
        'status_code' => 'getStatusCode',
        'class' => 'getClass',
        'usage' => 'getUsage',
        'department' => 'getDepartment',
        'booking_link' => 'getBookingLink',
        'parent_function_id' => 'getParentFunctionId',
        'booking_function_flag' => 'getBookingFunctionFlag',
        'entered_by' => 'getEnteredBy',
        'account' => 'getAccount',
        'contact' => 'getContact',
        'coordinator' => 'getCoordinator',
        'start_date' => 'getStartDate',
        'end_date' => 'getEndDate',
        'start_time' => 'getStartTime',
        'end_time' => 'getEndTime',
        'entered_on' => 'getEnteredOn',
        'changed_on' => 'getChangedOn',
        'check_registration_conflicts' => 'getCheckRegistrationConflicts',
        'user_number' => 'getUserNumber',
        'statistics' => 'getStatistics',
        'registration' => 'getRegistration',
        'ordered_attendance' => 'getOrderedAttendance',
        'actual_attendance' => 'getActualAttendance',
        'forecast_attendance' => 'getForecastAttendance',
        'revised_attendance' => 'getRevisedAttendance',
        'alternate_description' => 'getAlternateDescription',
        'text_color' => 'getTextColor',
        'background_color' => 'getBackgroundColor',
        'alternate_description2' => 'getAlternateDescription2',
        'syncwith_event_attendance' => 'getSyncwithEventAttendance',
        'so_checklist' => 'getSoChecklist',
        'alternate_description3' => 'getAlternateDescription3',
        'alternate_description4' => 'getAlternateDescription4',
        'alternate_description5' => 'getAlternateDescription5',
        'registration_qualification' => 'getRegistrationQualification',
        'function_gl_code' => 'getFunctionGlCode',
        'event_function_space' => 'getEventFunctionSpace',
        'user_text' => 'getUserText',
        'default_payment_schedule' => 'getDefaultPaymentSchedule',
        'booth_issue' => 'getBoothIssue',
        'location' => 'getLocation',
        'user_changed_by' => 'getUserChangedBy',
        'user_changed_on' => 'getUserChangedOn',
        'linked_function_id' => 'getLinkedFunctionId',
        'web_address' => 'getWebAddress',
        'track_id' => 'getTrackId',
        'session_details' => 'getSessionDetails',
        'early_deadline' => 'getEarlyDeadline',
        'standard_deadline' => 'getStandardDeadline',
        'space_description' => 'getSpaceDescription',
        'track_description' => 'getTrackDescription',
        'function_user_field_sets' => 'getFunctionUserFieldSets'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['event_id'] = isset($data['event_id']) ? $data['event_id'] : null;
        $this->container['function_id'] = isset($data['function_id']) ? $data['function_id'] : null;
        $this->container['display_order'] = isset($data['display_order']) ? $data['display_order'] : null;
        $this->container['level'] = isset($data['level']) ? $data['level'] : null;
        $this->container['search'] = isset($data['search']) ? $data['search'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['space'] = isset($data['space']) ? $data['space'] : null;
        $this->container['status_code'] = isset($data['status_code']) ? $data['status_code'] : null;
        $this->container['class'] = isset($data['class']) ? $data['class'] : null;
        $this->container['usage'] = isset($data['usage']) ? $data['usage'] : null;
        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['booking_link'] = isset($data['booking_link']) ? $data['booking_link'] : null;
        $this->container['parent_function_id'] = isset($data['parent_function_id']) ? $data['parent_function_id'] : null;
        $this->container['booking_function_flag'] = isset($data['booking_function_flag']) ? $data['booking_function_flag'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['coordinator'] = isset($data['coordinator']) ? $data['coordinator'] : null;
        $this->container['start_date'] = isset($data['start_date']) ? $data['start_date'] : null;
        $this->container['end_date'] = isset($data['end_date']) ? $data['end_date'] : null;
        $this->container['start_time'] = isset($data['start_time']) ? $data['start_time'] : null;
        $this->container['end_time'] = isset($data['end_time']) ? $data['end_time'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['check_registration_conflicts'] = isset($data['check_registration_conflicts']) ? $data['check_registration_conflicts'] : null;
        $this->container['user_number'] = isset($data['user_number']) ? $data['user_number'] : null;
        $this->container['statistics'] = isset($data['statistics']) ? $data['statistics'] : null;
        $this->container['registration'] = isset($data['registration']) ? $data['registration'] : null;
        $this->container['ordered_attendance'] = isset($data['ordered_attendance']) ? $data['ordered_attendance'] : null;
        $this->container['actual_attendance'] = isset($data['actual_attendance']) ? $data['actual_attendance'] : null;
        $this->container['forecast_attendance'] = isset($data['forecast_attendance']) ? $data['forecast_attendance'] : null;
        $this->container['revised_attendance'] = isset($data['revised_attendance']) ? $data['revised_attendance'] : null;
        $this->container['alternate_description'] = isset($data['alternate_description']) ? $data['alternate_description'] : null;
        $this->container['text_color'] = isset($data['text_color']) ? $data['text_color'] : null;
        $this->container['background_color'] = isset($data['background_color']) ? $data['background_color'] : null;
        $this->container['alternate_description2'] = isset($data['alternate_description2']) ? $data['alternate_description2'] : null;
        $this->container['syncwith_event_attendance'] = isset($data['syncwith_event_attendance']) ? $data['syncwith_event_attendance'] : null;
        $this->container['so_checklist'] = isset($data['so_checklist']) ? $data['so_checklist'] : null;
        $this->container['alternate_description3'] = isset($data['alternate_description3']) ? $data['alternate_description3'] : null;
        $this->container['alternate_description4'] = isset($data['alternate_description4']) ? $data['alternate_description4'] : null;
        $this->container['alternate_description5'] = isset($data['alternate_description5']) ? $data['alternate_description5'] : null;
        $this->container['registration_qualification'] = isset($data['registration_qualification']) ? $data['registration_qualification'] : null;
        $this->container['function_gl_code'] = isset($data['function_gl_code']) ? $data['function_gl_code'] : null;
        $this->container['event_function_space'] = isset($data['event_function_space']) ? $data['event_function_space'] : null;
        $this->container['user_text'] = isset($data['user_text']) ? $data['user_text'] : null;
        $this->container['default_payment_schedule'] = isset($data['default_payment_schedule']) ? $data['default_payment_schedule'] : null;
        $this->container['booth_issue'] = isset($data['booth_issue']) ? $data['booth_issue'] : null;
        $this->container['location'] = isset($data['location']) ? $data['location'] : null;
        $this->container['user_changed_by'] = isset($data['user_changed_by']) ? $data['user_changed_by'] : null;
        $this->container['user_changed_on'] = isset($data['user_changed_on']) ? $data['user_changed_on'] : null;
        $this->container['linked_function_id'] = isset($data['linked_function_id']) ? $data['linked_function_id'] : null;
        $this->container['web_address'] = isset($data['web_address']) ? $data['web_address'] : null;
        $this->container['track_id'] = isset($data['track_id']) ? $data['track_id'] : null;
        $this->container['session_details'] = isset($data['session_details']) ? $data['session_details'] : null;
        $this->container['early_deadline'] = isset($data['early_deadline']) ? $data['early_deadline'] : null;
        $this->container['standard_deadline'] = isset($data['standard_deadline']) ? $data['standard_deadline'] : null;
        $this->container['space_description'] = isset($data['space_description']) ? $data['space_description'] : null;
        $this->container['track_description'] = isset($data['track_description']) ? $data['track_description'] : null;
        $this->container['function_user_field_sets'] = isset($data['function_user_field_sets']) ? $data['function_user_field_sets'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['event_id'] === null) {
            $invalidProperties[] = "'event_id' can't be null";
        }
        if ($this->container['function_id'] === null) {
            $invalidProperties[] = "'function_id' can't be null";
        }
        if ($this->container['display_order'] === null) {
            $invalidProperties[] = "'display_order' can't be null";
        }
        if ($this->container['level'] === null) {
            $invalidProperties[] = "'level' can't be null";
        }
        if ($this->container['search'] === null) {
            $invalidProperties[] = "'search' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['space'] === null) {
            $invalidProperties[] = "'space' can't be null";
        }
        if ($this->container['status_code'] === null) {
            $invalidProperties[] = "'status_code' can't be null";
        }
        if ($this->container['class'] === null) {
            $invalidProperties[] = "'class' can't be null";
        }
        if ($this->container['usage'] === null) {
            $invalidProperties[] = "'usage' can't be null";
        }
        if ($this->container['department'] === null) {
            $invalidProperties[] = "'department' can't be null";
        }
        if ($this->container['booking_link'] === null) {
            $invalidProperties[] = "'booking_link' can't be null";
        }
        if ($this->container['parent_function_id'] === null) {
            $invalidProperties[] = "'parent_function_id' can't be null";
        }
        if ($this->container['booking_function_flag'] === null) {
            $invalidProperties[] = "'booking_function_flag' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['account'] === null) {
            $invalidProperties[] = "'account' can't be null";
        }
        if ($this->container['contact'] === null) {
            $invalidProperties[] = "'contact' can't be null";
        }
        if ($this->container['coordinator'] === null) {
            $invalidProperties[] = "'coordinator' can't be null";
        }
        if ($this->container['start_date'] === null) {
            $invalidProperties[] = "'start_date' can't be null";
        }
        if ($this->container['end_date'] === null) {
            $invalidProperties[] = "'end_date' can't be null";
        }
        if ($this->container['start_time'] === null) {
            $invalidProperties[] = "'start_time' can't be null";
        }
        if ($this->container['end_time'] === null) {
            $invalidProperties[] = "'end_time' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['check_registration_conflicts'] === null) {
            $invalidProperties[] = "'check_registration_conflicts' can't be null";
        }
        if ($this->container['user_number'] === null) {
            $invalidProperties[] = "'user_number' can't be null";
        }
        if ($this->container['statistics'] === null) {
            $invalidProperties[] = "'statistics' can't be null";
        }
        if ($this->container['registration'] === null) {
            $invalidProperties[] = "'registration' can't be null";
        }
        if ($this->container['ordered_attendance'] === null) {
            $invalidProperties[] = "'ordered_attendance' can't be null";
        }
        if ($this->container['actual_attendance'] === null) {
            $invalidProperties[] = "'actual_attendance' can't be null";
        }
        if ($this->container['forecast_attendance'] === null) {
            $invalidProperties[] = "'forecast_attendance' can't be null";
        }
        if ($this->container['revised_attendance'] === null) {
            $invalidProperties[] = "'revised_attendance' can't be null";
        }
        if ($this->container['alternate_description'] === null) {
            $invalidProperties[] = "'alternate_description' can't be null";
        }
        if ($this->container['text_color'] === null) {
            $invalidProperties[] = "'text_color' can't be null";
        }
        if ($this->container['background_color'] === null) {
            $invalidProperties[] = "'background_color' can't be null";
        }
        if ($this->container['alternate_description2'] === null) {
            $invalidProperties[] = "'alternate_description2' can't be null";
        }
        if ($this->container['syncwith_event_attendance'] === null) {
            $invalidProperties[] = "'syncwith_event_attendance' can't be null";
        }
        if ($this->container['so_checklist'] === null) {
            $invalidProperties[] = "'so_checklist' can't be null";
        }
        if ($this->container['alternate_description3'] === null) {
            $invalidProperties[] = "'alternate_description3' can't be null";
        }
        if ($this->container['alternate_description4'] === null) {
            $invalidProperties[] = "'alternate_description4' can't be null";
        }
        if ($this->container['alternate_description5'] === null) {
            $invalidProperties[] = "'alternate_description5' can't be null";
        }
        if ($this->container['registration_qualification'] === null) {
            $invalidProperties[] = "'registration_qualification' can't be null";
        }
        if ($this->container['function_gl_code'] === null) {
            $invalidProperties[] = "'function_gl_code' can't be null";
        }
        if ($this->container['event_function_space'] === null) {
            $invalidProperties[] = "'event_function_space' can't be null";
        }
        if ($this->container['user_text'] === null) {
            $invalidProperties[] = "'user_text' can't be null";
        }
        if ($this->container['default_payment_schedule'] === null) {
            $invalidProperties[] = "'default_payment_schedule' can't be null";
        }
        if ($this->container['booth_issue'] === null) {
            $invalidProperties[] = "'booth_issue' can't be null";
        }
        if ($this->container['location'] === null) {
            $invalidProperties[] = "'location' can't be null";
        }
        if ($this->container['user_changed_by'] === null) {
            $invalidProperties[] = "'user_changed_by' can't be null";
        }
        if ($this->container['user_changed_on'] === null) {
            $invalidProperties[] = "'user_changed_on' can't be null";
        }
        if ($this->container['linked_function_id'] === null) {
            $invalidProperties[] = "'linked_function_id' can't be null";
        }
        if ($this->container['web_address'] === null) {
            $invalidProperties[] = "'web_address' can't be null";
        }
        if ($this->container['track_id'] === null) {
            $invalidProperties[] = "'track_id' can't be null";
        }
        if ($this->container['session_details'] === null) {
            $invalidProperties[] = "'session_details' can't be null";
        }
        if ($this->container['early_deadline'] === null) {
            $invalidProperties[] = "'early_deadline' can't be null";
        }
        if ($this->container['standard_deadline'] === null) {
            $invalidProperties[] = "'standard_deadline' can't be null";
        }
        if ($this->container['space_description'] === null) {
            $invalidProperties[] = "'space_description' can't be null";
        }
        if ($this->container['track_description'] === null) {
            $invalidProperties[] = "'track_description' can't be null";
        }
        if ($this->container['function_user_field_sets'] === null) {
            $invalidProperties[] = "'function_user_field_sets' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Indentifier field.  Use this for GET and PUT calls in the URL.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV700_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets event_id
     *
     * @return int
     */
    public function getEventId()
    {
        return $this->container['event_id'];
    }

    /**
     * Sets event_id
     *
     * @param int $event_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Indentifier field.  Use this for GET and PUT calls in the URL.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV700_EVT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEventId($event_id)
    {
        $this->container['event_id'] = $event_id;

        return $this;
    }

    /**
     * Gets function_id
     *
     * @return int
     */
    public function getFunctionId()
    {
        return $this->container['function_id'];
    }

    /**
     * Sets function_id
     *
     * @param int $function_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Indentifier field.  Use this for GET and PUT calls in the URL.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV700_FUNC_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFunctionId($function_id)
    {
        $this->container['function_id'] = $function_id;

        return $this;
    }

    /**
     * Gets display_order
     *
     * @return int
     */
    public function getDisplayOrder()
    {
        return $this->container['display_order'];
    }

    /**
     * Sets display_order
     *
     * @param int $display_order <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is automatically set when adding the function.  You do not need to fill it in.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV700_FUNC_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDisplayOrder($display_order)
    {
        $this->container['display_order'] = $display_order;

        return $this;
    }

    /**
     * Gets level
     *
     * @return int
     */
    public function getLevel()
    {
        return $this->container['level'];
    }

    /**
     * Sets level
     *
     * @param int $level <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is automatically set when adding the function.  You do not need to fill it in.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV700_FUNC_LEVEL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLevel($level)
    {
        $this->container['level'] = $level;

        return $this;
    }

    /**
     * Gets search
     *
     * @return string
     */
    public function getSearch()
    {
        return $this->container['search'];
    }

    /**
     * Sets search
     *
     * @param string $search <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_FUNC_SEARCH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSearch($search)
    {
        $this->container['search'] = $search;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_FUNC_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets space
     *
     * @return string
     */
    public function getSpace()
    {
        return $this->container['space'];
    }

    /**
     * Sets space
     *
     * @param string $space <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_SPACE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSpace($space)
    {
        $this->container['space'] = $space;

        return $this;
    }

    /**
     * Gets status_code
     *
     * @return string
     */
    public function getStatusCode()
    {
        return $this->container['status_code'];
    }

    /**
     * Sets status_code
     *
     * @param string $status_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_STATUS_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatusCode($status_code)
    {
        $this->container['status_code'] = $status_code;

        return $this;
    }

    /**
     * Gets class
     *
     * @return string
     */
    public function getClass()
    {
        return $this->container['class'];
    }

    /**
     * Sets class
     *
     * @param string $class <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_FUNC_CLASS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setClass($class)
    {
        $this->container['class'] = $class;

        return $this;
    }

    /**
     * Gets usage
     *
     * @return string
     */
    public function getUsage()
    {
        return $this->container['usage'];
    }

    /**
     * Sets usage
     *
     * @param string $usage <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_FUNC_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUsage($usage)
    {
        $this->container['usage'] = $usage;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string $department <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_MANG_DEPT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets booking_link
     *
     * @return int
     */
    public function getBookingLink()
    {
        return $this->container['booking_link'];
    }

    /**
     * Sets booking_link
     *
     * @param int $booking_link <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> For functions linked to bookings.  Fill this in with the Booking Sequence Number.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV700_SSB_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBookingLink($booking_link)
    {
        $this->container['booking_link'] = $booking_link;

        return $this;
    }

    /**
     * Gets parent_function_id
     *
     * @return int
     */
    public function getParentFunctionId()
    {
        return $this->container['parent_function_id'];
    }

    /**
     * Sets parent_function_id
     *
     * @param int $parent_function_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_PARENT_FUNC_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setParentFunctionId($parent_function_id)
    {
        $this->container['parent_function_id'] = $parent_function_id;

        return $this;
    }

    /**
     * Gets booking_function_flag
     *
     * @return string
     */
    public function getBookingFunctionFlag()
    {
        return $this->container['booking_function_flag'];
    }

    /**
     * Sets booking_function_flag
     *
     * @param string $booking_function_flag <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_FUNC_TYPE_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBookingFunctionFlag($booking_function_flag)
    {
        $this->container['booking_function_flag'] = $booking_function_flag;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets account
     *
     * @return string
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param string $account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_EXT_ACCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return string
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param string $contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_EMP_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets coordinator
     *
     * @return string
     */
    public function getCoordinator()
    {
        return $this->container['coordinator'];
    }

    /**
     * Sets coordinator
     *
     * @param string $coordinator <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_EXTRA_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCoordinator($coordinator)
    {
        $this->container['coordinator'] = $coordinator;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return \DateTime
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param \DateTime $start_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_START_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return \DateTime
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param \DateTime $end_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_END_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets start_time
     *
     * @return \DateTime
     */
    public function getStartTime()
    {
        return $this->container['start_time'];
    }

    /**
     * Sets start_time
     *
     * @param \DateTime $start_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_START_TIME_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStartTime($start_time)
    {
        $this->container['start_time'] = $start_time;

        return $this;
    }

    /**
     * Gets end_time
     *
     * @return \DateTime
     */
    public function getEndTime()
    {
        return $this->container['end_time'];
    }

    /**
     * Sets end_time
     *
     * @param \DateTime $end_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_END_TIME_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEndTime($end_time)
    {
        $this->container['end_time'] = $end_time;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_ENT_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_UPD_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets check_registration_conflicts
     *
     * @return string
     */
    public function getCheckRegistrationConflicts()
    {
        return $this->container['check_registration_conflicts'];
    }

    /**
     * Sets check_registration_conflicts
     *
     * @param string $check_registration_conflicts <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_USER_STS_01  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCheckRegistrationConflicts($check_registration_conflicts)
    {
        $this->container['check_registration_conflicts'] = $check_registration_conflicts;

        return $this;
    }

    /**
     * Gets user_number
     *
     * @return double
     */
    public function getUserNumber()
    {
        return $this->container['user_number'];
    }

    /**
     * Sets user_number
     *
     * @param double $user_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_USER_NBR1_112P  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserNumber($user_number)
    {
        $this->container['user_number'] = $user_number;

        return $this;
    }

    /**
     * Gets statistics
     *
     * @return string
     */
    public function getStatistics()
    {
        return $this->container['statistics'];
    }

    /**
     * Sets statistics
     *
     * @param string $statistics <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_STAT_FUNC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatistics($statistics)
    {
        $this->container['statistics'] = $statistics;

        return $this;
    }

    /**
     * Gets registration
     *
     * @return string
     */
    public function getRegistration()
    {
        return $this->container['registration'];
    }

    /**
     * Sets registration
     *
     * @param string $registration <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_REGIS_FUNC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRegistration($registration)
    {
        $this->container['registration'] = $registration;

        return $this;
    }

    /**
     * Gets ordered_attendance
     *
     * @return int
     */
    public function getOrderedAttendance()
    {
        return $this->container['ordered_attendance'];
    }

    /**
     * Sets ordered_attendance
     *
     * @param int $ordered_attendance <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_ORD_ATTEND  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderedAttendance($ordered_attendance)
    {
        $this->container['ordered_attendance'] = $ordered_attendance;

        return $this;
    }

    /**
     * Gets actual_attendance
     *
     * @return int
     */
    public function getActualAttendance()
    {
        return $this->container['actual_attendance'];
    }

    /**
     * Sets actual_attendance
     *
     * @param int $actual_attendance <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_ACT_ATTEND  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualAttendance($actual_attendance)
    {
        $this->container['actual_attendance'] = $actual_attendance;

        return $this;
    }

    /**
     * Gets forecast_attendance
     *
     * @return int
     */
    public function getForecastAttendance()
    {
        return $this->container['forecast_attendance'];
    }

    /**
     * Sets forecast_attendance
     *
     * @param int $forecast_attendance <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_FOR_ATTEND  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setForecastAttendance($forecast_attendance)
    {
        $this->container['forecast_attendance'] = $forecast_attendance;

        return $this;
    }

    /**
     * Gets revised_attendance
     *
     * @return int
     */
    public function getRevisedAttendance()
    {
        return $this->container['revised_attendance'];
    }

    /**
     * Sets revised_attendance
     *
     * @param int $revised_attendance <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_RVS_ATTEND  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRevisedAttendance($revised_attendance)
    {
        $this->container['revised_attendance'] = $revised_attendance;

        return $this;
    }

    /**
     * Gets alternate_description
     *
     * @return string
     */
    public function getAlternateDescription()
    {
        return $this->container['alternate_description'];
    }

    /**
     * Sets alternate_description
     *
     * @param string $alternate_description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_ALT_FUNC_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription($alternate_description)
    {
        $this->container['alternate_description'] = $alternate_description;

        return $this;
    }

    /**
     * Gets text_color
     *
     * @return int
     */
    public function getTextColor()
    {
        return $this->container['text_color'];
    }

    /**
     * Sets text_color
     *
     * @param int $text_color <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This contains an OLE integer value which can be converted to/from RGB.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV700_FORE_COLOR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTextColor($text_color)
    {
        $this->container['text_color'] = $text_color;

        return $this;
    }

    /**
     * Gets background_color
     *
     * @return int
     */
    public function getBackgroundColor()
    {
        return $this->container['background_color'];
    }

    /**
     * Sets background_color
     *
     * @param int $background_color <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This contains an OLE integer value which can be converted to/from RGB.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV700_BACK_COLOR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBackgroundColor($background_color)
    {
        $this->container['background_color'] = $background_color;

        return $this;
    }

    /**
     * Gets alternate_description2
     *
     * @return string
     */
    public function getAlternateDescription2()
    {
        return $this->container['alternate_description2'];
    }

    /**
     * Sets alternate_description2
     *
     * @param string $alternate_description2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_ALT_FUNC_DESC2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription2($alternate_description2)
    {
        $this->container['alternate_description2'] = $alternate_description2;

        return $this;
    }

    /**
     * Gets syncwith_event_attendance
     *
     * @return string
     */
    public function getSyncwithEventAttendance()
    {
        return $this->container['syncwith_event_attendance'];
    }

    /**
     * Sets syncwith_event_attendance
     *
     * @param string $syncwith_event_attendance <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> If this is Y, the attendance figures will fill automatically.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV700_EVT_ATT_SYNC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSyncwithEventAttendance($syncwith_event_attendance)
    {
        $this->container['syncwith_event_attendance'] = $syncwith_event_attendance;

        return $this;
    }

    /**
     * Gets so_checklist
     *
     * @return string
     */
    public function getSoChecklist()
    {
        return $this->container['so_checklist'];
    }

    /**
     * Sets so_checklist
     *
     * @param string $so_checklist <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_DEF_SO_CHKLST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSoChecklist($so_checklist)
    {
        $this->container['so_checklist'] = $so_checklist;

        return $this;
    }

    /**
     * Gets alternate_description3
     *
     * @return string
     */
    public function getAlternateDescription3()
    {
        return $this->container['alternate_description3'];
    }

    /**
     * Sets alternate_description3
     *
     * @param string $alternate_description3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_ALT_FUNC_DESC3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription3($alternate_description3)
    {
        $this->container['alternate_description3'] = $alternate_description3;

        return $this;
    }

    /**
     * Gets alternate_description4
     *
     * @return string
     */
    public function getAlternateDescription4()
    {
        return $this->container['alternate_description4'];
    }

    /**
     * Sets alternate_description4
     *
     * @param string $alternate_description4 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_ALT_FUNC_DESC4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription4($alternate_description4)
    {
        $this->container['alternate_description4'] = $alternate_description4;

        return $this;
    }

    /**
     * Gets alternate_description5
     *
     * @return string
     */
    public function getAlternateDescription5()
    {
        return $this->container['alternate_description5'];
    }

    /**
     * Sets alternate_description5
     *
     * @param string $alternate_description5 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_ALT_FUNC_DESC5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateDescription5($alternate_description5)
    {
        $this->container['alternate_description5'] = $alternate_description5;

        return $this;
    }

    /**
     * Gets registration_qualification
     *
     * @return string
     */
    public function getRegistrationQualification()
    {
        return $this->container['registration_qualification'];
    }

    /**
     * Sets registration_qualification
     *
     * @param string $registration_qualification <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_REG_QUALIFY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRegistrationQualification($registration_qualification)
    {
        $this->container['registration_qualification'] = $registration_qualification;

        return $this;
    }

    /**
     * Gets function_gl_code
     *
     * @return string
     */
    public function getFunctionGlCode()
    {
        return $this->container['function_gl_code'];
    }

    /**
     * Sets function_gl_code
     *
     * @param string $function_gl_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_FUNC_GLACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFunctionGlCode($function_gl_code)
    {
        $this->container['function_gl_code'] = $function_gl_code;

        return $this;
    }

    /**
     * Gets event_function_space
     *
     * @return string
     */
    public function getEventFunctionSpace()
    {
        return $this->container['event_function_space'];
    }

    /**
     * Sets event_function_space
     *
     * @param string $event_function_space <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_EVT_FUNC_SPACE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEventFunctionSpace($event_function_space)
    {
        $this->container['event_function_space'] = $event_function_space;

        return $this;
    }

    /**
     * Gets user_text
     *
     * @return string
     */
    public function getUserText()
    {
        return $this->container['user_text'];
    }

    /**
     * Sets user_text
     *
     * @param string $user_text <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_FUNC_TEXT_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserText($user_text)
    {
        $this->container['user_text'] = $user_text;

        return $this;
    }

    /**
     * Gets default_payment_schedule
     *
     * @return string
     */
    public function getDefaultPaymentSchedule()
    {
        return $this->container['default_payment_schedule'];
    }

    /**
     * Sets default_payment_schedule
     *
     * @param string $default_payment_schedule <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_DEF_PAY_SCHED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDefaultPaymentSchedule($default_payment_schedule)
    {
        $this->container['default_payment_schedule'] = $default_payment_schedule;

        return $this;
    }

    /**
     * Gets booth_issue
     *
     * @return string
     */
    public function getBoothIssue()
    {
        return $this->container['booth_issue'];
    }

    /**
     * Sets booth_issue
     *
     * @param string $booth_issue <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_ASSIGN_ISS_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBoothIssue($booth_issue)
    {
        $this->container['booth_issue'] = $booth_issue;

        return $this;
    }

    /**
     * Gets location
     *
     * @return string
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param string $location <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_LOCATION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets user_changed_by
     *
     * @return string
     */
    public function getUserChangedBy()
    {
        return $this->container['user_changed_by'];
    }

    /**
     * Sets user_changed_by
     *
     * @param string $user_changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_MAN_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserChangedBy($user_changed_by)
    {
        $this->container['user_changed_by'] = $user_changed_by;

        return $this;
    }

    /**
     * Gets user_changed_on
     *
     * @return \DateTime
     */
    public function getUserChangedOn()
    {
        return $this->container['user_changed_on'];
    }

    /**
     * Sets user_changed_on
     *
     * @param \DateTime $user_changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_MAN_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserChangedOn($user_changed_on)
    {
        $this->container['user_changed_on'] = $user_changed_on;

        return $this;
    }

    /**
     * Gets linked_function_id
     *
     * @return int
     */
    public function getLinkedFunctionId()
    {
        return $this->container['linked_function_id'];
    }

    /**
     * Sets linked_function_id
     *
     * @param int $linked_function_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is automatically set when adding the function.  You do not need to fill it in.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV700_LINKED_FUNC_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLinkedFunctionId($linked_function_id)
    {
        $this->container['linked_function_id'] = $linked_function_id;

        return $this;
    }

    /**
     * Gets web_address
     *
     * @return string
     */
    public function getWebAddress()
    {
        return $this->container['web_address'];
    }

    /**
     * Sets web_address
     *
     * @param string $web_address <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_WEB_ADDRESS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setWebAddress($web_address)
    {
        $this->container['web_address'] = $web_address;

        return $this;
    }

    /**
     * Gets track_id
     *
     * @return int
     */
    public function getTrackId()
    {
        return $this->container['track_id'];
    }

    /**
     * Sets track_id
     *
     * @param int $track_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_TRACK_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTrackId($track_id)
    {
        $this->container['track_id'] = $track_id;

        return $this;
    }

    /**
     * Gets session_details
     *
     * @return string
     */
    public function getSessionDetails()
    {
        return $this->container['session_details'];
    }

    /**
     * Sets session_details
     *
     * @param string $session_details <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_SESSION_DETAILS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 4000  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSessionDetails($session_details)
    {
        $this->container['session_details'] = $session_details;

        return $this;
    }

    /**
     * Gets early_deadline
     *
     * @return \DateTime
     */
    public function getEarlyDeadline()
    {
        return $this->container['early_deadline'];
    }

    /**
     * Sets early_deadline
     *
     * @param \DateTime $early_deadline <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_ADV_CUTOFF_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEarlyDeadline($early_deadline)
    {
        $this->container['early_deadline'] = $early_deadline;

        return $this;
    }

    /**
     * Gets standard_deadline
     *
     * @return \DateTime
     */
    public function getStandardDeadline()
    {
        return $this->container['standard_deadline'];
    }

    /**
     * Sets standard_deadline
     *
     * @param \DateTime $standard_deadline <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV700_STD_CUTOFF_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStandardDeadline($standard_deadline)
    {
        $this->container['standard_deadline'] = $standard_deadline;

        return $this;
    }

    /**
     * Gets space_description
     *
     * @return string
     */
    public function getSpaceDescription()
    {
        return $this->container['space_description'];
    }

    /**
     * Sets space_description
     *
     * @param string $space_description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FunctionSpace_EV800_SPACE_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSpaceDescription($space_description)
    {
        $this->container['space_description'] = $space_description;

        return $this;
    }

    /**
     * Gets track_description
     *
     * @return string
     */
    public function getTrackDescription()
    {
        return $this->container['track_description'];
    }

    /**
     * Sets track_description
     *
     * @param string $track_description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> cTRACK  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTrackDescription($track_description)
    {
        $this->container['track_description'] = $track_description;

        return $this;
    }

    /**
     * Gets function_user_field_sets
     *
     * @return \FomF\Ungerboeck\Client\Model\UserFields[]
     */
    public function getFunctionUserFieldSets()
    {
        return $this->container['function_user_field_sets'];
    }

    /**
     * Sets function_user_field_sets
     *
     * @param \FomF\Ungerboeck\Client\Model\UserFields[] $function_user_field_sets <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This holds the list of Function User Field set values.  This is not filled on searches.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV711_FUNC_USER_FLDS Table</span></div>
     *
     * @return $this
     */
    public function setFunctionUserFieldSets($function_user_field_sets)
    {
        $this->container['function_user_field_sets'] = $function_user_field_sets;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


