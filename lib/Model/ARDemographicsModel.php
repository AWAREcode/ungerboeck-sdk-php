<?php
/**
 * ARDemographicsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * ARDemographicsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ARDemographicsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ARDemographicsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization' => 'string',
        'account' => 'string',
        'terms' => 'string',
        'credit_limit' => 'double',
        'credit_rating' => 'string',
        'dunning_statements' => 'string',
        'hold_orders' => 'string',
        'charge_interest' => 'string',
        'taxable' => 'string',
        'tax_id' => 'string',
        'last_payment_date' => '\DateTime',
        'last_payment_amount' => 'double',
        'send_customer_statements' => 'string',
        'last_charge_date' => '\DateTime',
        'method' => 'string',
        'ar_balance' => 'double',
        'entered_on' => '\DateTime',
        'deposits' => 'double',
        'entered_by' => 'string',
        'unapplied_cash' => 'double',
        'changed_on' => '\DateTime',
        'changed_by' => 'string',
        'credit_review_date' => '\DateTime',
        'account_specific_payment_methods' => 'string',
        'last_charge_amount' => 'double',
        'late_reminder_date' => '\DateTime',
        'finance_charge_rate' => 'string',
        'grace_days' => 'int',
        'email_address' => 'string',
        'dictionary' => 'int',
        'additional_tax_id' => 'string',
        'price_class' => 'string',
        'e_fax_address' => 'string',
        'po_number_required' => 'string',
        'credit_last_reviewed_by' => 'string',
        'markup' => 'string',
        'masked_tax_id' => 'string',
        'tax_id_format' => 'string',
        'invoice_method' => 'string',
        'e_invoice_id' => 'string',
        'e_invoice_scheme' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization' => null,
        'account' => null,
        'terms' => null,
        'credit_limit' => 'double',
        'credit_rating' => null,
        'dunning_statements' => null,
        'hold_orders' => null,
        'charge_interest' => null,
        'taxable' => null,
        'tax_id' => null,
        'last_payment_date' => 'date-time',
        'last_payment_amount' => 'double',
        'send_customer_statements' => null,
        'last_charge_date' => 'date-time',
        'method' => null,
        'ar_balance' => 'double',
        'entered_on' => 'date-time',
        'deposits' => 'double',
        'entered_by' => null,
        'unapplied_cash' => 'double',
        'changed_on' => 'date-time',
        'changed_by' => null,
        'credit_review_date' => 'date-time',
        'account_specific_payment_methods' => null,
        'last_charge_amount' => 'double',
        'late_reminder_date' => 'date-time',
        'finance_charge_rate' => null,
        'grace_days' => 'int32',
        'email_address' => null,
        'dictionary' => 'int32',
        'additional_tax_id' => null,
        'price_class' => null,
        'e_fax_address' => null,
        'po_number_required' => null,
        'credit_last_reviewed_by' => null,
        'markup' => null,
        'masked_tax_id' => null,
        'tax_id_format' => null,
        'invoice_method' => null,
        'e_invoice_id' => null,
        'e_invoice_scheme' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization' => 'Organization',
        'account' => 'Account',
        'terms' => 'Terms',
        'credit_limit' => 'CreditLimit',
        'credit_rating' => 'CreditRating',
        'dunning_statements' => 'DunningStatements',
        'hold_orders' => 'HoldOrders',
        'charge_interest' => 'ChargeInterest',
        'taxable' => 'Taxable',
        'tax_id' => 'TaxID',
        'last_payment_date' => 'LastPaymentDate',
        'last_payment_amount' => 'LastPaymentAmount',
        'send_customer_statements' => 'SendCustomerStatements',
        'last_charge_date' => 'LastChargeDate',
        'method' => 'Method',
        'ar_balance' => 'ARBalance',
        'entered_on' => 'EnteredOn',
        'deposits' => 'Deposits',
        'entered_by' => 'EnteredBy',
        'unapplied_cash' => 'UnappliedCash',
        'changed_on' => 'ChangedOn',
        'changed_by' => 'ChangedBy',
        'credit_review_date' => 'CreditReviewDate',
        'account_specific_payment_methods' => 'AccountSpecificPaymentMethods',
        'last_charge_amount' => 'LastChargeAmount',
        'late_reminder_date' => 'LateReminderDate',
        'finance_charge_rate' => 'FinanceChargeRate',
        'grace_days' => 'GraceDays',
        'email_address' => 'EmailAddress',
        'dictionary' => 'Dictionary',
        'additional_tax_id' => 'AdditionalTaxID',
        'price_class' => 'PriceClass',
        'e_fax_address' => 'EFaxAddress',
        'po_number_required' => 'PONumberRequired',
        'credit_last_reviewed_by' => 'CreditLastReviewedBy',
        'markup' => 'Markup',
        'masked_tax_id' => 'MaskedTaxID',
        'tax_id_format' => 'TaxIDFormat',
        'invoice_method' => 'InvoiceMethod',
        'e_invoice_id' => 'EInvoiceID',
        'e_invoice_scheme' => 'EInvoiceScheme'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization' => 'setOrganization',
        'account' => 'setAccount',
        'terms' => 'setTerms',
        'credit_limit' => 'setCreditLimit',
        'credit_rating' => 'setCreditRating',
        'dunning_statements' => 'setDunningStatements',
        'hold_orders' => 'setHoldOrders',
        'charge_interest' => 'setChargeInterest',
        'taxable' => 'setTaxable',
        'tax_id' => 'setTaxId',
        'last_payment_date' => 'setLastPaymentDate',
        'last_payment_amount' => 'setLastPaymentAmount',
        'send_customer_statements' => 'setSendCustomerStatements',
        'last_charge_date' => 'setLastChargeDate',
        'method' => 'setMethod',
        'ar_balance' => 'setArBalance',
        'entered_on' => 'setEnteredOn',
        'deposits' => 'setDeposits',
        'entered_by' => 'setEnteredBy',
        'unapplied_cash' => 'setUnappliedCash',
        'changed_on' => 'setChangedOn',
        'changed_by' => 'setChangedBy',
        'credit_review_date' => 'setCreditReviewDate',
        'account_specific_payment_methods' => 'setAccountSpecificPaymentMethods',
        'last_charge_amount' => 'setLastChargeAmount',
        'late_reminder_date' => 'setLateReminderDate',
        'finance_charge_rate' => 'setFinanceChargeRate',
        'grace_days' => 'setGraceDays',
        'email_address' => 'setEmailAddress',
        'dictionary' => 'setDictionary',
        'additional_tax_id' => 'setAdditionalTaxId',
        'price_class' => 'setPriceClass',
        'e_fax_address' => 'setEFaxAddress',
        'po_number_required' => 'setPoNumberRequired',
        'credit_last_reviewed_by' => 'setCreditLastReviewedBy',
        'markup' => 'setMarkup',
        'masked_tax_id' => 'setMaskedTaxId',
        'tax_id_format' => 'setTaxIdFormat',
        'invoice_method' => 'setInvoiceMethod',
        'e_invoice_id' => 'setEInvoiceId',
        'e_invoice_scheme' => 'setEInvoiceScheme'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization' => 'getOrganization',
        'account' => 'getAccount',
        'terms' => 'getTerms',
        'credit_limit' => 'getCreditLimit',
        'credit_rating' => 'getCreditRating',
        'dunning_statements' => 'getDunningStatements',
        'hold_orders' => 'getHoldOrders',
        'charge_interest' => 'getChargeInterest',
        'taxable' => 'getTaxable',
        'tax_id' => 'getTaxId',
        'last_payment_date' => 'getLastPaymentDate',
        'last_payment_amount' => 'getLastPaymentAmount',
        'send_customer_statements' => 'getSendCustomerStatements',
        'last_charge_date' => 'getLastChargeDate',
        'method' => 'getMethod',
        'ar_balance' => 'getArBalance',
        'entered_on' => 'getEnteredOn',
        'deposits' => 'getDeposits',
        'entered_by' => 'getEnteredBy',
        'unapplied_cash' => 'getUnappliedCash',
        'changed_on' => 'getChangedOn',
        'changed_by' => 'getChangedBy',
        'credit_review_date' => 'getCreditReviewDate',
        'account_specific_payment_methods' => 'getAccountSpecificPaymentMethods',
        'last_charge_amount' => 'getLastChargeAmount',
        'late_reminder_date' => 'getLateReminderDate',
        'finance_charge_rate' => 'getFinanceChargeRate',
        'grace_days' => 'getGraceDays',
        'email_address' => 'getEmailAddress',
        'dictionary' => 'getDictionary',
        'additional_tax_id' => 'getAdditionalTaxId',
        'price_class' => 'getPriceClass',
        'e_fax_address' => 'getEFaxAddress',
        'po_number_required' => 'getPoNumberRequired',
        'credit_last_reviewed_by' => 'getCreditLastReviewedBy',
        'markup' => 'getMarkup',
        'masked_tax_id' => 'getMaskedTaxId',
        'tax_id_format' => 'getTaxIdFormat',
        'invoice_method' => 'getInvoiceMethod',
        'e_invoice_id' => 'getEInvoiceId',
        'e_invoice_scheme' => 'getEInvoiceScheme'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
        $this->container['terms'] = isset($data['terms']) ? $data['terms'] : null;
        $this->container['credit_limit'] = isset($data['credit_limit']) ? $data['credit_limit'] : null;
        $this->container['credit_rating'] = isset($data['credit_rating']) ? $data['credit_rating'] : null;
        $this->container['dunning_statements'] = isset($data['dunning_statements']) ? $data['dunning_statements'] : null;
        $this->container['hold_orders'] = isset($data['hold_orders']) ? $data['hold_orders'] : null;
        $this->container['charge_interest'] = isset($data['charge_interest']) ? $data['charge_interest'] : null;
        $this->container['taxable'] = isset($data['taxable']) ? $data['taxable'] : null;
        $this->container['tax_id'] = isset($data['tax_id']) ? $data['tax_id'] : null;
        $this->container['last_payment_date'] = isset($data['last_payment_date']) ? $data['last_payment_date'] : null;
        $this->container['last_payment_amount'] = isset($data['last_payment_amount']) ? $data['last_payment_amount'] : null;
        $this->container['send_customer_statements'] = isset($data['send_customer_statements']) ? $data['send_customer_statements'] : null;
        $this->container['last_charge_date'] = isset($data['last_charge_date']) ? $data['last_charge_date'] : null;
        $this->container['method'] = isset($data['method']) ? $data['method'] : null;
        $this->container['ar_balance'] = isset($data['ar_balance']) ? $data['ar_balance'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['deposits'] = isset($data['deposits']) ? $data['deposits'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['unapplied_cash'] = isset($data['unapplied_cash']) ? $data['unapplied_cash'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['credit_review_date'] = isset($data['credit_review_date']) ? $data['credit_review_date'] : null;
        $this->container['account_specific_payment_methods'] = isset($data['account_specific_payment_methods']) ? $data['account_specific_payment_methods'] : null;
        $this->container['last_charge_amount'] = isset($data['last_charge_amount']) ? $data['last_charge_amount'] : null;
        $this->container['late_reminder_date'] = isset($data['late_reminder_date']) ? $data['late_reminder_date'] : null;
        $this->container['finance_charge_rate'] = isset($data['finance_charge_rate']) ? $data['finance_charge_rate'] : null;
        $this->container['grace_days'] = isset($data['grace_days']) ? $data['grace_days'] : null;
        $this->container['email_address'] = isset($data['email_address']) ? $data['email_address'] : null;
        $this->container['dictionary'] = isset($data['dictionary']) ? $data['dictionary'] : null;
        $this->container['additional_tax_id'] = isset($data['additional_tax_id']) ? $data['additional_tax_id'] : null;
        $this->container['price_class'] = isset($data['price_class']) ? $data['price_class'] : null;
        $this->container['e_fax_address'] = isset($data['e_fax_address']) ? $data['e_fax_address'] : null;
        $this->container['po_number_required'] = isset($data['po_number_required']) ? $data['po_number_required'] : null;
        $this->container['credit_last_reviewed_by'] = isset($data['credit_last_reviewed_by']) ? $data['credit_last_reviewed_by'] : null;
        $this->container['markup'] = isset($data['markup']) ? $data['markup'] : null;
        $this->container['masked_tax_id'] = isset($data['masked_tax_id']) ? $data['masked_tax_id'] : null;
        $this->container['tax_id_format'] = isset($data['tax_id_format']) ? $data['tax_id_format'] : null;
        $this->container['invoice_method'] = isset($data['invoice_method']) ? $data['invoice_method'] : null;
        $this->container['e_invoice_id'] = isset($data['e_invoice_id']) ? $data['e_invoice_id'] : null;
        $this->container['e_invoice_scheme'] = isset($data['e_invoice_scheme']) ? $data['e_invoice_scheme'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization'] === null) {
            $invalidProperties[] = "'organization' can't be null";
        }
        if ($this->container['account'] === null) {
            $invalidProperties[] = "'account' can't be null";
        }
        if ($this->container['terms'] === null) {
            $invalidProperties[] = "'terms' can't be null";
        }
        if ($this->container['credit_limit'] === null) {
            $invalidProperties[] = "'credit_limit' can't be null";
        }
        if ($this->container['credit_rating'] === null) {
            $invalidProperties[] = "'credit_rating' can't be null";
        }
        if ($this->container['dunning_statements'] === null) {
            $invalidProperties[] = "'dunning_statements' can't be null";
        }
        if ($this->container['hold_orders'] === null) {
            $invalidProperties[] = "'hold_orders' can't be null";
        }
        if ($this->container['charge_interest'] === null) {
            $invalidProperties[] = "'charge_interest' can't be null";
        }
        if ($this->container['taxable'] === null) {
            $invalidProperties[] = "'taxable' can't be null";
        }
        if ($this->container['tax_id'] === null) {
            $invalidProperties[] = "'tax_id' can't be null";
        }
        if ($this->container['last_payment_date'] === null) {
            $invalidProperties[] = "'last_payment_date' can't be null";
        }
        if ($this->container['last_payment_amount'] === null) {
            $invalidProperties[] = "'last_payment_amount' can't be null";
        }
        if ($this->container['send_customer_statements'] === null) {
            $invalidProperties[] = "'send_customer_statements' can't be null";
        }
        if ($this->container['last_charge_date'] === null) {
            $invalidProperties[] = "'last_charge_date' can't be null";
        }
        if ($this->container['method'] === null) {
            $invalidProperties[] = "'method' can't be null";
        }
        if ($this->container['ar_balance'] === null) {
            $invalidProperties[] = "'ar_balance' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['deposits'] === null) {
            $invalidProperties[] = "'deposits' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['unapplied_cash'] === null) {
            $invalidProperties[] = "'unapplied_cash' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['credit_review_date'] === null) {
            $invalidProperties[] = "'credit_review_date' can't be null";
        }
        if ($this->container['account_specific_payment_methods'] === null) {
            $invalidProperties[] = "'account_specific_payment_methods' can't be null";
        }
        if ($this->container['last_charge_amount'] === null) {
            $invalidProperties[] = "'last_charge_amount' can't be null";
        }
        if ($this->container['late_reminder_date'] === null) {
            $invalidProperties[] = "'late_reminder_date' can't be null";
        }
        if ($this->container['finance_charge_rate'] === null) {
            $invalidProperties[] = "'finance_charge_rate' can't be null";
        }
        if ($this->container['grace_days'] === null) {
            $invalidProperties[] = "'grace_days' can't be null";
        }
        if ($this->container['email_address'] === null) {
            $invalidProperties[] = "'email_address' can't be null";
        }
        if ($this->container['dictionary'] === null) {
            $invalidProperties[] = "'dictionary' can't be null";
        }
        if ($this->container['additional_tax_id'] === null) {
            $invalidProperties[] = "'additional_tax_id' can't be null";
        }
        if ($this->container['price_class'] === null) {
            $invalidProperties[] = "'price_class' can't be null";
        }
        if ($this->container['e_fax_address'] === null) {
            $invalidProperties[] = "'e_fax_address' can't be null";
        }
        if ($this->container['po_number_required'] === null) {
            $invalidProperties[] = "'po_number_required' can't be null";
        }
        if ($this->container['credit_last_reviewed_by'] === null) {
            $invalidProperties[] = "'credit_last_reviewed_by' can't be null";
        }
        if ($this->container['markup'] === null) {
            $invalidProperties[] = "'markup' can't be null";
        }
        if ($this->container['masked_tax_id'] === null) {
            $invalidProperties[] = "'masked_tax_id' can't be null";
        }
        if ($this->container['tax_id_format'] === null) {
            $invalidProperties[] = "'tax_id_format' can't be null";
        }
        if ($this->container['invoice_method'] === null) {
            $invalidProperties[] = "'invoice_method' can't be null";
        }
        if ($this->container['e_invoice_id'] === null) {
            $invalidProperties[] = "'e_invoice_id' can't be null";
        }
        if ($this->container['e_invoice_scheme'] === null) {
            $invalidProperties[] = "'e_invoice_scheme' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets account
     *
     * @return string
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param string $account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_EXT_ACCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets terms
     *
     * @return string
     */
    public function getTerms()
    {
        return $this->container['terms'];
    }

    /**
     * Sets terms
     *
     * @param string $terms <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_TERMS_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTerms($terms)
    {
        $this->container['terms'] = $terms;

        return $this;
    }

    /**
     * Gets credit_limit
     *
     * @return double
     */
    public function getCreditLimit()
    {
        return $this->container['credit_limit'];
    }

    /**
     * Sets credit_limit
     *
     * @param double $credit_limit <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_CREDIT_LIMIT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCreditLimit($credit_limit)
    {
        $this->container['credit_limit'] = $credit_limit;

        return $this;
    }

    /**
     * Gets credit_rating
     *
     * @return string
     */
    public function getCreditRating()
    {
        return $this->container['credit_rating'];
    }

    /**
     * Sets credit_rating
     *
     * @param string $credit_rating <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_CREDIT_RATING  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCreditRating($credit_rating)
    {
        $this->container['credit_rating'] = $credit_rating;

        return $this;
    }

    /**
     * Gets dunning_statements
     *
     * @return string
     */
    public function getDunningStatements()
    {
        return $this->container['dunning_statements'];
    }

    /**
     * Sets dunning_statements
     *
     * @param string $dunning_statements <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_PAST_DUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDunningStatements($dunning_statements)
    {
        $this->container['dunning_statements'] = $dunning_statements;

        return $this;
    }

    /**
     * Gets hold_orders
     *
     * @return string
     */
    public function getHoldOrders()
    {
        return $this->container['hold_orders'];
    }

    /**
     * Sets hold_orders
     *
     * @param string $hold_orders <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_HOLD_ORDERS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setHoldOrders($hold_orders)
    {
        $this->container['hold_orders'] = $hold_orders;

        return $this;
    }

    /**
     * Gets charge_interest
     *
     * @return string
     */
    public function getChargeInterest()
    {
        return $this->container['charge_interest'];
    }

    /**
     * Sets charge_interest
     *
     * @param string $charge_interest <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_CHARGE_INTEREST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChargeInterest($charge_interest)
    {
        $this->container['charge_interest'] = $charge_interest;

        return $this;
    }

    /**
     * Gets taxable
     *
     * @return string
     */
    public function getTaxable()
    {
        return $this->container['taxable'];
    }

    /**
     * Sets taxable
     *
     * @param string $taxable <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_TAX_RATE_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxable($taxable)
    {
        $this->container['taxable'] = $taxable;

        return $this;
    }

    /**
     * Gets tax_id
     *
     * @return string
     */
    public function getTaxId()
    {
        return $this->container['tax_id'];
    }

    /**
     * Sets tax_id
     *
     * @param string $tax_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_TAX_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxId($tax_id)
    {
        $this->container['tax_id'] = $tax_id;

        return $this;
    }

    /**
     * Gets last_payment_date
     *
     * @return \DateTime
     */
    public function getLastPaymentDate()
    {
        return $this->container['last_payment_date'];
    }

    /**
     * Sets last_payment_date
     *
     * @param \DateTime $last_payment_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_LAST_PAYMENT_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastPaymentDate($last_payment_date)
    {
        $this->container['last_payment_date'] = $last_payment_date;

        return $this;
    }

    /**
     * Gets last_payment_amount
     *
     * @return double
     */
    public function getLastPaymentAmount()
    {
        return $this->container['last_payment_amount'];
    }

    /**
     * Sets last_payment_amount
     *
     * @param double $last_payment_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_LAST_PAYMENT_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastPaymentAmount($last_payment_amount)
    {
        $this->container['last_payment_amount'] = $last_payment_amount;

        return $this;
    }

    /**
     * Gets send_customer_statements
     *
     * @return string
     */
    public function getSendCustomerStatements()
    {
        return $this->container['send_customer_statements'];
    }

    /**
     * Sets send_customer_statements
     *
     * @param string $send_customer_statements <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_STATEMENT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSendCustomerStatements($send_customer_statements)
    {
        $this->container['send_customer_statements'] = $send_customer_statements;

        return $this;
    }

    /**
     * Gets last_charge_date
     *
     * @return \DateTime
     */
    public function getLastChargeDate()
    {
        return $this->container['last_charge_date'];
    }

    /**
     * Sets last_charge_date
     *
     * @param \DateTime $last_charge_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_LAST_CHARGE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastChargeDate($last_charge_date)
    {
        $this->container['last_charge_date'] = $last_charge_date;

        return $this;
    }

    /**
     * Gets method
     *
     * @return string
     */
    public function getMethod()
    {
        return $this->container['method'];
    }

    /**
     * Sets method
     *
     * @param string $method <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_BALFWD_OPEN  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMethod($method)
    {
        $this->container['method'] = $method;

        return $this;
    }

    /**
     * Gets ar_balance
     *
     * @return double
     */
    public function getArBalance()
    {
        return $this->container['ar_balance'];
    }

    /**
     * Sets ar_balance
     *
     * @param double $ar_balance <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_BALANCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setArBalance($ar_balance)
    {
        $this->container['ar_balance'] = $ar_balance;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_ENT_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets deposits
     *
     * @return double
     */
    public function getDeposits()
    {
        return $this->container['deposits'];
    }

    /**
     * Sets deposits
     *
     * @param double $deposits <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_DEPOSITS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDeposits($deposits)
    {
        $this->container['deposits'] = $deposits;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets unapplied_cash
     *
     * @return double
     */
    public function getUnappliedCash()
    {
        return $this->container['unapplied_cash'];
    }

    /**
     * Sets unapplied_cash
     *
     * @param double $unapplied_cash <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_UNAPPLIED_CASH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUnappliedCash($unapplied_cash)
    {
        $this->container['unapplied_cash'] = $unapplied_cash;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_UPD_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets credit_review_date
     *
     * @return \DateTime
     */
    public function getCreditReviewDate()
    {
        return $this->container['credit_review_date'];
    }

    /**
     * Sets credit_review_date
     *
     * @param \DateTime $credit_review_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_CREDIT_REVIEW_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCreditReviewDate($credit_review_date)
    {
        $this->container['credit_review_date'] = $credit_review_date;

        return $this;
    }

    /**
     * Gets account_specific_payment_methods
     *
     * @return string
     */
    public function getAccountSpecificPaymentMethods()
    {
        return $this->container['account_specific_payment_methods'];
    }

    /**
     * Sets account_specific_payment_methods
     *
     * @param string $account_specific_payment_methods <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_PAYMENT_METHOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccountSpecificPaymentMethods($account_specific_payment_methods)
    {
        $this->container['account_specific_payment_methods'] = $account_specific_payment_methods;

        return $this;
    }

    /**
     * Gets last_charge_amount
     *
     * @return double
     */
    public function getLastChargeAmount()
    {
        return $this->container['last_charge_amount'];
    }

    /**
     * Sets last_charge_amount
     *
     * @param double $last_charge_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_LAST_CHARGE_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastChargeAmount($last_charge_amount)
    {
        $this->container['last_charge_amount'] = $last_charge_amount;

        return $this;
    }

    /**
     * Gets late_reminder_date
     *
     * @return \DateTime
     */
    public function getLateReminderDate()
    {
        return $this->container['late_reminder_date'];
    }

    /**
     * Sets late_reminder_date
     *
     * @param \DateTime $late_reminder_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_LATE_NOTICE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLateReminderDate($late_reminder_date)
    {
        $this->container['late_reminder_date'] = $late_reminder_date;

        return $this;
    }

    /**
     * Gets finance_charge_rate
     *
     * @return string
     */
    public function getFinanceChargeRate()
    {
        return $this->container['finance_charge_rate'];
    }

    /**
     * Sets finance_charge_rate
     *
     * @param string $finance_charge_rate <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_LATE_CHARGE_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFinanceChargeRate($finance_charge_rate)
    {
        $this->container['finance_charge_rate'] = $finance_charge_rate;

        return $this;
    }

    /**
     * Gets grace_days
     *
     * @return int
     */
    public function getGraceDays()
    {
        return $this->container['grace_days'];
    }

    /**
     * Sets grace_days
     *
     * @param int $grace_days <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_GRACE_DAYS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGraceDays($grace_days)
    {
        $this->container['grace_days'] = $grace_days;

        return $this;
    }

    /**
     * Gets email_address
     *
     * @return string
     */
    public function getEmailAddress()
    {
        return $this->container['email_address'];
    }

    /**
     * Sets email_address
     *
     * @param string $email_address <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_EMAIL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEmailAddress($email_address)
    {
        $this->container['email_address'] = $email_address;

        return $this;
    }

    /**
     * Gets dictionary
     *
     * @return int
     */
    public function getDictionary()
    {
        return $this->container['dictionary'];
    }

    /**
     * Sets dictionary
     *
     * @param int $dictionary <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_LANG_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDictionary($dictionary)
    {
        $this->container['dictionary'] = $dictionary;

        return $this;
    }

    /**
     * Gets additional_tax_id
     *
     * @return string
     */
    public function getAdditionalTaxId()
    {
        return $this->container['additional_tax_id'];
    }

    /**
     * Sets additional_tax_id
     *
     * @param string $additional_tax_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_TAX_ID_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAdditionalTaxId($additional_tax_id)
    {
        $this->container['additional_tax_id'] = $additional_tax_id;

        return $this;
    }

    /**
     * Gets price_class
     *
     * @return string
     */
    public function getPriceClass()
    {
        return $this->container['price_class'];
    }

    /**
     * Sets price_class
     *
     * @param string $price_class <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_PRICE_CLASS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPriceClass($price_class)
    {
        $this->container['price_class'] = $price_class;

        return $this;
    }

    /**
     * Gets e_fax_address
     *
     * @return string
     */
    public function getEFaxAddress()
    {
        return $this->container['e_fax_address'];
    }

    /**
     * Sets e_fax_address
     *
     * @param string $e_fax_address <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_EFAX_ADDRESS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEFaxAddress($e_fax_address)
    {
        $this->container['e_fax_address'] = $e_fax_address;

        return $this;
    }

    /**
     * Gets po_number_required
     *
     * @return string
     */
    public function getPoNumberRequired()
    {
        return $this->container['po_number_required'];
    }

    /**
     * Sets po_number_required
     *
     * @param string $po_number_required <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_PO_REQUIRED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPoNumberRequired($po_number_required)
    {
        $this->container['po_number_required'] = $po_number_required;

        return $this;
    }

    /**
     * Gets credit_last_reviewed_by
     *
     * @return string
     */
    public function getCreditLastReviewedBy()
    {
        return $this->container['credit_last_reviewed_by'];
    }

    /**
     * Sets credit_last_reviewed_by
     *
     * @param string $credit_last_reviewed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_REVIEWED_BY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCreditLastReviewedBy($credit_last_reviewed_by)
    {
        $this->container['credit_last_reviewed_by'] = $credit_last_reviewed_by;

        return $this;
    }

    /**
     * Gets markup
     *
     * @return string
     */
    public function getMarkup()
    {
        return $this->container['markup'];
    }

    /**
     * Sets markup
     *
     * @param string $markup <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_MARKUP_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMarkup($markup)
    {
        $this->container['markup'] = $markup;

        return $this;
    }

    /**
     * Gets masked_tax_id
     *
     * @return string
     */
    public function getMaskedTaxId()
    {
        return $this->container['masked_tax_id'];
    }

    /**
     * Sets masked_tax_id
     *
     * @param string $masked_tax_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_MASKED_TAX_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMaskedTaxId($masked_tax_id)
    {
        $this->container['masked_tax_id'] = $masked_tax_id;

        return $this;
    }

    /**
     * Gets tax_id_format
     *
     * @return string
     */
    public function getTaxIdFormat()
    {
        return $this->container['tax_id_format'];
    }

    /**
     * Sets tax_id_format
     *
     * @param string $tax_id_format <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_TAX_ID_FORMAT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxIdFormat($tax_id_format)
    {
        $this->container['tax_id_format'] = $tax_id_format;

        return $this;
    }

    /**
     * Gets invoice_method
     *
     * @return string
     */
    public function getInvoiceMethod()
    {
        return $this->container['invoice_method'];
    }

    /**
     * Sets invoice_method
     *
     * @param string $invoice_method <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_INVOICE_METHOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoiceMethod($invoice_method)
    {
        $this->container['invoice_method'] = $invoice_method;

        return $this;
    }

    /**
     * Gets e_invoice_id
     *
     * @return string
     */
    public function getEInvoiceId()
    {
        return $this->container['e_invoice_id'];
    }

    /**
     * Sets e_invoice_id
     *
     * @param string $e_invoice_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_E_INVOICE_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEInvoiceId($e_invoice_id)
    {
        $this->container['e_invoice_id'] = $e_invoice_id;

        return $this;
    }

    /**
     * Gets e_invoice_scheme
     *
     * @return string
     */
    public function getEInvoiceScheme()
    {
        return $this->container['e_invoice_scheme'];
    }

    /**
     * Sets e_invoice_scheme
     *
     * @param string $e_invoice_scheme <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AR001_E_INVOICE_SCHEME_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEInvoiceScheme($e_invoice_scheme)
    {
        $this->container['e_invoice_scheme'] = $e_invoice_scheme;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


