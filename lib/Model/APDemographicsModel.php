<?php
/**
 * APDemographicsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * APDemographicsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class APDemographicsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'APDemographicsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization' => 'string',
        'supplier' => 'string',
        'terms' => 'string',
        'status' => 'string',
        'hold_payments' => 'string',
        'tax_id' => 'string',
        'allow1099' => 'string',
        'vendor_type' => 'string',
        'single_voucherper_check' => 'int',
        'name' => 'string',
        'address1' => 'string',
        'address2' => 'string',
        'city' => 'string',
        'state' => 'string',
        'postal_code' => 'string',
        'country' => 'string',
        'entered_by' => 'string',
        'changed_by' => 'string',
        'withhold_tax' => 'string',
        'default_payment_method' => 'string',
        'bank' => 'string',
        'bank_id' => 'string',
        'account_name' => 'string',
        'bank_account' => 'string',
        'gl_account' => 'string',
        'sub_account' => 'string',
        'reference' => 'string',
        'email_address' => 'string',
        'advice_by' => 'string',
        'address3' => 'string',
        'contact' => 'string',
        'external_reference' => 'string',
        'currency' => 'string',
        'invoice_taxes' => 'string',
        'efax_address' => 'string',
        'iban' => 'string',
        'bic' => 'string',
        'user_text01' => 'string',
        'user_text02' => 'string',
        'bank2' => 'string',
        'bank_id2' => 'string',
        'account_name2' => 'string',
        'bank_account2' => 'string',
        'iban2' => 'string',
        'bic2' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization' => null,
        'supplier' => null,
        'terms' => null,
        'status' => null,
        'hold_payments' => null,
        'tax_id' => null,
        'allow1099' => null,
        'vendor_type' => null,
        'single_voucherper_check' => 'int32',
        'name' => null,
        'address1' => null,
        'address2' => null,
        'city' => null,
        'state' => null,
        'postal_code' => null,
        'country' => null,
        'entered_by' => null,
        'changed_by' => null,
        'withhold_tax' => null,
        'default_payment_method' => null,
        'bank' => null,
        'bank_id' => null,
        'account_name' => null,
        'bank_account' => null,
        'gl_account' => null,
        'sub_account' => null,
        'reference' => null,
        'email_address' => null,
        'advice_by' => null,
        'address3' => null,
        'contact' => null,
        'external_reference' => null,
        'currency' => null,
        'invoice_taxes' => null,
        'efax_address' => null,
        'iban' => null,
        'bic' => null,
        'user_text01' => null,
        'user_text02' => null,
        'bank2' => null,
        'bank_id2' => null,
        'account_name2' => null,
        'bank_account2' => null,
        'iban2' => null,
        'bic2' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization' => 'Organization',
        'supplier' => 'Supplier',
        'terms' => 'Terms',
        'status' => 'Status',
        'hold_payments' => 'HoldPayments',
        'tax_id' => 'TaxID',
        'allow1099' => 'Allow1099',
        'vendor_type' => 'VendorType',
        'single_voucherper_check' => 'SingleVoucherperCheck',
        'name' => 'Name',
        'address1' => 'Address1',
        'address2' => 'Address2',
        'city' => 'City',
        'state' => 'State',
        'postal_code' => 'PostalCode',
        'country' => 'Country',
        'entered_by' => 'EnteredBy',
        'changed_by' => 'ChangedBy',
        'withhold_tax' => 'WithholdTax',
        'default_payment_method' => 'DefaultPaymentMethod',
        'bank' => 'Bank',
        'bank_id' => 'BankID',
        'account_name' => 'AccountName',
        'bank_account' => 'BankAccount',
        'gl_account' => 'GLAccount',
        'sub_account' => 'SubAccount',
        'reference' => 'Reference',
        'email_address' => 'EmailAddress',
        'advice_by' => 'AdviceBy',
        'address3' => 'Address3',
        'contact' => 'Contact',
        'external_reference' => 'ExternalReference',
        'currency' => 'Currency',
        'invoice_taxes' => 'InvoiceTaxes',
        'efax_address' => 'EfaxAddress',
        'iban' => 'IBAN',
        'bic' => 'BIC',
        'user_text01' => 'UserText01',
        'user_text02' => 'UserText02',
        'bank2' => 'Bank2',
        'bank_id2' => 'BankID2',
        'account_name2' => 'AccountName2',
        'bank_account2' => 'BankAccount2',
        'iban2' => 'IBAN2',
        'bic2' => 'BIC2'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization' => 'setOrganization',
        'supplier' => 'setSupplier',
        'terms' => 'setTerms',
        'status' => 'setStatus',
        'hold_payments' => 'setHoldPayments',
        'tax_id' => 'setTaxId',
        'allow1099' => 'setAllow1099',
        'vendor_type' => 'setVendorType',
        'single_voucherper_check' => 'setSingleVoucherperCheck',
        'name' => 'setName',
        'address1' => 'setAddress1',
        'address2' => 'setAddress2',
        'city' => 'setCity',
        'state' => 'setState',
        'postal_code' => 'setPostalCode',
        'country' => 'setCountry',
        'entered_by' => 'setEnteredBy',
        'changed_by' => 'setChangedBy',
        'withhold_tax' => 'setWithholdTax',
        'default_payment_method' => 'setDefaultPaymentMethod',
        'bank' => 'setBank',
        'bank_id' => 'setBankId',
        'account_name' => 'setAccountName',
        'bank_account' => 'setBankAccount',
        'gl_account' => 'setGlAccount',
        'sub_account' => 'setSubAccount',
        'reference' => 'setReference',
        'email_address' => 'setEmailAddress',
        'advice_by' => 'setAdviceBy',
        'address3' => 'setAddress3',
        'contact' => 'setContact',
        'external_reference' => 'setExternalReference',
        'currency' => 'setCurrency',
        'invoice_taxes' => 'setInvoiceTaxes',
        'efax_address' => 'setEfaxAddress',
        'iban' => 'setIban',
        'bic' => 'setBic',
        'user_text01' => 'setUserText01',
        'user_text02' => 'setUserText02',
        'bank2' => 'setBank2',
        'bank_id2' => 'setBankId2',
        'account_name2' => 'setAccountName2',
        'bank_account2' => 'setBankAccount2',
        'iban2' => 'setIban2',
        'bic2' => 'setBic2'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization' => 'getOrganization',
        'supplier' => 'getSupplier',
        'terms' => 'getTerms',
        'status' => 'getStatus',
        'hold_payments' => 'getHoldPayments',
        'tax_id' => 'getTaxId',
        'allow1099' => 'getAllow1099',
        'vendor_type' => 'getVendorType',
        'single_voucherper_check' => 'getSingleVoucherperCheck',
        'name' => 'getName',
        'address1' => 'getAddress1',
        'address2' => 'getAddress2',
        'city' => 'getCity',
        'state' => 'getState',
        'postal_code' => 'getPostalCode',
        'country' => 'getCountry',
        'entered_by' => 'getEnteredBy',
        'changed_by' => 'getChangedBy',
        'withhold_tax' => 'getWithholdTax',
        'default_payment_method' => 'getDefaultPaymentMethod',
        'bank' => 'getBank',
        'bank_id' => 'getBankId',
        'account_name' => 'getAccountName',
        'bank_account' => 'getBankAccount',
        'gl_account' => 'getGlAccount',
        'sub_account' => 'getSubAccount',
        'reference' => 'getReference',
        'email_address' => 'getEmailAddress',
        'advice_by' => 'getAdviceBy',
        'address3' => 'getAddress3',
        'contact' => 'getContact',
        'external_reference' => 'getExternalReference',
        'currency' => 'getCurrency',
        'invoice_taxes' => 'getInvoiceTaxes',
        'efax_address' => 'getEfaxAddress',
        'iban' => 'getIban',
        'bic' => 'getBic',
        'user_text01' => 'getUserText01',
        'user_text02' => 'getUserText02',
        'bank2' => 'getBank2',
        'bank_id2' => 'getBankId2',
        'account_name2' => 'getAccountName2',
        'bank_account2' => 'getBankAccount2',
        'iban2' => 'getIban2',
        'bic2' => 'getBic2'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['supplier'] = isset($data['supplier']) ? $data['supplier'] : null;
        $this->container['terms'] = isset($data['terms']) ? $data['terms'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['hold_payments'] = isset($data['hold_payments']) ? $data['hold_payments'] : null;
        $this->container['tax_id'] = isset($data['tax_id']) ? $data['tax_id'] : null;
        $this->container['allow1099'] = isset($data['allow1099']) ? $data['allow1099'] : null;
        $this->container['vendor_type'] = isset($data['vendor_type']) ? $data['vendor_type'] : null;
        $this->container['single_voucherper_check'] = isset($data['single_voucherper_check']) ? $data['single_voucherper_check'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['address1'] = isset($data['address1']) ? $data['address1'] : null;
        $this->container['address2'] = isset($data['address2']) ? $data['address2'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['state'] = isset($data['state']) ? $data['state'] : null;
        $this->container['postal_code'] = isset($data['postal_code']) ? $data['postal_code'] : null;
        $this->container['country'] = isset($data['country']) ? $data['country'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['withhold_tax'] = isset($data['withhold_tax']) ? $data['withhold_tax'] : null;
        $this->container['default_payment_method'] = isset($data['default_payment_method']) ? $data['default_payment_method'] : null;
        $this->container['bank'] = isset($data['bank']) ? $data['bank'] : null;
        $this->container['bank_id'] = isset($data['bank_id']) ? $data['bank_id'] : null;
        $this->container['account_name'] = isset($data['account_name']) ? $data['account_name'] : null;
        $this->container['bank_account'] = isset($data['bank_account']) ? $data['bank_account'] : null;
        $this->container['gl_account'] = isset($data['gl_account']) ? $data['gl_account'] : null;
        $this->container['sub_account'] = isset($data['sub_account']) ? $data['sub_account'] : null;
        $this->container['reference'] = isset($data['reference']) ? $data['reference'] : null;
        $this->container['email_address'] = isset($data['email_address']) ? $data['email_address'] : null;
        $this->container['advice_by'] = isset($data['advice_by']) ? $data['advice_by'] : null;
        $this->container['address3'] = isset($data['address3']) ? $data['address3'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['external_reference'] = isset($data['external_reference']) ? $data['external_reference'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['invoice_taxes'] = isset($data['invoice_taxes']) ? $data['invoice_taxes'] : null;
        $this->container['efax_address'] = isset($data['efax_address']) ? $data['efax_address'] : null;
        $this->container['iban'] = isset($data['iban']) ? $data['iban'] : null;
        $this->container['bic'] = isset($data['bic']) ? $data['bic'] : null;
        $this->container['user_text01'] = isset($data['user_text01']) ? $data['user_text01'] : null;
        $this->container['user_text02'] = isset($data['user_text02']) ? $data['user_text02'] : null;
        $this->container['bank2'] = isset($data['bank2']) ? $data['bank2'] : null;
        $this->container['bank_id2'] = isset($data['bank_id2']) ? $data['bank_id2'] : null;
        $this->container['account_name2'] = isset($data['account_name2']) ? $data['account_name2'] : null;
        $this->container['bank_account2'] = isset($data['bank_account2']) ? $data['bank_account2'] : null;
        $this->container['iban2'] = isset($data['iban2']) ? $data['iban2'] : null;
        $this->container['bic2'] = isset($data['bic2']) ? $data['bic2'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization'] === null) {
            $invalidProperties[] = "'organization' can't be null";
        }
        if ($this->container['supplier'] === null) {
            $invalidProperties[] = "'supplier' can't be null";
        }
        if ($this->container['terms'] === null) {
            $invalidProperties[] = "'terms' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['hold_payments'] === null) {
            $invalidProperties[] = "'hold_payments' can't be null";
        }
        if ($this->container['tax_id'] === null) {
            $invalidProperties[] = "'tax_id' can't be null";
        }
        if ($this->container['allow1099'] === null) {
            $invalidProperties[] = "'allow1099' can't be null";
        }
        if ($this->container['vendor_type'] === null) {
            $invalidProperties[] = "'vendor_type' can't be null";
        }
        if ($this->container['single_voucherper_check'] === null) {
            $invalidProperties[] = "'single_voucherper_check' can't be null";
        }
        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['address1'] === null) {
            $invalidProperties[] = "'address1' can't be null";
        }
        if ($this->container['address2'] === null) {
            $invalidProperties[] = "'address2' can't be null";
        }
        if ($this->container['city'] === null) {
            $invalidProperties[] = "'city' can't be null";
        }
        if ($this->container['state'] === null) {
            $invalidProperties[] = "'state' can't be null";
        }
        if ($this->container['postal_code'] === null) {
            $invalidProperties[] = "'postal_code' can't be null";
        }
        if ($this->container['country'] === null) {
            $invalidProperties[] = "'country' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['withhold_tax'] === null) {
            $invalidProperties[] = "'withhold_tax' can't be null";
        }
        if ($this->container['default_payment_method'] === null) {
            $invalidProperties[] = "'default_payment_method' can't be null";
        }
        if ($this->container['bank'] === null) {
            $invalidProperties[] = "'bank' can't be null";
        }
        if ($this->container['bank_id'] === null) {
            $invalidProperties[] = "'bank_id' can't be null";
        }
        if ($this->container['account_name'] === null) {
            $invalidProperties[] = "'account_name' can't be null";
        }
        if ($this->container['bank_account'] === null) {
            $invalidProperties[] = "'bank_account' can't be null";
        }
        if ($this->container['gl_account'] === null) {
            $invalidProperties[] = "'gl_account' can't be null";
        }
        if ($this->container['sub_account'] === null) {
            $invalidProperties[] = "'sub_account' can't be null";
        }
        if ($this->container['reference'] === null) {
            $invalidProperties[] = "'reference' can't be null";
        }
        if ($this->container['email_address'] === null) {
            $invalidProperties[] = "'email_address' can't be null";
        }
        if ($this->container['advice_by'] === null) {
            $invalidProperties[] = "'advice_by' can't be null";
        }
        if ($this->container['address3'] === null) {
            $invalidProperties[] = "'address3' can't be null";
        }
        if ($this->container['contact'] === null) {
            $invalidProperties[] = "'contact' can't be null";
        }
        if ($this->container['external_reference'] === null) {
            $invalidProperties[] = "'external_reference' can't be null";
        }
        if ($this->container['currency'] === null) {
            $invalidProperties[] = "'currency' can't be null";
        }
        if ($this->container['invoice_taxes'] === null) {
            $invalidProperties[] = "'invoice_taxes' can't be null";
        }
        if ($this->container['efax_address'] === null) {
            $invalidProperties[] = "'efax_address' can't be null";
        }
        if ($this->container['iban'] === null) {
            $invalidProperties[] = "'iban' can't be null";
        }
        if ($this->container['bic'] === null) {
            $invalidProperties[] = "'bic' can't be null";
        }
        if ($this->container['user_text01'] === null) {
            $invalidProperties[] = "'user_text01' can't be null";
        }
        if ($this->container['user_text02'] === null) {
            $invalidProperties[] = "'user_text02' can't be null";
        }
        if ($this->container['bank2'] === null) {
            $invalidProperties[] = "'bank2' can't be null";
        }
        if ($this->container['bank_id2'] === null) {
            $invalidProperties[] = "'bank_id2' can't be null";
        }
        if ($this->container['account_name2'] === null) {
            $invalidProperties[] = "'account_name2' can't be null";
        }
        if ($this->container['bank_account2'] === null) {
            $invalidProperties[] = "'bank_account2' can't be null";
        }
        if ($this->container['iban2'] === null) {
            $invalidProperties[] = "'iban2' can't be null";
        }
        if ($this->container['bic2'] === null) {
            $invalidProperties[] = "'bic2' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets supplier
     *
     * @return string
     */
    public function getSupplier()
    {
        return $this->container['supplier'];
    }

    /**
     * Sets supplier
     *
     * @param string $supplier <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_EXT_ACCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSupplier($supplier)
    {
        $this->container['supplier'] = $supplier;

        return $this;
    }

    /**
     * Gets terms
     *
     * @return string
     */
    public function getTerms()
    {
        return $this->container['terms'];
    }

    /**
     * Sets terms
     *
     * @param string $terms <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_TERMS_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTerms($terms)
    {
        $this->container['terms'] = $terms;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets hold_payments
     *
     * @return string
     */
    public function getHoldPayments()
    {
        return $this->container['hold_payments'];
    }

    /**
     * Sets hold_payments
     *
     * @param string $hold_payments <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_HOLD_PAYMENTS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setHoldPayments($hold_payments)
    {
        $this->container['hold_payments'] = $hold_payments;

        return $this;
    }

    /**
     * Gets tax_id
     *
     * @return string
     */
    public function getTaxId()
    {
        return $this->container['tax_id'];
    }

    /**
     * Sets tax_id
     *
     * @param string $tax_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Tax ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> AP001_TAX_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxId($tax_id)
    {
        $this->container['tax_id'] = $tax_id;

        return $this;
    }

    /**
     * Gets allow1099
     *
     * @return string
     */
    public function getAllow1099()
    {
        return $this->container['allow1099'];
    }

    /**
     * Sets allow1099
     *
     * @param string $allow1099 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_1099  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAllow1099($allow1099)
    {
        $this->container['allow1099'] = $allow1099;

        return $this;
    }

    /**
     * Gets vendor_type
     *
     * @return string
     */
    public function getVendorType()
    {
        return $this->container['vendor_type'];
    }

    /**
     * Sets vendor_type
     *
     * @param string $vendor_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_VENDOR_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setVendorType($vendor_type)
    {
        $this->container['vendor_type'] = $vendor_type;

        return $this;
    }

    /**
     * Gets single_voucherper_check
     *
     * @return int
     */
    public function getSingleVoucherperCheck()
    {
        return $this->container['single_voucherper_check'];
    }

    /**
     * Sets single_voucherper_check
     *
     * @param int $single_voucherper_check <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_NBR_INVOICES  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSingleVoucherperCheck($single_voucherper_check)
    {
        $this->container['single_voucherper_check'] = $single_voucherper_check;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_NAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets address1
     *
     * @return string
     */
    public function getAddress1()
    {
        return $this->container['address1'];
    }

    /**
     * Sets address1
     *
     * @param string $address1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_ADDRESS1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAddress1($address1)
    {
        $this->container['address1'] = $address1;

        return $this;
    }

    /**
     * Gets address2
     *
     * @return string
     */
    public function getAddress2()
    {
        return $this->container['address2'];
    }

    /**
     * Sets address2
     *
     * @param string $address2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_ADDRESS2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAddress2($address2)
    {
        $this->container['address2'] = $address2;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string $city <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_CITY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string $state <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_STATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets postal_code
     *
     * @return string
     */
    public function getPostalCode()
    {
        return $this->container['postal_code'];
    }

    /**
     * Sets postal_code
     *
     * @param string $postal_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_POSTAL_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 25  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPostalCode($postal_code)
    {
        $this->container['postal_code'] = $postal_code;

        return $this;
    }

    /**
     * Gets country
     *
     * @return string
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     *
     * @param string $country <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_COUNTRY_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets withhold_tax
     *
     * @return string
     */
    public function getWithholdTax()
    {
        return $this->container['withhold_tax'];
    }

    /**
     * Sets withhold_tax
     *
     * @param string $withhold_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_WITHHOLD_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setWithholdTax($withhold_tax)
    {
        $this->container['withhold_tax'] = $withhold_tax;

        return $this;
    }

    /**
     * Gets default_payment_method
     *
     * @return string
     */
    public function getDefaultPaymentMethod()
    {
        return $this->container['default_payment_method'];
    }

    /**
     * Sets default_payment_method
     *
     * @param string $default_payment_method <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_PAY_METHOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDefaultPaymentMethod($default_payment_method)
    {
        $this->container['default_payment_method'] = $default_payment_method;

        return $this;
    }

    /**
     * Gets bank
     *
     * @return string
     */
    public function getBank()
    {
        return $this->container['bank'];
    }

    /**
     * Sets bank
     *
     * @param string $bank <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_BANK_NAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBank($bank)
    {
        $this->container['bank'] = $bank;

        return $this;
    }

    /**
     * Gets bank_id
     *
     * @return string
     */
    public function getBankId()
    {
        return $this->container['bank_id'];
    }

    /**
     * Sets bank_id
     *
     * @param string $bank_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_BANK_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 25  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBankId($bank_id)
    {
        $this->container['bank_id'] = $bank_id;

        return $this;
    }

    /**
     * Gets account_name
     *
     * @return string
     */
    public function getAccountName()
    {
        return $this->container['account_name'];
    }

    /**
     * Sets account_name
     *
     * @param string $account_name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_BANK_ACCT_NAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccountName($account_name)
    {
        $this->container['account_name'] = $account_name;

        return $this;
    }

    /**
     * Gets bank_account
     *
     * @return string
     */
    public function getBankAccount()
    {
        return $this->container['bank_account'];
    }

    /**
     * Sets bank_account
     *
     * @param string $bank_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_BANK_ACCT_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 25  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBankAccount($bank_account)
    {
        $this->container['bank_account'] = $bank_account;

        return $this;
    }

    /**
     * Gets gl_account
     *
     * @return string
     */
    public function getGlAccount()
    {
        return $this->container['gl_account'];
    }

    /**
     * Sets gl_account
     *
     * @param string $gl_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_GL_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlAccount($gl_account)
    {
        $this->container['gl_account'] = $gl_account;

        return $this;
    }

    /**
     * Gets sub_account
     *
     * @return string
     */
    public function getSubAccount()
    {
        return $this->container['sub_account'];
    }

    /**
     * Sets sub_account
     *
     * @param string $sub_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_GL_SUB_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSubAccount($sub_account)
    {
        $this->container['sub_account'] = $sub_account;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string $reference <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_REFERENCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets email_address
     *
     * @return string
     */
    public function getEmailAddress()
    {
        return $this->container['email_address'];
    }

    /**
     * Sets email_address
     *
     * @param string $email_address <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_EMAIL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEmailAddress($email_address)
    {
        $this->container['email_address'] = $email_address;

        return $this;
    }

    /**
     * Gets advice_by
     *
     * @return string
     */
    public function getAdviceBy()
    {
        return $this->container['advice_by'];
    }

    /**
     * Sets advice_by
     *
     * @param string $advice_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_ADVICE_METHOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAdviceBy($advice_by)
    {
        $this->container['advice_by'] = $advice_by;

        return $this;
    }

    /**
     * Gets address3
     *
     * @return string
     */
    public function getAddress3()
    {
        return $this->container['address3'];
    }

    /**
     * Sets address3
     *
     * @param string $address3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_ADDRESS3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAddress3($address3)
    {
        $this->container['address3'] = $address3;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return string
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param string $contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_REMIT_CONTACT_NG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets external_reference
     *
     * @return string
     */
    public function getExternalReference()
    {
        return $this->container['external_reference'];
    }

    /**
     * Sets external_reference
     *
     * @param string $external_reference <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_EXT_REF_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExternalReference($external_reference)
    {
        $this->container['external_reference'] = $external_reference;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_CURRENCY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets invoice_taxes
     *
     * @return string
     */
    public function getInvoiceTaxes()
    {
        return $this->container['invoice_taxes'];
    }

    /**
     * Sets invoice_taxes
     *
     * @param string $invoice_taxes <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_INVOICES_TAXES  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoiceTaxes($invoice_taxes)
    {
        $this->container['invoice_taxes'] = $invoice_taxes;

        return $this;
    }

    /**
     * Gets efax_address
     *
     * @return string
     */
    public function getEfaxAddress()
    {
        return $this->container['efax_address'];
    }

    /**
     * Sets efax_address
     *
     * @param string $efax_address <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_EFAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEfaxAddress($efax_address)
    {
        $this->container['efax_address'] = $efax_address;

        return $this;
    }

    /**
     * Gets iban
     *
     * @return string
     */
    public function getIban()
    {
        return $this->container['iban'];
    }

    /**
     * Sets iban
     *
     * @param string $iban <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_IBAN  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIban($iban)
    {
        $this->container['iban'] = $iban;

        return $this;
    }

    /**
     * Gets bic
     *
     * @return string
     */
    public function getBic()
    {
        return $this->container['bic'];
    }

    /**
     * Sets bic
     *
     * @param string $bic <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_BIC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBic($bic)
    {
        $this->container['bic'] = $bic;

        return $this;
    }

    /**
     * Gets user_text01
     *
     * @return string
     */
    public function getUserText01()
    {
        return $this->container['user_text01'];
    }

    /**
     * Sets user_text01
     *
     * @param string $user_text01 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_USER_TEXT_01  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserText01($user_text01)
    {
        $this->container['user_text01'] = $user_text01;

        return $this;
    }

    /**
     * Gets user_text02
     *
     * @return string
     */
    public function getUserText02()
    {
        return $this->container['user_text02'];
    }

    /**
     * Sets user_text02
     *
     * @param string $user_text02 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_USER_TEXT_02  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserText02($user_text02)
    {
        $this->container['user_text02'] = $user_text02;

        return $this;
    }

    /**
     * Gets bank2
     *
     * @return string
     */
    public function getBank2()
    {
        return $this->container['bank2'];
    }

    /**
     * Sets bank2
     *
     * @param string $bank2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_BANK_NAME_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBank2($bank2)
    {
        $this->container['bank2'] = $bank2;

        return $this;
    }

    /**
     * Gets bank_id2
     *
     * @return string
     */
    public function getBankId2()
    {
        return $this->container['bank_id2'];
    }

    /**
     * Sets bank_id2
     *
     * @param string $bank_id2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_BANK_ID_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 25  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBankId2($bank_id2)
    {
        $this->container['bank_id2'] = $bank_id2;

        return $this;
    }

    /**
     * Gets account_name2
     *
     * @return string
     */
    public function getAccountName2()
    {
        return $this->container['account_name2'];
    }

    /**
     * Sets account_name2
     *
     * @param string $account_name2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_BANK_ACCT_NAME_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccountName2($account_name2)
    {
        $this->container['account_name2'] = $account_name2;

        return $this;
    }

    /**
     * Gets bank_account2
     *
     * @return string
     */
    public function getBankAccount2()
    {
        return $this->container['bank_account2'];
    }

    /**
     * Sets bank_account2
     *
     * @param string $bank_account2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_BANK_ACCT_NBR_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 25  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBankAccount2($bank_account2)
    {
        $this->container['bank_account2'] = $bank_account2;

        return $this;
    }

    /**
     * Gets iban2
     *
     * @return string
     */
    public function getIban2()
    {
        return $this->container['iban2'];
    }

    /**
     * Sets iban2
     *
     * @param string $iban2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_IBAN_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIban2($iban2)
    {
        $this->container['iban2'] = $iban2;

        return $this;
    }

    /**
     * Gets bic2
     *
     * @return string
     */
    public function getBic2()
    {
        return $this->container['bic2'];
    }

    /**
     * Sets bic2
     *
     * @param string $bic2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP001_BIC_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBic2($bic2)
    {
        $this->container['bic2'] = $bic2;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


