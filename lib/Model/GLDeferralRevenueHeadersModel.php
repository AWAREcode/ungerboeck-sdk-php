<?php
/**
 * GLDeferralRevenueHeadersModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * GLDeferralRevenueHeadersModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GLDeferralRevenueHeadersModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'GLDeferralRevenueHeadersModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'sequence' => 'int',
        'record_type' => 'string',
        'description' => 'string',
        'transaction_date' => '\DateTime',
        'start_date' => '\DateTime',
        'end_date' => '\DateTime',
        'years' => 'int',
        'periods' => 'double',
        'local_amount' => 'double',
        'amount' => 'double',
        'currency' => 'string',
        'local_amount_recognized' => 'double',
        'amount_recognized' => 'double',
        'recognized_through' => '\DateTime',
        'deferral_gl_account' => 'string',
        'deferral_gl_sub_account' => 'string',
        'recognition_gl_account' => 'string',
        'recognition_gl_sub_account' => 'string',
        'recognized_status' => 'string',
        'recognition_method' => 'string',
        'local_periodic_amount' => 'double',
        'periodic_amount' => 'double',
        'override' => 'string',
        'je_line' => 'int',
        'order' => 'int',
        'order_line' => 'int',
        'voucher' => 'int',
        'voucher_line' => 'int',
        'entered_on' => '\DateTime',
        'entered_by' => 'string',
        'changed_on' => '\DateTime',
        'changed_by' => 'string',
        'recognition_by' => 'string',
        'recognition_on' => '\DateTime'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'sequence' => 'int32',
        'record_type' => null,
        'description' => null,
        'transaction_date' => 'date-time',
        'start_date' => 'date-time',
        'end_date' => 'date-time',
        'years' => 'int32',
        'periods' => 'double',
        'local_amount' => 'double',
        'amount' => 'double',
        'currency' => null,
        'local_amount_recognized' => 'double',
        'amount_recognized' => 'double',
        'recognized_through' => 'date-time',
        'deferral_gl_account' => null,
        'deferral_gl_sub_account' => null,
        'recognition_gl_account' => null,
        'recognition_gl_sub_account' => null,
        'recognized_status' => null,
        'recognition_method' => null,
        'local_periodic_amount' => 'double',
        'periodic_amount' => 'double',
        'override' => null,
        'je_line' => 'int32',
        'order' => 'int32',
        'order_line' => 'int32',
        'voucher' => 'int32',
        'voucher_line' => 'int32',
        'entered_on' => 'date-time',
        'entered_by' => null,
        'changed_on' => 'date-time',
        'changed_by' => null,
        'recognition_by' => null,
        'recognition_on' => 'date-time'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'sequence' => 'Sequence',
        'record_type' => 'RecordType',
        'description' => 'Description',
        'transaction_date' => 'TransactionDate',
        'start_date' => 'StartDate',
        'end_date' => 'EndDate',
        'years' => 'Years',
        'periods' => 'Periods',
        'local_amount' => 'LocalAmount',
        'amount' => 'Amount',
        'currency' => 'Currency',
        'local_amount_recognized' => 'LocalAmountRecognized',
        'amount_recognized' => 'AmountRecognized',
        'recognized_through' => 'RecognizedThrough',
        'deferral_gl_account' => 'DeferralGLAccount',
        'deferral_gl_sub_account' => 'DeferralGLSubAccount',
        'recognition_gl_account' => 'RecognitionGLAccount',
        'recognition_gl_sub_account' => 'RecognitionGLSubAccount',
        'recognized_status' => 'RecognizedStatus',
        'recognition_method' => 'RecognitionMethod',
        'local_periodic_amount' => 'LocalPeriodicAmount',
        'periodic_amount' => 'PeriodicAmount',
        'override' => 'Override',
        'je_line' => 'JELine',
        'order' => 'Order',
        'order_line' => 'OrderLine',
        'voucher' => 'Voucher',
        'voucher_line' => 'VoucherLine',
        'entered_on' => 'EnteredOn',
        'entered_by' => 'EnteredBy',
        'changed_on' => 'ChangedOn',
        'changed_by' => 'ChangedBy',
        'recognition_by' => 'RecognitionBy',
        'recognition_on' => 'RecognitionOn'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'sequence' => 'setSequence',
        'record_type' => 'setRecordType',
        'description' => 'setDescription',
        'transaction_date' => 'setTransactionDate',
        'start_date' => 'setStartDate',
        'end_date' => 'setEndDate',
        'years' => 'setYears',
        'periods' => 'setPeriods',
        'local_amount' => 'setLocalAmount',
        'amount' => 'setAmount',
        'currency' => 'setCurrency',
        'local_amount_recognized' => 'setLocalAmountRecognized',
        'amount_recognized' => 'setAmountRecognized',
        'recognized_through' => 'setRecognizedThrough',
        'deferral_gl_account' => 'setDeferralGlAccount',
        'deferral_gl_sub_account' => 'setDeferralGlSubAccount',
        'recognition_gl_account' => 'setRecognitionGlAccount',
        'recognition_gl_sub_account' => 'setRecognitionGlSubAccount',
        'recognized_status' => 'setRecognizedStatus',
        'recognition_method' => 'setRecognitionMethod',
        'local_periodic_amount' => 'setLocalPeriodicAmount',
        'periodic_amount' => 'setPeriodicAmount',
        'override' => 'setOverride',
        'je_line' => 'setJeLine',
        'order' => 'setOrder',
        'order_line' => 'setOrderLine',
        'voucher' => 'setVoucher',
        'voucher_line' => 'setVoucherLine',
        'entered_on' => 'setEnteredOn',
        'entered_by' => 'setEnteredBy',
        'changed_on' => 'setChangedOn',
        'changed_by' => 'setChangedBy',
        'recognition_by' => 'setRecognitionBy',
        'recognition_on' => 'setRecognitionOn'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'sequence' => 'getSequence',
        'record_type' => 'getRecordType',
        'description' => 'getDescription',
        'transaction_date' => 'getTransactionDate',
        'start_date' => 'getStartDate',
        'end_date' => 'getEndDate',
        'years' => 'getYears',
        'periods' => 'getPeriods',
        'local_amount' => 'getLocalAmount',
        'amount' => 'getAmount',
        'currency' => 'getCurrency',
        'local_amount_recognized' => 'getLocalAmountRecognized',
        'amount_recognized' => 'getAmountRecognized',
        'recognized_through' => 'getRecognizedThrough',
        'deferral_gl_account' => 'getDeferralGlAccount',
        'deferral_gl_sub_account' => 'getDeferralGlSubAccount',
        'recognition_gl_account' => 'getRecognitionGlAccount',
        'recognition_gl_sub_account' => 'getRecognitionGlSubAccount',
        'recognized_status' => 'getRecognizedStatus',
        'recognition_method' => 'getRecognitionMethod',
        'local_periodic_amount' => 'getLocalPeriodicAmount',
        'periodic_amount' => 'getPeriodicAmount',
        'override' => 'getOverride',
        'je_line' => 'getJeLine',
        'order' => 'getOrder',
        'order_line' => 'getOrderLine',
        'voucher' => 'getVoucher',
        'voucher_line' => 'getVoucherLine',
        'entered_on' => 'getEnteredOn',
        'entered_by' => 'getEnteredBy',
        'changed_on' => 'getChangedOn',
        'changed_by' => 'getChangedBy',
        'recognition_by' => 'getRecognitionBy',
        'recognition_on' => 'getRecognitionOn'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['sequence'] = isset($data['sequence']) ? $data['sequence'] : null;
        $this->container['record_type'] = isset($data['record_type']) ? $data['record_type'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['transaction_date'] = isset($data['transaction_date']) ? $data['transaction_date'] : null;
        $this->container['start_date'] = isset($data['start_date']) ? $data['start_date'] : null;
        $this->container['end_date'] = isset($data['end_date']) ? $data['end_date'] : null;
        $this->container['years'] = isset($data['years']) ? $data['years'] : null;
        $this->container['periods'] = isset($data['periods']) ? $data['periods'] : null;
        $this->container['local_amount'] = isset($data['local_amount']) ? $data['local_amount'] : null;
        $this->container['amount'] = isset($data['amount']) ? $data['amount'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['local_amount_recognized'] = isset($data['local_amount_recognized']) ? $data['local_amount_recognized'] : null;
        $this->container['amount_recognized'] = isset($data['amount_recognized']) ? $data['amount_recognized'] : null;
        $this->container['recognized_through'] = isset($data['recognized_through']) ? $data['recognized_through'] : null;
        $this->container['deferral_gl_account'] = isset($data['deferral_gl_account']) ? $data['deferral_gl_account'] : null;
        $this->container['deferral_gl_sub_account'] = isset($data['deferral_gl_sub_account']) ? $data['deferral_gl_sub_account'] : null;
        $this->container['recognition_gl_account'] = isset($data['recognition_gl_account']) ? $data['recognition_gl_account'] : null;
        $this->container['recognition_gl_sub_account'] = isset($data['recognition_gl_sub_account']) ? $data['recognition_gl_sub_account'] : null;
        $this->container['recognized_status'] = isset($data['recognized_status']) ? $data['recognized_status'] : null;
        $this->container['recognition_method'] = isset($data['recognition_method']) ? $data['recognition_method'] : null;
        $this->container['local_periodic_amount'] = isset($data['local_periodic_amount']) ? $data['local_periodic_amount'] : null;
        $this->container['periodic_amount'] = isset($data['periodic_amount']) ? $data['periodic_amount'] : null;
        $this->container['override'] = isset($data['override']) ? $data['override'] : null;
        $this->container['je_line'] = isset($data['je_line']) ? $data['je_line'] : null;
        $this->container['order'] = isset($data['order']) ? $data['order'] : null;
        $this->container['order_line'] = isset($data['order_line']) ? $data['order_line'] : null;
        $this->container['voucher'] = isset($data['voucher']) ? $data['voucher'] : null;
        $this->container['voucher_line'] = isset($data['voucher_line']) ? $data['voucher_line'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['recognition_by'] = isset($data['recognition_by']) ? $data['recognition_by'] : null;
        $this->container['recognition_on'] = isset($data['recognition_on']) ? $data['recognition_on'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['sequence'] === null) {
            $invalidProperties[] = "'sequence' can't be null";
        }
        if ($this->container['record_type'] === null) {
            $invalidProperties[] = "'record_type' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['transaction_date'] === null) {
            $invalidProperties[] = "'transaction_date' can't be null";
        }
        if ($this->container['start_date'] === null) {
            $invalidProperties[] = "'start_date' can't be null";
        }
        if ($this->container['end_date'] === null) {
            $invalidProperties[] = "'end_date' can't be null";
        }
        if ($this->container['years'] === null) {
            $invalidProperties[] = "'years' can't be null";
        }
        if ($this->container['periods'] === null) {
            $invalidProperties[] = "'periods' can't be null";
        }
        if ($this->container['local_amount'] === null) {
            $invalidProperties[] = "'local_amount' can't be null";
        }
        if ($this->container['amount'] === null) {
            $invalidProperties[] = "'amount' can't be null";
        }
        if ($this->container['currency'] === null) {
            $invalidProperties[] = "'currency' can't be null";
        }
        if ($this->container['local_amount_recognized'] === null) {
            $invalidProperties[] = "'local_amount_recognized' can't be null";
        }
        if ($this->container['amount_recognized'] === null) {
            $invalidProperties[] = "'amount_recognized' can't be null";
        }
        if ($this->container['recognized_through'] === null) {
            $invalidProperties[] = "'recognized_through' can't be null";
        }
        if ($this->container['deferral_gl_account'] === null) {
            $invalidProperties[] = "'deferral_gl_account' can't be null";
        }
        if ($this->container['deferral_gl_sub_account'] === null) {
            $invalidProperties[] = "'deferral_gl_sub_account' can't be null";
        }
        if ($this->container['recognition_gl_account'] === null) {
            $invalidProperties[] = "'recognition_gl_account' can't be null";
        }
        if ($this->container['recognition_gl_sub_account'] === null) {
            $invalidProperties[] = "'recognition_gl_sub_account' can't be null";
        }
        if ($this->container['recognized_status'] === null) {
            $invalidProperties[] = "'recognized_status' can't be null";
        }
        if ($this->container['recognition_method'] === null) {
            $invalidProperties[] = "'recognition_method' can't be null";
        }
        if ($this->container['local_periodic_amount'] === null) {
            $invalidProperties[] = "'local_periodic_amount' can't be null";
        }
        if ($this->container['periodic_amount'] === null) {
            $invalidProperties[] = "'periodic_amount' can't be null";
        }
        if ($this->container['override'] === null) {
            $invalidProperties[] = "'override' can't be null";
        }
        if ($this->container['je_line'] === null) {
            $invalidProperties[] = "'je_line' can't be null";
        }
        if ($this->container['order'] === null) {
            $invalidProperties[] = "'order' can't be null";
        }
        if ($this->container['order_line'] === null) {
            $invalidProperties[] = "'order_line' can't be null";
        }
        if ($this->container['voucher'] === null) {
            $invalidProperties[] = "'voucher' can't be null";
        }
        if ($this->container['voucher_line'] === null) {
            $invalidProperties[] = "'voucher_line' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['recognition_by'] === null) {
            $invalidProperties[] = "'recognition_by' can't be null";
        }
        if ($this->container['recognition_on'] === null) {
            $invalidProperties[] = "'recognition_on' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets sequence
     *
     * @return int
     */
    public function getSequence()
    {
        return $this->container['sequence'];
    }

    /**
     * Sets sequence
     *
     * @param int $sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSequence($sequence)
    {
        $this->container['sequence'] = $sequence;

        return $this;
    }

    /**
     * Gets record_type
     *
     * @return string
     */
    public function getRecordType()
    {
        return $this->container['record_type'];
    }

    /**
     * Sets record_type
     *
     * @param string $record_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_RCD_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecordType($record_type)
    {
        $this->container['record_type'] = $record_type;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets transaction_date
     *
     * @return \DateTime
     */
    public function getTransactionDate()
    {
        return $this->container['transaction_date'];
    }

    /**
     * Sets transaction_date
     *
     * @param \DateTime $transaction_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_TRANS_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTransactionDate($transaction_date)
    {
        $this->container['transaction_date'] = $transaction_date;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return \DateTime
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param \DateTime $start_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_START_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return \DateTime
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param \DateTime $end_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_END_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets years
     *
     * @return int
     */
    public function getYears()
    {
        return $this->container['years'];
    }

    /**
     * Sets years
     *
     * @param int $years <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_NBR_YEARS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setYears($years)
    {
        $this->container['years'] = $years;

        return $this;
    }

    /**
     * Gets periods
     *
     * @return double
     */
    public function getPeriods()
    {
        return $this->container['periods'];
    }

    /**
     * Sets periods
     *
     * @param double $periods <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_NBR_PERIODS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 96  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPeriods($periods)
    {
        $this->container['periods'] = $periods;

        return $this;
    }

    /**
     * Gets local_amount
     *
     * @return double
     */
    public function getLocalAmount()
    {
        return $this->container['local_amount'];
    }

    /**
     * Sets local_amount
     *
     * @param double $local_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalAmount($local_amount)
    {
        $this->container['local_amount'] = $local_amount;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return double
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param double $amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_FC_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_FC_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets local_amount_recognized
     *
     * @return double
     */
    public function getLocalAmountRecognized()
    {
        return $this->container['local_amount_recognized'];
    }

    /**
     * Sets local_amount_recognized
     *
     * @param double $local_amount_recognized <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_AMT_RECOGNIZED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalAmountRecognized($local_amount_recognized)
    {
        $this->container['local_amount_recognized'] = $local_amount_recognized;

        return $this;
    }

    /**
     * Gets amount_recognized
     *
     * @return double
     */
    public function getAmountRecognized()
    {
        return $this->container['amount_recognized'];
    }

    /**
     * Sets amount_recognized
     *
     * @param double $amount_recognized <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_FC_AMT_RECOGNIZED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAmountRecognized($amount_recognized)
    {
        $this->container['amount_recognized'] = $amount_recognized;

        return $this;
    }

    /**
     * Gets recognized_through
     *
     * @return \DateTime
     */
    public function getRecognizedThrough()
    {
        return $this->container['recognized_through'];
    }

    /**
     * Sets recognized_through
     *
     * @param \DateTime $recognized_through <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_RECOGNIZED_THRU  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecognizedThrough($recognized_through)
    {
        $this->container['recognized_through'] = $recognized_through;

        return $this;
    }

    /**
     * Gets deferral_gl_account
     *
     * @return string
     */
    public function getDeferralGlAccount()
    {
        return $this->container['deferral_gl_account'];
    }

    /**
     * Sets deferral_gl_account
     *
     * @param string $deferral_gl_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_DEF_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDeferralGlAccount($deferral_gl_account)
    {
        $this->container['deferral_gl_account'] = $deferral_gl_account;

        return $this;
    }

    /**
     * Gets deferral_gl_sub_account
     *
     * @return string
     */
    public function getDeferralGlSubAccount()
    {
        return $this->container['deferral_gl_sub_account'];
    }

    /**
     * Sets deferral_gl_sub_account
     *
     * @param string $deferral_gl_sub_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_DEF_SUB_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDeferralGlSubAccount($deferral_gl_sub_account)
    {
        $this->container['deferral_gl_sub_account'] = $deferral_gl_sub_account;

        return $this;
    }

    /**
     * Gets recognition_gl_account
     *
     * @return string
     */
    public function getRecognitionGlAccount()
    {
        return $this->container['recognition_gl_account'];
    }

    /**
     * Sets recognition_gl_account
     *
     * @param string $recognition_gl_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_RECOG_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecognitionGlAccount($recognition_gl_account)
    {
        $this->container['recognition_gl_account'] = $recognition_gl_account;

        return $this;
    }

    /**
     * Gets recognition_gl_sub_account
     *
     * @return string
     */
    public function getRecognitionGlSubAccount()
    {
        return $this->container['recognition_gl_sub_account'];
    }

    /**
     * Sets recognition_gl_sub_account
     *
     * @param string $recognition_gl_sub_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_RECOG_SUB_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecognitionGlSubAccount($recognition_gl_sub_account)
    {
        $this->container['recognition_gl_sub_account'] = $recognition_gl_sub_account;

        return $this;
    }

    /**
     * Gets recognized_status
     *
     * @return string
     */
    public function getRecognizedStatus()
    {
        return $this->container['recognized_status'];
    }

    /**
     * Sets recognized_status
     *
     * @param string $recognized_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_RECOG_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecognizedStatus($recognized_status)
    {
        $this->container['recognized_status'] = $recognized_status;

        return $this;
    }

    /**
     * Gets recognition_method
     *
     * @return string
     */
    public function getRecognitionMethod()
    {
        return $this->container['recognition_method'];
    }

    /**
     * Sets recognition_method
     *
     * @param string $recognition_method <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_RECOG_FORMULA  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecognitionMethod($recognition_method)
    {
        $this->container['recognition_method'] = $recognition_method;

        return $this;
    }

    /**
     * Gets local_periodic_amount
     *
     * @return double
     */
    public function getLocalPeriodicAmount()
    {
        return $this->container['local_periodic_amount'];
    }

    /**
     * Sets local_periodic_amount
     *
     * @param double $local_periodic_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_PERIODIC_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocalPeriodicAmount($local_periodic_amount)
    {
        $this->container['local_periodic_amount'] = $local_periodic_amount;

        return $this;
    }

    /**
     * Gets periodic_amount
     *
     * @return double
     */
    public function getPeriodicAmount()
    {
        return $this->container['periodic_amount'];
    }

    /**
     * Sets periodic_amount
     *
     * @param double $periodic_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_FC_PERIODIC_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPeriodicAmount($periodic_amount)
    {
        $this->container['periodic_amount'] = $periodic_amount;

        return $this;
    }

    /**
     * Gets override
     *
     * @return string
     */
    public function getOverride()
    {
        return $this->container['override'];
    }

    /**
     * Sets override
     *
     * @param string $override <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_OVERRIDE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOverride($override)
    {
        $this->container['override'] = $override;

        return $this;
    }

    /**
     * Gets je_line
     *
     * @return int
     */
    public function getJeLine()
    {
        return $this->container['je_line'];
    }

    /**
     * Sets je_line
     *
     * @param int $je_line <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_JE_LINE_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setJeLine($je_line)
    {
        $this->container['je_line'] = $je_line;

        return $this;
    }

    /**
     * Gets order
     *
     * @return int
     */
    public function getOrder()
    {
        return $this->container['order'];
    }

    /**
     * Sets order
     *
     * @param int $order <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_ORD_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrder($order)
    {
        $this->container['order'] = $order;

        return $this;
    }

    /**
     * Gets order_line
     *
     * @return int
     */
    public function getOrderLine()
    {
        return $this->container['order_line'];
    }

    /**
     * Sets order_line
     *
     * @param int $order_line <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_ORD_LINE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderLine($order_line)
    {
        $this->container['order_line'] = $order_line;

        return $this;
    }

    /**
     * Gets voucher
     *
     * @return int
     */
    public function getVoucher()
    {
        return $this->container['voucher'];
    }

    /**
     * Sets voucher
     *
     * @param int $voucher <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_VOUCHER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setVoucher($voucher)
    {
        $this->container['voucher'] = $voucher;

        return $this;
    }

    /**
     * Gets voucher_line
     *
     * @return int
     */
    public function getVoucherLine()
    {
        return $this->container['voucher_line'];
    }

    /**
     * Sets voucher_line
     *
     * @param int $voucher_line <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_VOUCHER_LINE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setVoucherLine($voucher_line)
    {
        $this->container['voucher_line'] = $voucher_line;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets recognition_by
     *
     * @return string
     */
    public function getRecognitionBy()
    {
        return $this->container['recognition_by'];
    }

    /**
     * Sets recognition_by
     *
     * @param string $recognition_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_RECOG_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecognitionBy($recognition_by)
    {
        $this->container['recognition_by'] = $recognition_by;

        return $this;
    }

    /**
     * Gets recognition_on
     *
     * @return \DateTime
     */
    public function getRecognitionOn()
    {
        return $this->container['recognition_on'];
    }

    /**
     * Sets recognition_on
     *
     * @param \DateTime $recognition_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> GL400_RECOG_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecognitionOn($recognition_on)
    {
        $this->container['recognition_on'] = $recognition_on;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


