<?php
/**
 * NotesModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * NotesModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class NotesModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'NotesModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization_code' => 'string',
        'type' => 'string',
        'code' => 'string',
        'sequence_number' => 'double',
        'title' => 'string',
        'legacy_note_print_code' => 'string',
        'plain_text' => 'string',
        'lock' => 'string',
        'lock_date_time' => '\DateTime',
        'lock_by_user_id' => 'string',
        'class' => 'string',
        'update_stamp' => '\DateTime',
        'changed_by' => 'string',
        'entered_on' => '\DateTime',
        'entered_by' => 'string',
        'event' => 'int',
        'function' => 'int',
        'account' => 'string',
        'legacy_contact_code' => 'string',
        'resource_master_sequence_number' => 'double',
        'setup_id' => 'string',
        'gl_account_code' => 'string',
        'department' => 'string',
        'price_list' => 'string',
        'product_service_code' => 'string',
        'issue_sequence_nbr' => 'double',
        'user_id' => 'string',
        'actual' => 'string',
        'invoice_number' => 'int',
        'order_number' => 'int',
        'ar_sequence_nbr' => 'int',
        'order_detail_nbr' => 'int',
        'affiliation_code' => 'string',
        'booking_header_sequence' => 'int',
        'contract' => 'int',
        'booth_sequence_nbr' => 'int',
        'booth_chart_id' => 'string',
        'booth_inventory_seq_nbr' => 'int',
        'inventory_item_code' => 'string',
        'registrant_sequence_nbr' => 'int',
        'price_list_item' => 'int',
        'setup_detail_seq_nbr' => 'int',
        'sensitivity' => 'string',
        'text' => 'string',
        'gl_sub_account_code' => 'string',
        'gl_source' => 'string',
        'fiscal_year_period' => 'string',
        'journal_entry_number' => 'string',
        'journal_entry_line_number' => 'int',
        'fiscal_year' => 'int',
        'fiscal_period' => 'int',
        'abstract' => 'int',
        'bank_reconciliation_seq_nbr' => 'int',
        'cash_book_transaction_seq_nbr' => 'int',
        'block_code' => 'string',
        'fixed_asset_code' => 'string',
        'sort_sequence' => 'int',
        'label' => 'string',
        'menu_code' => 'string',
        'important' => 'string',
        'language' => 'string',
        'travel_sequence' => 'int',
        'event_registrant_type' => 'string',
        'quote' => 'int',
        'quote_item' => 'int',
        'exhibitor_id' => 'int',
        'event_exhibitor_type_sequence' => 'int',
        'appointment_id' => 'int',
        'abstract_id' => 'int',
        'task_id' => 'int',
        'class_name' => 'string',
        'entered_by_name' => 'string',
        'space_code' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization_code' => null,
        'type' => null,
        'code' => null,
        'sequence_number' => 'double',
        'title' => null,
        'legacy_note_print_code' => null,
        'plain_text' => null,
        'lock' => null,
        'lock_date_time' => 'date-time',
        'lock_by_user_id' => null,
        'class' => null,
        'update_stamp' => 'date-time',
        'changed_by' => null,
        'entered_on' => 'date-time',
        'entered_by' => null,
        'event' => 'int32',
        'function' => 'int32',
        'account' => null,
        'legacy_contact_code' => null,
        'resource_master_sequence_number' => 'double',
        'setup_id' => null,
        'gl_account_code' => null,
        'department' => null,
        'price_list' => null,
        'product_service_code' => null,
        'issue_sequence_nbr' => 'double',
        'user_id' => null,
        'actual' => null,
        'invoice_number' => 'int32',
        'order_number' => 'int32',
        'ar_sequence_nbr' => 'int32',
        'order_detail_nbr' => 'int32',
        'affiliation_code' => null,
        'booking_header_sequence' => 'int32',
        'contract' => 'int32',
        'booth_sequence_nbr' => 'int32',
        'booth_chart_id' => null,
        'booth_inventory_seq_nbr' => 'int32',
        'inventory_item_code' => null,
        'registrant_sequence_nbr' => 'int32',
        'price_list_item' => 'int32',
        'setup_detail_seq_nbr' => 'int32',
        'sensitivity' => null,
        'text' => null,
        'gl_sub_account_code' => null,
        'gl_source' => null,
        'fiscal_year_period' => null,
        'journal_entry_number' => null,
        'journal_entry_line_number' => 'int32',
        'fiscal_year' => 'int32',
        'fiscal_period' => 'int32',
        'abstract' => 'int32',
        'bank_reconciliation_seq_nbr' => 'int32',
        'cash_book_transaction_seq_nbr' => 'int32',
        'block_code' => null,
        'fixed_asset_code' => null,
        'sort_sequence' => 'int32',
        'label' => null,
        'menu_code' => null,
        'important' => null,
        'language' => null,
        'travel_sequence' => 'int32',
        'event_registrant_type' => null,
        'quote' => 'int32',
        'quote_item' => 'int32',
        'exhibitor_id' => 'int32',
        'event_exhibitor_type_sequence' => 'int32',
        'appointment_id' => 'int32',
        'abstract_id' => 'int32',
        'task_id' => 'int32',
        'class_name' => null,
        'entered_by_name' => null,
        'space_code' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization_code' => 'OrganizationCode',
        'type' => 'Type',
        'code' => 'Code',
        'sequence_number' => 'SequenceNumber',
        'title' => 'Title',
        'legacy_note_print_code' => 'LegacyNotePrintCode',
        'plain_text' => 'PlainText',
        'lock' => 'Lock',
        'lock_date_time' => 'LockDateTime',
        'lock_by_user_id' => 'LockByUserID',
        'class' => 'Class',
        'update_stamp' => 'UpdateStamp',
        'changed_by' => 'ChangedBy',
        'entered_on' => 'EnteredOn',
        'entered_by' => 'EnteredBy',
        'event' => 'Event',
        'function' => 'Function',
        'account' => 'Account',
        'legacy_contact_code' => 'LegacyContactCode',
        'resource_master_sequence_number' => 'ResourceMasterSequenceNumber',
        'setup_id' => 'SetupID',
        'gl_account_code' => 'GLAccountCode',
        'department' => 'Department',
        'price_list' => 'PriceList',
        'product_service_code' => 'ProductServiceCode',
        'issue_sequence_nbr' => 'IssueSequenceNbr',
        'user_id' => 'UserID',
        'actual' => 'Actual',
        'invoice_number' => 'InvoiceNumber',
        'order_number' => 'OrderNumber',
        'ar_sequence_nbr' => 'ARSequenceNbr',
        'order_detail_nbr' => 'OrderDetailNbr',
        'affiliation_code' => 'AffiliationCode',
        'booking_header_sequence' => 'BookingHeaderSequence',
        'contract' => 'Contract',
        'booth_sequence_nbr' => 'BoothSequenceNbr',
        'booth_chart_id' => 'BoothChartID',
        'booth_inventory_seq_nbr' => 'BoothInventorySeqNbr',
        'inventory_item_code' => 'InventoryItemCode',
        'registrant_sequence_nbr' => 'RegistrantSequenceNbr',
        'price_list_item' => 'PriceListItem',
        'setup_detail_seq_nbr' => 'SetupDetailSeqNbr',
        'sensitivity' => 'Sensitivity',
        'text' => 'Text',
        'gl_sub_account_code' => 'GLSubAccountCode',
        'gl_source' => 'GLSource',
        'fiscal_year_period' => 'FiscalYearPeriod',
        'journal_entry_number' => 'JournalEntryNumber',
        'journal_entry_line_number' => 'JournalEntryLineNumber',
        'fiscal_year' => 'FiscalYear',
        'fiscal_period' => 'FiscalPeriod',
        'abstract' => 'Abstract',
        'bank_reconciliation_seq_nbr' => 'BankReconciliationSeqNbr',
        'cash_book_transaction_seq_nbr' => 'CashBookTransactionSeqNbr',
        'block_code' => 'BlockCode',
        'fixed_asset_code' => 'FixedAssetCode',
        'sort_sequence' => 'SortSequence',
        'label' => 'Label',
        'menu_code' => 'MenuCode',
        'important' => 'Important',
        'language' => 'Language',
        'travel_sequence' => 'TravelSequence',
        'event_registrant_type' => 'EventRegistrantType',
        'quote' => 'Quote',
        'quote_item' => 'QuoteItem',
        'exhibitor_id' => 'ExhibitorID',
        'event_exhibitor_type_sequence' => 'EventExhibitorTypeSequence',
        'appointment_id' => 'AppointmentID',
        'abstract_id' => 'AbstractID',
        'task_id' => 'TaskID',
        'class_name' => 'ClassName',
        'entered_by_name' => 'EnteredByName',
        'space_code' => 'SpaceCode'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization_code' => 'setOrganizationCode',
        'type' => 'setType',
        'code' => 'setCode',
        'sequence_number' => 'setSequenceNumber',
        'title' => 'setTitle',
        'legacy_note_print_code' => 'setLegacyNotePrintCode',
        'plain_text' => 'setPlainText',
        'lock' => 'setLock',
        'lock_date_time' => 'setLockDateTime',
        'lock_by_user_id' => 'setLockByUserId',
        'class' => 'setClass',
        'update_stamp' => 'setUpdateStamp',
        'changed_by' => 'setChangedBy',
        'entered_on' => 'setEnteredOn',
        'entered_by' => 'setEnteredBy',
        'event' => 'setEvent',
        'function' => 'setFunction',
        'account' => 'setAccount',
        'legacy_contact_code' => 'setLegacyContactCode',
        'resource_master_sequence_number' => 'setResourceMasterSequenceNumber',
        'setup_id' => 'setSetupId',
        'gl_account_code' => 'setGlAccountCode',
        'department' => 'setDepartment',
        'price_list' => 'setPriceList',
        'product_service_code' => 'setProductServiceCode',
        'issue_sequence_nbr' => 'setIssueSequenceNbr',
        'user_id' => 'setUserId',
        'actual' => 'setActual',
        'invoice_number' => 'setInvoiceNumber',
        'order_number' => 'setOrderNumber',
        'ar_sequence_nbr' => 'setArSequenceNbr',
        'order_detail_nbr' => 'setOrderDetailNbr',
        'affiliation_code' => 'setAffiliationCode',
        'booking_header_sequence' => 'setBookingHeaderSequence',
        'contract' => 'setContract',
        'booth_sequence_nbr' => 'setBoothSequenceNbr',
        'booth_chart_id' => 'setBoothChartId',
        'booth_inventory_seq_nbr' => 'setBoothInventorySeqNbr',
        'inventory_item_code' => 'setInventoryItemCode',
        'registrant_sequence_nbr' => 'setRegistrantSequenceNbr',
        'price_list_item' => 'setPriceListItem',
        'setup_detail_seq_nbr' => 'setSetupDetailSeqNbr',
        'sensitivity' => 'setSensitivity',
        'text' => 'setText',
        'gl_sub_account_code' => 'setGlSubAccountCode',
        'gl_source' => 'setGlSource',
        'fiscal_year_period' => 'setFiscalYearPeriod',
        'journal_entry_number' => 'setJournalEntryNumber',
        'journal_entry_line_number' => 'setJournalEntryLineNumber',
        'fiscal_year' => 'setFiscalYear',
        'fiscal_period' => 'setFiscalPeriod',
        'abstract' => 'setAbstract',
        'bank_reconciliation_seq_nbr' => 'setBankReconciliationSeqNbr',
        'cash_book_transaction_seq_nbr' => 'setCashBookTransactionSeqNbr',
        'block_code' => 'setBlockCode',
        'fixed_asset_code' => 'setFixedAssetCode',
        'sort_sequence' => 'setSortSequence',
        'label' => 'setLabel',
        'menu_code' => 'setMenuCode',
        'important' => 'setImportant',
        'language' => 'setLanguage',
        'travel_sequence' => 'setTravelSequence',
        'event_registrant_type' => 'setEventRegistrantType',
        'quote' => 'setQuote',
        'quote_item' => 'setQuoteItem',
        'exhibitor_id' => 'setExhibitorId',
        'event_exhibitor_type_sequence' => 'setEventExhibitorTypeSequence',
        'appointment_id' => 'setAppointmentId',
        'abstract_id' => 'setAbstractId',
        'task_id' => 'setTaskId',
        'class_name' => 'setClassName',
        'entered_by_name' => 'setEnteredByName',
        'space_code' => 'setSpaceCode'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization_code' => 'getOrganizationCode',
        'type' => 'getType',
        'code' => 'getCode',
        'sequence_number' => 'getSequenceNumber',
        'title' => 'getTitle',
        'legacy_note_print_code' => 'getLegacyNotePrintCode',
        'plain_text' => 'getPlainText',
        'lock' => 'getLock',
        'lock_date_time' => 'getLockDateTime',
        'lock_by_user_id' => 'getLockByUserId',
        'class' => 'getClass',
        'update_stamp' => 'getUpdateStamp',
        'changed_by' => 'getChangedBy',
        'entered_on' => 'getEnteredOn',
        'entered_by' => 'getEnteredBy',
        'event' => 'getEvent',
        'function' => 'getFunction',
        'account' => 'getAccount',
        'legacy_contact_code' => 'getLegacyContactCode',
        'resource_master_sequence_number' => 'getResourceMasterSequenceNumber',
        'setup_id' => 'getSetupId',
        'gl_account_code' => 'getGlAccountCode',
        'department' => 'getDepartment',
        'price_list' => 'getPriceList',
        'product_service_code' => 'getProductServiceCode',
        'issue_sequence_nbr' => 'getIssueSequenceNbr',
        'user_id' => 'getUserId',
        'actual' => 'getActual',
        'invoice_number' => 'getInvoiceNumber',
        'order_number' => 'getOrderNumber',
        'ar_sequence_nbr' => 'getArSequenceNbr',
        'order_detail_nbr' => 'getOrderDetailNbr',
        'affiliation_code' => 'getAffiliationCode',
        'booking_header_sequence' => 'getBookingHeaderSequence',
        'contract' => 'getContract',
        'booth_sequence_nbr' => 'getBoothSequenceNbr',
        'booth_chart_id' => 'getBoothChartId',
        'booth_inventory_seq_nbr' => 'getBoothInventorySeqNbr',
        'inventory_item_code' => 'getInventoryItemCode',
        'registrant_sequence_nbr' => 'getRegistrantSequenceNbr',
        'price_list_item' => 'getPriceListItem',
        'setup_detail_seq_nbr' => 'getSetupDetailSeqNbr',
        'sensitivity' => 'getSensitivity',
        'text' => 'getText',
        'gl_sub_account_code' => 'getGlSubAccountCode',
        'gl_source' => 'getGlSource',
        'fiscal_year_period' => 'getFiscalYearPeriod',
        'journal_entry_number' => 'getJournalEntryNumber',
        'journal_entry_line_number' => 'getJournalEntryLineNumber',
        'fiscal_year' => 'getFiscalYear',
        'fiscal_period' => 'getFiscalPeriod',
        'abstract' => 'getAbstract',
        'bank_reconciliation_seq_nbr' => 'getBankReconciliationSeqNbr',
        'cash_book_transaction_seq_nbr' => 'getCashBookTransactionSeqNbr',
        'block_code' => 'getBlockCode',
        'fixed_asset_code' => 'getFixedAssetCode',
        'sort_sequence' => 'getSortSequence',
        'label' => 'getLabel',
        'menu_code' => 'getMenuCode',
        'important' => 'getImportant',
        'language' => 'getLanguage',
        'travel_sequence' => 'getTravelSequence',
        'event_registrant_type' => 'getEventRegistrantType',
        'quote' => 'getQuote',
        'quote_item' => 'getQuoteItem',
        'exhibitor_id' => 'getExhibitorId',
        'event_exhibitor_type_sequence' => 'getEventExhibitorTypeSequence',
        'appointment_id' => 'getAppointmentId',
        'abstract_id' => 'getAbstractId',
        'task_id' => 'getTaskId',
        'class_name' => 'getClassName',
        'entered_by_name' => 'getEnteredByName',
        'space_code' => 'getSpaceCode'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['code'] = isset($data['code']) ? $data['code'] : null;
        $this->container['sequence_number'] = isset($data['sequence_number']) ? $data['sequence_number'] : null;
        $this->container['title'] = isset($data['title']) ? $data['title'] : null;
        $this->container['legacy_note_print_code'] = isset($data['legacy_note_print_code']) ? $data['legacy_note_print_code'] : null;
        $this->container['plain_text'] = isset($data['plain_text']) ? $data['plain_text'] : null;
        $this->container['lock'] = isset($data['lock']) ? $data['lock'] : null;
        $this->container['lock_date_time'] = isset($data['lock_date_time']) ? $data['lock_date_time'] : null;
        $this->container['lock_by_user_id'] = isset($data['lock_by_user_id']) ? $data['lock_by_user_id'] : null;
        $this->container['class'] = isset($data['class']) ? $data['class'] : null;
        $this->container['update_stamp'] = isset($data['update_stamp']) ? $data['update_stamp'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['event'] = isset($data['event']) ? $data['event'] : null;
        $this->container['function'] = isset($data['function']) ? $data['function'] : null;
        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
        $this->container['legacy_contact_code'] = isset($data['legacy_contact_code']) ? $data['legacy_contact_code'] : null;
        $this->container['resource_master_sequence_number'] = isset($data['resource_master_sequence_number']) ? $data['resource_master_sequence_number'] : null;
        $this->container['setup_id'] = isset($data['setup_id']) ? $data['setup_id'] : null;
        $this->container['gl_account_code'] = isset($data['gl_account_code']) ? $data['gl_account_code'] : null;
        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['price_list'] = isset($data['price_list']) ? $data['price_list'] : null;
        $this->container['product_service_code'] = isset($data['product_service_code']) ? $data['product_service_code'] : null;
        $this->container['issue_sequence_nbr'] = isset($data['issue_sequence_nbr']) ? $data['issue_sequence_nbr'] : null;
        $this->container['user_id'] = isset($data['user_id']) ? $data['user_id'] : null;
        $this->container['actual'] = isset($data['actual']) ? $data['actual'] : null;
        $this->container['invoice_number'] = isset($data['invoice_number']) ? $data['invoice_number'] : null;
        $this->container['order_number'] = isset($data['order_number']) ? $data['order_number'] : null;
        $this->container['ar_sequence_nbr'] = isset($data['ar_sequence_nbr']) ? $data['ar_sequence_nbr'] : null;
        $this->container['order_detail_nbr'] = isset($data['order_detail_nbr']) ? $data['order_detail_nbr'] : null;
        $this->container['affiliation_code'] = isset($data['affiliation_code']) ? $data['affiliation_code'] : null;
        $this->container['booking_header_sequence'] = isset($data['booking_header_sequence']) ? $data['booking_header_sequence'] : null;
        $this->container['contract'] = isset($data['contract']) ? $data['contract'] : null;
        $this->container['booth_sequence_nbr'] = isset($data['booth_sequence_nbr']) ? $data['booth_sequence_nbr'] : null;
        $this->container['booth_chart_id'] = isset($data['booth_chart_id']) ? $data['booth_chart_id'] : null;
        $this->container['booth_inventory_seq_nbr'] = isset($data['booth_inventory_seq_nbr']) ? $data['booth_inventory_seq_nbr'] : null;
        $this->container['inventory_item_code'] = isset($data['inventory_item_code']) ? $data['inventory_item_code'] : null;
        $this->container['registrant_sequence_nbr'] = isset($data['registrant_sequence_nbr']) ? $data['registrant_sequence_nbr'] : null;
        $this->container['price_list_item'] = isset($data['price_list_item']) ? $data['price_list_item'] : null;
        $this->container['setup_detail_seq_nbr'] = isset($data['setup_detail_seq_nbr']) ? $data['setup_detail_seq_nbr'] : null;
        $this->container['sensitivity'] = isset($data['sensitivity']) ? $data['sensitivity'] : null;
        $this->container['text'] = isset($data['text']) ? $data['text'] : null;
        $this->container['gl_sub_account_code'] = isset($data['gl_sub_account_code']) ? $data['gl_sub_account_code'] : null;
        $this->container['gl_source'] = isset($data['gl_source']) ? $data['gl_source'] : null;
        $this->container['fiscal_year_period'] = isset($data['fiscal_year_period']) ? $data['fiscal_year_period'] : null;
        $this->container['journal_entry_number'] = isset($data['journal_entry_number']) ? $data['journal_entry_number'] : null;
        $this->container['journal_entry_line_number'] = isset($data['journal_entry_line_number']) ? $data['journal_entry_line_number'] : null;
        $this->container['fiscal_year'] = isset($data['fiscal_year']) ? $data['fiscal_year'] : null;
        $this->container['fiscal_period'] = isset($data['fiscal_period']) ? $data['fiscal_period'] : null;
        $this->container['abstract'] = isset($data['abstract']) ? $data['abstract'] : null;
        $this->container['bank_reconciliation_seq_nbr'] = isset($data['bank_reconciliation_seq_nbr']) ? $data['bank_reconciliation_seq_nbr'] : null;
        $this->container['cash_book_transaction_seq_nbr'] = isset($data['cash_book_transaction_seq_nbr']) ? $data['cash_book_transaction_seq_nbr'] : null;
        $this->container['block_code'] = isset($data['block_code']) ? $data['block_code'] : null;
        $this->container['fixed_asset_code'] = isset($data['fixed_asset_code']) ? $data['fixed_asset_code'] : null;
        $this->container['sort_sequence'] = isset($data['sort_sequence']) ? $data['sort_sequence'] : null;
        $this->container['label'] = isset($data['label']) ? $data['label'] : null;
        $this->container['menu_code'] = isset($data['menu_code']) ? $data['menu_code'] : null;
        $this->container['important'] = isset($data['important']) ? $data['important'] : null;
        $this->container['language'] = isset($data['language']) ? $data['language'] : null;
        $this->container['travel_sequence'] = isset($data['travel_sequence']) ? $data['travel_sequence'] : null;
        $this->container['event_registrant_type'] = isset($data['event_registrant_type']) ? $data['event_registrant_type'] : null;
        $this->container['quote'] = isset($data['quote']) ? $data['quote'] : null;
        $this->container['quote_item'] = isset($data['quote_item']) ? $data['quote_item'] : null;
        $this->container['exhibitor_id'] = isset($data['exhibitor_id']) ? $data['exhibitor_id'] : null;
        $this->container['event_exhibitor_type_sequence'] = isset($data['event_exhibitor_type_sequence']) ? $data['event_exhibitor_type_sequence'] : null;
        $this->container['appointment_id'] = isset($data['appointment_id']) ? $data['appointment_id'] : null;
        $this->container['abstract_id'] = isset($data['abstract_id']) ? $data['abstract_id'] : null;
        $this->container['task_id'] = isset($data['task_id']) ? $data['task_id'] : null;
        $this->container['class_name'] = isset($data['class_name']) ? $data['class_name'] : null;
        $this->container['entered_by_name'] = isset($data['entered_by_name']) ? $data['entered_by_name'] : null;
        $this->container['space_code'] = isset($data['space_code']) ? $data['space_code'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['code'] === null) {
            $invalidProperties[] = "'code' can't be null";
        }
        if ($this->container['sequence_number'] === null) {
            $invalidProperties[] = "'sequence_number' can't be null";
        }
        if ($this->container['title'] === null) {
            $invalidProperties[] = "'title' can't be null";
        }
        if ($this->container['legacy_note_print_code'] === null) {
            $invalidProperties[] = "'legacy_note_print_code' can't be null";
        }
        if ($this->container['plain_text'] === null) {
            $invalidProperties[] = "'plain_text' can't be null";
        }
        if ($this->container['lock'] === null) {
            $invalidProperties[] = "'lock' can't be null";
        }
        if ($this->container['lock_date_time'] === null) {
            $invalidProperties[] = "'lock_date_time' can't be null";
        }
        if ($this->container['lock_by_user_id'] === null) {
            $invalidProperties[] = "'lock_by_user_id' can't be null";
        }
        if ($this->container['class'] === null) {
            $invalidProperties[] = "'class' can't be null";
        }
        if ($this->container['update_stamp'] === null) {
            $invalidProperties[] = "'update_stamp' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['event'] === null) {
            $invalidProperties[] = "'event' can't be null";
        }
        if ($this->container['function'] === null) {
            $invalidProperties[] = "'function' can't be null";
        }
        if ($this->container['account'] === null) {
            $invalidProperties[] = "'account' can't be null";
        }
        if ($this->container['legacy_contact_code'] === null) {
            $invalidProperties[] = "'legacy_contact_code' can't be null";
        }
        if ($this->container['resource_master_sequence_number'] === null) {
            $invalidProperties[] = "'resource_master_sequence_number' can't be null";
        }
        if ($this->container['setup_id'] === null) {
            $invalidProperties[] = "'setup_id' can't be null";
        }
        if ($this->container['gl_account_code'] === null) {
            $invalidProperties[] = "'gl_account_code' can't be null";
        }
        if ($this->container['department'] === null) {
            $invalidProperties[] = "'department' can't be null";
        }
        if ($this->container['price_list'] === null) {
            $invalidProperties[] = "'price_list' can't be null";
        }
        if ($this->container['product_service_code'] === null) {
            $invalidProperties[] = "'product_service_code' can't be null";
        }
        if ($this->container['issue_sequence_nbr'] === null) {
            $invalidProperties[] = "'issue_sequence_nbr' can't be null";
        }
        if ($this->container['user_id'] === null) {
            $invalidProperties[] = "'user_id' can't be null";
        }
        if ($this->container['actual'] === null) {
            $invalidProperties[] = "'actual' can't be null";
        }
        if ($this->container['invoice_number'] === null) {
            $invalidProperties[] = "'invoice_number' can't be null";
        }
        if ($this->container['order_number'] === null) {
            $invalidProperties[] = "'order_number' can't be null";
        }
        if ($this->container['ar_sequence_nbr'] === null) {
            $invalidProperties[] = "'ar_sequence_nbr' can't be null";
        }
        if ($this->container['order_detail_nbr'] === null) {
            $invalidProperties[] = "'order_detail_nbr' can't be null";
        }
        if ($this->container['affiliation_code'] === null) {
            $invalidProperties[] = "'affiliation_code' can't be null";
        }
        if ($this->container['booking_header_sequence'] === null) {
            $invalidProperties[] = "'booking_header_sequence' can't be null";
        }
        if ($this->container['contract'] === null) {
            $invalidProperties[] = "'contract' can't be null";
        }
        if ($this->container['booth_sequence_nbr'] === null) {
            $invalidProperties[] = "'booth_sequence_nbr' can't be null";
        }
        if ($this->container['booth_chart_id'] === null) {
            $invalidProperties[] = "'booth_chart_id' can't be null";
        }
        if ($this->container['booth_inventory_seq_nbr'] === null) {
            $invalidProperties[] = "'booth_inventory_seq_nbr' can't be null";
        }
        if ($this->container['inventory_item_code'] === null) {
            $invalidProperties[] = "'inventory_item_code' can't be null";
        }
        if ($this->container['registrant_sequence_nbr'] === null) {
            $invalidProperties[] = "'registrant_sequence_nbr' can't be null";
        }
        if ($this->container['price_list_item'] === null) {
            $invalidProperties[] = "'price_list_item' can't be null";
        }
        if ($this->container['setup_detail_seq_nbr'] === null) {
            $invalidProperties[] = "'setup_detail_seq_nbr' can't be null";
        }
        if ($this->container['sensitivity'] === null) {
            $invalidProperties[] = "'sensitivity' can't be null";
        }
        if ($this->container['text'] === null) {
            $invalidProperties[] = "'text' can't be null";
        }
        if ($this->container['gl_sub_account_code'] === null) {
            $invalidProperties[] = "'gl_sub_account_code' can't be null";
        }
        if ($this->container['gl_source'] === null) {
            $invalidProperties[] = "'gl_source' can't be null";
        }
        if ($this->container['fiscal_year_period'] === null) {
            $invalidProperties[] = "'fiscal_year_period' can't be null";
        }
        if ($this->container['journal_entry_number'] === null) {
            $invalidProperties[] = "'journal_entry_number' can't be null";
        }
        if ($this->container['journal_entry_line_number'] === null) {
            $invalidProperties[] = "'journal_entry_line_number' can't be null";
        }
        if ($this->container['fiscal_year'] === null) {
            $invalidProperties[] = "'fiscal_year' can't be null";
        }
        if ($this->container['fiscal_period'] === null) {
            $invalidProperties[] = "'fiscal_period' can't be null";
        }
        if ($this->container['abstract'] === null) {
            $invalidProperties[] = "'abstract' can't be null";
        }
        if ($this->container['bank_reconciliation_seq_nbr'] === null) {
            $invalidProperties[] = "'bank_reconciliation_seq_nbr' can't be null";
        }
        if ($this->container['cash_book_transaction_seq_nbr'] === null) {
            $invalidProperties[] = "'cash_book_transaction_seq_nbr' can't be null";
        }
        if ($this->container['block_code'] === null) {
            $invalidProperties[] = "'block_code' can't be null";
        }
        if ($this->container['fixed_asset_code'] === null) {
            $invalidProperties[] = "'fixed_asset_code' can't be null";
        }
        if ($this->container['sort_sequence'] === null) {
            $invalidProperties[] = "'sort_sequence' can't be null";
        }
        if ($this->container['label'] === null) {
            $invalidProperties[] = "'label' can't be null";
        }
        if ($this->container['menu_code'] === null) {
            $invalidProperties[] = "'menu_code' can't be null";
        }
        if ($this->container['important'] === null) {
            $invalidProperties[] = "'important' can't be null";
        }
        if ($this->container['language'] === null) {
            $invalidProperties[] = "'language' can't be null";
        }
        if ($this->container['travel_sequence'] === null) {
            $invalidProperties[] = "'travel_sequence' can't be null";
        }
        if ($this->container['event_registrant_type'] === null) {
            $invalidProperties[] = "'event_registrant_type' can't be null";
        }
        if ($this->container['quote'] === null) {
            $invalidProperties[] = "'quote' can't be null";
        }
        if ($this->container['quote_item'] === null) {
            $invalidProperties[] = "'quote_item' can't be null";
        }
        if ($this->container['exhibitor_id'] === null) {
            $invalidProperties[] = "'exhibitor_id' can't be null";
        }
        if ($this->container['event_exhibitor_type_sequence'] === null) {
            $invalidProperties[] = "'event_exhibitor_type_sequence' can't be null";
        }
        if ($this->container['appointment_id'] === null) {
            $invalidProperties[] = "'appointment_id' can't be null";
        }
        if ($this->container['abstract_id'] === null) {
            $invalidProperties[] = "'abstract_id' can't be null";
        }
        if ($this->container['task_id'] === null) {
            $invalidProperties[] = "'task_id' can't be null";
        }
        if ($this->container['class_name'] === null) {
            $invalidProperties[] = "'class_name' can't be null";
        }
        if ($this->container['entered_by_name'] === null) {
            $invalidProperties[] = "'entered_by_name' can't be null";
        }
        if ($this->container['space_code'] === null) {
            $invalidProperties[] = "'space_code' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_NOTE_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets code
     *
     * @return string
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string $code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_NOTE_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 60  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets sequence_number
     *
     * @return double
     */
    public function getSequenceNumber()
    {
        return $this->container['sequence_number'];
    }

    /**
     * Sets sequence_number
     *
     * @param double $sequence_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_NOTE_HDR_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSequenceNumber($sequence_number)
    {
        $this->container['sequence_number'] = $sequence_number;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string $title <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_NOTE_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets legacy_note_print_code
     *
     * @return string
     */
    public function getLegacyNotePrintCode()
    {
        return $this->container['legacy_note_print_code'];
    }

    /**
     * Sets legacy_note_print_code
     *
     * @param string $legacy_note_print_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_NOTE_PRT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLegacyNotePrintCode($legacy_note_print_code)
    {
        $this->container['legacy_note_print_code'] = $legacy_note_print_code;

        return $this;
    }

    /**
     * Gets plain_text
     *
     * @return string
     */
    public function getPlainText()
    {
        return $this->container['plain_text'];
    }

    /**
     * Sets plain_text
     *
     * @param string $plain_text <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This represents the text with the HTML tags stripped out.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_NOTE_TEXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPlainText($plain_text)
    {
        $this->container['plain_text'] = $plain_text;

        return $this;
    }

    /**
     * Gets lock
     *
     * @return string
     */
    public function getLock()
    {
        return $this->container['lock'];
    }

    /**
     * Sets lock
     *
     * @param string $lock <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_LOCK_FLAG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLock($lock)
    {
        $this->container['lock'] = $lock;

        return $this;
    }

    /**
     * Gets lock_date_time
     *
     * @return \DateTime
     */
    public function getLockDateTime()
    {
        return $this->container['lock_date_time'];
    }

    /**
     * Sets lock_date_time
     *
     * @param \DateTime $lock_date_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_LOCK_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLockDateTime($lock_date_time)
    {
        $this->container['lock_date_time'] = $lock_date_time;

        return $this;
    }

    /**
     * Gets lock_by_user_id
     *
     * @return string
     */
    public function getLockByUserId()
    {
        return $this->container['lock_by_user_id'];
    }

    /**
     * Sets lock_by_user_id
     *
     * @param string $lock_by_user_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_LOCK_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLockByUserId($lock_by_user_id)
    {
        $this->container['lock_by_user_id'] = $lock_by_user_id;

        return $this;
    }

    /**
     * Gets class
     *
     * @return string
     */
    public function getClass()
    {
        return $this->container['class'];
    }

    /**
     * Sets class
     *
     * @param string $class <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_NOTE_CLASS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setClass($class)
    {
        $this->container['class'] = $class;

        return $this;
    }

    /**
     * Gets update_stamp
     *
     * @return \DateTime
     */
    public function getUpdateStamp()
    {
        return $this->container['update_stamp'];
    }

    /**
     * Sets update_stamp
     *
     * @param \DateTime $update_stamp <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_UPD_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUpdateStamp($update_stamp)
    {
        $this->container['update_stamp'] = $update_stamp;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_ENT_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets event
     *
     * @return int
     */
    public function getEvent()
    {
        return $this->container['event'];
    }

    /**
     * Sets event
     *
     * @param int $event <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property to attach the note to an event.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_EVT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEvent($event)
    {
        $this->container['event'] = $event;

        return $this;
    }

    /**
     * Gets function
     *
     * @return int
     */
    public function getFunction()
    {
        return $this->container['function'];
    }

    /**
     * Sets function
     *
     * @param int $function <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property to attach the note to a function.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_FUNC_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFunction($function)
    {
        $this->container['function'] = $function;

        return $this;
    }

    /**
     * Gets account
     *
     * @return string
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param string $account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property to attach the note to an account.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_EXT_ACCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets legacy_contact_code
     *
     * @return string
     */
    public function getLegacyContactCode()
    {
        return $this->container['legacy_contact_code'];
    }

    /**
     * Sets legacy_contact_code
     *
     * @param string $legacy_contact_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_EXT_CNTCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLegacyContactCode($legacy_contact_code)
    {
        $this->container['legacy_contact_code'] = $legacy_contact_code;

        return $this;
    }

    /**
     * Gets resource_master_sequence_number
     *
     * @return double
     */
    public function getResourceMasterSequenceNumber()
    {
        return $this->container['resource_master_sequence_number'];
    }

    /**
     * Sets resource_master_sequence_number
     *
     * @param double $resource_master_sequence_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_RES_MSTR_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 60  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setResourceMasterSequenceNumber($resource_master_sequence_number)
    {
        $this->container['resource_master_sequence_number'] = $resource_master_sequence_number;

        return $this;
    }

    /**
     * Gets setup_id
     *
     * @return string
     */
    public function getSetupId()
    {
        return $this->container['setup_id'];
    }

    /**
     * Sets setup_id
     *
     * @param string $setup_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_SETUP_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSetupId($setup_id)
    {
        $this->container['setup_id'] = $setup_id;

        return $this;
    }

    /**
     * Gets gl_account_code
     *
     * @return string
     */
    public function getGlAccountCode()
    {
        return $this->container['gl_account_code'];
    }

    /**
     * Sets gl_account_code
     *
     * @param string $gl_account_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_GL_ACCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlAccountCode($gl_account_code)
    {
        $this->container['gl_account_code'] = $gl_account_code;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string $department <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_DEPT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets price_list
     *
     * @return string
     */
    public function getPriceList()
    {
        return $this->container['price_list'];
    }

    /**
     * Sets price_list
     *
     * @param string $price_list <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property to attach the note to a Price List or Price List Item.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_PRICE_LIST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPriceList($price_list)
    {
        $this->container['price_list'] = $price_list;

        return $this;
    }

    /**
     * Gets product_service_code
     *
     * @return string
     */
    public function getProductServiceCode()
    {
        return $this->container['product_service_code'];
    }

    /**
     * Sets product_service_code
     *
     * @param string $product_service_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_PROD_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 24  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setProductServiceCode($product_service_code)
    {
        $this->container['product_service_code'] = $product_service_code;

        return $this;
    }

    /**
     * Gets issue_sequence_nbr
     *
     * @return double
     */
    public function getIssueSequenceNbr()
    {
        return $this->container['issue_sequence_nbr'];
    }

    /**
     * Sets issue_sequence_nbr
     *
     * @param double $issue_sequence_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_OCCURENCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 110  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIssueSequenceNbr($issue_sequence_nbr)
    {
        $this->container['issue_sequence_nbr'] = $issue_sequence_nbr;

        return $this;
    }

    /**
     * Gets user_id
     *
     * @return string
     */
    public function getUserId()
    {
        return $this->container['user_id'];
    }

    /**
     * Sets user_id
     *
     * @param string $user_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserId($user_id)
    {
        $this->container['user_id'] = $user_id;

        return $this;
    }

    /**
     * Gets actual
     *
     * @return string
     */
    public function getActual()
    {
        return $this->container['actual'];
    }

    /**
     * Sets actual
     *
     * @param string $actual <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_ACTUAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActual($actual)
    {
        $this->container['actual'] = $actual;

        return $this;
    }

    /**
     * Gets invoice_number
     *
     * @return int
     */
    public function getInvoiceNumber()
    {
        return $this->container['invoice_number'];
    }

    /**
     * Sets invoice_number
     *
     * @param int $invoice_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property to attach the note to an invoice.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_INVOICE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoiceNumber($invoice_number)
    {
        $this->container['invoice_number'] = $invoice_number;

        return $this;
    }

    /**
     * Gets order_number
     *
     * @return int
     */
    public function getOrderNumber()
    {
        return $this->container['order_number'];
    }

    /**
     * Sets order_number
     *
     * @param int $order_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property to attach the note to an order or order item.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_ORDER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderNumber($order_number)
    {
        $this->container['order_number'] = $order_number;

        return $this;
    }

    /**
     * Gets ar_sequence_nbr
     *
     * @return int
     */
    public function getArSequenceNbr()
    {
        return $this->container['ar_sequence_nbr'];
    }

    /**
     * Sets ar_sequence_nbr
     *
     * @param int $ar_sequence_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_AR_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setArSequenceNbr($ar_sequence_nbr)
    {
        $this->container['ar_sequence_nbr'] = $ar_sequence_nbr;

        return $this;
    }

    /**
     * Gets order_detail_nbr
     *
     * @return int
     */
    public function getOrderDetailNbr()
    {
        return $this->container['order_detail_nbr'];
    }

    /**
     * Sets order_detail_nbr
     *
     * @param int $order_detail_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property to attach the note to an order.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_ORD_LINE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderDetailNbr($order_detail_nbr)
    {
        $this->container['order_detail_nbr'] = $order_detail_nbr;

        return $this;
    }

    /**
     * Gets affiliation_code
     *
     * @return string
     */
    public function getAffiliationCode()
    {
        return $this->container['affiliation_code'];
    }

    /**
     * Sets affiliation_code
     *
     * @param string $affiliation_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_AFFIL_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAffiliationCode($affiliation_code)
    {
        $this->container['affiliation_code'] = $affiliation_code;

        return $this;
    }

    /**
     * Gets booking_header_sequence
     *
     * @return int
     */
    public function getBookingHeaderSequence()
    {
        return $this->container['booking_header_sequence'];
    }

    /**
     * Sets booking_header_sequence
     *
     * @param int $booking_header_sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property to attach the note to a booking.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_SSB_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBookingHeaderSequence($booking_header_sequence)
    {
        $this->container['booking_header_sequence'] = $booking_header_sequence;

        return $this;
    }

    /**
     * Gets contract
     *
     * @return int
     */
    public function getContract()
    {
        return $this->container['contract'];
    }

    /**
     * Sets contract
     *
     * @param int $contract <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property to attach the note to a contract  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_CONTRACT_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContract($contract)
    {
        $this->container['contract'] = $contract;

        return $this;
    }

    /**
     * Gets booth_sequence_nbr
     *
     * @return int
     */
    public function getBoothSequenceNbr()
    {
        return $this->container['booth_sequence_nbr'];
    }

    /**
     * Sets booth_sequence_nbr
     *
     * @param int $booth_sequence_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_ASSIGN_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBoothSequenceNbr($booth_sequence_nbr)
    {
        $this->container['booth_sequence_nbr'] = $booth_sequence_nbr;

        return $this;
    }

    /**
     * Gets booth_chart_id
     *
     * @return string
     */
    public function getBoothChartId()
    {
        return $this->container['booth_chart_id'];
    }

    /**
     * Sets booth_chart_id
     *
     * @param string $booth_chart_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_ASSIGN_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBoothChartId($booth_chart_id)
    {
        $this->container['booth_chart_id'] = $booth_chart_id;

        return $this;
    }

    /**
     * Gets booth_inventory_seq_nbr
     *
     * @return int
     */
    public function getBoothInventorySeqNbr()
    {
        return $this->container['booth_inventory_seq_nbr'];
    }

    /**
     * Sets booth_inventory_seq_nbr
     *
     * @param int $booth_inventory_seq_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_ASSIGN_INVEN  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBoothInventorySeqNbr($booth_inventory_seq_nbr)
    {
        $this->container['booth_inventory_seq_nbr'] = $booth_inventory_seq_nbr;

        return $this;
    }

    /**
     * Gets inventory_item_code
     *
     * @return string
     */
    public function getInventoryItemCode()
    {
        return $this->container['inventory_item_code'];
    }

    /**
     * Sets inventory_item_code
     *
     * @param string $inventory_item_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_ITEM_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInventoryItemCode($inventory_item_code)
    {
        $this->container['inventory_item_code'] = $inventory_item_code;

        return $this;
    }

    /**
     * Gets registrant_sequence_nbr
     *
     * @return int
     */
    public function getRegistrantSequenceNbr()
    {
        return $this->container['registrant_sequence_nbr'];
    }

    /**
     * Sets registrant_sequence_nbr
     *
     * @param int $registrant_sequence_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_REGIS_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRegistrantSequenceNbr($registrant_sequence_nbr)
    {
        $this->container['registrant_sequence_nbr'] = $registrant_sequence_nbr;

        return $this;
    }

    /**
     * Gets price_list_item
     *
     * @return int
     */
    public function getPriceListItem()
    {
        return $this->container['price_list_item'];
    }

    /**
     * Sets price_list_item
     *
     * @param int $price_list_item <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property to attach the note to a Price List Item.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_PRLIST_DTL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPriceListItem($price_list_item)
    {
        $this->container['price_list_item'] = $price_list_item;

        return $this;
    }

    /**
     * Gets setup_detail_seq_nbr
     *
     * @return int
     */
    public function getSetupDetailSeqNbr()
    {
        return $this->container['setup_detail_seq_nbr'];
    }

    /**
     * Sets setup_detail_seq_nbr
     *
     * @param int $setup_detail_seq_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_SETUP_DTL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSetupDetailSeqNbr($setup_detail_seq_nbr)
    {
        $this->container['setup_detail_seq_nbr'] = $setup_detail_seq_nbr;

        return $this;
    }

    /**
     * Gets sensitivity
     *
     * @return string
     */
    public function getSensitivity()
    {
        return $this->container['sensitivity'];
    }

    /**
     * Sets sensitivity
     *
     * @param string $sensitivity <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_SENSITIVITY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSensitivity($sensitivity)
    {
        $this->container['sensitivity'] = $sensitivity;

        return $this;
    }

    /**
     * Gets text
     *
     * @return string
     */
    public function getText()
    {
        return $this->container['text'];
    }

    /**
     * Sets text
     *
     * @param string $text <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is the field you use to enter text into the body of the note.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_HTML_TEXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setText($text)
    {
        $this->container['text'] = $text;

        return $this;
    }

    /**
     * Gets gl_sub_account_code
     *
     * @return string
     */
    public function getGlSubAccountCode()
    {
        return $this->container['gl_sub_account_code'];
    }

    /**
     * Sets gl_sub_account_code
     *
     * @param string $gl_sub_account_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_GL_SUB_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlSubAccountCode($gl_sub_account_code)
    {
        $this->container['gl_sub_account_code'] = $gl_sub_account_code;

        return $this;
    }

    /**
     * Gets gl_source
     *
     * @return string
     */
    public function getGlSource()
    {
        return $this->container['gl_source'];
    }

    /**
     * Sets gl_source
     *
     * @param string $gl_source <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_GL_SOURCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlSource($gl_source)
    {
        $this->container['gl_source'] = $gl_source;

        return $this;
    }

    /**
     * Gets fiscal_year_period
     *
     * @return string
     */
    public function getFiscalYearPeriod()
    {
        return $this->container['fiscal_year_period'];
    }

    /**
     * Sets fiscal_year_period
     *
     * @param string $fiscal_year_period <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_FYP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFiscalYearPeriod($fiscal_year_period)
    {
        $this->container['fiscal_year_period'] = $fiscal_year_period;

        return $this;
    }

    /**
     * Gets journal_entry_number
     *
     * @return string
     */
    public function getJournalEntryNumber()
    {
        return $this->container['journal_entry_number'];
    }

    /**
     * Sets journal_entry_number
     *
     * @param string $journal_entry_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_GL_ENTRY_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 7  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setJournalEntryNumber($journal_entry_number)
    {
        $this->container['journal_entry_number'] = $journal_entry_number;

        return $this;
    }

    /**
     * Gets journal_entry_line_number
     *
     * @return int
     */
    public function getJournalEntryLineNumber()
    {
        return $this->container['journal_entry_line_number'];
    }

    /**
     * Sets journal_entry_line_number
     *
     * @param int $journal_entry_line_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_GL_ENTRY_LINE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setJournalEntryLineNumber($journal_entry_line_number)
    {
        $this->container['journal_entry_line_number'] = $journal_entry_line_number;

        return $this;
    }

    /**
     * Gets fiscal_year
     *
     * @return int
     */
    public function getFiscalYear()
    {
        return $this->container['fiscal_year'];
    }

    /**
     * Sets fiscal_year
     *
     * @param int $fiscal_year <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_FISCAL_YEAR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFiscalYear($fiscal_year)
    {
        $this->container['fiscal_year'] = $fiscal_year;

        return $this;
    }

    /**
     * Gets fiscal_period
     *
     * @return int
     */
    public function getFiscalPeriod()
    {
        return $this->container['fiscal_period'];
    }

    /**
     * Sets fiscal_period
     *
     * @param int $fiscal_period <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_FISCAL_PERIOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFiscalPeriod($fiscal_period)
    {
        $this->container['fiscal_period'] = $fiscal_period;

        return $this;
    }

    /**
     * Gets abstract
     *
     * @return int
     */
    public function getAbstract()
    {
        return $this->container['abstract'];
    }

    /**
     * Sets abstract
     *
     * @param int $abstract <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_ABSTRACT_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAbstract($abstract)
    {
        $this->container['abstract'] = $abstract;

        return $this;
    }

    /**
     * Gets bank_reconciliation_seq_nbr
     *
     * @return int
     */
    public function getBankReconciliationSeqNbr()
    {
        return $this->container['bank_reconciliation_seq_nbr'];
    }

    /**
     * Sets bank_reconciliation_seq_nbr
     *
     * @param int $bank_reconciliation_seq_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_RECON_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBankReconciliationSeqNbr($bank_reconciliation_seq_nbr)
    {
        $this->container['bank_reconciliation_seq_nbr'] = $bank_reconciliation_seq_nbr;

        return $this;
    }

    /**
     * Gets cash_book_transaction_seq_nbr
     *
     * @return int
     */
    public function getCashBookTransactionSeqNbr()
    {
        return $this->container['cash_book_transaction_seq_nbr'];
    }

    /**
     * Sets cash_book_transaction_seq_nbr
     *
     * @param int $cash_book_transaction_seq_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_CB_TRANS_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCashBookTransactionSeqNbr($cash_book_transaction_seq_nbr)
    {
        $this->container['cash_book_transaction_seq_nbr'] = $cash_book_transaction_seq_nbr;

        return $this;
    }

    /**
     * Gets block_code
     *
     * @return string
     */
    public function getBlockCode()
    {
        return $this->container['block_code'];
    }

    /**
     * Sets block_code
     *
     * @param string $block_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property to attach the note to a block.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_BLOCK_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBlockCode($block_code)
    {
        $this->container['block_code'] = $block_code;

        return $this;
    }

    /**
     * Gets fixed_asset_code
     *
     * @return string
     */
    public function getFixedAssetCode()
    {
        return $this->container['fixed_asset_code'];
    }

    /**
     * Sets fixed_asset_code
     *
     * @param string $fixed_asset_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_ASSET_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFixedAssetCode($fixed_asset_code)
    {
        $this->container['fixed_asset_code'] = $fixed_asset_code;

        return $this;
    }

    /**
     * Gets sort_sequence
     *
     * @return int
     */
    public function getSortSequence()
    {
        return $this->container['sort_sequence'];
    }

    /**
     * Sets sort_sequence
     *
     * @param int $sort_sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_USER_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSortSequence($sort_sequence)
    {
        $this->container['sort_sequence'] = $sort_sequence;

        return $this;
    }

    /**
     * Gets label
     *
     * @return string
     */
    public function getLabel()
    {
        return $this->container['label'];
    }

    /**
     * Sets label
     *
     * @param string $label <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_NOTE_LABEL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLabel($label)
    {
        $this->container['label'] = $label;

        return $this;
    }

    /**
     * Gets menu_code
     *
     * @return string
     */
    public function getMenuCode()
    {
        return $this->container['menu_code'];
    }

    /**
     * Sets menu_code
     *
     * @param string $menu_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_MENU_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMenuCode($menu_code)
    {
        $this->container['menu_code'] = $menu_code;

        return $this;
    }

    /**
     * Gets important
     *
     * @return string
     */
    public function getImportant()
    {
        return $this->container['important'];
    }

    /**
     * Sets important
     *
     * @param string $important <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_IMPORTANT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setImportant($important)
    {
        $this->container['important'] = $important;

        return $this;
    }

    /**
     * Gets language
     *
     * @return string
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param string $language <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_LANG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLanguage($language)
    {
        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets travel_sequence
     *
     * @return int
     */
    public function getTravelSequence()
    {
        return $this->container['travel_sequence'];
    }

    /**
     * Sets travel_sequence
     *
     * @param int $travel_sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_TRAVEL_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTravelSequence($travel_sequence)
    {
        $this->container['travel_sequence'] = $travel_sequence;

        return $this;
    }

    /**
     * Gets event_registrant_type
     *
     * @return string
     */
    public function getEventRegistrantType()
    {
        return $this->container['event_registrant_type'];
    }

    /**
     * Sets event_registrant_type
     *
     * @param string $event_registrant_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_REG_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEventRegistrantType($event_registrant_type)
    {
        $this->container['event_registrant_type'] = $event_registrant_type;

        return $this;
    }

    /**
     * Gets quote
     *
     * @return int
     */
    public function getQuote()
    {
        return $this->container['quote'];
    }

    /**
     * Sets quote
     *
     * @param int $quote <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property to attach the note to a quote or a quote item.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_QUOTE_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setQuote($quote)
    {
        $this->container['quote'] = $quote;

        return $this;
    }

    /**
     * Gets quote_item
     *
     * @return int
     */
    public function getQuoteItem()
    {
        return $this->container['quote_item'];
    }

    /**
     * Sets quote_item
     *
     * @param int $quote_item <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property to attach the note to a quote item.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_QUOTE_DTL_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setQuoteItem($quote_item)
    {
        $this->container['quote_item'] = $quote_item;

        return $this;
    }

    /**
     * Gets exhibitor_id
     *
     * @return int
     */
    public function getExhibitorId()
    {
        return $this->container['exhibitor_id'];
    }

    /**
     * Sets exhibitor_id
     *
     * @param int $exhibitor_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property to attach the note to an exhibitor.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_EXHIBITOR_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExhibitorId($exhibitor_id)
    {
        $this->container['exhibitor_id'] = $exhibitor_id;

        return $this;
    }

    /**
     * Gets event_exhibitor_type_sequence
     *
     * @return int
     */
    public function getEventExhibitorTypeSequence()
    {
        return $this->container['event_exhibitor_type_sequence'];
    }

    /**
     * Sets event_exhibitor_type_sequence
     *
     * @param int $event_exhibitor_type_sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_EVT_EXHIB_TYPE_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEventExhibitorTypeSequence($event_exhibitor_type_sequence)
    {
        $this->container['event_exhibitor_type_sequence'] = $event_exhibitor_type_sequence;

        return $this;
    }

    /**
     * Gets appointment_id
     *
     * @return int
     */
    public function getAppointmentId()
    {
        return $this->container['appointment_id'];
    }

    /**
     * Sets appointment_id
     *
     * @param int $appointment_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property to attach the note to an appointment.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_APPOINTMENT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAppointmentId($appointment_id)
    {
        $this->container['appointment_id'] = $appointment_id;

        return $this;
    }

    /**
     * Gets abstract_id
     *
     * @return int
     */
    public function getAbstractId()
    {
        return $this->container['abstract_id'];
    }

    /**
     * Sets abstract_id
     *
     * @param int $abstract_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC025_ABSTRACT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAbstractId($abstract_id)
    {
        $this->container['abstract_id'] = $abstract_id;

        return $this;
    }

    /**
     * Gets task_id
     *
     * @return int
     */
    public function getTaskId()
    {
        return $this->container['task_id'];
    }

    /**
     * Sets task_id
     *
     * @param int $task_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property to attach the note to an task.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC025_TASK_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaskId($task_id)
    {
        $this->container['task_id'] = $task_id;

        return $this;
    }

    /**
     * Gets class_name
     *
     * @return string
     */
    public function getClassName()
    {
        return $this->container['class_name'];
    }

    /**
     * Sets class_name
     *
     * @param string $class_name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> cNOTE_CLASS_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setClassName($class_name)
    {
        $this->container['class_name'] = $class_name;

        return $this;
    }

    /**
     * Gets entered_by_name
     *
     * @return string
     */
    public function getEnteredByName()
    {
        return $this->container['entered_by_name'];
    }

    /**
     * Sets entered_by_name
     *
     * @param string $entered_by_name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> cENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredByName($entered_by_name)
    {
        $this->container['entered_by_name'] = $entered_by_name;

        return $this;
    }

    /**
     * Gets space_code
     *
     * @return string
     */
    public function getSpaceCode()
    {
        return $this->container['space_code'];
    }

    /**
     * Sets space_code
     *
     * @param string $space_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Fill this in with the Space Code when adding a note to a space.  While SpaceCode isn't searchable, you can search on NoteCode, which holds the same value for space notes.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> N/A (value held by CC025_NOTE_CODE)  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 60  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span></span></div>
     *
     * @return $this
     */
    public function setSpaceCode($space_code)
    {
        $this->container['space_code'] = $space_code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


