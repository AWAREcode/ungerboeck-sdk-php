<?php
/**
 * RegistrationOrdersModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * RegistrationOrdersModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RegistrationOrdersModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'RegistrationOrdersModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization_code' => 'string',
        'order_number' => 'int',
        'search_order' => 'string',
        'event' => 'int',
        'order_date' => '\DateTime',
        'order_status' => 'string',
        'account' => 'string',
        'bill_to_account' => 'string',
        'status_class' => 'string',
        'printed' => 'string',
        'po_number' => 'string',
        'price_list' => 'string',
        'phase' => 'string',
        'ordered_total' => 'double',
        'ordered_tax' => 'double',
        'net_due' => 'double',
        'actual_total' => 'double',
        'actual_tax' => 'double',
        'actual_net_due' => 'double',
        'payments' => 'double',
        'internal' => 'string',
        'entered_date_time' => '\DateTime',
        'entered_by_user_id' => 'string',
        'last_changed_date_time' => '\DateTime',
        'last_changed_by_user_id' => 'string',
        'shipping_method' => 'string',
        'department' => 'string',
        'requester_account' => 'string',
        'invoice_number' => 'int',
        'currency' => 'string',
        'fc_ordered_total' => 'double',
        'fc_ordered_tax' => 'double',
        'fc_net_due' => 'double',
        'fc_actual_total' => 'double',
        'fc_actual_due' => 'double',
        'fc_payments' => 'double',
        'fc_actual_tax' => 'double',
        'taxable' => 'string',
        'payment_plan' => 'int',
        'payment_schedule' => 'string',
        'contact' => 'string',
        'bill_to_contact' => 'string',
        'requester_contact' => 'string',
        'account_rep' => 'string',
        'gross_area' => 'double',
        'promo_code' => 'string',
        'ordered_cost_total' => 'double',
        'ship_to_account' => 'string',
        'shipto_contact' => 'string',
        'gl_account' => 'string',
        'issue_number' => 'int',
        'order_account_address_seq' => 'int',
        'bill_to_accountaddress_seq' => 'int',
        'requester_account_address_seq' => 'int',
        'ship_to_account_address_seq' => 'int',
        'booth_number' => 'string',
        'exhibitor_id' => 'int',
        'exhibitor_assignment_order' => 'int',
        'registrants' => 'string',
        'registrant_type' => 'string',
        'registration_order_user_field_sets' => '\FomF\Ungerboeck\Client\Model\UserFields[]',
        'registration_order_items' => '\FomF\Ungerboeck\Client\Model\RegistrationOrderItemsModel[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization_code' => null,
        'order_number' => 'int32',
        'search_order' => null,
        'event' => 'int32',
        'order_date' => 'date-time',
        'order_status' => null,
        'account' => null,
        'bill_to_account' => null,
        'status_class' => null,
        'printed' => null,
        'po_number' => null,
        'price_list' => null,
        'phase' => null,
        'ordered_total' => 'double',
        'ordered_tax' => 'double',
        'net_due' => 'double',
        'actual_total' => 'double',
        'actual_tax' => 'double',
        'actual_net_due' => 'double',
        'payments' => 'double',
        'internal' => null,
        'entered_date_time' => 'date-time',
        'entered_by_user_id' => null,
        'last_changed_date_time' => 'date-time',
        'last_changed_by_user_id' => null,
        'shipping_method' => null,
        'department' => null,
        'requester_account' => null,
        'invoice_number' => 'int32',
        'currency' => null,
        'fc_ordered_total' => 'double',
        'fc_ordered_tax' => 'double',
        'fc_net_due' => 'double',
        'fc_actual_total' => 'double',
        'fc_actual_due' => 'double',
        'fc_payments' => 'double',
        'fc_actual_tax' => 'double',
        'taxable' => null,
        'payment_plan' => 'int32',
        'payment_schedule' => null,
        'contact' => null,
        'bill_to_contact' => null,
        'requester_contact' => null,
        'account_rep' => null,
        'gross_area' => 'double',
        'promo_code' => null,
        'ordered_cost_total' => 'double',
        'ship_to_account' => null,
        'shipto_contact' => null,
        'gl_account' => null,
        'issue_number' => 'int32',
        'order_account_address_seq' => 'int32',
        'bill_to_accountaddress_seq' => 'int32',
        'requester_account_address_seq' => 'int32',
        'ship_to_account_address_seq' => 'int32',
        'booth_number' => null,
        'exhibitor_id' => 'int32',
        'exhibitor_assignment_order' => 'int32',
        'registrants' => null,
        'registrant_type' => null,
        'registration_order_user_field_sets' => null,
        'registration_order_items' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization_code' => 'OrganizationCode',
        'order_number' => 'OrderNumber',
        'search_order' => 'SearchOrder',
        'event' => 'Event',
        'order_date' => 'OrderDate',
        'order_status' => 'OrderStatus',
        'account' => 'Account',
        'bill_to_account' => 'BillToAccount',
        'status_class' => 'StatusClass',
        'printed' => 'Printed',
        'po_number' => 'PONumber',
        'price_list' => 'PriceList',
        'phase' => 'Phase',
        'ordered_total' => 'OrderedTotal',
        'ordered_tax' => 'OrderedTax',
        'net_due' => 'NetDue',
        'actual_total' => 'ActualTotal',
        'actual_tax' => 'ActualTax',
        'actual_net_due' => 'ActualNetDue',
        'payments' => 'Payments',
        'internal' => 'Internal',
        'entered_date_time' => 'EnteredDateTime',
        'entered_by_user_id' => 'EnteredByUserID',
        'last_changed_date_time' => 'LastChangedDateTime',
        'last_changed_by_user_id' => 'LastChangedByUserID',
        'shipping_method' => 'ShippingMethod',
        'department' => 'Department',
        'requester_account' => 'RequesterAccount',
        'invoice_number' => 'InvoiceNumber',
        'currency' => 'Currency',
        'fc_ordered_total' => 'FCOrderedTotal',
        'fc_ordered_tax' => 'FCOrderedTax',
        'fc_net_due' => 'FCNetDue',
        'fc_actual_total' => 'FCActualTotal',
        'fc_actual_due' => 'FCActualDue',
        'fc_payments' => 'FCPayments',
        'fc_actual_tax' => 'FCActualTax',
        'taxable' => 'Taxable',
        'payment_plan' => 'PaymentPlan',
        'payment_schedule' => 'PaymentSchedule',
        'contact' => 'Contact',
        'bill_to_contact' => 'BillToContact',
        'requester_contact' => 'RequesterContact',
        'account_rep' => 'AccountRep',
        'gross_area' => 'GrossArea',
        'promo_code' => 'PromoCode',
        'ordered_cost_total' => 'OrderedCostTotal',
        'ship_to_account' => 'ShipToAccount',
        'shipto_contact' => 'ShiptoContact',
        'gl_account' => 'GLAccount',
        'issue_number' => 'IssueNumber',
        'order_account_address_seq' => 'OrderAccountAddressSeq',
        'bill_to_accountaddress_seq' => 'BillToAccountaddressSeq',
        'requester_account_address_seq' => 'RequesterAccountAddressSeq',
        'ship_to_account_address_seq' => 'ShipToAccountAddressSeq',
        'booth_number' => 'BoothNumber',
        'exhibitor_id' => 'ExhibitorID',
        'exhibitor_assignment_order' => 'ExhibitorAssignmentOrder',
        'registrants' => 'Registrants',
        'registrant_type' => 'RegistrantType',
        'registration_order_user_field_sets' => 'RegistrationOrderUserFieldSets',
        'registration_order_items' => 'RegistrationOrderItems'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization_code' => 'setOrganizationCode',
        'order_number' => 'setOrderNumber',
        'search_order' => 'setSearchOrder',
        'event' => 'setEvent',
        'order_date' => 'setOrderDate',
        'order_status' => 'setOrderStatus',
        'account' => 'setAccount',
        'bill_to_account' => 'setBillToAccount',
        'status_class' => 'setStatusClass',
        'printed' => 'setPrinted',
        'po_number' => 'setPoNumber',
        'price_list' => 'setPriceList',
        'phase' => 'setPhase',
        'ordered_total' => 'setOrderedTotal',
        'ordered_tax' => 'setOrderedTax',
        'net_due' => 'setNetDue',
        'actual_total' => 'setActualTotal',
        'actual_tax' => 'setActualTax',
        'actual_net_due' => 'setActualNetDue',
        'payments' => 'setPayments',
        'internal' => 'setInternal',
        'entered_date_time' => 'setEnteredDateTime',
        'entered_by_user_id' => 'setEnteredByUserId',
        'last_changed_date_time' => 'setLastChangedDateTime',
        'last_changed_by_user_id' => 'setLastChangedByUserId',
        'shipping_method' => 'setShippingMethod',
        'department' => 'setDepartment',
        'requester_account' => 'setRequesterAccount',
        'invoice_number' => 'setInvoiceNumber',
        'currency' => 'setCurrency',
        'fc_ordered_total' => 'setFcOrderedTotal',
        'fc_ordered_tax' => 'setFcOrderedTax',
        'fc_net_due' => 'setFcNetDue',
        'fc_actual_total' => 'setFcActualTotal',
        'fc_actual_due' => 'setFcActualDue',
        'fc_payments' => 'setFcPayments',
        'fc_actual_tax' => 'setFcActualTax',
        'taxable' => 'setTaxable',
        'payment_plan' => 'setPaymentPlan',
        'payment_schedule' => 'setPaymentSchedule',
        'contact' => 'setContact',
        'bill_to_contact' => 'setBillToContact',
        'requester_contact' => 'setRequesterContact',
        'account_rep' => 'setAccountRep',
        'gross_area' => 'setGrossArea',
        'promo_code' => 'setPromoCode',
        'ordered_cost_total' => 'setOrderedCostTotal',
        'ship_to_account' => 'setShipToAccount',
        'shipto_contact' => 'setShiptoContact',
        'gl_account' => 'setGlAccount',
        'issue_number' => 'setIssueNumber',
        'order_account_address_seq' => 'setOrderAccountAddressSeq',
        'bill_to_accountaddress_seq' => 'setBillToAccountaddressSeq',
        'requester_account_address_seq' => 'setRequesterAccountAddressSeq',
        'ship_to_account_address_seq' => 'setShipToAccountAddressSeq',
        'booth_number' => 'setBoothNumber',
        'exhibitor_id' => 'setExhibitorId',
        'exhibitor_assignment_order' => 'setExhibitorAssignmentOrder',
        'registrants' => 'setRegistrants',
        'registrant_type' => 'setRegistrantType',
        'registration_order_user_field_sets' => 'setRegistrationOrderUserFieldSets',
        'registration_order_items' => 'setRegistrationOrderItems'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization_code' => 'getOrganizationCode',
        'order_number' => 'getOrderNumber',
        'search_order' => 'getSearchOrder',
        'event' => 'getEvent',
        'order_date' => 'getOrderDate',
        'order_status' => 'getOrderStatus',
        'account' => 'getAccount',
        'bill_to_account' => 'getBillToAccount',
        'status_class' => 'getStatusClass',
        'printed' => 'getPrinted',
        'po_number' => 'getPoNumber',
        'price_list' => 'getPriceList',
        'phase' => 'getPhase',
        'ordered_total' => 'getOrderedTotal',
        'ordered_tax' => 'getOrderedTax',
        'net_due' => 'getNetDue',
        'actual_total' => 'getActualTotal',
        'actual_tax' => 'getActualTax',
        'actual_net_due' => 'getActualNetDue',
        'payments' => 'getPayments',
        'internal' => 'getInternal',
        'entered_date_time' => 'getEnteredDateTime',
        'entered_by_user_id' => 'getEnteredByUserId',
        'last_changed_date_time' => 'getLastChangedDateTime',
        'last_changed_by_user_id' => 'getLastChangedByUserId',
        'shipping_method' => 'getShippingMethod',
        'department' => 'getDepartment',
        'requester_account' => 'getRequesterAccount',
        'invoice_number' => 'getInvoiceNumber',
        'currency' => 'getCurrency',
        'fc_ordered_total' => 'getFcOrderedTotal',
        'fc_ordered_tax' => 'getFcOrderedTax',
        'fc_net_due' => 'getFcNetDue',
        'fc_actual_total' => 'getFcActualTotal',
        'fc_actual_due' => 'getFcActualDue',
        'fc_payments' => 'getFcPayments',
        'fc_actual_tax' => 'getFcActualTax',
        'taxable' => 'getTaxable',
        'payment_plan' => 'getPaymentPlan',
        'payment_schedule' => 'getPaymentSchedule',
        'contact' => 'getContact',
        'bill_to_contact' => 'getBillToContact',
        'requester_contact' => 'getRequesterContact',
        'account_rep' => 'getAccountRep',
        'gross_area' => 'getGrossArea',
        'promo_code' => 'getPromoCode',
        'ordered_cost_total' => 'getOrderedCostTotal',
        'ship_to_account' => 'getShipToAccount',
        'shipto_contact' => 'getShiptoContact',
        'gl_account' => 'getGlAccount',
        'issue_number' => 'getIssueNumber',
        'order_account_address_seq' => 'getOrderAccountAddressSeq',
        'bill_to_accountaddress_seq' => 'getBillToAccountaddressSeq',
        'requester_account_address_seq' => 'getRequesterAccountAddressSeq',
        'ship_to_account_address_seq' => 'getShipToAccountAddressSeq',
        'booth_number' => 'getBoothNumber',
        'exhibitor_id' => 'getExhibitorId',
        'exhibitor_assignment_order' => 'getExhibitorAssignmentOrder',
        'registrants' => 'getRegistrants',
        'registrant_type' => 'getRegistrantType',
        'registration_order_user_field_sets' => 'getRegistrationOrderUserFieldSets',
        'registration_order_items' => 'getRegistrationOrderItems'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['order_number'] = isset($data['order_number']) ? $data['order_number'] : null;
        $this->container['search_order'] = isset($data['search_order']) ? $data['search_order'] : null;
        $this->container['event'] = isset($data['event']) ? $data['event'] : null;
        $this->container['order_date'] = isset($data['order_date']) ? $data['order_date'] : null;
        $this->container['order_status'] = isset($data['order_status']) ? $data['order_status'] : null;
        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
        $this->container['bill_to_account'] = isset($data['bill_to_account']) ? $data['bill_to_account'] : null;
        $this->container['status_class'] = isset($data['status_class']) ? $data['status_class'] : null;
        $this->container['printed'] = isset($data['printed']) ? $data['printed'] : null;
        $this->container['po_number'] = isset($data['po_number']) ? $data['po_number'] : null;
        $this->container['price_list'] = isset($data['price_list']) ? $data['price_list'] : null;
        $this->container['phase'] = isset($data['phase']) ? $data['phase'] : null;
        $this->container['ordered_total'] = isset($data['ordered_total']) ? $data['ordered_total'] : null;
        $this->container['ordered_tax'] = isset($data['ordered_tax']) ? $data['ordered_tax'] : null;
        $this->container['net_due'] = isset($data['net_due']) ? $data['net_due'] : null;
        $this->container['actual_total'] = isset($data['actual_total']) ? $data['actual_total'] : null;
        $this->container['actual_tax'] = isset($data['actual_tax']) ? $data['actual_tax'] : null;
        $this->container['actual_net_due'] = isset($data['actual_net_due']) ? $data['actual_net_due'] : null;
        $this->container['payments'] = isset($data['payments']) ? $data['payments'] : null;
        $this->container['internal'] = isset($data['internal']) ? $data['internal'] : null;
        $this->container['entered_date_time'] = isset($data['entered_date_time']) ? $data['entered_date_time'] : null;
        $this->container['entered_by_user_id'] = isset($data['entered_by_user_id']) ? $data['entered_by_user_id'] : null;
        $this->container['last_changed_date_time'] = isset($data['last_changed_date_time']) ? $data['last_changed_date_time'] : null;
        $this->container['last_changed_by_user_id'] = isset($data['last_changed_by_user_id']) ? $data['last_changed_by_user_id'] : null;
        $this->container['shipping_method'] = isset($data['shipping_method']) ? $data['shipping_method'] : null;
        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['requester_account'] = isset($data['requester_account']) ? $data['requester_account'] : null;
        $this->container['invoice_number'] = isset($data['invoice_number']) ? $data['invoice_number'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['fc_ordered_total'] = isset($data['fc_ordered_total']) ? $data['fc_ordered_total'] : null;
        $this->container['fc_ordered_tax'] = isset($data['fc_ordered_tax']) ? $data['fc_ordered_tax'] : null;
        $this->container['fc_net_due'] = isset($data['fc_net_due']) ? $data['fc_net_due'] : null;
        $this->container['fc_actual_total'] = isset($data['fc_actual_total']) ? $data['fc_actual_total'] : null;
        $this->container['fc_actual_due'] = isset($data['fc_actual_due']) ? $data['fc_actual_due'] : null;
        $this->container['fc_payments'] = isset($data['fc_payments']) ? $data['fc_payments'] : null;
        $this->container['fc_actual_tax'] = isset($data['fc_actual_tax']) ? $data['fc_actual_tax'] : null;
        $this->container['taxable'] = isset($data['taxable']) ? $data['taxable'] : null;
        $this->container['payment_plan'] = isset($data['payment_plan']) ? $data['payment_plan'] : null;
        $this->container['payment_schedule'] = isset($data['payment_schedule']) ? $data['payment_schedule'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['bill_to_contact'] = isset($data['bill_to_contact']) ? $data['bill_to_contact'] : null;
        $this->container['requester_contact'] = isset($data['requester_contact']) ? $data['requester_contact'] : null;
        $this->container['account_rep'] = isset($data['account_rep']) ? $data['account_rep'] : null;
        $this->container['gross_area'] = isset($data['gross_area']) ? $data['gross_area'] : null;
        $this->container['promo_code'] = isset($data['promo_code']) ? $data['promo_code'] : null;
        $this->container['ordered_cost_total'] = isset($data['ordered_cost_total']) ? $data['ordered_cost_total'] : null;
        $this->container['ship_to_account'] = isset($data['ship_to_account']) ? $data['ship_to_account'] : null;
        $this->container['shipto_contact'] = isset($data['shipto_contact']) ? $data['shipto_contact'] : null;
        $this->container['gl_account'] = isset($data['gl_account']) ? $data['gl_account'] : null;
        $this->container['issue_number'] = isset($data['issue_number']) ? $data['issue_number'] : null;
        $this->container['order_account_address_seq'] = isset($data['order_account_address_seq']) ? $data['order_account_address_seq'] : null;
        $this->container['bill_to_accountaddress_seq'] = isset($data['bill_to_accountaddress_seq']) ? $data['bill_to_accountaddress_seq'] : null;
        $this->container['requester_account_address_seq'] = isset($data['requester_account_address_seq']) ? $data['requester_account_address_seq'] : null;
        $this->container['ship_to_account_address_seq'] = isset($data['ship_to_account_address_seq']) ? $data['ship_to_account_address_seq'] : null;
        $this->container['booth_number'] = isset($data['booth_number']) ? $data['booth_number'] : null;
        $this->container['exhibitor_id'] = isset($data['exhibitor_id']) ? $data['exhibitor_id'] : null;
        $this->container['exhibitor_assignment_order'] = isset($data['exhibitor_assignment_order']) ? $data['exhibitor_assignment_order'] : null;
        $this->container['registrants'] = isset($data['registrants']) ? $data['registrants'] : null;
        $this->container['registrant_type'] = isset($data['registrant_type']) ? $data['registrant_type'] : null;
        $this->container['registration_order_user_field_sets'] = isset($data['registration_order_user_field_sets']) ? $data['registration_order_user_field_sets'] : null;
        $this->container['registration_order_items'] = isset($data['registration_order_items']) ? $data['registration_order_items'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['order_number'] === null) {
            $invalidProperties[] = "'order_number' can't be null";
        }
        if ($this->container['search_order'] === null) {
            $invalidProperties[] = "'search_order' can't be null";
        }
        if ($this->container['event'] === null) {
            $invalidProperties[] = "'event' can't be null";
        }
        if ($this->container['order_date'] === null) {
            $invalidProperties[] = "'order_date' can't be null";
        }
        if ($this->container['order_status'] === null) {
            $invalidProperties[] = "'order_status' can't be null";
        }
        if ($this->container['account'] === null) {
            $invalidProperties[] = "'account' can't be null";
        }
        if ($this->container['bill_to_account'] === null) {
            $invalidProperties[] = "'bill_to_account' can't be null";
        }
        if ($this->container['status_class'] === null) {
            $invalidProperties[] = "'status_class' can't be null";
        }
        if ($this->container['printed'] === null) {
            $invalidProperties[] = "'printed' can't be null";
        }
        if ($this->container['po_number'] === null) {
            $invalidProperties[] = "'po_number' can't be null";
        }
        if ($this->container['price_list'] === null) {
            $invalidProperties[] = "'price_list' can't be null";
        }
        if ($this->container['phase'] === null) {
            $invalidProperties[] = "'phase' can't be null";
        }
        if ($this->container['ordered_total'] === null) {
            $invalidProperties[] = "'ordered_total' can't be null";
        }
        if ($this->container['ordered_tax'] === null) {
            $invalidProperties[] = "'ordered_tax' can't be null";
        }
        if ($this->container['net_due'] === null) {
            $invalidProperties[] = "'net_due' can't be null";
        }
        if ($this->container['actual_total'] === null) {
            $invalidProperties[] = "'actual_total' can't be null";
        }
        if ($this->container['actual_tax'] === null) {
            $invalidProperties[] = "'actual_tax' can't be null";
        }
        if ($this->container['actual_net_due'] === null) {
            $invalidProperties[] = "'actual_net_due' can't be null";
        }
        if ($this->container['payments'] === null) {
            $invalidProperties[] = "'payments' can't be null";
        }
        if ($this->container['internal'] === null) {
            $invalidProperties[] = "'internal' can't be null";
        }
        if ($this->container['entered_date_time'] === null) {
            $invalidProperties[] = "'entered_date_time' can't be null";
        }
        if ($this->container['entered_by_user_id'] === null) {
            $invalidProperties[] = "'entered_by_user_id' can't be null";
        }
        if ($this->container['last_changed_date_time'] === null) {
            $invalidProperties[] = "'last_changed_date_time' can't be null";
        }
        if ($this->container['last_changed_by_user_id'] === null) {
            $invalidProperties[] = "'last_changed_by_user_id' can't be null";
        }
        if ($this->container['shipping_method'] === null) {
            $invalidProperties[] = "'shipping_method' can't be null";
        }
        if ($this->container['department'] === null) {
            $invalidProperties[] = "'department' can't be null";
        }
        if ($this->container['requester_account'] === null) {
            $invalidProperties[] = "'requester_account' can't be null";
        }
        if ($this->container['invoice_number'] === null) {
            $invalidProperties[] = "'invoice_number' can't be null";
        }
        if ($this->container['currency'] === null) {
            $invalidProperties[] = "'currency' can't be null";
        }
        if ($this->container['fc_ordered_total'] === null) {
            $invalidProperties[] = "'fc_ordered_total' can't be null";
        }
        if ($this->container['fc_ordered_tax'] === null) {
            $invalidProperties[] = "'fc_ordered_tax' can't be null";
        }
        if ($this->container['fc_net_due'] === null) {
            $invalidProperties[] = "'fc_net_due' can't be null";
        }
        if ($this->container['fc_actual_total'] === null) {
            $invalidProperties[] = "'fc_actual_total' can't be null";
        }
        if ($this->container['fc_actual_due'] === null) {
            $invalidProperties[] = "'fc_actual_due' can't be null";
        }
        if ($this->container['fc_payments'] === null) {
            $invalidProperties[] = "'fc_payments' can't be null";
        }
        if ($this->container['fc_actual_tax'] === null) {
            $invalidProperties[] = "'fc_actual_tax' can't be null";
        }
        if ($this->container['taxable'] === null) {
            $invalidProperties[] = "'taxable' can't be null";
        }
        if ($this->container['payment_plan'] === null) {
            $invalidProperties[] = "'payment_plan' can't be null";
        }
        if ($this->container['payment_schedule'] === null) {
            $invalidProperties[] = "'payment_schedule' can't be null";
        }
        if ($this->container['contact'] === null) {
            $invalidProperties[] = "'contact' can't be null";
        }
        if ($this->container['bill_to_contact'] === null) {
            $invalidProperties[] = "'bill_to_contact' can't be null";
        }
        if ($this->container['requester_contact'] === null) {
            $invalidProperties[] = "'requester_contact' can't be null";
        }
        if ($this->container['account_rep'] === null) {
            $invalidProperties[] = "'account_rep' can't be null";
        }
        if ($this->container['gross_area'] === null) {
            $invalidProperties[] = "'gross_area' can't be null";
        }
        if ($this->container['promo_code'] === null) {
            $invalidProperties[] = "'promo_code' can't be null";
        }
        if ($this->container['ordered_cost_total'] === null) {
            $invalidProperties[] = "'ordered_cost_total' can't be null";
        }
        if ($this->container['ship_to_account'] === null) {
            $invalidProperties[] = "'ship_to_account' can't be null";
        }
        if ($this->container['shipto_contact'] === null) {
            $invalidProperties[] = "'shipto_contact' can't be null";
        }
        if ($this->container['gl_account'] === null) {
            $invalidProperties[] = "'gl_account' can't be null";
        }
        if ($this->container['issue_number'] === null) {
            $invalidProperties[] = "'issue_number' can't be null";
        }
        if ($this->container['order_account_address_seq'] === null) {
            $invalidProperties[] = "'order_account_address_seq' can't be null";
        }
        if ($this->container['bill_to_accountaddress_seq'] === null) {
            $invalidProperties[] = "'bill_to_accountaddress_seq' can't be null";
        }
        if ($this->container['requester_account_address_seq'] === null) {
            $invalidProperties[] = "'requester_account_address_seq' can't be null";
        }
        if ($this->container['ship_to_account_address_seq'] === null) {
            $invalidProperties[] = "'ship_to_account_address_seq' can't be null";
        }
        if ($this->container['booth_number'] === null) {
            $invalidProperties[] = "'booth_number' can't be null";
        }
        if ($this->container['exhibitor_id'] === null) {
            $invalidProperties[] = "'exhibitor_id' can't be null";
        }
        if ($this->container['exhibitor_assignment_order'] === null) {
            $invalidProperties[] = "'exhibitor_assignment_order' can't be null";
        }
        if ($this->container['registrants'] === null) {
            $invalidProperties[] = "'registrants' can't be null";
        }
        if ($this->container['registrant_type'] === null) {
            $invalidProperties[] = "'registrant_type' can't be null";
        }
        if ($this->container['registration_order_user_field_sets'] === null) {
            $invalidProperties[] = "'registration_order_user_field_sets' can't be null";
        }
        if ($this->container['registration_order_items'] === null) {
            $invalidProperties[] = "'registration_order_items' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Indentifier - Use for GET and PUT URLs  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> ER100_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets order_number
     *
     * @return int
     */
    public function getOrderNumber()
    {
        return $this->container['order_number'];
    }

    /**
     * Sets order_number
     *
     * @param int $order_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Indentifier - Use for GET and PUT URLs  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> ER100_ORD_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderNumber($order_number)
    {
        $this->container['order_number'] = $order_number;

        return $this;
    }

    /**
     * Gets search_order
     *
     * @return string
     */
    public function getSearchOrder()
    {
        return $this->container['search_order'];
    }

    /**
     * Sets search_order
     *
     * @param string $search_order <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_SO_SEARCH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSearchOrder($search_order)
    {
        $this->container['search_order'] = $search_order;

        return $this;
    }

    /**
     * Gets event
     *
     * @return int
     */
    public function getEvent()
    {
        return $this->container['event'];
    }

    /**
     * Sets event
     *
     * @param int $event <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_EVT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEvent($event)
    {
        $this->container['event'] = $event;

        return $this;
    }

    /**
     * Gets order_date
     *
     * @return \DateTime
     */
    public function getOrderDate()
    {
        return $this->container['order_date'];
    }

    /**
     * Sets order_date
     *
     * @param \DateTime $order_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderDate($order_date)
    {
        $this->container['order_date'] = $order_date;

        return $this;
    }

    /**
     * Gets order_status
     *
     * @return string
     */
    public function getOrderStatus()
    {
        return $this->container['order_status'];
    }

    /**
     * Sets order_status
     *
     * @param string $order_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_NEW_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderStatus($order_status)
    {
        $this->container['order_status'] = $order_status;

        return $this;
    }

    /**
     * Gets account
     *
     * @return string
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param string $account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets bill_to_account
     *
     * @return string
     */
    public function getBillToAccount()
    {
        return $this->container['bill_to_account'];
    }

    /**
     * Sets bill_to_account
     *
     * @param string $bill_to_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_BILL_TO_CUST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBillToAccount($bill_to_account)
    {
        $this->container['bill_to_account'] = $bill_to_account;

        return $this;
    }

    /**
     * Gets status_class
     *
     * @return string
     */
    public function getStatusClass()
    {
        return $this->container['status_class'];
    }

    /**
     * Sets status_class
     *
     * @param string $status_class <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatusClass($status_class)
    {
        $this->container['status_class'] = $status_class;

        return $this;
    }

    /**
     * Gets printed
     *
     * @return string
     */
    public function getPrinted()
    {
        return $this->container['printed'];
    }

    /**
     * Sets printed
     *
     * @param string $printed <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_PRT_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPrinted($printed)
    {
        $this->container['printed'] = $printed;

        return $this;
    }

    /**
     * Gets po_number
     *
     * @return string
     */
    public function getPoNumber()
    {
        return $this->container['po_number'];
    }

    /**
     * Sets po_number
     *
     * @param string $po_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_PO_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPoNumber($po_number)
    {
        $this->container['po_number'] = $po_number;

        return $this;
    }

    /**
     * Gets price_list
     *
     * @return string
     */
    public function getPriceList()
    {
        return $this->container['price_list'];
    }

    /**
     * Sets price_list
     *
     * @param string $price_list <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Required for adding an order  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> ER100_PRICE_LIST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPriceList($price_list)
    {
        $this->container['price_list'] = $price_list;

        return $this;
    }

    /**
     * Gets phase
     *
     * @return string
     */
    public function getPhase()
    {
        return $this->container['phase'];
    }

    /**
     * Sets phase
     *
     * @param string $phase <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_RES_PHASE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPhase($phase)
    {
        $this->container['phase'] = $phase;

        return $this;
    }

    /**
     * Gets ordered_total
     *
     * @return double
     */
    public function getOrderedTotal()
    {
        return $this->container['ordered_total'];
    }

    /**
     * Sets ordered_total
     *
     * @param double $ordered_total <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_TOT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderedTotal($ordered_total)
    {
        $this->container['ordered_total'] = $ordered_total;

        return $this;
    }

    /**
     * Gets ordered_tax
     *
     * @return double
     */
    public function getOrderedTax()
    {
        return $this->container['ordered_tax'];
    }

    /**
     * Sets ordered_tax
     *
     * @param double $ordered_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderedTax($ordered_tax)
    {
        $this->container['ordered_tax'] = $ordered_tax;

        return $this;
    }

    /**
     * Gets net_due
     *
     * @return double
     */
    public function getNetDue()
    {
        return $this->container['net_due'];
    }

    /**
     * Sets net_due
     *
     * @param double $net_due <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_DUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNetDue($net_due)
    {
        $this->container['net_due'] = $net_due;

        return $this;
    }

    /**
     * Gets actual_total
     *
     * @return double
     */
    public function getActualTotal()
    {
        return $this->container['actual_total'];
    }

    /**
     * Sets actual_total
     *
     * @param double $actual_total <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ACT_TOTAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualTotal($actual_total)
    {
        $this->container['actual_total'] = $actual_total;

        return $this;
    }

    /**
     * Gets actual_tax
     *
     * @return double
     */
    public function getActualTax()
    {
        return $this->container['actual_tax'];
    }

    /**
     * Sets actual_tax
     *
     * @param double $actual_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ACT_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualTax($actual_tax)
    {
        $this->container['actual_tax'] = $actual_tax;

        return $this;
    }

    /**
     * Gets actual_net_due
     *
     * @return double
     */
    public function getActualNetDue()
    {
        return $this->container['actual_net_due'];
    }

    /**
     * Sets actual_net_due
     *
     * @param double $actual_net_due <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ACT_DUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualNetDue($actual_net_due)
    {
        $this->container['actual_net_due'] = $actual_net_due;

        return $this;
    }

    /**
     * Gets payments
     *
     * @return double
     */
    public function getPayments()
    {
        return $this->container['payments'];
    }

    /**
     * Sets payments
     *
     * @param double $payments <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ACT_PAYMENTS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPayments($payments)
    {
        $this->container['payments'] = $payments;

        return $this;
    }

    /**
     * Gets internal
     *
     * @return string
     */
    public function getInternal()
    {
        return $this->container['internal'];
    }

    /**
     * Sets internal
     *
     * @param string $internal <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_INTERNAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInternal($internal)
    {
        $this->container['internal'] = $internal;

        return $this;
    }

    /**
     * Gets entered_date_time
     *
     * @return \DateTime
     */
    public function getEnteredDateTime()
    {
        return $this->container['entered_date_time'];
    }

    /**
     * Sets entered_date_time
     *
     * @param \DateTime $entered_date_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Automatically set by API  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> ER100_ENT_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredDateTime($entered_date_time)
    {
        $this->container['entered_date_time'] = $entered_date_time;

        return $this;
    }

    /**
     * Gets entered_by_user_id
     *
     * @return string
     */
    public function getEnteredByUserId()
    {
        return $this->container['entered_by_user_id'];
    }

    /**
     * Sets entered_by_user_id
     *
     * @param string $entered_by_user_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Automatically set by API  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> ER100_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredByUserId($entered_by_user_id)
    {
        $this->container['entered_by_user_id'] = $entered_by_user_id;

        return $this;
    }

    /**
     * Gets last_changed_date_time
     *
     * @return \DateTime
     */
    public function getLastChangedDateTime()
    {
        return $this->container['last_changed_date_time'];
    }

    /**
     * Sets last_changed_date_time
     *
     * @param \DateTime $last_changed_date_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Automatically set by API  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> ER100_UPD_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastChangedDateTime($last_changed_date_time)
    {
        $this->container['last_changed_date_time'] = $last_changed_date_time;

        return $this;
    }

    /**
     * Gets last_changed_by_user_id
     *
     * @return string
     */
    public function getLastChangedByUserId()
    {
        return $this->container['last_changed_by_user_id'];
    }

    /**
     * Sets last_changed_by_user_id
     *
     * @param string $last_changed_by_user_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Automatically set by API  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> ER100_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastChangedByUserId($last_changed_by_user_id)
    {
        $this->container['last_changed_by_user_id'] = $last_changed_by_user_id;

        return $this;
    }

    /**
     * Gets shipping_method
     *
     * @return string
     */
    public function getShippingMethod()
    {
        return $this->container['shipping_method'];
    }

    /**
     * Sets shipping_method
     *
     * @param string $shipping_method <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_SHIP_METHOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setShippingMethod($shipping_method)
    {
        $this->container['shipping_method'] = $shipping_method;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string $department <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_USER_6X  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets requester_account
     *
     * @return string
     */
    public function getRequesterAccount()
    {
        return $this->container['requester_account'];
    }

    /**
     * Sets requester_account
     *
     * @param string $requester_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_REQ_CUST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequesterAccount($requester_account)
    {
        $this->container['requester_account'] = $requester_account;

        return $this;
    }

    /**
     * Gets invoice_number
     *
     * @return int
     */
    public function getInvoiceNumber()
    {
        return $this->container['invoice_number'];
    }

    /**
     * Sets invoice_number
     *
     * @param int $invoice_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_INVOICE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoiceNumber($invoice_number)
    {
        $this->container['invoice_number'] = $invoice_number;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_CURRENCY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets fc_ordered_total
     *
     * @return double
     */
    public function getFcOrderedTotal()
    {
        return $this->container['fc_ordered_total'];
    }

    /**
     * Sets fc_ordered_total
     *
     * @param double $fc_ordered_total <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_FC_ORD_TOT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcOrderedTotal($fc_ordered_total)
    {
        $this->container['fc_ordered_total'] = $fc_ordered_total;

        return $this;
    }

    /**
     * Gets fc_ordered_tax
     *
     * @return double
     */
    public function getFcOrderedTax()
    {
        return $this->container['fc_ordered_tax'];
    }

    /**
     * Sets fc_ordered_tax
     *
     * @param double $fc_ordered_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_FC_ORD_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcOrderedTax($fc_ordered_tax)
    {
        $this->container['fc_ordered_tax'] = $fc_ordered_tax;

        return $this;
    }

    /**
     * Gets fc_net_due
     *
     * @return double
     */
    public function getFcNetDue()
    {
        return $this->container['fc_net_due'];
    }

    /**
     * Sets fc_net_due
     *
     * @param double $fc_net_due <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_FC_ORD_DUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcNetDue($fc_net_due)
    {
        $this->container['fc_net_due'] = $fc_net_due;

        return $this;
    }

    /**
     * Gets fc_actual_total
     *
     * @return double
     */
    public function getFcActualTotal()
    {
        return $this->container['fc_actual_total'];
    }

    /**
     * Sets fc_actual_total
     *
     * @param double $fc_actual_total <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_FC_ACT_TOT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcActualTotal($fc_actual_total)
    {
        $this->container['fc_actual_total'] = $fc_actual_total;

        return $this;
    }

    /**
     * Gets fc_actual_due
     *
     * @return double
     */
    public function getFcActualDue()
    {
        return $this->container['fc_actual_due'];
    }

    /**
     * Sets fc_actual_due
     *
     * @param double $fc_actual_due <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_FC_ACT_DUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcActualDue($fc_actual_due)
    {
        $this->container['fc_actual_due'] = $fc_actual_due;

        return $this;
    }

    /**
     * Gets fc_payments
     *
     * @return double
     */
    public function getFcPayments()
    {
        return $this->container['fc_payments'];
    }

    /**
     * Sets fc_payments
     *
     * @param double $fc_payments <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_FC_ACT_PAYMENTS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcPayments($fc_payments)
    {
        $this->container['fc_payments'] = $fc_payments;

        return $this;
    }

    /**
     * Gets fc_actual_tax
     *
     * @return double
     */
    public function getFcActualTax()
    {
        return $this->container['fc_actual_tax'];
    }

    /**
     * Sets fc_actual_tax
     *
     * @param double $fc_actual_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_FC_ACT_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcActualTax($fc_actual_tax)
    {
        $this->container['fc_actual_tax'] = $fc_actual_tax;

        return $this;
    }

    /**
     * Gets taxable
     *
     * @return string
     */
    public function getTaxable()
    {
        return $this->container['taxable'];
    }

    /**
     * Sets taxable
     *
     * @param string $taxable <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_TAXABLE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxable($taxable)
    {
        $this->container['taxable'] = $taxable;

        return $this;
    }

    /**
     * Gets payment_plan
     *
     * @return int
     */
    public function getPaymentPlan()
    {
        return $this->container['payment_plan'];
    }

    /**
     * Sets payment_plan
     *
     * @param int $payment_plan <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_PAY_PLAN_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPaymentPlan($payment_plan)
    {
        $this->container['payment_plan'] = $payment_plan;

        return $this;
    }

    /**
     * Gets payment_schedule
     *
     * @return string
     */
    public function getPaymentSchedule()
    {
        return $this->container['payment_schedule'];
    }

    /**
     * Sets payment_schedule
     *
     * @param string $payment_schedule <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_PP_SCHED_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPaymentSchedule($payment_schedule)
    {
        $this->container['payment_schedule'] = $payment_schedule;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return string
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param string $contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_NG_ORD_CONTACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets bill_to_contact
     *
     * @return string
     */
    public function getBillToContact()
    {
        return $this->container['bill_to_contact'];
    }

    /**
     * Sets bill_to_contact
     *
     * @param string $bill_to_contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_NG_BTO_CONTACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBillToContact($bill_to_contact)
    {
        $this->container['bill_to_contact'] = $bill_to_contact;

        return $this;
    }

    /**
     * Gets requester_contact
     *
     * @return string
     */
    public function getRequesterContact()
    {
        return $this->container['requester_contact'];
    }

    /**
     * Sets requester_contact
     *
     * @param string $requester_contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_NG_REQ_CONTACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequesterContact($requester_contact)
    {
        $this->container['requester_contact'] = $requester_contact;

        return $this;
    }

    /**
     * Gets account_rep
     *
     * @return string
     */
    public function getAccountRep()
    {
        return $this->container['account_rep'];
    }

    /**
     * Sets account_rep
     *
     * @param string $account_rep <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_ACCT_REP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccountRep($account_rep)
    {
        $this->container['account_rep'] = $account_rep;

        return $this;
    }

    /**
     * Gets gross_area
     *
     * @return double
     */
    public function getGrossArea()
    {
        return $this->container['gross_area'];
    }

    /**
     * Sets gross_area
     *
     * @param double $gross_area <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ASGN_TOT_SIZE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 92  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGrossArea($gross_area)
    {
        $this->container['gross_area'] = $gross_area;

        return $this;
    }

    /**
     * Gets promo_code
     *
     * @return string
     */
    public function getPromoCode()
    {
        return $this->container['promo_code'];
    }

    /**
     * Sets promo_code
     *
     * @param string $promo_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_PROMO_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPromoCode($promo_code)
    {
        $this->container['promo_code'] = $promo_code;

        return $this;
    }

    /**
     * Gets ordered_cost_total
     *
     * @return double
     */
    public function getOrderedCostTotal()
    {
        return $this->container['ordered_cost_total'];
    }

    /**
     * Sets ordered_cost_total
     *
     * @param double $ordered_cost_total <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_COST_TOTAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 134  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderedCostTotal($ordered_cost_total)
    {
        $this->container['ordered_cost_total'] = $ordered_cost_total;

        return $this;
    }

    /**
     * Gets ship_to_account
     *
     * @return string
     */
    public function getShipToAccount()
    {
        return $this->container['ship_to_account'];
    }

    /**
     * Sets ship_to_account
     *
     * @param string $ship_to_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_SHIPTO_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setShipToAccount($ship_to_account)
    {
        $this->container['ship_to_account'] = $ship_to_account;

        return $this;
    }

    /**
     * Gets shipto_contact
     *
     * @return string
     */
    public function getShiptoContact()
    {
        return $this->container['shipto_contact'];
    }

    /**
     * Sets shipto_contact
     *
     * @param string $shipto_contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_SHIPTO_CONT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setShiptoContact($shipto_contact)
    {
        $this->container['shipto_contact'] = $shipto_contact;

        return $this;
    }

    /**
     * Gets gl_account
     *
     * @return string
     */
    public function getGlAccount()
    {
        return $this->container['gl_account'];
    }

    /**
     * Sets gl_account
     *
     * @param string $gl_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_GLACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlAccount($gl_account)
    {
        $this->container['gl_account'] = $gl_account;

        return $this;
    }

    /**
     * Gets issue_number
     *
     * @return int
     */
    public function getIssueNumber()
    {
        return $this->container['issue_number'];
    }

    /**
     * Sets issue_number
     *
     * @param int $issue_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_OCCURRENCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIssueNumber($issue_number)
    {
        $this->container['issue_number'] = $issue_number;

        return $this;
    }

    /**
     * Gets order_account_address_seq
     *
     * @return int
     */
    public function getOrderAccountAddressSeq()
    {
        return $this->container['order_account_address_seq'];
    }

    /**
     * Sets order_account_address_seq
     *
     * @param int $order_account_address_seq <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_ADDR_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderAccountAddressSeq($order_account_address_seq)
    {
        $this->container['order_account_address_seq'] = $order_account_address_seq;

        return $this;
    }

    /**
     * Gets bill_to_accountaddress_seq
     *
     * @return int
     */
    public function getBillToAccountaddressSeq()
    {
        return $this->container['bill_to_accountaddress_seq'];
    }

    /**
     * Sets bill_to_accountaddress_seq
     *
     * @param int $bill_to_accountaddress_seq <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_BILLTO_ADDR_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBillToAccountaddressSeq($bill_to_accountaddress_seq)
    {
        $this->container['bill_to_accountaddress_seq'] = $bill_to_accountaddress_seq;

        return $this;
    }

    /**
     * Gets requester_account_address_seq
     *
     * @return int
     */
    public function getRequesterAccountAddressSeq()
    {
        return $this->container['requester_account_address_seq'];
    }

    /**
     * Sets requester_account_address_seq
     *
     * @param int $requester_account_address_seq <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_REQ_ADDR_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequesterAccountAddressSeq($requester_account_address_seq)
    {
        $this->container['requester_account_address_seq'] = $requester_account_address_seq;

        return $this;
    }

    /**
     * Gets ship_to_account_address_seq
     *
     * @return int
     */
    public function getShipToAccountAddressSeq()
    {
        return $this->container['ship_to_account_address_seq'];
    }

    /**
     * Sets ship_to_account_address_seq
     *
     * @param int $ship_to_account_address_seq <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_SHIPTO_ADDR_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setShipToAccountAddressSeq($ship_to_account_address_seq)
    {
        $this->container['ship_to_account_address_seq'] = $ship_to_account_address_seq;

        return $this;
    }

    /**
     * Gets booth_number
     *
     * @return string
     */
    public function getBoothNumber()
    {
        return $this->container['booth_number'];
    }

    /**
     * Sets booth_number
     *
     * @param string $booth_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_BOOTH_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBoothNumber($booth_number)
    {
        $this->container['booth_number'] = $booth_number;

        return $this;
    }

    /**
     * Gets exhibitor_id
     *
     * @return int
     */
    public function getExhibitorId()
    {
        return $this->container['exhibitor_id'];
    }

    /**
     * Sets exhibitor_id
     *
     * @param int $exhibitor_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_EXHIBITOR_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExhibitorId($exhibitor_id)
    {
        $this->container['exhibitor_id'] = $exhibitor_id;

        return $this;
    }

    /**
     * Gets exhibitor_assignment_order
     *
     * @return int
     */
    public function getExhibitorAssignmentOrder()
    {
        return $this->container['exhibitor_assignment_order'];
    }

    /**
     * Sets exhibitor_assignment_order
     *
     * @param int $exhibitor_assignment_order <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_EXHIB_ORD_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExhibitorAssignmentOrder($exhibitor_assignment_order)
    {
        $this->container['exhibitor_assignment_order'] = $exhibitor_assignment_order;

        return $this;
    }

    /**
     * Gets registrants
     *
     * @return string
     */
    public function getRegistrants()
    {
        return $this->container['registrants'];
    }

    /**
     * Sets registrants
     *
     * @param string $registrants <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This property is only to be used when doing a POST for a new order.  You can input a comma delimited list of account codes (ex: \"CODE1,CODE2\") that will act as the registrants on the new order.  Once the order is made, Ungerboeck will add, based on the registration type, registration order items for each order (ER101) and a registrant record for each registrant on the order (ER110).  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cREGISTRANTS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRegistrants($registrants)
    {
        $this->container['registrants'] = $registrants;

        return $this;
    }

    /**
     * Gets registrant_type
     *
     * @return string
     */
    public function getRegistrantType()
    {
        return $this->container['registrant_type'];
    }

    /**
     * Sets registrant_type
     *
     * @param string $registrant_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this property when doing a POST on a new registration order.  Put the code of the registration type as its value.  All registrants attached to the order in the Registrants property will get an automatic order item assigned to it.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cREG_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRegistrantType($registrant_type)
    {
        $this->container['registrant_type'] = $registrant_type;

        return $this;
    }

    /**
     * Gets registration_order_user_field_sets
     *
     * @return \FomF\Ungerboeck\Client\Model\UserFields[]
     */
    public function getRegistrationOrderUserFieldSets()
    {
        return $this->container['registration_order_user_field_sets'];
    }

    /**
     * Sets registration_order_user_field_sets
     *
     * @param \FomF\Ungerboeck\Client\Model\UserFields[] $registration_order_user_field_sets <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This holds a list of user fields.  Edit the values in the respective user field.  This is not filled on searches unless explicitly requested in the SELECT OData query.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CR073_ISSUES Table</span></div>
     *
     * @return $this
     */
    public function setRegistrationOrderUserFieldSets($registration_order_user_field_sets)
    {
        $this->container['registration_order_user_field_sets'] = $registration_order_user_field_sets;

        return $this;
    }

    /**
     * Gets registration_order_items
     *
     * @return \FomF\Ungerboeck\Client\Model\RegistrationOrderItemsModel[]
     */
    public function getRegistrationOrderItems()
    {
        return $this->container['registration_order_items'];
    }

    /**
     * Sets registration_order_items
     *
     * @param \FomF\Ungerboeck\Client\Model\RegistrationOrderItemsModel[] $registration_order_items <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Holds list of order items associated to the order. This will be null unless on a Put or Post you pass in at least one RegistrationOrderItemsModel. This will also be null in  a Get unless your search query OData contain a Select. i.e. (OrderNumber eq {OrderNumber}$select=[RegistrationOrderItems])  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> ER101_ACCT_ORDER_DTL Table</span></div>
     *
     * @return $this
     */
    public function setRegistrationOrderItems($registration_order_items)
    {
        $this->container['registration_order_items'] = $registration_order_items;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


