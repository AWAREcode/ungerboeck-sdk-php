<?php
/**
 * AddFromEventProfileModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * AddFromEventProfileModel Class Doc Comment
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AddFromEventProfileModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AddFromEventProfileModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization_code' => 'string',
        'profile_id' => 'int',
        'description' => 'string',
        'account' => 'string',
        'copy_bookings' => 'string',
        'copy_services' => 'string',
        'copy_documents' => 'string',
        'copy_event_ud_fs' => 'string',
        'copy_event_note_classes' => 'string',
        'copy_function_documents' => 'string',
        'include_functions' => 'string',
        'copy_requirements' => 'string',
        'copy_function_note_classes' => 'string',
        'copy_function_ud_fs' => 'string',
        'copy_order_documents' => 'string',
        'copy_order_note_classes' => 'string',
        'copy_order_ud_fs' => 'string',
        'copyi_ebms_web_registration_configuration' => 'string',
        'copy_v20_web_registration_setup' => 'string',
        'copy_order_customers' => 'string',
        'new_order_status' => 'string',
        'include_orders' => 'string',
        'copy_to_date' => '\DateTime',
        'reprice_orders' => 'string',
        'copy_order_phase_to' => 'string',
        'copy_orde_phase_from' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization_code' => null,
        'profile_id' => 'int32',
        'description' => null,
        'account' => null,
        'copy_bookings' => null,
        'copy_services' => null,
        'copy_documents' => null,
        'copy_event_ud_fs' => null,
        'copy_event_note_classes' => null,
        'copy_function_documents' => null,
        'include_functions' => null,
        'copy_requirements' => null,
        'copy_function_note_classes' => null,
        'copy_function_ud_fs' => null,
        'copy_order_documents' => null,
        'copy_order_note_classes' => null,
        'copy_order_ud_fs' => null,
        'copyi_ebms_web_registration_configuration' => null,
        'copy_v20_web_registration_setup' => null,
        'copy_order_customers' => null,
        'new_order_status' => null,
        'include_orders' => null,
        'copy_to_date' => 'date-time',
        'reprice_orders' => null,
        'copy_order_phase_to' => null,
        'copy_orde_phase_from' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization_code' => 'OrganizationCode',
        'profile_id' => 'ProfileID',
        'description' => 'Description',
        'account' => 'Account',
        'copy_bookings' => 'CopyBookings',
        'copy_services' => 'CopyServices',
        'copy_documents' => 'CopyDocuments',
        'copy_event_ud_fs' => 'CopyEventUDFs',
        'copy_event_note_classes' => 'CopyEventNoteClasses',
        'copy_function_documents' => 'CopyFunctionDocuments',
        'include_functions' => 'IncludeFunctions',
        'copy_requirements' => 'CopyRequirements',
        'copy_function_note_classes' => 'CopyFunctionNoteClasses',
        'copy_function_ud_fs' => 'CopyFunctionUDFs',
        'copy_order_documents' => 'CopyOrderDocuments',
        'copy_order_note_classes' => 'CopyOrderNoteClasses',
        'copy_order_ud_fs' => 'CopyOrderUDFs',
        'copyi_ebms_web_registration_configuration' => 'CopyiEBMSWebRegistrationConfiguration',
        'copy_v20_web_registration_setup' => 'CopyV20WebRegistrationSetup',
        'copy_order_customers' => 'CopyOrderCustomers',
        'new_order_status' => 'NewOrderStatus',
        'include_orders' => 'IncludeOrders',
        'copy_to_date' => 'CopyToDate',
        'reprice_orders' => 'RepriceOrders',
        'copy_order_phase_to' => 'CopyOrderPhaseTo',
        'copy_orde_phase_from' => 'CopyOrdePhaseFrom'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization_code' => 'setOrganizationCode',
        'profile_id' => 'setProfileId',
        'description' => 'setDescription',
        'account' => 'setAccount',
        'copy_bookings' => 'setCopyBookings',
        'copy_services' => 'setCopyServices',
        'copy_documents' => 'setCopyDocuments',
        'copy_event_ud_fs' => 'setCopyEventUdFs',
        'copy_event_note_classes' => 'setCopyEventNoteClasses',
        'copy_function_documents' => 'setCopyFunctionDocuments',
        'include_functions' => 'setIncludeFunctions',
        'copy_requirements' => 'setCopyRequirements',
        'copy_function_note_classes' => 'setCopyFunctionNoteClasses',
        'copy_function_ud_fs' => 'setCopyFunctionUdFs',
        'copy_order_documents' => 'setCopyOrderDocuments',
        'copy_order_note_classes' => 'setCopyOrderNoteClasses',
        'copy_order_ud_fs' => 'setCopyOrderUdFs',
        'copyi_ebms_web_registration_configuration' => 'setCopyiEbmsWebRegistrationConfiguration',
        'copy_v20_web_registration_setup' => 'setCopyV20WebRegistrationSetup',
        'copy_order_customers' => 'setCopyOrderCustomers',
        'new_order_status' => 'setNewOrderStatus',
        'include_orders' => 'setIncludeOrders',
        'copy_to_date' => 'setCopyToDate',
        'reprice_orders' => 'setRepriceOrders',
        'copy_order_phase_to' => 'setCopyOrderPhaseTo',
        'copy_orde_phase_from' => 'setCopyOrdePhaseFrom'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization_code' => 'getOrganizationCode',
        'profile_id' => 'getProfileId',
        'description' => 'getDescription',
        'account' => 'getAccount',
        'copy_bookings' => 'getCopyBookings',
        'copy_services' => 'getCopyServices',
        'copy_documents' => 'getCopyDocuments',
        'copy_event_ud_fs' => 'getCopyEventUdFs',
        'copy_event_note_classes' => 'getCopyEventNoteClasses',
        'copy_function_documents' => 'getCopyFunctionDocuments',
        'include_functions' => 'getIncludeFunctions',
        'copy_requirements' => 'getCopyRequirements',
        'copy_function_note_classes' => 'getCopyFunctionNoteClasses',
        'copy_function_ud_fs' => 'getCopyFunctionUdFs',
        'copy_order_documents' => 'getCopyOrderDocuments',
        'copy_order_note_classes' => 'getCopyOrderNoteClasses',
        'copy_order_ud_fs' => 'getCopyOrderUdFs',
        'copyi_ebms_web_registration_configuration' => 'getCopyiEbmsWebRegistrationConfiguration',
        'copy_v20_web_registration_setup' => 'getCopyV20WebRegistrationSetup',
        'copy_order_customers' => 'getCopyOrderCustomers',
        'new_order_status' => 'getNewOrderStatus',
        'include_orders' => 'getIncludeOrders',
        'copy_to_date' => 'getCopyToDate',
        'reprice_orders' => 'getRepriceOrders',
        'copy_order_phase_to' => 'getCopyOrderPhaseTo',
        'copy_orde_phase_from' => 'getCopyOrdePhaseFrom'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['profile_id'] = isset($data['profile_id']) ? $data['profile_id'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
        $this->container['copy_bookings'] = isset($data['copy_bookings']) ? $data['copy_bookings'] : null;
        $this->container['copy_services'] = isset($data['copy_services']) ? $data['copy_services'] : null;
        $this->container['copy_documents'] = isset($data['copy_documents']) ? $data['copy_documents'] : null;
        $this->container['copy_event_ud_fs'] = isset($data['copy_event_ud_fs']) ? $data['copy_event_ud_fs'] : null;
        $this->container['copy_event_note_classes'] = isset($data['copy_event_note_classes']) ? $data['copy_event_note_classes'] : null;
        $this->container['copy_function_documents'] = isset($data['copy_function_documents']) ? $data['copy_function_documents'] : null;
        $this->container['include_functions'] = isset($data['include_functions']) ? $data['include_functions'] : null;
        $this->container['copy_requirements'] = isset($data['copy_requirements']) ? $data['copy_requirements'] : null;
        $this->container['copy_function_note_classes'] = isset($data['copy_function_note_classes']) ? $data['copy_function_note_classes'] : null;
        $this->container['copy_function_ud_fs'] = isset($data['copy_function_ud_fs']) ? $data['copy_function_ud_fs'] : null;
        $this->container['copy_order_documents'] = isset($data['copy_order_documents']) ? $data['copy_order_documents'] : null;
        $this->container['copy_order_note_classes'] = isset($data['copy_order_note_classes']) ? $data['copy_order_note_classes'] : null;
        $this->container['copy_order_ud_fs'] = isset($data['copy_order_ud_fs']) ? $data['copy_order_ud_fs'] : null;
        $this->container['copyi_ebms_web_registration_configuration'] = isset($data['copyi_ebms_web_registration_configuration']) ? $data['copyi_ebms_web_registration_configuration'] : null;
        $this->container['copy_v20_web_registration_setup'] = isset($data['copy_v20_web_registration_setup']) ? $data['copy_v20_web_registration_setup'] : null;
        $this->container['copy_order_customers'] = isset($data['copy_order_customers']) ? $data['copy_order_customers'] : null;
        $this->container['new_order_status'] = isset($data['new_order_status']) ? $data['new_order_status'] : null;
        $this->container['include_orders'] = isset($data['include_orders']) ? $data['include_orders'] : null;
        $this->container['copy_to_date'] = isset($data['copy_to_date']) ? $data['copy_to_date'] : null;
        $this->container['reprice_orders'] = isset($data['reprice_orders']) ? $data['reprice_orders'] : null;
        $this->container['copy_order_phase_to'] = isset($data['copy_order_phase_to']) ? $data['copy_order_phase_to'] : null;
        $this->container['copy_orde_phase_from'] = isset($data['copy_orde_phase_from']) ? $data['copy_orde_phase_from'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['profile_id'] === null) {
            $invalidProperties[] = "'profile_id' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['account'] === null) {
            $invalidProperties[] = "'account' can't be null";
        }
        if ($this->container['copy_bookings'] === null) {
            $invalidProperties[] = "'copy_bookings' can't be null";
        }
        if ($this->container['copy_services'] === null) {
            $invalidProperties[] = "'copy_services' can't be null";
        }
        if ($this->container['copy_documents'] === null) {
            $invalidProperties[] = "'copy_documents' can't be null";
        }
        if ($this->container['copy_event_ud_fs'] === null) {
            $invalidProperties[] = "'copy_event_ud_fs' can't be null";
        }
        if ($this->container['copy_event_note_classes'] === null) {
            $invalidProperties[] = "'copy_event_note_classes' can't be null";
        }
        if ($this->container['copy_function_documents'] === null) {
            $invalidProperties[] = "'copy_function_documents' can't be null";
        }
        if ($this->container['include_functions'] === null) {
            $invalidProperties[] = "'include_functions' can't be null";
        }
        if ($this->container['copy_requirements'] === null) {
            $invalidProperties[] = "'copy_requirements' can't be null";
        }
        if ($this->container['copy_function_note_classes'] === null) {
            $invalidProperties[] = "'copy_function_note_classes' can't be null";
        }
        if ($this->container['copy_function_ud_fs'] === null) {
            $invalidProperties[] = "'copy_function_ud_fs' can't be null";
        }
        if ($this->container['copy_order_documents'] === null) {
            $invalidProperties[] = "'copy_order_documents' can't be null";
        }
        if ($this->container['copy_order_note_classes'] === null) {
            $invalidProperties[] = "'copy_order_note_classes' can't be null";
        }
        if ($this->container['copy_order_ud_fs'] === null) {
            $invalidProperties[] = "'copy_order_ud_fs' can't be null";
        }
        if ($this->container['copyi_ebms_web_registration_configuration'] === null) {
            $invalidProperties[] = "'copyi_ebms_web_registration_configuration' can't be null";
        }
        if ($this->container['copy_v20_web_registration_setup'] === null) {
            $invalidProperties[] = "'copy_v20_web_registration_setup' can't be null";
        }
        if ($this->container['copy_order_customers'] === null) {
            $invalidProperties[] = "'copy_order_customers' can't be null";
        }
        if ($this->container['new_order_status'] === null) {
            $invalidProperties[] = "'new_order_status' can't be null";
        }
        if ($this->container['include_orders'] === null) {
            $invalidProperties[] = "'include_orders' can't be null";
        }
        if ($this->container['copy_to_date'] === null) {
            $invalidProperties[] = "'copy_to_date' can't be null";
        }
        if ($this->container['reprice_orders'] === null) {
            $invalidProperties[] = "'reprice_orders' can't be null";
        }
        if ($this->container['copy_order_phase_to'] === null) {
            $invalidProperties[] = "'copy_order_phase_to' can't be null";
        }
        if ($this->container['copy_orde_phase_from'] === null) {
            $invalidProperties[] = "'copy_orde_phase_from' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Indentifier field.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets profile_id
     *
     * @return int
     */
    public function getProfileId()
    {
        return $this->container['profile_id'];
    }

    /**
     * Sets profile_id
     *
     * @param int $profile_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Indentifier field. Used to selected the event profile.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_EVT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setProfileId($profile_id)
    {
        $this->container['profile_id'] = $profile_id;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Description for new Event.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_EVT_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets account
     *
     * @return string
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param string $account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is required.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_CUST_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets copy_bookings
     *
     * @return string
     */
    public function getCopyBookings()
    {
        return $this->container['copy_bookings'];
    }

    /**
     * Sets copy_bookings
     *
     * @param string $copy_bookings <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Y or N  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_BOOKINGS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCopyBookings($copy_bookings)
    {
        $this->container['copy_bookings'] = $copy_bookings;

        return $this;
    }

    /**
     * Gets copy_services
     *
     * @return string
     */
    public function getCopyServices()
    {
        return $this->container['copy_services'];
    }

    /**
     * Sets copy_services
     *
     * @param string $copy_services <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Y or N  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_SERVICES</span></div>
     *
     * @return $this
     */
    public function setCopyServices($copy_services)
    {
        $this->container['copy_services'] = $copy_services;

        return $this;
    }

    /**
     * Gets copy_documents
     *
     * @return string
     */
    public function getCopyDocuments()
    {
        return $this->container['copy_documents'];
    }

    /**
     * Sets copy_documents
     *
     * @param string $copy_documents <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Y or N  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_DOCUMENTS</span></div>
     *
     * @return $this
     */
    public function setCopyDocuments($copy_documents)
    {
        $this->container['copy_documents'] = $copy_documents;

        return $this;
    }

    /**
     * Gets copy_event_ud_fs
     *
     * @return string
     */
    public function getCopyEventUdFs()
    {
        return $this->container['copy_event_ud_fs'];
    }

    /**
     * Sets copy_event_ud_fs
     *
     * @param string $copy_event_ud_fs <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Y or N  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_UDFS</span></div>
     *
     * @return $this
     */
    public function setCopyEventUdFs($copy_event_ud_fs)
    {
        $this->container['copy_event_ud_fs'] = $copy_event_ud_fs;

        return $this;
    }

    /**
     * Gets copy_event_note_classes
     *
     * @return string
     */
    public function getCopyEventNoteClasses()
    {
        return $this->container['copy_event_note_classes'];
    }

    /**
     * Sets copy_event_note_classes
     *
     * @param string $copy_event_note_classes <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Comma separated list of note classes to copy, use *ALL for all notes.   No event notes will be copied if not included.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_EVENT_NOTE_CLASSES</span></div>
     *
     * @return $this
     */
    public function setCopyEventNoteClasses($copy_event_note_classes)
    {
        $this->container['copy_event_note_classes'] = $copy_event_note_classes;

        return $this;
    }

    /**
     * Gets copy_function_documents
     *
     * @return string
     */
    public function getCopyFunctionDocuments()
    {
        return $this->container['copy_function_documents'];
    }

    /**
     * Sets copy_function_documents
     *
     * @param string $copy_function_documents <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Y or N  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_FUNCTION_DOCUMENTS</span></div>
     *
     * @return $this
     */
    public function setCopyFunctionDocuments($copy_function_documents)
    {
        $this->container['copy_function_documents'] = $copy_function_documents;

        return $this;
    }

    /**
     * Gets include_functions
     *
     * @return string
     */
    public function getIncludeFunctions()
    {
        return $this->container['include_functions'];
    }

    /**
     * Sets include_functions
     *
     * @param string $include_functions <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Y or N. Needed if including orders.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_FUNCTIONS</span></div>
     *
     * @return $this
     */
    public function setIncludeFunctions($include_functions)
    {
        $this->container['include_functions'] = $include_functions;

        return $this;
    }

    /**
     * Gets copy_requirements
     *
     * @return string
     */
    public function getCopyRequirements()
    {
        return $this->container['copy_requirements'];
    }

    /**
     * Sets copy_requirements
     *
     * @param string $copy_requirements <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Y or N  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_FUNCTION_REQUIREMENTS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCopyRequirements($copy_requirements)
    {
        $this->container['copy_requirements'] = $copy_requirements;

        return $this;
    }

    /**
     * Gets copy_function_note_classes
     *
     * @return string
     */
    public function getCopyFunctionNoteClasses()
    {
        return $this->container['copy_function_note_classes'];
    }

    /**
     * Sets copy_function_note_classes
     *
     * @param string $copy_function_note_classes <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Comma separated list of note classes to copy. Use *ALL for all notes.  No function notes will be copied if not included.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_FUNCTION_NOTES_CLASSES</span></div>
     *
     * @return $this
     */
    public function setCopyFunctionNoteClasses($copy_function_note_classes)
    {
        $this->container['copy_function_note_classes'] = $copy_function_note_classes;

        return $this;
    }

    /**
     * Gets copy_function_ud_fs
     *
     * @return string
     */
    public function getCopyFunctionUdFs()
    {
        return $this->container['copy_function_ud_fs'];
    }

    /**
     * Sets copy_function_ud_fs
     *
     * @param string $copy_function_ud_fs <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Y or N  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_FUNCTION_UDFS</span></div>
     *
     * @return $this
     */
    public function setCopyFunctionUdFs($copy_function_ud_fs)
    {
        $this->container['copy_function_ud_fs'] = $copy_function_ud_fs;

        return $this;
    }

    /**
     * Gets copy_order_documents
     *
     * @return string
     */
    public function getCopyOrderDocuments()
    {
        return $this->container['copy_order_documents'];
    }

    /**
     * Sets copy_order_documents
     *
     * @param string $copy_order_documents <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Y or N  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_ORDERS_DOCUMENTS</span></div>
     *
     * @return $this
     */
    public function setCopyOrderDocuments($copy_order_documents)
    {
        $this->container['copy_order_documents'] = $copy_order_documents;

        return $this;
    }

    /**
     * Gets copy_order_note_classes
     *
     * @return string
     */
    public function getCopyOrderNoteClasses()
    {
        return $this->container['copy_order_note_classes'];
    }

    /**
     * Sets copy_order_note_classes
     *
     * @param string $copy_order_note_classes <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Comma separated list of note classes to copy. Use *ALL for all notes.  No order notes will be copied if not included.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_ORDERS_NOTES_CLASSES  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCopyOrderNoteClasses($copy_order_note_classes)
    {
        $this->container['copy_order_note_classes'] = $copy_order_note_classes;

        return $this;
    }

    /**
     * Gets copy_order_ud_fs
     *
     * @return string
     */
    public function getCopyOrderUdFs()
    {
        return $this->container['copy_order_ud_fs'];
    }

    /**
     * Sets copy_order_ud_fs
     *
     * @param string $copy_order_ud_fs <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Y or N  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_ORDERS_UDFS</span></div>
     *
     * @return $this
     */
    public function setCopyOrderUdFs($copy_order_ud_fs)
    {
        $this->container['copy_order_ud_fs'] = $copy_order_ud_fs;

        return $this;
    }

    /**
     * Gets copyi_ebms_web_registration_configuration
     *
     * @return string
     */
    public function getCopyiEbmsWebRegistrationConfiguration()
    {
        return $this->container['copyi_ebms_web_registration_configuration'];
    }

    /**
     * Sets copyi_ebms_web_registration_configuration
     *
     * @param string $copyi_ebms_web_registration_configuration <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Y or N  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_IEBMS_WEB_CONFIG</span></div>
     *
     * @return $this
     */
    public function setCopyiEbmsWebRegistrationConfiguration($copyi_ebms_web_registration_configuration)
    {
        $this->container['copyi_ebms_web_registration_configuration'] = $copyi_ebms_web_registration_configuration;

        return $this;
    }

    /**
     * Gets copy_v20_web_registration_setup
     *
     * @return string
     */
    public function getCopyV20WebRegistrationSetup()
    {
        return $this->container['copy_v20_web_registration_setup'];
    }

    /**
     * Sets copy_v20_web_registration_setup
     *
     * @param string $copy_v20_web_registration_setup <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Y or N  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_V20_WEB_REG_SETUP</span></div>
     *
     * @return $this
     */
    public function setCopyV20WebRegistrationSetup($copy_v20_web_registration_setup)
    {
        $this->container['copy_v20_web_registration_setup'] = $copy_v20_web_registration_setup;

        return $this;
    }

    /**
     * Gets copy_order_customers
     *
     * @return string
     */
    public function getCopyOrderCustomers()
    {
        return $this->container['copy_order_customers'];
    }

    /**
     * Sets copy_order_customers
     *
     * @param string $copy_order_customers <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> All Customers = 1 or Event Customers Only = 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_ORDERS_CUSTOMERS</span></div>
     *
     * @return $this
     */
    public function setCopyOrderCustomers($copy_order_customers)
    {
        $this->container['copy_order_customers'] = $copy_order_customers;

        return $this;
    }

    /**
     * Gets new_order_status
     *
     * @return string
     */
    public function getNewOrderStatus()
    {
        return $this->container['new_order_status'];
    }

    /**
     * Sets new_order_status
     *
     * @param string $new_order_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Y or N  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_ORDERS_STATUS</span></div>
     *
     * @return $this
     */
    public function setNewOrderStatus($new_order_status)
    {
        $this->container['new_order_status'] = $new_order_status;

        return $this;
    }

    /**
     * Gets include_orders
     *
     * @return string
     */
    public function getIncludeOrders()
    {
        return $this->container['include_orders'];
    }

    /**
     * Sets include_orders
     *
     * @param string $include_orders <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Y or N.   Must include functions to include orders.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_ORDERS</span></div>
     *
     * @return $this
     */
    public function setIncludeOrders($include_orders)
    {
        $this->container['include_orders'] = $include_orders;

        return $this;
    }

    /**
     * Gets copy_to_date
     *
     * @return \DateTime
     */
    public function getCopyToDate()
    {
        return $this->container['copy_to_date'];
    }

    /**
     * Sets copy_to_date
     *
     * @param \DateTime $copy_to_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Required.   Only date is used, time portion is ignored.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_TO_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCopyToDate($copy_to_date)
    {
        $this->container['copy_to_date'] = $copy_to_date;

        return $this;
    }

    /**
     * Gets reprice_orders
     *
     * @return string
     */
    public function getRepriceOrders()
    {
        return $this->container['reprice_orders'];
    }

    /**
     * Sets reprice_orders
     *
     * @param string $reprice_orders <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Include to reprice orders. Use Order = ORDER, Use Destination Event = EVENT.   If not included orders will not be repriced.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_ORDERS_PRICE_LIST</span></div>
     *
     * @return $this
     */
    public function setRepriceOrders($reprice_orders)
    {
        $this->container['reprice_orders'] = $reprice_orders;

        return $this;
    }

    /**
     * Gets copy_order_phase_to
     *
     * @return string
     */
    public function getCopyOrderPhaseTo()
    {
        return $this->container['copy_order_phase_to'];
    }

    /**
     * Sets copy_order_phase_to
     *
     * @param string $copy_order_phase_to <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Ordered (1) or Forecast (F)  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_ORDER_PHASE_TO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCopyOrderPhaseTo($copy_order_phase_to)
    {
        $this->container['copy_order_phase_to'] = $copy_order_phase_to;

        return $this;
    }

    /**
     * Gets copy_orde_phase_from
     *
     * @return string
     */
    public function getCopyOrdePhaseFrom()
    {
        return $this->container['copy_orde_phase_from'];
    }

    /**
     * Sets copy_orde_phase_from
     *
     * @param string $copy_orde_phase_from <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Ordered (1) or Actual (5)  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cCOPY_ORDER_PHASE_FROM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCopyOrdePhaseFrom($copy_orde_phase_from)
    {
        $this->container['copy_orde_phase_from'] = $copy_orde_phase_from;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


