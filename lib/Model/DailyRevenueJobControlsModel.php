<?php
/**
 * DailyRevenueJobControlsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * DailyRevenueJobControlsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DailyRevenueJobControlsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'DailyRevenueJobControlsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'sequence' => 'int',
        'job_id' => 'string',
        'job_description' => 'string',
        'organization' => 'string',
        'record_type' => 'string',
        'job_number' => 'int',
        'date_generated' => '\DateTime',
        'run' => 'string',
        'records_added' => 'int',
        'records_changed' => 'int',
        'record_deleted' => 'int',
        'status' => 'string',
        'start_date' => '\DateTime',
        'days_out' => 'int',
        'end_date' => '\DateTime',
        'event_status_from' => 'string',
        'event_status_to' => 'string',
        'previous_date_generated' => '\DateTime',
        'entered_on' => '\DateTime',
        'changed_on' => '\DateTime',
        'entered_by' => 'string',
        'changed_by' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'sequence' => 'int32',
        'job_id' => null,
        'job_description' => null,
        'organization' => null,
        'record_type' => null,
        'job_number' => 'int32',
        'date_generated' => 'date-time',
        'run' => null,
        'records_added' => 'int32',
        'records_changed' => 'int32',
        'record_deleted' => 'int32',
        'status' => null,
        'start_date' => 'date-time',
        'days_out' => 'int32',
        'end_date' => 'date-time',
        'event_status_from' => null,
        'event_status_to' => null,
        'previous_date_generated' => 'date-time',
        'entered_on' => 'date-time',
        'changed_on' => 'date-time',
        'entered_by' => null,
        'changed_by' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'sequence' => 'Sequence',
        'job_id' => 'JobID',
        'job_description' => 'JobDescription',
        'organization' => 'Organization',
        'record_type' => 'RecordType',
        'job_number' => 'JobNumber',
        'date_generated' => 'DateGenerated',
        'run' => 'Run',
        'records_added' => 'RecordsAdded',
        'records_changed' => 'RecordsChanged',
        'record_deleted' => 'RecordDeleted',
        'status' => 'Status',
        'start_date' => 'StartDate',
        'days_out' => 'DaysOut',
        'end_date' => 'EndDate',
        'event_status_from' => 'EventStatusFrom',
        'event_status_to' => 'EventStatusTo',
        'previous_date_generated' => 'PreviousDateGenerated',
        'entered_on' => 'EnteredOn',
        'changed_on' => 'ChangedOn',
        'entered_by' => 'EnteredBy',
        'changed_by' => 'ChangedBy'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'sequence' => 'setSequence',
        'job_id' => 'setJobId',
        'job_description' => 'setJobDescription',
        'organization' => 'setOrganization',
        'record_type' => 'setRecordType',
        'job_number' => 'setJobNumber',
        'date_generated' => 'setDateGenerated',
        'run' => 'setRun',
        'records_added' => 'setRecordsAdded',
        'records_changed' => 'setRecordsChanged',
        'record_deleted' => 'setRecordDeleted',
        'status' => 'setStatus',
        'start_date' => 'setStartDate',
        'days_out' => 'setDaysOut',
        'end_date' => 'setEndDate',
        'event_status_from' => 'setEventStatusFrom',
        'event_status_to' => 'setEventStatusTo',
        'previous_date_generated' => 'setPreviousDateGenerated',
        'entered_on' => 'setEnteredOn',
        'changed_on' => 'setChangedOn',
        'entered_by' => 'setEnteredBy',
        'changed_by' => 'setChangedBy'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'sequence' => 'getSequence',
        'job_id' => 'getJobId',
        'job_description' => 'getJobDescription',
        'organization' => 'getOrganization',
        'record_type' => 'getRecordType',
        'job_number' => 'getJobNumber',
        'date_generated' => 'getDateGenerated',
        'run' => 'getRun',
        'records_added' => 'getRecordsAdded',
        'records_changed' => 'getRecordsChanged',
        'record_deleted' => 'getRecordDeleted',
        'status' => 'getStatus',
        'start_date' => 'getStartDate',
        'days_out' => 'getDaysOut',
        'end_date' => 'getEndDate',
        'event_status_from' => 'getEventStatusFrom',
        'event_status_to' => 'getEventStatusTo',
        'previous_date_generated' => 'getPreviousDateGenerated',
        'entered_on' => 'getEnteredOn',
        'changed_on' => 'getChangedOn',
        'entered_by' => 'getEnteredBy',
        'changed_by' => 'getChangedBy'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['sequence'] = isset($data['sequence']) ? $data['sequence'] : null;
        $this->container['job_id'] = isset($data['job_id']) ? $data['job_id'] : null;
        $this->container['job_description'] = isset($data['job_description']) ? $data['job_description'] : null;
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['record_type'] = isset($data['record_type']) ? $data['record_type'] : null;
        $this->container['job_number'] = isset($data['job_number']) ? $data['job_number'] : null;
        $this->container['date_generated'] = isset($data['date_generated']) ? $data['date_generated'] : null;
        $this->container['run'] = isset($data['run']) ? $data['run'] : null;
        $this->container['records_added'] = isset($data['records_added']) ? $data['records_added'] : null;
        $this->container['records_changed'] = isset($data['records_changed']) ? $data['records_changed'] : null;
        $this->container['record_deleted'] = isset($data['record_deleted']) ? $data['record_deleted'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['start_date'] = isset($data['start_date']) ? $data['start_date'] : null;
        $this->container['days_out'] = isset($data['days_out']) ? $data['days_out'] : null;
        $this->container['end_date'] = isset($data['end_date']) ? $data['end_date'] : null;
        $this->container['event_status_from'] = isset($data['event_status_from']) ? $data['event_status_from'] : null;
        $this->container['event_status_to'] = isset($data['event_status_to']) ? $data['event_status_to'] : null;
        $this->container['previous_date_generated'] = isset($data['previous_date_generated']) ? $data['previous_date_generated'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['sequence'] === null) {
            $invalidProperties[] = "'sequence' can't be null";
        }
        if ($this->container['job_id'] === null) {
            $invalidProperties[] = "'job_id' can't be null";
        }
        if ($this->container['job_description'] === null) {
            $invalidProperties[] = "'job_description' can't be null";
        }
        if ($this->container['organization'] === null) {
            $invalidProperties[] = "'organization' can't be null";
        }
        if ($this->container['record_type'] === null) {
            $invalidProperties[] = "'record_type' can't be null";
        }
        if ($this->container['job_number'] === null) {
            $invalidProperties[] = "'job_number' can't be null";
        }
        if ($this->container['date_generated'] === null) {
            $invalidProperties[] = "'date_generated' can't be null";
        }
        if ($this->container['run'] === null) {
            $invalidProperties[] = "'run' can't be null";
        }
        if ($this->container['records_added'] === null) {
            $invalidProperties[] = "'records_added' can't be null";
        }
        if ($this->container['records_changed'] === null) {
            $invalidProperties[] = "'records_changed' can't be null";
        }
        if ($this->container['record_deleted'] === null) {
            $invalidProperties[] = "'record_deleted' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['start_date'] === null) {
            $invalidProperties[] = "'start_date' can't be null";
        }
        if ($this->container['days_out'] === null) {
            $invalidProperties[] = "'days_out' can't be null";
        }
        if ($this->container['end_date'] === null) {
            $invalidProperties[] = "'end_date' can't be null";
        }
        if ($this->container['event_status_from'] === null) {
            $invalidProperties[] = "'event_status_from' can't be null";
        }
        if ($this->container['event_status_to'] === null) {
            $invalidProperties[] = "'event_status_to' can't be null";
        }
        if ($this->container['previous_date_generated'] === null) {
            $invalidProperties[] = "'previous_date_generated' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets sequence
     *
     * @return int
     */
    public function getSequence()
    {
        return $this->container['sequence'];
    }

    /**
     * Sets sequence
     *
     * @param int $sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSequence($sequence)
    {
        $this->container['sequence'] = $sequence;

        return $this;
    }

    /**
     * Gets job_id
     *
     * @return string
     */
    public function getJobId()
    {
        return $this->container['job_id'];
    }

    /**
     * Sets job_id
     *
     * @param string $job_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_JOB  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setJobId($job_id)
    {
        $this->container['job_id'] = $job_id;

        return $this;
    }

    /**
     * Gets job_description
     *
     * @return string
     */
    public function getJobDescription()
    {
        return $this->container['job_description'];
    }

    /**
     * Sets job_description
     *
     * @param string $job_description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_JOB_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 60  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setJobDescription($job_description)
    {
        $this->container['job_description'] = $job_description;

        return $this;
    }

    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets record_type
     *
     * @return string
     */
    public function getRecordType()
    {
        return $this->container['record_type'];
    }

    /**
     * Sets record_type
     *
     * @param string $record_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_REC_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecordType($record_type)
    {
        $this->container['record_type'] = $record_type;

        return $this;
    }

    /**
     * Gets job_number
     *
     * @return int
     */
    public function getJobNumber()
    {
        return $this->container['job_number'];
    }

    /**
     * Sets job_number
     *
     * @param int $job_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_JOB_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setJobNumber($job_number)
    {
        $this->container['job_number'] = $job_number;

        return $this;
    }

    /**
     * Gets date_generated
     *
     * @return \DateTime
     */
    public function getDateGenerated()
    {
        return $this->container['date_generated'];
    }

    /**
     * Sets date_generated
     *
     * @param \DateTime $date_generated <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_DATE_PULLED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDateGenerated($date_generated)
    {
        $this->container['date_generated'] = $date_generated;

        return $this;
    }

    /**
     * Gets run
     *
     * @return string
     */
    public function getRun()
    {
        return $this->container['run'];
    }

    /**
     * Sets run
     *
     * @param string $run <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_RUN  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRun($run)
    {
        $this->container['run'] = $run;

        return $this;
    }

    /**
     * Gets records_added
     *
     * @return int
     */
    public function getRecordsAdded()
    {
        return $this->container['records_added'];
    }

    /**
     * Sets records_added
     *
     * @param int $records_added <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_RECS_ADD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecordsAdded($records_added)
    {
        $this->container['records_added'] = $records_added;

        return $this;
    }

    /**
     * Gets records_changed
     *
     * @return int
     */
    public function getRecordsChanged()
    {
        return $this->container['records_changed'];
    }

    /**
     * Sets records_changed
     *
     * @param int $records_changed <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_RECS_CHG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecordsChanged($records_changed)
    {
        $this->container['records_changed'] = $records_changed;

        return $this;
    }

    /**
     * Gets record_deleted
     *
     * @return int
     */
    public function getRecordDeleted()
    {
        return $this->container['record_deleted'];
    }

    /**
     * Sets record_deleted
     *
     * @param int $record_deleted <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_RECS_DEL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecordDeleted($record_deleted)
    {
        $this->container['record_deleted'] = $record_deleted;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_JOB_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return \DateTime
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param \DateTime $start_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_START_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets days_out
     *
     * @return int
     */
    public function getDaysOut()
    {
        return $this->container['days_out'];
    }

    /**
     * Sets days_out
     *
     * @param int $days_out <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_DAYS_OUT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDaysOut($days_out)
    {
        $this->container['days_out'] = $days_out;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return \DateTime
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param \DateTime $end_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_END_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets event_status_from
     *
     * @return string
     */
    public function getEventStatusFrom()
    {
        return $this->container['event_status_from'];
    }

    /**
     * Sets event_status_from
     *
     * @param string $event_status_from <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_EVT_STS_FROM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEventStatusFrom($event_status_from)
    {
        $this->container['event_status_from'] = $event_status_from;

        return $this;
    }

    /**
     * Gets event_status_to
     *
     * @return string
     */
    public function getEventStatusTo()
    {
        return $this->container['event_status_to'];
    }

    /**
     * Sets event_status_to
     *
     * @param string $event_status_to <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_EVT_STS_THRU  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEventStatusTo($event_status_to)
    {
        $this->container['event_status_to'] = $event_status_to;

        return $this;
    }

    /**
     * Gets previous_date_generated
     *
     * @return \DateTime
     */
    public function getPreviousDateGenerated()
    {
        return $this->container['previous_date_generated'];
    }

    /**
     * Sets previous_date_generated
     *
     * @param \DateTime $previous_date_generated <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_LAST_DATE_PULLED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPreviousDateGenerated($previous_date_generated)
    {
        $this->container['previous_date_generated'] = $previous_date_generated;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM941_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


