<?php
/**
 * DistributionsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * DistributionsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DistributionsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'DistributionsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization_code' => 'string',
        'bulletin_application' => 'string',
        'meeting' => 'int',
        'bulletin' => 'int',
        'distribution_entry_seq_nbr' => 'int',
        'productsand_services' => 'string',
        'distribution_account' => 'string',
        'entered_on' => '\DateTime',
        'entered_by_code' => 'string',
        'changed_on' => '\DateTime',
        'changed_by_code' => 'string',
        'response' => 'string',
        'note' => 'string',
        'response_date' => '\DateTime',
        'distribution_contact' => 'string',
        'type' => 'string',
        'response_reason' => 'string',
        'final_response' => 'string',
        'rate_year' => 'int',
        'annual_pct_rate_increase' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization_code' => null,
        'bulletin_application' => null,
        'meeting' => 'int32',
        'bulletin' => 'int32',
        'distribution_entry_seq_nbr' => 'int32',
        'productsand_services' => null,
        'distribution_account' => null,
        'entered_on' => 'date-time',
        'entered_by_code' => null,
        'changed_on' => 'date-time',
        'changed_by_code' => null,
        'response' => null,
        'note' => null,
        'response_date' => 'date-time',
        'distribution_contact' => null,
        'type' => null,
        'response_reason' => null,
        'final_response' => null,
        'rate_year' => 'int32',
        'annual_pct_rate_increase' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization_code' => 'OrganizationCode',
        'bulletin_application' => 'BulletinApplication',
        'meeting' => 'Meeting',
        'bulletin' => 'Bulletin',
        'distribution_entry_seq_nbr' => 'DistributionEntrySeqNbr',
        'productsand_services' => 'ProductsandServices',
        'distribution_account' => 'DistributionAccount',
        'entered_on' => 'EnteredOn',
        'entered_by_code' => 'EnteredByCode',
        'changed_on' => 'ChangedOn',
        'changed_by_code' => 'ChangedByCode',
        'response' => 'Response',
        'note' => 'Note',
        'response_date' => 'ResponseDate',
        'distribution_contact' => 'DistributionContact',
        'type' => 'Type',
        'response_reason' => 'ResponseReason',
        'final_response' => 'FinalResponse',
        'rate_year' => 'RateYear',
        'annual_pct_rate_increase' => 'AnnualPctRateIncrease'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization_code' => 'setOrganizationCode',
        'bulletin_application' => 'setBulletinApplication',
        'meeting' => 'setMeeting',
        'bulletin' => 'setBulletin',
        'distribution_entry_seq_nbr' => 'setDistributionEntrySeqNbr',
        'productsand_services' => 'setProductsandServices',
        'distribution_account' => 'setDistributionAccount',
        'entered_on' => 'setEnteredOn',
        'entered_by_code' => 'setEnteredByCode',
        'changed_on' => 'setChangedOn',
        'changed_by_code' => 'setChangedByCode',
        'response' => 'setResponse',
        'note' => 'setNote',
        'response_date' => 'setResponseDate',
        'distribution_contact' => 'setDistributionContact',
        'type' => 'setType',
        'response_reason' => 'setResponseReason',
        'final_response' => 'setFinalResponse',
        'rate_year' => 'setRateYear',
        'annual_pct_rate_increase' => 'setAnnualPctRateIncrease'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization_code' => 'getOrganizationCode',
        'bulletin_application' => 'getBulletinApplication',
        'meeting' => 'getMeeting',
        'bulletin' => 'getBulletin',
        'distribution_entry_seq_nbr' => 'getDistributionEntrySeqNbr',
        'productsand_services' => 'getProductsandServices',
        'distribution_account' => 'getDistributionAccount',
        'entered_on' => 'getEnteredOn',
        'entered_by_code' => 'getEnteredByCode',
        'changed_on' => 'getChangedOn',
        'changed_by_code' => 'getChangedByCode',
        'response' => 'getResponse',
        'note' => 'getNote',
        'response_date' => 'getResponseDate',
        'distribution_contact' => 'getDistributionContact',
        'type' => 'getType',
        'response_reason' => 'getResponseReason',
        'final_response' => 'getFinalResponse',
        'rate_year' => 'getRateYear',
        'annual_pct_rate_increase' => 'getAnnualPctRateIncrease'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['bulletin_application'] = isset($data['bulletin_application']) ? $data['bulletin_application'] : null;
        $this->container['meeting'] = isset($data['meeting']) ? $data['meeting'] : null;
        $this->container['bulletin'] = isset($data['bulletin']) ? $data['bulletin'] : null;
        $this->container['distribution_entry_seq_nbr'] = isset($data['distribution_entry_seq_nbr']) ? $data['distribution_entry_seq_nbr'] : null;
        $this->container['productsand_services'] = isset($data['productsand_services']) ? $data['productsand_services'] : null;
        $this->container['distribution_account'] = isset($data['distribution_account']) ? $data['distribution_account'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['entered_by_code'] = isset($data['entered_by_code']) ? $data['entered_by_code'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['changed_by_code'] = isset($data['changed_by_code']) ? $data['changed_by_code'] : null;
        $this->container['response'] = isset($data['response']) ? $data['response'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['response_date'] = isset($data['response_date']) ? $data['response_date'] : null;
        $this->container['distribution_contact'] = isset($data['distribution_contact']) ? $data['distribution_contact'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['response_reason'] = isset($data['response_reason']) ? $data['response_reason'] : null;
        $this->container['final_response'] = isset($data['final_response']) ? $data['final_response'] : null;
        $this->container['rate_year'] = isset($data['rate_year']) ? $data['rate_year'] : null;
        $this->container['annual_pct_rate_increase'] = isset($data['annual_pct_rate_increase']) ? $data['annual_pct_rate_increase'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['bulletin_application'] === null) {
            $invalidProperties[] = "'bulletin_application' can't be null";
        }
        if ($this->container['meeting'] === null) {
            $invalidProperties[] = "'meeting' can't be null";
        }
        if ($this->container['bulletin'] === null) {
            $invalidProperties[] = "'bulletin' can't be null";
        }
        if ($this->container['distribution_entry_seq_nbr'] === null) {
            $invalidProperties[] = "'distribution_entry_seq_nbr' can't be null";
        }
        if ($this->container['productsand_services'] === null) {
            $invalidProperties[] = "'productsand_services' can't be null";
        }
        if ($this->container['distribution_account'] === null) {
            $invalidProperties[] = "'distribution_account' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['entered_by_code'] === null) {
            $invalidProperties[] = "'entered_by_code' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['changed_by_code'] === null) {
            $invalidProperties[] = "'changed_by_code' can't be null";
        }
        if ($this->container['response'] === null) {
            $invalidProperties[] = "'response' can't be null";
        }
        if ($this->container['note'] === null) {
            $invalidProperties[] = "'note' can't be null";
        }
        if ($this->container['response_date'] === null) {
            $invalidProperties[] = "'response_date' can't be null";
        }
        if ($this->container['distribution_contact'] === null) {
            $invalidProperties[] = "'distribution_contact' can't be null";
        }
        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['response_reason'] === null) {
            $invalidProperties[] = "'response_reason' can't be null";
        }
        if ($this->container['final_response'] === null) {
            $invalidProperties[] = "'final_response' can't be null";
        }
        if ($this->container['rate_year'] === null) {
            $invalidProperties[] = "'rate_year' can't be null";
        }
        if ($this->container['annual_pct_rate_increase'] === null) {
            $invalidProperties[] = "'annual_pct_rate_increase' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets bulletin_application
     *
     * @return string
     */
    public function getBulletinApplication()
    {
        return $this->container['bulletin_application'];
    }

    /**
     * Sets bulletin_application
     *
     * @param string $bulletin_application <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_BUL_FILE_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBulletinApplication($bulletin_application)
    {
        $this->container['bulletin_application'] = $bulletin_application;

        return $this;
    }

    /**
     * Gets meeting
     *
     * @return int
     */
    public function getMeeting()
    {
        return $this->container['meeting'];
    }

    /**
     * Sets meeting
     *
     * @param int $meeting <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_BUL_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMeeting($meeting)
    {
        $this->container['meeting'] = $meeting;

        return $this;
    }

    /**
     * Gets bulletin
     *
     * @return int
     */
    public function getBulletin()
    {
        return $this->container['bulletin'];
    }

    /**
     * Sets bulletin
     *
     * @param int $bulletin <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_BUL_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBulletin($bulletin)
    {
        $this->container['bulletin'] = $bulletin;

        return $this;
    }

    /**
     * Gets distribution_entry_seq_nbr
     *
     * @return int
     */
    public function getDistributionEntrySeqNbr()
    {
        return $this->container['distribution_entry_seq_nbr'];
    }

    /**
     * Sets distribution_entry_seq_nbr
     *
     * @param int $distribution_entry_seq_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_BUL_DIST_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDistributionEntrySeqNbr($distribution_entry_seq_nbr)
    {
        $this->container['distribution_entry_seq_nbr'] = $distribution_entry_seq_nbr;

        return $this;
    }

    /**
     * Gets productsand_services
     *
     * @return string
     */
    public function getProductsandServices()
    {
        return $this->container['productsand_services'];
    }

    /**
     * Sets productsand_services
     *
     * @param string $productsand_services <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_DIST_LIST_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 24  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setProductsandServices($productsand_services)
    {
        $this->container['productsand_services'] = $productsand_services;

        return $this;
    }

    /**
     * Gets distribution_account
     *
     * @return string
     */
    public function getDistributionAccount()
    {
        return $this->container['distribution_account'];
    }

    /**
     * Sets distribution_account
     *
     * @param string $distribution_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDistributionAccount($distribution_account)
    {
        $this->container['distribution_account'] = $distribution_account;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_ENT_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets entered_by_code
     *
     * @return string
     */
    public function getEnteredByCode()
    {
        return $this->container['entered_by_code'];
    }

    /**
     * Sets entered_by_code
     *
     * @param string $entered_by_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredByCode($entered_by_code)
    {
        $this->container['entered_by_code'] = $entered_by_code;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_UPD_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets changed_by_code
     *
     * @return string
     */
    public function getChangedByCode()
    {
        return $this->container['changed_by_code'];
    }

    /**
     * Sets changed_by_code
     *
     * @param string $changed_by_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedByCode($changed_by_code)
    {
        $this->container['changed_by_code'] = $changed_by_code;

        return $this;
    }

    /**
     * Gets response
     *
     * @return string
     */
    public function getResponse()
    {
        return $this->container['response'];
    }

    /**
     * Sets response
     *
     * @param string $response <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_LEAD_RESP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setResponse($response)
    {
        $this->container['response'] = $response;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_PROP_NOTE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets response_date
     *
     * @return \DateTime
     */
    public function getResponseDate()
    {
        return $this->container['response_date'];
    }

    /**
     * Sets response_date
     *
     * @param \DateTime $response_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_RESP_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setResponseDate($response_date)
    {
        $this->container['response_date'] = $response_date;

        return $this;
    }

    /**
     * Gets distribution_contact
     *
     * @return string
     */
    public function getDistributionContact()
    {
        return $this->container['distribution_contact'];
    }

    /**
     * Sets distribution_contact
     *
     * @param string $distribution_contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_NG_CONTACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDistributionContact($distribution_contact)
    {
        $this->container['distribution_contact'] = $distribution_contact;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_DIST_LIST_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets response_reason
     *
     * @return string
     */
    public function getResponseReason()
    {
        return $this->container['response_reason'];
    }

    /**
     * Sets response_reason
     *
     * @param string $response_reason <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_LEAD_RESP_REASON  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setResponseReason($response_reason)
    {
        $this->container['response_reason'] = $response_reason;

        return $this;
    }

    /**
     * Gets final_response
     *
     * @return string
     */
    public function getFinalResponse()
    {
        return $this->container['final_response'];
    }

    /**
     * Sets final_response
     *
     * @param string $final_response <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_FINAL_RESP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFinalResponse($final_response)
    {
        $this->container['final_response'] = $final_response;

        return $this;
    }

    /**
     * Gets rate_year
     *
     * @return int
     */
    public function getRateYear()
    {
        return $this->container['rate_year'];
    }

    /**
     * Sets rate_year
     *
     * @param int $rate_year <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_RATE_YEAR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRateYear($rate_year)
    {
        $this->container['rate_year'] = $rate_year;

        return $this;
    }

    /**
     * Gets annual_pct_rate_increase
     *
     * @return double
     */
    public function getAnnualPctRateIncrease()
    {
        return $this->container['annual_pct_rate_increase'];
    }

    /**
     * Sets annual_pct_rate_increase
     *
     * @param double $annual_pct_rate_increase <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC222_ANNUAL_RATE_INC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 92  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAnnualPctRateIncrease($annual_pct_rate_increase)
    {
        $this->container['annual_pct_rate_increase'] = $annual_pct_rate_increase;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


