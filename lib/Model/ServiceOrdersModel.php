<?php
/**
 * ServiceOrdersModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * ServiceOrdersModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ServiceOrdersModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ServiceOrdersModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization_code' => 'string',
        'order_number' => 'int',
        'order_search' => 'string',
        'event' => 'int',
        'order_date' => '\DateTime',
        'order_status' => 'string',
        'account' => 'string',
        'function' => 'int',
        'bill_to_account' => 'string',
        'printed' => 'string',
        'po_number' => 'string',
        'price_list' => 'string',
        'block' => 'string',
        'close_date' => '\DateTime',
        'phase' => 'string',
        'ordered_total' => 'double',
        'ordered_tax' => 'double',
        'net_due' => 'double',
        'actual_total' => 'double',
        'actual_tax' => 'double',
        'actual_net_due' => 'double',
        'payments' => 'double',
        'internal' => 'string',
        'entered_date_time' => '\DateTime',
        'entered_by_user_id' => 'string',
        'last_changed_date_time' => '\DateTime',
        'last_changed_by_user_id' => 'string',
        'shipping_method' => 'string',
        'department' => 'string',
        'requester_account' => 'string',
        'space' => 'string',
        'invoice_number' => 'int',
        'currency' => 'string',
        'fc_ordered_total' => 'double',
        'fc_ordered_tax' => 'double',
        'fc_net_due' => 'double',
        'fc_actual_total' => 'double',
        'fc_actual_due' => 'double',
        'fc_payments' => 'double',
        'fc_actual_tax' => 'double',
        'taxable' => 'string',
        'payment_plan' => 'int',
        'contact' => 'string',
        'bill_to_contact' => 'string',
        'requester_contact' => 'string',
        'order_account_rep' => 'string',
        'gross_area' => 'double',
        'promotion' => 'string',
        'alternate_banner_name1' => 'string',
        'alternate_banner_name2' => 'string',
        'ship_to_account' => 'string',
        'shipto_contact' => 'string',
        'alternate_banner_name3' => 'string',
        'alternate_banner_name4' => 'string',
        'alternate_banner_name5' => 'string',
        'ordered_net_area' => 'double',
        'contract' => 'int',
        'gl_account' => 'string',
        'issue_number' => 'int',
        'fixed_order' => 'string',
        'commission_order' => 'string',
        'main_exhibitor_order_nbr' => 'int',
        'campaign' => 'string',
        'tax_date' => '\DateTime',
        'exhibitor' => 'int',
        'booth_order' => 'string',
        'category' => 'int',
        'service_order_user_field_sets' => '\FomF\Ungerboeck\Client\Model\UserFields[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization_code' => null,
        'order_number' => 'int32',
        'order_search' => null,
        'event' => 'int32',
        'order_date' => 'date-time',
        'order_status' => null,
        'account' => null,
        'function' => 'int32',
        'bill_to_account' => null,
        'printed' => null,
        'po_number' => null,
        'price_list' => null,
        'block' => null,
        'close_date' => 'date-time',
        'phase' => null,
        'ordered_total' => 'double',
        'ordered_tax' => 'double',
        'net_due' => 'double',
        'actual_total' => 'double',
        'actual_tax' => 'double',
        'actual_net_due' => 'double',
        'payments' => 'double',
        'internal' => null,
        'entered_date_time' => 'date-time',
        'entered_by_user_id' => null,
        'last_changed_date_time' => 'date-time',
        'last_changed_by_user_id' => null,
        'shipping_method' => null,
        'department' => null,
        'requester_account' => null,
        'space' => null,
        'invoice_number' => 'int32',
        'currency' => null,
        'fc_ordered_total' => 'double',
        'fc_ordered_tax' => 'double',
        'fc_net_due' => 'double',
        'fc_actual_total' => 'double',
        'fc_actual_due' => 'double',
        'fc_payments' => 'double',
        'fc_actual_tax' => 'double',
        'taxable' => null,
        'payment_plan' => 'int32',
        'contact' => null,
        'bill_to_contact' => null,
        'requester_contact' => null,
        'order_account_rep' => null,
        'gross_area' => 'double',
        'promotion' => null,
        'alternate_banner_name1' => null,
        'alternate_banner_name2' => null,
        'ship_to_account' => null,
        'shipto_contact' => null,
        'alternate_banner_name3' => null,
        'alternate_banner_name4' => null,
        'alternate_banner_name5' => null,
        'ordered_net_area' => 'double',
        'contract' => 'int32',
        'gl_account' => null,
        'issue_number' => 'int32',
        'fixed_order' => null,
        'commission_order' => null,
        'main_exhibitor_order_nbr' => 'int32',
        'campaign' => null,
        'tax_date' => 'date-time',
        'exhibitor' => 'int32',
        'booth_order' => null,
        'category' => 'int32',
        'service_order_user_field_sets' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization_code' => 'OrganizationCode',
        'order_number' => 'OrderNumber',
        'order_search' => 'OrderSearch',
        'event' => 'Event',
        'order_date' => 'OrderDate',
        'order_status' => 'OrderStatus',
        'account' => 'Account',
        'function' => 'Function',
        'bill_to_account' => 'BillToAccount',
        'printed' => 'Printed',
        'po_number' => 'PONumber',
        'price_list' => 'PriceList',
        'block' => 'Block',
        'close_date' => 'CloseDate',
        'phase' => 'Phase',
        'ordered_total' => 'OrderedTotal',
        'ordered_tax' => 'OrderedTax',
        'net_due' => 'NetDue',
        'actual_total' => 'ActualTotal',
        'actual_tax' => 'ActualTax',
        'actual_net_due' => 'ActualNetDue',
        'payments' => 'Payments',
        'internal' => 'Internal',
        'entered_date_time' => 'EnteredDateTime',
        'entered_by_user_id' => 'EnteredByUserID',
        'last_changed_date_time' => 'LastChangedDateTime',
        'last_changed_by_user_id' => 'LastChangedByUserID',
        'shipping_method' => 'ShippingMethod',
        'department' => 'Department',
        'requester_account' => 'RequesterAccount',
        'space' => 'Space',
        'invoice_number' => 'InvoiceNumber',
        'currency' => 'Currency',
        'fc_ordered_total' => 'FCOrderedTotal',
        'fc_ordered_tax' => 'FCOrderedTax',
        'fc_net_due' => 'FCNetDue',
        'fc_actual_total' => 'FCActualTotal',
        'fc_actual_due' => 'FCActualDue',
        'fc_payments' => 'FCPayments',
        'fc_actual_tax' => 'FCActualTax',
        'taxable' => 'Taxable',
        'payment_plan' => 'PaymentPlan',
        'contact' => 'Contact',
        'bill_to_contact' => 'BillToContact',
        'requester_contact' => 'RequesterContact',
        'order_account_rep' => 'OrderAccountRep',
        'gross_area' => 'GrossArea',
        'promotion' => 'Promotion',
        'alternate_banner_name1' => 'AlternateBannerName1',
        'alternate_banner_name2' => 'AlternateBannerName2',
        'ship_to_account' => 'ShipToAccount',
        'shipto_contact' => 'ShiptoContact',
        'alternate_banner_name3' => 'AlternateBannerName3',
        'alternate_banner_name4' => 'AlternateBannerName4',
        'alternate_banner_name5' => 'AlternateBannerName5',
        'ordered_net_area' => 'OrderedNetArea',
        'contract' => 'Contract',
        'gl_account' => 'GLAccount',
        'issue_number' => 'IssueNumber',
        'fixed_order' => 'FixedOrder',
        'commission_order' => 'CommissionOrder',
        'main_exhibitor_order_nbr' => 'MainExhibitorOrderNbr',
        'campaign' => 'Campaign',
        'tax_date' => 'TaxDate',
        'exhibitor' => 'Exhibitor',
        'booth_order' => 'BoothOrder',
        'category' => 'Category',
        'service_order_user_field_sets' => 'ServiceOrderUserFieldSets'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization_code' => 'setOrganizationCode',
        'order_number' => 'setOrderNumber',
        'order_search' => 'setOrderSearch',
        'event' => 'setEvent',
        'order_date' => 'setOrderDate',
        'order_status' => 'setOrderStatus',
        'account' => 'setAccount',
        'function' => 'setFunction',
        'bill_to_account' => 'setBillToAccount',
        'printed' => 'setPrinted',
        'po_number' => 'setPoNumber',
        'price_list' => 'setPriceList',
        'block' => 'setBlock',
        'close_date' => 'setCloseDate',
        'phase' => 'setPhase',
        'ordered_total' => 'setOrderedTotal',
        'ordered_tax' => 'setOrderedTax',
        'net_due' => 'setNetDue',
        'actual_total' => 'setActualTotal',
        'actual_tax' => 'setActualTax',
        'actual_net_due' => 'setActualNetDue',
        'payments' => 'setPayments',
        'internal' => 'setInternal',
        'entered_date_time' => 'setEnteredDateTime',
        'entered_by_user_id' => 'setEnteredByUserId',
        'last_changed_date_time' => 'setLastChangedDateTime',
        'last_changed_by_user_id' => 'setLastChangedByUserId',
        'shipping_method' => 'setShippingMethod',
        'department' => 'setDepartment',
        'requester_account' => 'setRequesterAccount',
        'space' => 'setSpace',
        'invoice_number' => 'setInvoiceNumber',
        'currency' => 'setCurrency',
        'fc_ordered_total' => 'setFcOrderedTotal',
        'fc_ordered_tax' => 'setFcOrderedTax',
        'fc_net_due' => 'setFcNetDue',
        'fc_actual_total' => 'setFcActualTotal',
        'fc_actual_due' => 'setFcActualDue',
        'fc_payments' => 'setFcPayments',
        'fc_actual_tax' => 'setFcActualTax',
        'taxable' => 'setTaxable',
        'payment_plan' => 'setPaymentPlan',
        'contact' => 'setContact',
        'bill_to_contact' => 'setBillToContact',
        'requester_contact' => 'setRequesterContact',
        'order_account_rep' => 'setOrderAccountRep',
        'gross_area' => 'setGrossArea',
        'promotion' => 'setPromotion',
        'alternate_banner_name1' => 'setAlternateBannerName1',
        'alternate_banner_name2' => 'setAlternateBannerName2',
        'ship_to_account' => 'setShipToAccount',
        'shipto_contact' => 'setShiptoContact',
        'alternate_banner_name3' => 'setAlternateBannerName3',
        'alternate_banner_name4' => 'setAlternateBannerName4',
        'alternate_banner_name5' => 'setAlternateBannerName5',
        'ordered_net_area' => 'setOrderedNetArea',
        'contract' => 'setContract',
        'gl_account' => 'setGlAccount',
        'issue_number' => 'setIssueNumber',
        'fixed_order' => 'setFixedOrder',
        'commission_order' => 'setCommissionOrder',
        'main_exhibitor_order_nbr' => 'setMainExhibitorOrderNbr',
        'campaign' => 'setCampaign',
        'tax_date' => 'setTaxDate',
        'exhibitor' => 'setExhibitor',
        'booth_order' => 'setBoothOrder',
        'category' => 'setCategory',
        'service_order_user_field_sets' => 'setServiceOrderUserFieldSets'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization_code' => 'getOrganizationCode',
        'order_number' => 'getOrderNumber',
        'order_search' => 'getOrderSearch',
        'event' => 'getEvent',
        'order_date' => 'getOrderDate',
        'order_status' => 'getOrderStatus',
        'account' => 'getAccount',
        'function' => 'getFunction',
        'bill_to_account' => 'getBillToAccount',
        'printed' => 'getPrinted',
        'po_number' => 'getPoNumber',
        'price_list' => 'getPriceList',
        'block' => 'getBlock',
        'close_date' => 'getCloseDate',
        'phase' => 'getPhase',
        'ordered_total' => 'getOrderedTotal',
        'ordered_tax' => 'getOrderedTax',
        'net_due' => 'getNetDue',
        'actual_total' => 'getActualTotal',
        'actual_tax' => 'getActualTax',
        'actual_net_due' => 'getActualNetDue',
        'payments' => 'getPayments',
        'internal' => 'getInternal',
        'entered_date_time' => 'getEnteredDateTime',
        'entered_by_user_id' => 'getEnteredByUserId',
        'last_changed_date_time' => 'getLastChangedDateTime',
        'last_changed_by_user_id' => 'getLastChangedByUserId',
        'shipping_method' => 'getShippingMethod',
        'department' => 'getDepartment',
        'requester_account' => 'getRequesterAccount',
        'space' => 'getSpace',
        'invoice_number' => 'getInvoiceNumber',
        'currency' => 'getCurrency',
        'fc_ordered_total' => 'getFcOrderedTotal',
        'fc_ordered_tax' => 'getFcOrderedTax',
        'fc_net_due' => 'getFcNetDue',
        'fc_actual_total' => 'getFcActualTotal',
        'fc_actual_due' => 'getFcActualDue',
        'fc_payments' => 'getFcPayments',
        'fc_actual_tax' => 'getFcActualTax',
        'taxable' => 'getTaxable',
        'payment_plan' => 'getPaymentPlan',
        'contact' => 'getContact',
        'bill_to_contact' => 'getBillToContact',
        'requester_contact' => 'getRequesterContact',
        'order_account_rep' => 'getOrderAccountRep',
        'gross_area' => 'getGrossArea',
        'promotion' => 'getPromotion',
        'alternate_banner_name1' => 'getAlternateBannerName1',
        'alternate_banner_name2' => 'getAlternateBannerName2',
        'ship_to_account' => 'getShipToAccount',
        'shipto_contact' => 'getShiptoContact',
        'alternate_banner_name3' => 'getAlternateBannerName3',
        'alternate_banner_name4' => 'getAlternateBannerName4',
        'alternate_banner_name5' => 'getAlternateBannerName5',
        'ordered_net_area' => 'getOrderedNetArea',
        'contract' => 'getContract',
        'gl_account' => 'getGlAccount',
        'issue_number' => 'getIssueNumber',
        'fixed_order' => 'getFixedOrder',
        'commission_order' => 'getCommissionOrder',
        'main_exhibitor_order_nbr' => 'getMainExhibitorOrderNbr',
        'campaign' => 'getCampaign',
        'tax_date' => 'getTaxDate',
        'exhibitor' => 'getExhibitor',
        'booth_order' => 'getBoothOrder',
        'category' => 'getCategory',
        'service_order_user_field_sets' => 'getServiceOrderUserFieldSets'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['order_number'] = isset($data['order_number']) ? $data['order_number'] : null;
        $this->container['order_search'] = isset($data['order_search']) ? $data['order_search'] : null;
        $this->container['event'] = isset($data['event']) ? $data['event'] : null;
        $this->container['order_date'] = isset($data['order_date']) ? $data['order_date'] : null;
        $this->container['order_status'] = isset($data['order_status']) ? $data['order_status'] : null;
        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
        $this->container['function'] = isset($data['function']) ? $data['function'] : null;
        $this->container['bill_to_account'] = isset($data['bill_to_account']) ? $data['bill_to_account'] : null;
        $this->container['printed'] = isset($data['printed']) ? $data['printed'] : null;
        $this->container['po_number'] = isset($data['po_number']) ? $data['po_number'] : null;
        $this->container['price_list'] = isset($data['price_list']) ? $data['price_list'] : null;
        $this->container['block'] = isset($data['block']) ? $data['block'] : null;
        $this->container['close_date'] = isset($data['close_date']) ? $data['close_date'] : null;
        $this->container['phase'] = isset($data['phase']) ? $data['phase'] : null;
        $this->container['ordered_total'] = isset($data['ordered_total']) ? $data['ordered_total'] : null;
        $this->container['ordered_tax'] = isset($data['ordered_tax']) ? $data['ordered_tax'] : null;
        $this->container['net_due'] = isset($data['net_due']) ? $data['net_due'] : null;
        $this->container['actual_total'] = isset($data['actual_total']) ? $data['actual_total'] : null;
        $this->container['actual_tax'] = isset($data['actual_tax']) ? $data['actual_tax'] : null;
        $this->container['actual_net_due'] = isset($data['actual_net_due']) ? $data['actual_net_due'] : null;
        $this->container['payments'] = isset($data['payments']) ? $data['payments'] : null;
        $this->container['internal'] = isset($data['internal']) ? $data['internal'] : null;
        $this->container['entered_date_time'] = isset($data['entered_date_time']) ? $data['entered_date_time'] : null;
        $this->container['entered_by_user_id'] = isset($data['entered_by_user_id']) ? $data['entered_by_user_id'] : null;
        $this->container['last_changed_date_time'] = isset($data['last_changed_date_time']) ? $data['last_changed_date_time'] : null;
        $this->container['last_changed_by_user_id'] = isset($data['last_changed_by_user_id']) ? $data['last_changed_by_user_id'] : null;
        $this->container['shipping_method'] = isset($data['shipping_method']) ? $data['shipping_method'] : null;
        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['requester_account'] = isset($data['requester_account']) ? $data['requester_account'] : null;
        $this->container['space'] = isset($data['space']) ? $data['space'] : null;
        $this->container['invoice_number'] = isset($data['invoice_number']) ? $data['invoice_number'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['fc_ordered_total'] = isset($data['fc_ordered_total']) ? $data['fc_ordered_total'] : null;
        $this->container['fc_ordered_tax'] = isset($data['fc_ordered_tax']) ? $data['fc_ordered_tax'] : null;
        $this->container['fc_net_due'] = isset($data['fc_net_due']) ? $data['fc_net_due'] : null;
        $this->container['fc_actual_total'] = isset($data['fc_actual_total']) ? $data['fc_actual_total'] : null;
        $this->container['fc_actual_due'] = isset($data['fc_actual_due']) ? $data['fc_actual_due'] : null;
        $this->container['fc_payments'] = isset($data['fc_payments']) ? $data['fc_payments'] : null;
        $this->container['fc_actual_tax'] = isset($data['fc_actual_tax']) ? $data['fc_actual_tax'] : null;
        $this->container['taxable'] = isset($data['taxable']) ? $data['taxable'] : null;
        $this->container['payment_plan'] = isset($data['payment_plan']) ? $data['payment_plan'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['bill_to_contact'] = isset($data['bill_to_contact']) ? $data['bill_to_contact'] : null;
        $this->container['requester_contact'] = isset($data['requester_contact']) ? $data['requester_contact'] : null;
        $this->container['order_account_rep'] = isset($data['order_account_rep']) ? $data['order_account_rep'] : null;
        $this->container['gross_area'] = isset($data['gross_area']) ? $data['gross_area'] : null;
        $this->container['promotion'] = isset($data['promotion']) ? $data['promotion'] : null;
        $this->container['alternate_banner_name1'] = isset($data['alternate_banner_name1']) ? $data['alternate_banner_name1'] : null;
        $this->container['alternate_banner_name2'] = isset($data['alternate_banner_name2']) ? $data['alternate_banner_name2'] : null;
        $this->container['ship_to_account'] = isset($data['ship_to_account']) ? $data['ship_to_account'] : null;
        $this->container['shipto_contact'] = isset($data['shipto_contact']) ? $data['shipto_contact'] : null;
        $this->container['alternate_banner_name3'] = isset($data['alternate_banner_name3']) ? $data['alternate_banner_name3'] : null;
        $this->container['alternate_banner_name4'] = isset($data['alternate_banner_name4']) ? $data['alternate_banner_name4'] : null;
        $this->container['alternate_banner_name5'] = isset($data['alternate_banner_name5']) ? $data['alternate_banner_name5'] : null;
        $this->container['ordered_net_area'] = isset($data['ordered_net_area']) ? $data['ordered_net_area'] : null;
        $this->container['contract'] = isset($data['contract']) ? $data['contract'] : null;
        $this->container['gl_account'] = isset($data['gl_account']) ? $data['gl_account'] : null;
        $this->container['issue_number'] = isset($data['issue_number']) ? $data['issue_number'] : null;
        $this->container['fixed_order'] = isset($data['fixed_order']) ? $data['fixed_order'] : null;
        $this->container['commission_order'] = isset($data['commission_order']) ? $data['commission_order'] : null;
        $this->container['main_exhibitor_order_nbr'] = isset($data['main_exhibitor_order_nbr']) ? $data['main_exhibitor_order_nbr'] : null;
        $this->container['campaign'] = isset($data['campaign']) ? $data['campaign'] : null;
        $this->container['tax_date'] = isset($data['tax_date']) ? $data['tax_date'] : null;
        $this->container['exhibitor'] = isset($data['exhibitor']) ? $data['exhibitor'] : null;
        $this->container['booth_order'] = isset($data['booth_order']) ? $data['booth_order'] : null;
        $this->container['category'] = isset($data['category']) ? $data['category'] : null;
        $this->container['service_order_user_field_sets'] = isset($data['service_order_user_field_sets']) ? $data['service_order_user_field_sets'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['order_number'] === null) {
            $invalidProperties[] = "'order_number' can't be null";
        }
        if ($this->container['order_search'] === null) {
            $invalidProperties[] = "'order_search' can't be null";
        }
        if ($this->container['event'] === null) {
            $invalidProperties[] = "'event' can't be null";
        }
        if ($this->container['order_date'] === null) {
            $invalidProperties[] = "'order_date' can't be null";
        }
        if ($this->container['order_status'] === null) {
            $invalidProperties[] = "'order_status' can't be null";
        }
        if ($this->container['account'] === null) {
            $invalidProperties[] = "'account' can't be null";
        }
        if ($this->container['function'] === null) {
            $invalidProperties[] = "'function' can't be null";
        }
        if ($this->container['bill_to_account'] === null) {
            $invalidProperties[] = "'bill_to_account' can't be null";
        }
        if ($this->container['printed'] === null) {
            $invalidProperties[] = "'printed' can't be null";
        }
        if ($this->container['po_number'] === null) {
            $invalidProperties[] = "'po_number' can't be null";
        }
        if ($this->container['price_list'] === null) {
            $invalidProperties[] = "'price_list' can't be null";
        }
        if ($this->container['block'] === null) {
            $invalidProperties[] = "'block' can't be null";
        }
        if ($this->container['close_date'] === null) {
            $invalidProperties[] = "'close_date' can't be null";
        }
        if ($this->container['phase'] === null) {
            $invalidProperties[] = "'phase' can't be null";
        }
        if ($this->container['ordered_total'] === null) {
            $invalidProperties[] = "'ordered_total' can't be null";
        }
        if ($this->container['ordered_tax'] === null) {
            $invalidProperties[] = "'ordered_tax' can't be null";
        }
        if ($this->container['net_due'] === null) {
            $invalidProperties[] = "'net_due' can't be null";
        }
        if ($this->container['actual_total'] === null) {
            $invalidProperties[] = "'actual_total' can't be null";
        }
        if ($this->container['actual_tax'] === null) {
            $invalidProperties[] = "'actual_tax' can't be null";
        }
        if ($this->container['actual_net_due'] === null) {
            $invalidProperties[] = "'actual_net_due' can't be null";
        }
        if ($this->container['payments'] === null) {
            $invalidProperties[] = "'payments' can't be null";
        }
        if ($this->container['internal'] === null) {
            $invalidProperties[] = "'internal' can't be null";
        }
        if ($this->container['entered_date_time'] === null) {
            $invalidProperties[] = "'entered_date_time' can't be null";
        }
        if ($this->container['entered_by_user_id'] === null) {
            $invalidProperties[] = "'entered_by_user_id' can't be null";
        }
        if ($this->container['last_changed_date_time'] === null) {
            $invalidProperties[] = "'last_changed_date_time' can't be null";
        }
        if ($this->container['last_changed_by_user_id'] === null) {
            $invalidProperties[] = "'last_changed_by_user_id' can't be null";
        }
        if ($this->container['shipping_method'] === null) {
            $invalidProperties[] = "'shipping_method' can't be null";
        }
        if ($this->container['department'] === null) {
            $invalidProperties[] = "'department' can't be null";
        }
        if ($this->container['requester_account'] === null) {
            $invalidProperties[] = "'requester_account' can't be null";
        }
        if ($this->container['space'] === null) {
            $invalidProperties[] = "'space' can't be null";
        }
        if ($this->container['invoice_number'] === null) {
            $invalidProperties[] = "'invoice_number' can't be null";
        }
        if ($this->container['currency'] === null) {
            $invalidProperties[] = "'currency' can't be null";
        }
        if ($this->container['fc_ordered_total'] === null) {
            $invalidProperties[] = "'fc_ordered_total' can't be null";
        }
        if ($this->container['fc_ordered_tax'] === null) {
            $invalidProperties[] = "'fc_ordered_tax' can't be null";
        }
        if ($this->container['fc_net_due'] === null) {
            $invalidProperties[] = "'fc_net_due' can't be null";
        }
        if ($this->container['fc_actual_total'] === null) {
            $invalidProperties[] = "'fc_actual_total' can't be null";
        }
        if ($this->container['fc_actual_due'] === null) {
            $invalidProperties[] = "'fc_actual_due' can't be null";
        }
        if ($this->container['fc_payments'] === null) {
            $invalidProperties[] = "'fc_payments' can't be null";
        }
        if ($this->container['fc_actual_tax'] === null) {
            $invalidProperties[] = "'fc_actual_tax' can't be null";
        }
        if ($this->container['taxable'] === null) {
            $invalidProperties[] = "'taxable' can't be null";
        }
        if ($this->container['payment_plan'] === null) {
            $invalidProperties[] = "'payment_plan' can't be null";
        }
        if ($this->container['contact'] === null) {
            $invalidProperties[] = "'contact' can't be null";
        }
        if ($this->container['bill_to_contact'] === null) {
            $invalidProperties[] = "'bill_to_contact' can't be null";
        }
        if ($this->container['requester_contact'] === null) {
            $invalidProperties[] = "'requester_contact' can't be null";
        }
        if ($this->container['order_account_rep'] === null) {
            $invalidProperties[] = "'order_account_rep' can't be null";
        }
        if ($this->container['gross_area'] === null) {
            $invalidProperties[] = "'gross_area' can't be null";
        }
        if ($this->container['promotion'] === null) {
            $invalidProperties[] = "'promotion' can't be null";
        }
        if ($this->container['alternate_banner_name1'] === null) {
            $invalidProperties[] = "'alternate_banner_name1' can't be null";
        }
        if ($this->container['alternate_banner_name2'] === null) {
            $invalidProperties[] = "'alternate_banner_name2' can't be null";
        }
        if ($this->container['ship_to_account'] === null) {
            $invalidProperties[] = "'ship_to_account' can't be null";
        }
        if ($this->container['shipto_contact'] === null) {
            $invalidProperties[] = "'shipto_contact' can't be null";
        }
        if ($this->container['alternate_banner_name3'] === null) {
            $invalidProperties[] = "'alternate_banner_name3' can't be null";
        }
        if ($this->container['alternate_banner_name4'] === null) {
            $invalidProperties[] = "'alternate_banner_name4' can't be null";
        }
        if ($this->container['alternate_banner_name5'] === null) {
            $invalidProperties[] = "'alternate_banner_name5' can't be null";
        }
        if ($this->container['ordered_net_area'] === null) {
            $invalidProperties[] = "'ordered_net_area' can't be null";
        }
        if ($this->container['contract'] === null) {
            $invalidProperties[] = "'contract' can't be null";
        }
        if ($this->container['gl_account'] === null) {
            $invalidProperties[] = "'gl_account' can't be null";
        }
        if ($this->container['issue_number'] === null) {
            $invalidProperties[] = "'issue_number' can't be null";
        }
        if ($this->container['fixed_order'] === null) {
            $invalidProperties[] = "'fixed_order' can't be null";
        }
        if ($this->container['commission_order'] === null) {
            $invalidProperties[] = "'commission_order' can't be null";
        }
        if ($this->container['main_exhibitor_order_nbr'] === null) {
            $invalidProperties[] = "'main_exhibitor_order_nbr' can't be null";
        }
        if ($this->container['campaign'] === null) {
            $invalidProperties[] = "'campaign' can't be null";
        }
        if ($this->container['tax_date'] === null) {
            $invalidProperties[] = "'tax_date' can't be null";
        }
        if ($this->container['exhibitor'] === null) {
            $invalidProperties[] = "'exhibitor' can't be null";
        }
        if ($this->container['booth_order'] === null) {
            $invalidProperties[] = "'booth_order' can't be null";
        }
        if ($this->container['category'] === null) {
            $invalidProperties[] = "'category' can't be null";
        }
        if ($this->container['service_order_user_field_sets'] === null) {
            $invalidProperties[] = "'service_order_user_field_sets' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Identifier Property - Use this to retrieve an order  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> ER100_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets order_number
     *
     * @return int
     */
    public function getOrderNumber()
    {
        return $this->container['order_number'];
    }

    /**
     * Sets order_number
     *
     * @param int $order_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Identifier Property - Use this to retrieve an order  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> ER100_ORD_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderNumber($order_number)
    {
        $this->container['order_number'] = $order_number;

        return $this;
    }

    /**
     * Gets order_search
     *
     * @return string
     */
    public function getOrderSearch()
    {
        return $this->container['order_search'];
    }

    /**
     * Sets order_search
     *
     * @param string $order_search <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_SO_SEARCH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderSearch($order_search)
    {
        $this->container['order_search'] = $order_search;

        return $this;
    }

    /**
     * Gets event
     *
     * @return int
     */
    public function getEvent()
    {
        return $this->container['event'];
    }

    /**
     * Sets event
     *
     * @param int $event <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_EVT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEvent($event)
    {
        $this->container['event'] = $event;

        return $this;
    }

    /**
     * Gets order_date
     *
     * @return \DateTime
     */
    public function getOrderDate()
    {
        return $this->container['order_date'];
    }

    /**
     * Sets order_date
     *
     * @param \DateTime $order_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderDate($order_date)
    {
        $this->container['order_date'] = $order_date;

        return $this;
    }

    /**
     * Gets order_status
     *
     * @return string
     */
    public function getOrderStatus()
    {
        return $this->container['order_status'];
    }

    /**
     * Sets order_status
     *
     * @param string $order_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_NEW_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderStatus($order_status)
    {
        $this->container['order_status'] = $order_status;

        return $this;
    }

    /**
     * Gets account
     *
     * @return string
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param string $account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets function
     *
     * @return int
     */
    public function getFunction()
    {
        return $this->container['function'];
    }

    /**
     * Sets function
     *
     * @param int $function <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_FUNC_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFunction($function)
    {
        $this->container['function'] = $function;

        return $this;
    }

    /**
     * Gets bill_to_account
     *
     * @return string
     */
    public function getBillToAccount()
    {
        return $this->container['bill_to_account'];
    }

    /**
     * Sets bill_to_account
     *
     * @param string $bill_to_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_BILL_TO_CUST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBillToAccount($bill_to_account)
    {
        $this->container['bill_to_account'] = $bill_to_account;

        return $this;
    }

    /**
     * Gets printed
     *
     * @return string
     */
    public function getPrinted()
    {
        return $this->container['printed'];
    }

    /**
     * Sets printed
     *
     * @param string $printed <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_PRT_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPrinted($printed)
    {
        $this->container['printed'] = $printed;

        return $this;
    }

    /**
     * Gets po_number
     *
     * @return string
     */
    public function getPoNumber()
    {
        return $this->container['po_number'];
    }

    /**
     * Sets po_number
     *
     * @param string $po_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_PO_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPoNumber($po_number)
    {
        $this->container['po_number'] = $po_number;

        return $this;
    }

    /**
     * Gets price_list
     *
     * @return string
     */
    public function getPriceList()
    {
        return $this->container['price_list'];
    }

    /**
     * Sets price_list
     *
     * @param string $price_list <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_PRICE_LIST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPriceList($price_list)
    {
        $this->container['price_list'] = $price_list;

        return $this;
    }

    /**
     * Gets block
     *
     * @return string
     */
    public function getBlock()
    {
        return $this->container['block'];
    }

    /**
     * Sets block
     *
     * @param string $block <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_BLOCK_CDE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBlock($block)
    {
        $this->container['block'] = $block;

        return $this;
    }

    /**
     * Gets close_date
     *
     * @return \DateTime
     */
    public function getCloseDate()
    {
        return $this->container['close_date'];
    }

    /**
     * Sets close_date
     *
     * @param \DateTime $close_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This needs to be filled when closing or completing an order.  Note that this does not clear if re-opening an order.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> ER100_COMP_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCloseDate($close_date)
    {
        $this->container['close_date'] = $close_date;

        return $this;
    }

    /**
     * Gets phase
     *
     * @return string
     */
    public function getPhase()
    {
        return $this->container['phase'];
    }

    /**
     * Sets phase
     *
     * @param string $phase <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_RES_PHASE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPhase($phase)
    {
        $this->container['phase'] = $phase;

        return $this;
    }

    /**
     * Gets ordered_total
     *
     * @return double
     */
    public function getOrderedTotal()
    {
        return $this->container['ordered_total'];
    }

    /**
     * Sets ordered_total
     *
     * @param double $ordered_total <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_TOT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderedTotal($ordered_total)
    {
        $this->container['ordered_total'] = $ordered_total;

        return $this;
    }

    /**
     * Gets ordered_tax
     *
     * @return double
     */
    public function getOrderedTax()
    {
        return $this->container['ordered_tax'];
    }

    /**
     * Sets ordered_tax
     *
     * @param double $ordered_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderedTax($ordered_tax)
    {
        $this->container['ordered_tax'] = $ordered_tax;

        return $this;
    }

    /**
     * Gets net_due
     *
     * @return double
     */
    public function getNetDue()
    {
        return $this->container['net_due'];
    }

    /**
     * Sets net_due
     *
     * @param double $net_due <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_DUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNetDue($net_due)
    {
        $this->container['net_due'] = $net_due;

        return $this;
    }

    /**
     * Gets actual_total
     *
     * @return double
     */
    public function getActualTotal()
    {
        return $this->container['actual_total'];
    }

    /**
     * Sets actual_total
     *
     * @param double $actual_total <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ACT_TOTAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualTotal($actual_total)
    {
        $this->container['actual_total'] = $actual_total;

        return $this;
    }

    /**
     * Gets actual_tax
     *
     * @return double
     */
    public function getActualTax()
    {
        return $this->container['actual_tax'];
    }

    /**
     * Sets actual_tax
     *
     * @param double $actual_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ACT_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualTax($actual_tax)
    {
        $this->container['actual_tax'] = $actual_tax;

        return $this;
    }

    /**
     * Gets actual_net_due
     *
     * @return double
     */
    public function getActualNetDue()
    {
        return $this->container['actual_net_due'];
    }

    /**
     * Sets actual_net_due
     *
     * @param double $actual_net_due <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ACT_DUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualNetDue($actual_net_due)
    {
        $this->container['actual_net_due'] = $actual_net_due;

        return $this;
    }

    /**
     * Gets payments
     *
     * @return double
     */
    public function getPayments()
    {
        return $this->container['payments'];
    }

    /**
     * Sets payments
     *
     * @param double $payments <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ACT_PAYMENTS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPayments($payments)
    {
        $this->container['payments'] = $payments;

        return $this;
    }

    /**
     * Gets internal
     *
     * @return string
     */
    public function getInternal()
    {
        return $this->container['internal'];
    }

    /**
     * Sets internal
     *
     * @param string $internal <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_INTERNAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInternal($internal)
    {
        $this->container['internal'] = $internal;

        return $this;
    }

    /**
     * Gets entered_date_time
     *
     * @return \DateTime
     */
    public function getEnteredDateTime()
    {
        return $this->container['entered_date_time'];
    }

    /**
     * Sets entered_date_time
     *
     * @param \DateTime $entered_date_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ENT_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredDateTime($entered_date_time)
    {
        $this->container['entered_date_time'] = $entered_date_time;

        return $this;
    }

    /**
     * Gets entered_by_user_id
     *
     * @return string
     */
    public function getEnteredByUserId()
    {
        return $this->container['entered_by_user_id'];
    }

    /**
     * Sets entered_by_user_id
     *
     * @param string $entered_by_user_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredByUserId($entered_by_user_id)
    {
        $this->container['entered_by_user_id'] = $entered_by_user_id;

        return $this;
    }

    /**
     * Gets last_changed_date_time
     *
     * @return \DateTime
     */
    public function getLastChangedDateTime()
    {
        return $this->container['last_changed_date_time'];
    }

    /**
     * Sets last_changed_date_time
     *
     * @param \DateTime $last_changed_date_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_UPD_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastChangedDateTime($last_changed_date_time)
    {
        $this->container['last_changed_date_time'] = $last_changed_date_time;

        return $this;
    }

    /**
     * Gets last_changed_by_user_id
     *
     * @return string
     */
    public function getLastChangedByUserId()
    {
        return $this->container['last_changed_by_user_id'];
    }

    /**
     * Sets last_changed_by_user_id
     *
     * @param string $last_changed_by_user_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastChangedByUserId($last_changed_by_user_id)
    {
        $this->container['last_changed_by_user_id'] = $last_changed_by_user_id;

        return $this;
    }

    /**
     * Gets shipping_method
     *
     * @return string
     */
    public function getShippingMethod()
    {
        return $this->container['shipping_method'];
    }

    /**
     * Sets shipping_method
     *
     * @param string $shipping_method <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_SHIP_METHOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setShippingMethod($shipping_method)
    {
        $this->container['shipping_method'] = $shipping_method;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string $department <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_USER_6X  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets requester_account
     *
     * @return string
     */
    public function getRequesterAccount()
    {
        return $this->container['requester_account'];
    }

    /**
     * Sets requester_account
     *
     * @param string $requester_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_REQ_CUST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequesterAccount($requester_account)
    {
        $this->container['requester_account'] = $requester_account;

        return $this;
    }

    /**
     * Gets space
     *
     * @return string
     */
    public function getSpace()
    {
        return $this->container['space'];
    }

    /**
     * Sets space
     *
     * @param string $space <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_USER_8X3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSpace($space)
    {
        $this->container['space'] = $space;

        return $this;
    }

    /**
     * Gets invoice_number
     *
     * @return int
     */
    public function getInvoiceNumber()
    {
        return $this->container['invoice_number'];
    }

    /**
     * Sets invoice_number
     *
     * @param int $invoice_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_INVOICE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoiceNumber($invoice_number)
    {
        $this->container['invoice_number'] = $invoice_number;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_CURRENCY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets fc_ordered_total
     *
     * @return double
     */
    public function getFcOrderedTotal()
    {
        return $this->container['fc_ordered_total'];
    }

    /**
     * Sets fc_ordered_total
     *
     * @param double $fc_ordered_total <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_FC_ORD_TOT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcOrderedTotal($fc_ordered_total)
    {
        $this->container['fc_ordered_total'] = $fc_ordered_total;

        return $this;
    }

    /**
     * Gets fc_ordered_tax
     *
     * @return double
     */
    public function getFcOrderedTax()
    {
        return $this->container['fc_ordered_tax'];
    }

    /**
     * Sets fc_ordered_tax
     *
     * @param double $fc_ordered_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_FC_ORD_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcOrderedTax($fc_ordered_tax)
    {
        $this->container['fc_ordered_tax'] = $fc_ordered_tax;

        return $this;
    }

    /**
     * Gets fc_net_due
     *
     * @return double
     */
    public function getFcNetDue()
    {
        return $this->container['fc_net_due'];
    }

    /**
     * Sets fc_net_due
     *
     * @param double $fc_net_due <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_FC_ORD_DUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcNetDue($fc_net_due)
    {
        $this->container['fc_net_due'] = $fc_net_due;

        return $this;
    }

    /**
     * Gets fc_actual_total
     *
     * @return double
     */
    public function getFcActualTotal()
    {
        return $this->container['fc_actual_total'];
    }

    /**
     * Sets fc_actual_total
     *
     * @param double $fc_actual_total <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_FC_ACT_TOT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcActualTotal($fc_actual_total)
    {
        $this->container['fc_actual_total'] = $fc_actual_total;

        return $this;
    }

    /**
     * Gets fc_actual_due
     *
     * @return double
     */
    public function getFcActualDue()
    {
        return $this->container['fc_actual_due'];
    }

    /**
     * Sets fc_actual_due
     *
     * @param double $fc_actual_due <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_FC_ACT_DUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcActualDue($fc_actual_due)
    {
        $this->container['fc_actual_due'] = $fc_actual_due;

        return $this;
    }

    /**
     * Gets fc_payments
     *
     * @return double
     */
    public function getFcPayments()
    {
        return $this->container['fc_payments'];
    }

    /**
     * Sets fc_payments
     *
     * @param double $fc_payments <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_FC_ACT_PAYMENTS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcPayments($fc_payments)
    {
        $this->container['fc_payments'] = $fc_payments;

        return $this;
    }

    /**
     * Gets fc_actual_tax
     *
     * @return double
     */
    public function getFcActualTax()
    {
        return $this->container['fc_actual_tax'];
    }

    /**
     * Sets fc_actual_tax
     *
     * @param double $fc_actual_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_FC_ACT_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcActualTax($fc_actual_tax)
    {
        $this->container['fc_actual_tax'] = $fc_actual_tax;

        return $this;
    }

    /**
     * Gets taxable
     *
     * @return string
     */
    public function getTaxable()
    {
        return $this->container['taxable'];
    }

    /**
     * Sets taxable
     *
     * @param string $taxable <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_TAXABLE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxable($taxable)
    {
        $this->container['taxable'] = $taxable;

        return $this;
    }

    /**
     * Gets payment_plan
     *
     * @return int
     */
    public function getPaymentPlan()
    {
        return $this->container['payment_plan'];
    }

    /**
     * Sets payment_plan
     *
     * @param int $payment_plan <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> In v20, this field is represented as a hyperlink that allows you to create a new plan or add to a selected plan.  Here, you are only allowed to attach the Service Order to a valid pre-existing payment plan ID.  This is the ER200_PAY_PLAN_ID column on table ER200_PAYMENT_PLAN.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> ER100_PAY_PLAN_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPaymentPlan($payment_plan)
    {
        $this->container['payment_plan'] = $payment_plan;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return string
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param string $contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_NG_ORD_CONTACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets bill_to_contact
     *
     * @return string
     */
    public function getBillToContact()
    {
        return $this->container['bill_to_contact'];
    }

    /**
     * Sets bill_to_contact
     *
     * @param string $bill_to_contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_NG_BTO_CONTACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBillToContact($bill_to_contact)
    {
        $this->container['bill_to_contact'] = $bill_to_contact;

        return $this;
    }

    /**
     * Gets requester_contact
     *
     * @return string
     */
    public function getRequesterContact()
    {
        return $this->container['requester_contact'];
    }

    /**
     * Sets requester_contact
     *
     * @param string $requester_contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_NG_REQ_CONTACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequesterContact($requester_contact)
    {
        $this->container['requester_contact'] = $requester_contact;

        return $this;
    }

    /**
     * Gets order_account_rep
     *
     * @return string
     */
    public function getOrderAccountRep()
    {
        return $this->container['order_account_rep'];
    }

    /**
     * Sets order_account_rep
     *
     * @param string $order_account_rep <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_ACCT_REP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderAccountRep($order_account_rep)
    {
        $this->container['order_account_rep'] = $order_account_rep;

        return $this;
    }

    /**
     * Gets gross_area
     *
     * @return double
     */
    public function getGrossArea()
    {
        return $this->container['gross_area'];
    }

    /**
     * Sets gross_area
     *
     * @param double $gross_area <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ASGN_TOT_SIZE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 92  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGrossArea($gross_area)
    {
        $this->container['gross_area'] = $gross_area;

        return $this;
    }

    /**
     * Gets promotion
     *
     * @return string
     */
    public function getPromotion()
    {
        return $this->container['promotion'];
    }

    /**
     * Sets promotion
     *
     * @param string $promotion <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_PROMO_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPromotion($promotion)
    {
        $this->container['promotion'] = $promotion;

        return $this;
    }

    /**
     * Gets alternate_banner_name1
     *
     * @return string
     */
    public function getAlternateBannerName1()
    {
        return $this->container['alternate_banner_name1'];
    }

    /**
     * Sets alternate_banner_name1
     *
     * @param string $alternate_banner_name1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ALT_ASSIGN_NAME_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateBannerName1($alternate_banner_name1)
    {
        $this->container['alternate_banner_name1'] = $alternate_banner_name1;

        return $this;
    }

    /**
     * Gets alternate_banner_name2
     *
     * @return string
     */
    public function getAlternateBannerName2()
    {
        return $this->container['alternate_banner_name2'];
    }

    /**
     * Sets alternate_banner_name2
     *
     * @param string $alternate_banner_name2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ALT_ASSIGN_NAME_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateBannerName2($alternate_banner_name2)
    {
        $this->container['alternate_banner_name2'] = $alternate_banner_name2;

        return $this;
    }

    /**
     * Gets ship_to_account
     *
     * @return string
     */
    public function getShipToAccount()
    {
        return $this->container['ship_to_account'];
    }

    /**
     * Sets ship_to_account
     *
     * @param string $ship_to_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_SHIPTO_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setShipToAccount($ship_to_account)
    {
        $this->container['ship_to_account'] = $ship_to_account;

        return $this;
    }

    /**
     * Gets shipto_contact
     *
     * @return string
     */
    public function getShiptoContact()
    {
        return $this->container['shipto_contact'];
    }

    /**
     * Sets shipto_contact
     *
     * @param string $shipto_contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_SHIPTO_CONT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setShiptoContact($shipto_contact)
    {
        $this->container['shipto_contact'] = $shipto_contact;

        return $this;
    }

    /**
     * Gets alternate_banner_name3
     *
     * @return string
     */
    public function getAlternateBannerName3()
    {
        return $this->container['alternate_banner_name3'];
    }

    /**
     * Sets alternate_banner_name3
     *
     * @param string $alternate_banner_name3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ALT_ASSIGN_NAME_3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateBannerName3($alternate_banner_name3)
    {
        $this->container['alternate_banner_name3'] = $alternate_banner_name3;

        return $this;
    }

    /**
     * Gets alternate_banner_name4
     *
     * @return string
     */
    public function getAlternateBannerName4()
    {
        return $this->container['alternate_banner_name4'];
    }

    /**
     * Sets alternate_banner_name4
     *
     * @param string $alternate_banner_name4 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ALT_ASSIGN_NAME_4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateBannerName4($alternate_banner_name4)
    {
        $this->container['alternate_banner_name4'] = $alternate_banner_name4;

        return $this;
    }

    /**
     * Gets alternate_banner_name5
     *
     * @return string
     */
    public function getAlternateBannerName5()
    {
        return $this->container['alternate_banner_name5'];
    }

    /**
     * Sets alternate_banner_name5
     *
     * @param string $alternate_banner_name5 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ALT_ASSIGN_NAME_5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateBannerName5($alternate_banner_name5)
    {
        $this->container['alternate_banner_name5'] = $alternate_banner_name5;

        return $this;
    }

    /**
     * Gets ordered_net_area
     *
     * @return double
     */
    public function getOrderedNetArea()
    {
        return $this->container['ordered_net_area'];
    }

    /**
     * Sets ordered_net_area
     *
     * @param double $ordered_net_area <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ASGN_TOT_DISP_SIZE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderedNetArea($ordered_net_area)
    {
        $this->container['ordered_net_area'] = $ordered_net_area;

        return $this;
    }

    /**
     * Gets contract
     *
     * @return int
     */
    public function getContract()
    {
        return $this->container['contract'];
    }

    /**
     * Sets contract
     *
     * @param int $contract <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_CONTRACT_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContract($contract)
    {
        $this->container['contract'] = $contract;

        return $this;
    }

    /**
     * Gets gl_account
     *
     * @return string
     */
    public function getGlAccount()
    {
        return $this->container['gl_account'];
    }

    /**
     * Sets gl_account
     *
     * @param string $gl_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_GLACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlAccount($gl_account)
    {
        $this->container['gl_account'] = $gl_account;

        return $this;
    }

    /**
     * Gets issue_number
     *
     * @return int
     */
    public function getIssueNumber()
    {
        return $this->container['issue_number'];
    }

    /**
     * Sets issue_number
     *
     * @param int $issue_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_OCCURRENCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIssueNumber($issue_number)
    {
        $this->container['issue_number'] = $issue_number;

        return $this;
    }

    /**
     * Gets fixed_order
     *
     * @return string
     */
    public function getFixedOrder()
    {
        return $this->container['fixed_order'];
    }

    /**
     * Sets fixed_order
     *
     * @param string $fixed_order <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_FIXED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFixedOrder($fixed_order)
    {
        $this->container['fixed_order'] = $fixed_order;

        return $this;
    }

    /**
     * Gets commission_order
     *
     * @return string
     */
    public function getCommissionOrder()
    {
        return $this->container['commission_order'];
    }

    /**
     * Sets commission_order
     *
     * @param string $commission_order <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_COMM_ORDER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCommissionOrder($commission_order)
    {
        $this->container['commission_order'] = $commission_order;

        return $this;
    }

    /**
     * Gets main_exhibitor_order_nbr
     *
     * @return int
     */
    public function getMainExhibitorOrderNbr()
    {
        return $this->container['main_exhibitor_order_nbr'];
    }

    /**
     * Sets main_exhibitor_order_nbr
     *
     * @param int $main_exhibitor_order_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_MAIN_EXHIB_ORDER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMainExhibitorOrderNbr($main_exhibitor_order_nbr)
    {
        $this->container['main_exhibitor_order_nbr'] = $main_exhibitor_order_nbr;

        return $this;
    }

    /**
     * Gets campaign
     *
     * @return string
     */
    public function getCampaign()
    {
        return $this->container['campaign'];
    }

    /**
     * Sets campaign
     *
     * @param string $campaign <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_PRJ_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCampaign($campaign)
    {
        $this->container['campaign'] = $campaign;

        return $this;
    }

    /**
     * Gets tax_date
     *
     * @return \DateTime
     */
    public function getTaxDate()
    {
        return $this->container['tax_date'];
    }

    /**
     * Sets tax_date
     *
     * @param \DateTime $tax_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_TAX_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxDate($tax_date)
    {
        $this->container['tax_date'] = $tax_date;

        return $this;
    }

    /**
     * Gets exhibitor
     *
     * @return int
     */
    public function getExhibitor()
    {
        return $this->container['exhibitor'];
    }

    /**
     * Sets exhibitor
     *
     * @param int $exhibitor <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_EXHIBITOR_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExhibitor($exhibitor)
    {
        $this->container['exhibitor'] = $exhibitor;

        return $this;
    }

    /**
     * Gets booth_order
     *
     * @return string
     */
    public function getBoothOrder()
    {
        return $this->container['booth_order'];
    }

    /**
     * Sets booth_order
     *
     * @param string $booth_order <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_BOOTH_ORDER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBoothOrder($booth_order)
    {
        $this->container['booth_order'] = $booth_order;

        return $this;
    }

    /**
     * Gets category
     *
     * @return int
     */
    public function getCategory()
    {
        return $this->container['category'];
    }

    /**
     * Sets category
     *
     * @param int $category <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER100_ORD_CAT_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCategory($category)
    {
        $this->container['category'] = $category;

        return $this;
    }

    /**
     * Gets service_order_user_field_sets
     *
     * @return \FomF\Ungerboeck\Client\Model\UserFields[]
     */
    public function getServiceOrderUserFieldSets()
    {
        return $this->container['service_order_user_field_sets'];
    }

    /**
     * Sets service_order_user_field_sets
     *
     * @param \FomF\Ungerboeck\Client\Model\UserFields[] $service_order_user_field_sets <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This holds a list of user fields.  Edit the values in the respective user field.  This is not filled on searches.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CR073_ISSUES Table</span></div>
     *
     * @return $this
     */
    public function setServiceOrderUserFieldSets($service_order_user_field_sets)
    {
        $this->container['service_order_user_field_sets'] = $service_order_user_field_sets;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


