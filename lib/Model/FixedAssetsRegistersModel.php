<?php
/**
 * FixedAssetsRegistersModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * FixedAssetsRegistersModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FixedAssetsRegistersModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'FixedAssetsRegistersModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'code' => 'string',
        'organization_code' => 'string',
        'description' => 'string',
        'abbreviated_description' => 'string',
        'search' => 'string',
        'class' => 'string',
        'quantity' => 'double',
        'status' => 'string',
        'master_asset' => 'string',
        'supplier' => 'string',
        'purchase_order' => 'int',
        'manufacturer' => 'string',
        'model' => 'string',
        'serial_number' => 'string',
        'barcode_rfid_number' => 'string',
        'responsible_user' => 'string',
        'space' => 'string',
        'acquired_on' => '\DateTime',
        'acquired_cost' => 'double',
        'disposal_price' => 'double',
        'disposed_on' => '\DateTime',
        'ownership' => 'string',
        'new_used' => 'string',
        'entered_on' => '\DateTime',
        'entered_by' => 'string',
        'changed_on' => '\DateTime',
        'changed_by' => 'string',
        'inventory_item' => 'string',
        'major' => 'string',
        'minor' => 'string',
        'department' => 'string',
        'image' => 'string',
        'type' => 'string',
        'original_asset' => 'string',
        'management_report_code' => 'string',
        'gl_sub_account' => 'string',
        'last_maintenance_date' => '\DateTime',
        'next_maintenance_date' => '\DateTime',
        'owner' => 'string',
        'user_date01' => '\DateTime',
        'user_date02' => '\DateTime',
        'user_nbr01' => 'double',
        'user_nbr02' => 'double',
        'user_text01' => 'string',
        'user_text02' => 'string',
        'condition' => 'string',
        'disposal_reason' => 'string',
        'fixed_assets_registers_user_field_sets' => '\FomF\Ungerboeck\Client\Model\UserFields[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'code' => null,
        'organization_code' => null,
        'description' => null,
        'abbreviated_description' => null,
        'search' => null,
        'class' => null,
        'quantity' => 'double',
        'status' => null,
        'master_asset' => null,
        'supplier' => null,
        'purchase_order' => 'int32',
        'manufacturer' => null,
        'model' => null,
        'serial_number' => null,
        'barcode_rfid_number' => null,
        'responsible_user' => null,
        'space' => null,
        'acquired_on' => 'date-time',
        'acquired_cost' => 'double',
        'disposal_price' => 'double',
        'disposed_on' => 'date-time',
        'ownership' => null,
        'new_used' => null,
        'entered_on' => 'date-time',
        'entered_by' => null,
        'changed_on' => 'date-time',
        'changed_by' => null,
        'inventory_item' => null,
        'major' => null,
        'minor' => null,
        'department' => null,
        'image' => 'byte',
        'type' => null,
        'original_asset' => null,
        'management_report_code' => null,
        'gl_sub_account' => null,
        'last_maintenance_date' => 'date-time',
        'next_maintenance_date' => 'date-time',
        'owner' => null,
        'user_date01' => 'date-time',
        'user_date02' => 'date-time',
        'user_nbr01' => 'double',
        'user_nbr02' => 'double',
        'user_text01' => null,
        'user_text02' => null,
        'condition' => null,
        'disposal_reason' => null,
        'fixed_assets_registers_user_field_sets' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'code' => 'Code',
        'organization_code' => 'OrganizationCode',
        'description' => 'Description',
        'abbreviated_description' => 'AbbreviatedDescription',
        'search' => 'Search',
        'class' => 'Class',
        'quantity' => 'Quantity',
        'status' => 'Status',
        'master_asset' => 'MasterAsset',
        'supplier' => 'Supplier',
        'purchase_order' => 'PurchaseOrder',
        'manufacturer' => 'Manufacturer',
        'model' => 'Model',
        'serial_number' => 'SerialNumber',
        'barcode_rfid_number' => 'BarcodeRFIDNumber',
        'responsible_user' => 'ResponsibleUser',
        'space' => 'Space',
        'acquired_on' => 'AcquiredOn',
        'acquired_cost' => 'AcquiredCost',
        'disposal_price' => 'DisposalPrice',
        'disposed_on' => 'DisposedOn',
        'ownership' => 'Ownership',
        'new_used' => 'NewUsed',
        'entered_on' => 'EnteredOn',
        'entered_by' => 'EnteredBy',
        'changed_on' => 'ChangedOn',
        'changed_by' => 'ChangedBy',
        'inventory_item' => 'InventoryItem',
        'major' => 'Major',
        'minor' => 'Minor',
        'department' => 'Department',
        'image' => 'Image',
        'type' => 'Type',
        'original_asset' => 'OriginalAsset',
        'management_report_code' => 'ManagementReportCode',
        'gl_sub_account' => 'GLSubAccount',
        'last_maintenance_date' => 'LastMaintenanceDate',
        'next_maintenance_date' => 'NextMaintenanceDate',
        'owner' => 'Owner',
        'user_date01' => 'UserDate01',
        'user_date02' => 'UserDate02',
        'user_nbr01' => 'UserNbr01',
        'user_nbr02' => 'UserNbr02',
        'user_text01' => 'UserText01',
        'user_text02' => 'UserText02',
        'condition' => 'Condition',
        'disposal_reason' => 'DisposalReason',
        'fixed_assets_registers_user_field_sets' => 'FixedAssetsRegistersUserFieldSets'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'code' => 'setCode',
        'organization_code' => 'setOrganizationCode',
        'description' => 'setDescription',
        'abbreviated_description' => 'setAbbreviatedDescription',
        'search' => 'setSearch',
        'class' => 'setClass',
        'quantity' => 'setQuantity',
        'status' => 'setStatus',
        'master_asset' => 'setMasterAsset',
        'supplier' => 'setSupplier',
        'purchase_order' => 'setPurchaseOrder',
        'manufacturer' => 'setManufacturer',
        'model' => 'setModel',
        'serial_number' => 'setSerialNumber',
        'barcode_rfid_number' => 'setBarcodeRfidNumber',
        'responsible_user' => 'setResponsibleUser',
        'space' => 'setSpace',
        'acquired_on' => 'setAcquiredOn',
        'acquired_cost' => 'setAcquiredCost',
        'disposal_price' => 'setDisposalPrice',
        'disposed_on' => 'setDisposedOn',
        'ownership' => 'setOwnership',
        'new_used' => 'setNewUsed',
        'entered_on' => 'setEnteredOn',
        'entered_by' => 'setEnteredBy',
        'changed_on' => 'setChangedOn',
        'changed_by' => 'setChangedBy',
        'inventory_item' => 'setInventoryItem',
        'major' => 'setMajor',
        'minor' => 'setMinor',
        'department' => 'setDepartment',
        'image' => 'setImage',
        'type' => 'setType',
        'original_asset' => 'setOriginalAsset',
        'management_report_code' => 'setManagementReportCode',
        'gl_sub_account' => 'setGlSubAccount',
        'last_maintenance_date' => 'setLastMaintenanceDate',
        'next_maintenance_date' => 'setNextMaintenanceDate',
        'owner' => 'setOwner',
        'user_date01' => 'setUserDate01',
        'user_date02' => 'setUserDate02',
        'user_nbr01' => 'setUserNbr01',
        'user_nbr02' => 'setUserNbr02',
        'user_text01' => 'setUserText01',
        'user_text02' => 'setUserText02',
        'condition' => 'setCondition',
        'disposal_reason' => 'setDisposalReason',
        'fixed_assets_registers_user_field_sets' => 'setFixedAssetsRegistersUserFieldSets'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'code' => 'getCode',
        'organization_code' => 'getOrganizationCode',
        'description' => 'getDescription',
        'abbreviated_description' => 'getAbbreviatedDescription',
        'search' => 'getSearch',
        'class' => 'getClass',
        'quantity' => 'getQuantity',
        'status' => 'getStatus',
        'master_asset' => 'getMasterAsset',
        'supplier' => 'getSupplier',
        'purchase_order' => 'getPurchaseOrder',
        'manufacturer' => 'getManufacturer',
        'model' => 'getModel',
        'serial_number' => 'getSerialNumber',
        'barcode_rfid_number' => 'getBarcodeRfidNumber',
        'responsible_user' => 'getResponsibleUser',
        'space' => 'getSpace',
        'acquired_on' => 'getAcquiredOn',
        'acquired_cost' => 'getAcquiredCost',
        'disposal_price' => 'getDisposalPrice',
        'disposed_on' => 'getDisposedOn',
        'ownership' => 'getOwnership',
        'new_used' => 'getNewUsed',
        'entered_on' => 'getEnteredOn',
        'entered_by' => 'getEnteredBy',
        'changed_on' => 'getChangedOn',
        'changed_by' => 'getChangedBy',
        'inventory_item' => 'getInventoryItem',
        'major' => 'getMajor',
        'minor' => 'getMinor',
        'department' => 'getDepartment',
        'image' => 'getImage',
        'type' => 'getType',
        'original_asset' => 'getOriginalAsset',
        'management_report_code' => 'getManagementReportCode',
        'gl_sub_account' => 'getGlSubAccount',
        'last_maintenance_date' => 'getLastMaintenanceDate',
        'next_maintenance_date' => 'getNextMaintenanceDate',
        'owner' => 'getOwner',
        'user_date01' => 'getUserDate01',
        'user_date02' => 'getUserDate02',
        'user_nbr01' => 'getUserNbr01',
        'user_nbr02' => 'getUserNbr02',
        'user_text01' => 'getUserText01',
        'user_text02' => 'getUserText02',
        'condition' => 'getCondition',
        'disposal_reason' => 'getDisposalReason',
        'fixed_assets_registers_user_field_sets' => 'getFixedAssetsRegistersUserFieldSets'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['code'] = isset($data['code']) ? $data['code'] : null;
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['abbreviated_description'] = isset($data['abbreviated_description']) ? $data['abbreviated_description'] : null;
        $this->container['search'] = isset($data['search']) ? $data['search'] : null;
        $this->container['class'] = isset($data['class']) ? $data['class'] : null;
        $this->container['quantity'] = isset($data['quantity']) ? $data['quantity'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['master_asset'] = isset($data['master_asset']) ? $data['master_asset'] : null;
        $this->container['supplier'] = isset($data['supplier']) ? $data['supplier'] : null;
        $this->container['purchase_order'] = isset($data['purchase_order']) ? $data['purchase_order'] : null;
        $this->container['manufacturer'] = isset($data['manufacturer']) ? $data['manufacturer'] : null;
        $this->container['model'] = isset($data['model']) ? $data['model'] : null;
        $this->container['serial_number'] = isset($data['serial_number']) ? $data['serial_number'] : null;
        $this->container['barcode_rfid_number'] = isset($data['barcode_rfid_number']) ? $data['barcode_rfid_number'] : null;
        $this->container['responsible_user'] = isset($data['responsible_user']) ? $data['responsible_user'] : null;
        $this->container['space'] = isset($data['space']) ? $data['space'] : null;
        $this->container['acquired_on'] = isset($data['acquired_on']) ? $data['acquired_on'] : null;
        $this->container['acquired_cost'] = isset($data['acquired_cost']) ? $data['acquired_cost'] : null;
        $this->container['disposal_price'] = isset($data['disposal_price']) ? $data['disposal_price'] : null;
        $this->container['disposed_on'] = isset($data['disposed_on']) ? $data['disposed_on'] : null;
        $this->container['ownership'] = isset($data['ownership']) ? $data['ownership'] : null;
        $this->container['new_used'] = isset($data['new_used']) ? $data['new_used'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['inventory_item'] = isset($data['inventory_item']) ? $data['inventory_item'] : null;
        $this->container['major'] = isset($data['major']) ? $data['major'] : null;
        $this->container['minor'] = isset($data['minor']) ? $data['minor'] : null;
        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['image'] = isset($data['image']) ? $data['image'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['original_asset'] = isset($data['original_asset']) ? $data['original_asset'] : null;
        $this->container['management_report_code'] = isset($data['management_report_code']) ? $data['management_report_code'] : null;
        $this->container['gl_sub_account'] = isset($data['gl_sub_account']) ? $data['gl_sub_account'] : null;
        $this->container['last_maintenance_date'] = isset($data['last_maintenance_date']) ? $data['last_maintenance_date'] : null;
        $this->container['next_maintenance_date'] = isset($data['next_maintenance_date']) ? $data['next_maintenance_date'] : null;
        $this->container['owner'] = isset($data['owner']) ? $data['owner'] : null;
        $this->container['user_date01'] = isset($data['user_date01']) ? $data['user_date01'] : null;
        $this->container['user_date02'] = isset($data['user_date02']) ? $data['user_date02'] : null;
        $this->container['user_nbr01'] = isset($data['user_nbr01']) ? $data['user_nbr01'] : null;
        $this->container['user_nbr02'] = isset($data['user_nbr02']) ? $data['user_nbr02'] : null;
        $this->container['user_text01'] = isset($data['user_text01']) ? $data['user_text01'] : null;
        $this->container['user_text02'] = isset($data['user_text02']) ? $data['user_text02'] : null;
        $this->container['condition'] = isset($data['condition']) ? $data['condition'] : null;
        $this->container['disposal_reason'] = isset($data['disposal_reason']) ? $data['disposal_reason'] : null;
        $this->container['fixed_assets_registers_user_field_sets'] = isset($data['fixed_assets_registers_user_field_sets']) ? $data['fixed_assets_registers_user_field_sets'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['code'] === null) {
            $invalidProperties[] = "'code' can't be null";
        }
        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['abbreviated_description'] === null) {
            $invalidProperties[] = "'abbreviated_description' can't be null";
        }
        if ($this->container['search'] === null) {
            $invalidProperties[] = "'search' can't be null";
        }
        if ($this->container['class'] === null) {
            $invalidProperties[] = "'class' can't be null";
        }
        if ($this->container['quantity'] === null) {
            $invalidProperties[] = "'quantity' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['master_asset'] === null) {
            $invalidProperties[] = "'master_asset' can't be null";
        }
        if ($this->container['supplier'] === null) {
            $invalidProperties[] = "'supplier' can't be null";
        }
        if ($this->container['purchase_order'] === null) {
            $invalidProperties[] = "'purchase_order' can't be null";
        }
        if ($this->container['manufacturer'] === null) {
            $invalidProperties[] = "'manufacturer' can't be null";
        }
        if ($this->container['model'] === null) {
            $invalidProperties[] = "'model' can't be null";
        }
        if ($this->container['serial_number'] === null) {
            $invalidProperties[] = "'serial_number' can't be null";
        }
        if ($this->container['barcode_rfid_number'] === null) {
            $invalidProperties[] = "'barcode_rfid_number' can't be null";
        }
        if ($this->container['responsible_user'] === null) {
            $invalidProperties[] = "'responsible_user' can't be null";
        }
        if ($this->container['space'] === null) {
            $invalidProperties[] = "'space' can't be null";
        }
        if ($this->container['acquired_on'] === null) {
            $invalidProperties[] = "'acquired_on' can't be null";
        }
        if ($this->container['acquired_cost'] === null) {
            $invalidProperties[] = "'acquired_cost' can't be null";
        }
        if ($this->container['disposal_price'] === null) {
            $invalidProperties[] = "'disposal_price' can't be null";
        }
        if ($this->container['disposed_on'] === null) {
            $invalidProperties[] = "'disposed_on' can't be null";
        }
        if ($this->container['ownership'] === null) {
            $invalidProperties[] = "'ownership' can't be null";
        }
        if ($this->container['new_used'] === null) {
            $invalidProperties[] = "'new_used' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['inventory_item'] === null) {
            $invalidProperties[] = "'inventory_item' can't be null";
        }
        if ($this->container['major'] === null) {
            $invalidProperties[] = "'major' can't be null";
        }
        if ($this->container['minor'] === null) {
            $invalidProperties[] = "'minor' can't be null";
        }
        if ($this->container['department'] === null) {
            $invalidProperties[] = "'department' can't be null";
        }
        if ($this->container['image'] === null) {
            $invalidProperties[] = "'image' can't be null";
        }
        if (!preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $this->container['image'])) {
            $invalidProperties[] = "invalid value for 'image', must be conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.";
        }

        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['original_asset'] === null) {
            $invalidProperties[] = "'original_asset' can't be null";
        }
        if ($this->container['management_report_code'] === null) {
            $invalidProperties[] = "'management_report_code' can't be null";
        }
        if ($this->container['gl_sub_account'] === null) {
            $invalidProperties[] = "'gl_sub_account' can't be null";
        }
        if ($this->container['last_maintenance_date'] === null) {
            $invalidProperties[] = "'last_maintenance_date' can't be null";
        }
        if ($this->container['next_maintenance_date'] === null) {
            $invalidProperties[] = "'next_maintenance_date' can't be null";
        }
        if ($this->container['owner'] === null) {
            $invalidProperties[] = "'owner' can't be null";
        }
        if ($this->container['user_date01'] === null) {
            $invalidProperties[] = "'user_date01' can't be null";
        }
        if ($this->container['user_date02'] === null) {
            $invalidProperties[] = "'user_date02' can't be null";
        }
        if ($this->container['user_nbr01'] === null) {
            $invalidProperties[] = "'user_nbr01' can't be null";
        }
        if ($this->container['user_nbr02'] === null) {
            $invalidProperties[] = "'user_nbr02' can't be null";
        }
        if ($this->container['user_text01'] === null) {
            $invalidProperties[] = "'user_text01' can't be null";
        }
        if ($this->container['user_text02'] === null) {
            $invalidProperties[] = "'user_text02' can't be null";
        }
        if ($this->container['condition'] === null) {
            $invalidProperties[] = "'condition' can't be null";
        }
        if ($this->container['disposal_reason'] === null) {
            $invalidProperties[] = "'disposal_reason' can't be null";
        }
        if ($this->container['fixed_assets_registers_user_field_sets'] === null) {
            $invalidProperties[] = "'fixed_assets_registers_user_field_sets' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets code
     *
     * @return string
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string $code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_ASSET_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets abbreviated_description
     *
     * @return string
     */
    public function getAbbreviatedDescription()
    {
        return $this->container['abbreviated_description'];
    }

    /**
     * Sets abbreviated_description
     *
     * @param string $abbreviated_description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_ABBREV_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAbbreviatedDescription($abbreviated_description)
    {
        $this->container['abbreviated_description'] = $abbreviated_description;

        return $this;
    }

    /**
     * Gets search
     *
     * @return string
     */
    public function getSearch()
    {
        return $this->container['search'];
    }

    /**
     * Sets search
     *
     * @param string $search <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_SEARCH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSearch($search)
    {
        $this->container['search'] = $search;

        return $this;
    }

    /**
     * Gets class
     *
     * @return string
     */
    public function getClass()
    {
        return $this->container['class'];
    }

    /**
     * Sets class
     *
     * @param string $class <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_CLASS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setClass($class)
    {
        $this->container['class'] = $class;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return double
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param double $quantity <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_QTY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets master_asset
     *
     * @return string
     */
    public function getMasterAsset()
    {
        return $this->container['master_asset'];
    }

    /**
     * Sets master_asset
     *
     * @param string $master_asset <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_MSTR_ASSET_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMasterAsset($master_asset)
    {
        $this->container['master_asset'] = $master_asset;

        return $this;
    }

    /**
     * Gets supplier
     *
     * @return string
     */
    public function getSupplier()
    {
        return $this->container['supplier'];
    }

    /**
     * Sets supplier
     *
     * @param string $supplier <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_SUPPLIER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSupplier($supplier)
    {
        $this->container['supplier'] = $supplier;

        return $this;
    }

    /**
     * Gets purchase_order
     *
     * @return int
     */
    public function getPurchaseOrder()
    {
        return $this->container['purchase_order'];
    }

    /**
     * Sets purchase_order
     *
     * @param int $purchase_order <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_PO_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPurchaseOrder($purchase_order)
    {
        $this->container['purchase_order'] = $purchase_order;

        return $this;
    }

    /**
     * Gets manufacturer
     *
     * @return string
     */
    public function getManufacturer()
    {
        return $this->container['manufacturer'];
    }

    /**
     * Sets manufacturer
     *
     * @param string $manufacturer <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_MANUFACTURER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setManufacturer($manufacturer)
    {
        $this->container['manufacturer'] = $manufacturer;

        return $this;
    }

    /**
     * Gets model
     *
     * @return string
     */
    public function getModel()
    {
        return $this->container['model'];
    }

    /**
     * Sets model
     *
     * @param string $model <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_MODEL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setModel($model)
    {
        $this->container['model'] = $model;

        return $this;
    }

    /**
     * Gets serial_number
     *
     * @return string
     */
    public function getSerialNumber()
    {
        return $this->container['serial_number'];
    }

    /**
     * Sets serial_number
     *
     * @param string $serial_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_SERIAL_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSerialNumber($serial_number)
    {
        $this->container['serial_number'] = $serial_number;

        return $this;
    }

    /**
     * Gets barcode_rfid_number
     *
     * @return string
     */
    public function getBarcodeRfidNumber()
    {
        return $this->container['barcode_rfid_number'];
    }

    /**
     * Sets barcode_rfid_number
     *
     * @param string $barcode_rfid_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_RFID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBarcodeRfidNumber($barcode_rfid_number)
    {
        $this->container['barcode_rfid_number'] = $barcode_rfid_number;

        return $this;
    }

    /**
     * Gets responsible_user
     *
     * @return string
     */
    public function getResponsibleUser()
    {
        return $this->container['responsible_user'];
    }

    /**
     * Sets responsible_user
     *
     * @param string $responsible_user <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_RESP_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setResponsibleUser($responsible_user)
    {
        $this->container['responsible_user'] = $responsible_user;

        return $this;
    }

    /**
     * Gets space
     *
     * @return string
     */
    public function getSpace()
    {
        return $this->container['space'];
    }

    /**
     * Sets space
     *
     * @param string $space <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_SPACE_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSpace($space)
    {
        $this->container['space'] = $space;

        return $this;
    }

    /**
     * Gets acquired_on
     *
     * @return \DateTime
     */
    public function getAcquiredOn()
    {
        return $this->container['acquired_on'];
    }

    /**
     * Sets acquired_on
     *
     * @param \DateTime $acquired_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_ACQUIRED_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAcquiredOn($acquired_on)
    {
        $this->container['acquired_on'] = $acquired_on;

        return $this;
    }

    /**
     * Gets acquired_cost
     *
     * @return double
     */
    public function getAcquiredCost()
    {
        return $this->container['acquired_cost'];
    }

    /**
     * Sets acquired_cost
     *
     * @param double $acquired_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_ACQUIRED_COST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAcquiredCost($acquired_cost)
    {
        $this->container['acquired_cost'] = $acquired_cost;

        return $this;
    }

    /**
     * Gets disposal_price
     *
     * @return double
     */
    public function getDisposalPrice()
    {
        return $this->container['disposal_price'];
    }

    /**
     * Sets disposal_price
     *
     * @param double $disposal_price <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_DISPOSAL_PRICE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDisposalPrice($disposal_price)
    {
        $this->container['disposal_price'] = $disposal_price;

        return $this;
    }

    /**
     * Gets disposed_on
     *
     * @return \DateTime
     */
    public function getDisposedOn()
    {
        return $this->container['disposed_on'];
    }

    /**
     * Sets disposed_on
     *
     * @param \DateTime $disposed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_DISPOSAL_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDisposedOn($disposed_on)
    {
        $this->container['disposed_on'] = $disposed_on;

        return $this;
    }

    /**
     * Gets ownership
     *
     * @return string
     */
    public function getOwnership()
    {
        return $this->container['ownership'];
    }

    /**
     * Sets ownership
     *
     * @param string $ownership <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_OWN_LEASE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOwnership($ownership)
    {
        $this->container['ownership'] = $ownership;

        return $this;
    }

    /**
     * Gets new_used
     *
     * @return string
     */
    public function getNewUsed()
    {
        return $this->container['new_used'];
    }

    /**
     * Sets new_used
     *
     * @param string $new_used <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_NEW  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNewUsed($new_used)
    {
        $this->container['new_used'] = $new_used;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets inventory_item
     *
     * @return string
     */
    public function getInventoryItem()
    {
        return $this->container['inventory_item'];
    }

    /**
     * Sets inventory_item
     *
     * @param string $inventory_item <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_ITEM_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInventoryItem($inventory_item)
    {
        $this->container['inventory_item'] = $inventory_item;

        return $this;
    }

    /**
     * Gets major
     *
     * @return string
     */
    public function getMajor()
    {
        return $this->container['major'];
    }

    /**
     * Sets major
     *
     * @param string $major <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_MAJOR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMajor($major)
    {
        $this->container['major'] = $major;

        return $this;
    }

    /**
     * Gets minor
     *
     * @return string
     */
    public function getMinor()
    {
        return $this->container['minor'];
    }

    /**
     * Sets minor
     *
     * @param string $minor <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_MINOR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMinor($minor)
    {
        $this->container['minor'] = $minor;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string $department <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_DEPARTMENT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets image
     *
     * @return string
     */
    public function getImage()
    {
        return $this->container['image'];
    }

    /**
     * Sets image
     *
     * @param string $image <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_ASSET_PIC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setImage($image)
    {

        if ((!preg_match("/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/", $image))) {
            throw new \InvalidArgumentException("invalid value for $image when calling FixedAssetsRegistersModel., must conform to the pattern /^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.");
        }

        $this->container['image'] = $image;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_CAP_EXP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets original_asset
     *
     * @return string
     */
    public function getOriginalAsset()
    {
        return $this->container['original_asset'];
    }

    /**
     * Sets original_asset
     *
     * @param string $original_asset <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_REL_ASSET_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOriginalAsset($original_asset)
    {
        $this->container['original_asset'] = $original_asset;

        return $this;
    }

    /**
     * Gets management_report_code
     *
     * @return string
     */
    public function getManagementReportCode()
    {
        return $this->container['management_report_code'];
    }

    /**
     * Sets management_report_code
     *
     * @param string $management_report_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_MGMT_RPT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setManagementReportCode($management_report_code)
    {
        $this->container['management_report_code'] = $management_report_code;

        return $this;
    }

    /**
     * Gets gl_sub_account
     *
     * @return string
     */
    public function getGlSubAccount()
    {
        return $this->container['gl_sub_account'];
    }

    /**
     * Sets gl_sub_account
     *
     * @param string $gl_sub_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_SUB_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlSubAccount($gl_sub_account)
    {
        $this->container['gl_sub_account'] = $gl_sub_account;

        return $this;
    }

    /**
     * Gets last_maintenance_date
     *
     * @return \DateTime
     */
    public function getLastMaintenanceDate()
    {
        return $this->container['last_maintenance_date'];
    }

    /**
     * Sets last_maintenance_date
     *
     * @param \DateTime $last_maintenance_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_LAST_MAINT_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastMaintenanceDate($last_maintenance_date)
    {
        $this->container['last_maintenance_date'] = $last_maintenance_date;

        return $this;
    }

    /**
     * Gets next_maintenance_date
     *
     * @return \DateTime
     */
    public function getNextMaintenanceDate()
    {
        return $this->container['next_maintenance_date'];
    }

    /**
     * Sets next_maintenance_date
     *
     * @param \DateTime $next_maintenance_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_NEXT_MAINT_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNextMaintenanceDate($next_maintenance_date)
    {
        $this->container['next_maintenance_date'] = $next_maintenance_date;

        return $this;
    }

    /**
     * Gets owner
     *
     * @return string
     */
    public function getOwner()
    {
        return $this->container['owner'];
    }

    /**
     * Sets owner
     *
     * @param string $owner <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_OWNER_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOwner($owner)
    {
        $this->container['owner'] = $owner;

        return $this;
    }

    /**
     * Gets user_date01
     *
     * @return \DateTime
     */
    public function getUserDate01()
    {
        return $this->container['user_date01'];
    }

    /**
     * Sets user_date01
     *
     * @param \DateTime $user_date01 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_USER_DATE_01  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserDate01($user_date01)
    {
        $this->container['user_date01'] = $user_date01;

        return $this;
    }

    /**
     * Gets user_date02
     *
     * @return \DateTime
     */
    public function getUserDate02()
    {
        return $this->container['user_date02'];
    }

    /**
     * Sets user_date02
     *
     * @param \DateTime $user_date02 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_USER_DATE_02  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserDate02($user_date02)
    {
        $this->container['user_date02'] = $user_date02;

        return $this;
    }

    /**
     * Gets user_nbr01
     *
     * @return double
     */
    public function getUserNbr01()
    {
        return $this->container['user_nbr01'];
    }

    /**
     * Sets user_nbr01
     *
     * @param double $user_nbr01 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_USER_NBR_01  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserNbr01($user_nbr01)
    {
        $this->container['user_nbr01'] = $user_nbr01;

        return $this;
    }

    /**
     * Gets user_nbr02
     *
     * @return double
     */
    public function getUserNbr02()
    {
        return $this->container['user_nbr02'];
    }

    /**
     * Sets user_nbr02
     *
     * @param double $user_nbr02 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_USER_NBR_02  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserNbr02($user_nbr02)
    {
        $this->container['user_nbr02'] = $user_nbr02;

        return $this;
    }

    /**
     * Gets user_text01
     *
     * @return string
     */
    public function getUserText01()
    {
        return $this->container['user_text01'];
    }

    /**
     * Sets user_text01
     *
     * @param string $user_text01 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_USER_TXT_01  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserText01($user_text01)
    {
        $this->container['user_text01'] = $user_text01;

        return $this;
    }

    /**
     * Gets user_text02
     *
     * @return string
     */
    public function getUserText02()
    {
        return $this->container['user_text02'];
    }

    /**
     * Sets user_text02
     *
     * @param string $user_text02 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_USER_TXT_02  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserText02($user_text02)
    {
        $this->container['user_text02'] = $user_text02;

        return $this;
    }

    /**
     * Gets condition
     *
     * @return string
     */
    public function getCondition()
    {
        return $this->container['condition'];
    }

    /**
     * Sets condition
     *
     * @param string $condition <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_CONDITION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCondition($condition)
    {
        $this->container['condition'] = $condition;

        return $this;
    }

    /**
     * Gets disposal_reason
     *
     * @return string
     */
    public function getDisposalReason()
    {
        return $this->container['disposal_reason'];
    }

    /**
     * Sets disposal_reason
     *
     * @param string $disposal_reason <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> FX100_DISPOSAL_REASON  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDisposalReason($disposal_reason)
    {
        $this->container['disposal_reason'] = $disposal_reason;

        return $this;
    }

    /**
     * Gets fixed_assets_registers_user_field_sets
     *
     * @return \FomF\Ungerboeck\Client\Model\UserFields[]
     */
    public function getFixedAssetsRegistersUserFieldSets()
    {
        return $this->container['fixed_assets_registers_user_field_sets'];
    }

    /**
     * Sets fixed_assets_registers_user_field_sets
     *
     * @param \FomF\Ungerboeck\Client\Model\UserFields[] $fixed_assets_registers_user_field_sets <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This holds the list of FixedAssetsRegisters User Field set values. This is not filled on searches unless explicitly requested in the SELECT OData query.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> FX103_ASSET_USER_FLDS Table</span></div>
     *
     * @return $this
     */
    public function setFixedAssetsRegistersUserFieldSets($fixed_assets_registers_user_field_sets)
    {
        $this->container['fixed_assets_registers_user_field_sets'] = $fixed_assets_registers_user_field_sets;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


