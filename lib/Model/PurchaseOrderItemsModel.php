<?php
/**
 * PurchaseOrderItemsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * PurchaseOrderItemsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PurchaseOrderItemsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PurchaseOrderItemsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'item_sequence' => 'int',
        'organization' => 'string',
        'number' => 'int',
        'item' => 'string',
        'description' => 'string',
        'units' => 'double',
        'event_job' => 'int',
        'um' => 'string',
        'unit_cost' => 'double',
        'order_sequence' => 'int',
        'extended_cost' => 'double',
        'space' => 'string',
        'department' => 'string',
        'supplier' => 'string',
        'bill_to_account' => 'string',
        'ship_to' => 'string',
        'function' => 'int',
        'order' => 'int',
        'date_in' => '\DateTime',
        'date_out' => '\DateTime',
        'order_line' => 'int',
        'requester' => 'string',
        'taxable' => 'string',
        'tax' => 'double',
        'freight' => 'double',
        'entered_on' => '\DateTime',
        'supplier_item_number' => 'string',
        'changed_on' => '\DateTime',
        'entered_by_code' => 'string',
        'changed_by_code' => 'string',
        'approval_level' => 'string',
        'search' => 'string',
        'required_on' => '\DateTime',
        'approved_by' => 'string',
        'units_received' => 'double',
        'units_paid' => 'double',
        'amount_paid' => 'double',
        'issued_on' => '\DateTime',
        'issued_by_code' => 'string',
        'amount_received' => 'double',
        'units_cancelled' => 'double',
        'completed_on' => '\DateTime',
        'completed_by_code' => 'string',
        'cancelled_on' => '\DateTime',
        'cancelled_by_code' => 'string',
        'buyer' => 'string',
        'ap_status' => 'string',
        'user_field1' => 'string',
        'user_field2' => 'string',
        'non_inventory' => 'string',
        'status' => 'string',
        'ap_close_date' => '\DateTime',
        'ap_closed_by_code' => 'string',
        'received_on' => '\DateTime',
        'requisition_number' => 'int',
        'requisition_line' => 'int',
        'phase' => 'string',
        'in_out' => 'string',
        'taxes_paid' => 'double',
        'freight_paid' => 'double',
        'currency' => 'string',
        'accrual' => 'string',
        'asset' => 'string',
        'total' => 'double',
        'subtotal' => 'double',
        'inclusive_exclusive' => 'string',
        'major' => 'string',
        'minor' => 'string',
        'tax_type' => 'string',
        'ut' => 'string',
        'supplier_contact' => 'string',
        'time_units' => 'double',
        'unit_cost_including_tax' => 'double',
        'division' => 'string',
        'management_report_code' => 'string',
        'note' => 'string',
        'gl_account' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'item_sequence' => 'int32',
        'organization' => null,
        'number' => 'int32',
        'item' => null,
        'description' => null,
        'units' => 'double',
        'event_job' => 'int32',
        'um' => null,
        'unit_cost' => 'double',
        'order_sequence' => 'int32',
        'extended_cost' => 'double',
        'space' => null,
        'department' => null,
        'supplier' => null,
        'bill_to_account' => null,
        'ship_to' => null,
        'function' => 'int32',
        'order' => 'int32',
        'date_in' => 'date-time',
        'date_out' => 'date-time',
        'order_line' => 'int32',
        'requester' => null,
        'taxable' => null,
        'tax' => 'double',
        'freight' => 'double',
        'entered_on' => 'date-time',
        'supplier_item_number' => null,
        'changed_on' => 'date-time',
        'entered_by_code' => null,
        'changed_by_code' => null,
        'approval_level' => null,
        'search' => null,
        'required_on' => 'date-time',
        'approved_by' => null,
        'units_received' => 'double',
        'units_paid' => 'double',
        'amount_paid' => 'double',
        'issued_on' => 'date-time',
        'issued_by_code' => null,
        'amount_received' => 'double',
        'units_cancelled' => 'double',
        'completed_on' => 'date-time',
        'completed_by_code' => null,
        'cancelled_on' => 'date-time',
        'cancelled_by_code' => null,
        'buyer' => null,
        'ap_status' => null,
        'user_field1' => null,
        'user_field2' => null,
        'non_inventory' => null,
        'status' => null,
        'ap_close_date' => 'date-time',
        'ap_closed_by_code' => null,
        'received_on' => 'date-time',
        'requisition_number' => 'int32',
        'requisition_line' => 'int32',
        'phase' => null,
        'in_out' => null,
        'taxes_paid' => 'double',
        'freight_paid' => 'double',
        'currency' => null,
        'accrual' => null,
        'asset' => null,
        'total' => 'double',
        'subtotal' => 'double',
        'inclusive_exclusive' => null,
        'major' => null,
        'minor' => null,
        'tax_type' => null,
        'ut' => null,
        'supplier_contact' => null,
        'time_units' => 'double',
        'unit_cost_including_tax' => 'double',
        'division' => null,
        'management_report_code' => null,
        'note' => null,
        'gl_account' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'item_sequence' => 'ItemSequence',
        'organization' => 'Organization',
        'number' => 'Number',
        'item' => 'Item',
        'description' => 'Description',
        'units' => 'Units',
        'event_job' => 'EventJob',
        'um' => 'UM',
        'unit_cost' => 'UnitCost',
        'order_sequence' => 'OrderSequence',
        'extended_cost' => 'ExtendedCost',
        'space' => 'Space',
        'department' => 'Department',
        'supplier' => 'Supplier',
        'bill_to_account' => 'BillToAccount',
        'ship_to' => 'ShipTo',
        'function' => 'Function',
        'order' => 'Order',
        'date_in' => 'DateIn',
        'date_out' => 'DateOut',
        'order_line' => 'OrderLine',
        'requester' => 'Requester',
        'taxable' => 'Taxable',
        'tax' => 'Tax',
        'freight' => 'Freight',
        'entered_on' => 'EnteredOn',
        'supplier_item_number' => 'SupplierItemNumber',
        'changed_on' => 'ChangedOn',
        'entered_by_code' => 'EnteredByCode',
        'changed_by_code' => 'ChangedByCode',
        'approval_level' => 'ApprovalLevel',
        'search' => 'Search',
        'required_on' => 'RequiredOn',
        'approved_by' => 'ApprovedBy',
        'units_received' => 'UnitsReceived',
        'units_paid' => 'UnitsPaid',
        'amount_paid' => 'AmountPaid',
        'issued_on' => 'IssuedOn',
        'issued_by_code' => 'IssuedByCode',
        'amount_received' => 'AmountReceived',
        'units_cancelled' => 'UnitsCancelled',
        'completed_on' => 'CompletedOn',
        'completed_by_code' => 'CompletedByCode',
        'cancelled_on' => 'CancelledOn',
        'cancelled_by_code' => 'CancelledByCode',
        'buyer' => 'Buyer',
        'ap_status' => 'APStatus',
        'user_field1' => 'UserField1',
        'user_field2' => 'UserField2',
        'non_inventory' => 'NonInventory',
        'status' => 'Status',
        'ap_close_date' => 'APCloseDate',
        'ap_closed_by_code' => 'APClosedByCode',
        'received_on' => 'ReceivedOn',
        'requisition_number' => 'RequisitionNumber',
        'requisition_line' => 'RequisitionLine',
        'phase' => 'Phase',
        'in_out' => 'InOut',
        'taxes_paid' => 'TaxesPaid',
        'freight_paid' => 'FreightPaid',
        'currency' => 'Currency',
        'accrual' => 'Accrual',
        'asset' => 'Asset',
        'total' => 'Total',
        'subtotal' => 'Subtotal',
        'inclusive_exclusive' => 'InclusiveExclusive',
        'major' => 'Major',
        'minor' => 'Minor',
        'tax_type' => 'TaxType',
        'ut' => 'UT',
        'supplier_contact' => 'SupplierContact',
        'time_units' => 'TimeUnits',
        'unit_cost_including_tax' => 'UnitCostIncludingTax',
        'division' => 'Division',
        'management_report_code' => 'ManagementReportCode',
        'note' => 'Note',
        'gl_account' => 'GLAccount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'item_sequence' => 'setItemSequence',
        'organization' => 'setOrganization',
        'number' => 'setNumber',
        'item' => 'setItem',
        'description' => 'setDescription',
        'units' => 'setUnits',
        'event_job' => 'setEventJob',
        'um' => 'setUm',
        'unit_cost' => 'setUnitCost',
        'order_sequence' => 'setOrderSequence',
        'extended_cost' => 'setExtendedCost',
        'space' => 'setSpace',
        'department' => 'setDepartment',
        'supplier' => 'setSupplier',
        'bill_to_account' => 'setBillToAccount',
        'ship_to' => 'setShipTo',
        'function' => 'setFunction',
        'order' => 'setOrder',
        'date_in' => 'setDateIn',
        'date_out' => 'setDateOut',
        'order_line' => 'setOrderLine',
        'requester' => 'setRequester',
        'taxable' => 'setTaxable',
        'tax' => 'setTax',
        'freight' => 'setFreight',
        'entered_on' => 'setEnteredOn',
        'supplier_item_number' => 'setSupplierItemNumber',
        'changed_on' => 'setChangedOn',
        'entered_by_code' => 'setEnteredByCode',
        'changed_by_code' => 'setChangedByCode',
        'approval_level' => 'setApprovalLevel',
        'search' => 'setSearch',
        'required_on' => 'setRequiredOn',
        'approved_by' => 'setApprovedBy',
        'units_received' => 'setUnitsReceived',
        'units_paid' => 'setUnitsPaid',
        'amount_paid' => 'setAmountPaid',
        'issued_on' => 'setIssuedOn',
        'issued_by_code' => 'setIssuedByCode',
        'amount_received' => 'setAmountReceived',
        'units_cancelled' => 'setUnitsCancelled',
        'completed_on' => 'setCompletedOn',
        'completed_by_code' => 'setCompletedByCode',
        'cancelled_on' => 'setCancelledOn',
        'cancelled_by_code' => 'setCancelledByCode',
        'buyer' => 'setBuyer',
        'ap_status' => 'setApStatus',
        'user_field1' => 'setUserField1',
        'user_field2' => 'setUserField2',
        'non_inventory' => 'setNonInventory',
        'status' => 'setStatus',
        'ap_close_date' => 'setApCloseDate',
        'ap_closed_by_code' => 'setApClosedByCode',
        'received_on' => 'setReceivedOn',
        'requisition_number' => 'setRequisitionNumber',
        'requisition_line' => 'setRequisitionLine',
        'phase' => 'setPhase',
        'in_out' => 'setInOut',
        'taxes_paid' => 'setTaxesPaid',
        'freight_paid' => 'setFreightPaid',
        'currency' => 'setCurrency',
        'accrual' => 'setAccrual',
        'asset' => 'setAsset',
        'total' => 'setTotal',
        'subtotal' => 'setSubtotal',
        'inclusive_exclusive' => 'setInclusiveExclusive',
        'major' => 'setMajor',
        'minor' => 'setMinor',
        'tax_type' => 'setTaxType',
        'ut' => 'setUt',
        'supplier_contact' => 'setSupplierContact',
        'time_units' => 'setTimeUnits',
        'unit_cost_including_tax' => 'setUnitCostIncludingTax',
        'division' => 'setDivision',
        'management_report_code' => 'setManagementReportCode',
        'note' => 'setNote',
        'gl_account' => 'setGlAccount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'item_sequence' => 'getItemSequence',
        'organization' => 'getOrganization',
        'number' => 'getNumber',
        'item' => 'getItem',
        'description' => 'getDescription',
        'units' => 'getUnits',
        'event_job' => 'getEventJob',
        'um' => 'getUm',
        'unit_cost' => 'getUnitCost',
        'order_sequence' => 'getOrderSequence',
        'extended_cost' => 'getExtendedCost',
        'space' => 'getSpace',
        'department' => 'getDepartment',
        'supplier' => 'getSupplier',
        'bill_to_account' => 'getBillToAccount',
        'ship_to' => 'getShipTo',
        'function' => 'getFunction',
        'order' => 'getOrder',
        'date_in' => 'getDateIn',
        'date_out' => 'getDateOut',
        'order_line' => 'getOrderLine',
        'requester' => 'getRequester',
        'taxable' => 'getTaxable',
        'tax' => 'getTax',
        'freight' => 'getFreight',
        'entered_on' => 'getEnteredOn',
        'supplier_item_number' => 'getSupplierItemNumber',
        'changed_on' => 'getChangedOn',
        'entered_by_code' => 'getEnteredByCode',
        'changed_by_code' => 'getChangedByCode',
        'approval_level' => 'getApprovalLevel',
        'search' => 'getSearch',
        'required_on' => 'getRequiredOn',
        'approved_by' => 'getApprovedBy',
        'units_received' => 'getUnitsReceived',
        'units_paid' => 'getUnitsPaid',
        'amount_paid' => 'getAmountPaid',
        'issued_on' => 'getIssuedOn',
        'issued_by_code' => 'getIssuedByCode',
        'amount_received' => 'getAmountReceived',
        'units_cancelled' => 'getUnitsCancelled',
        'completed_on' => 'getCompletedOn',
        'completed_by_code' => 'getCompletedByCode',
        'cancelled_on' => 'getCancelledOn',
        'cancelled_by_code' => 'getCancelledByCode',
        'buyer' => 'getBuyer',
        'ap_status' => 'getApStatus',
        'user_field1' => 'getUserField1',
        'user_field2' => 'getUserField2',
        'non_inventory' => 'getNonInventory',
        'status' => 'getStatus',
        'ap_close_date' => 'getApCloseDate',
        'ap_closed_by_code' => 'getApClosedByCode',
        'received_on' => 'getReceivedOn',
        'requisition_number' => 'getRequisitionNumber',
        'requisition_line' => 'getRequisitionLine',
        'phase' => 'getPhase',
        'in_out' => 'getInOut',
        'taxes_paid' => 'getTaxesPaid',
        'freight_paid' => 'getFreightPaid',
        'currency' => 'getCurrency',
        'accrual' => 'getAccrual',
        'asset' => 'getAsset',
        'total' => 'getTotal',
        'subtotal' => 'getSubtotal',
        'inclusive_exclusive' => 'getInclusiveExclusive',
        'major' => 'getMajor',
        'minor' => 'getMinor',
        'tax_type' => 'getTaxType',
        'ut' => 'getUt',
        'supplier_contact' => 'getSupplierContact',
        'time_units' => 'getTimeUnits',
        'unit_cost_including_tax' => 'getUnitCostIncludingTax',
        'division' => 'getDivision',
        'management_report_code' => 'getManagementReportCode',
        'note' => 'getNote',
        'gl_account' => 'getGlAccount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['item_sequence'] = isset($data['item_sequence']) ? $data['item_sequence'] : null;
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['number'] = isset($data['number']) ? $data['number'] : null;
        $this->container['item'] = isset($data['item']) ? $data['item'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['units'] = isset($data['units']) ? $data['units'] : null;
        $this->container['event_job'] = isset($data['event_job']) ? $data['event_job'] : null;
        $this->container['um'] = isset($data['um']) ? $data['um'] : null;
        $this->container['unit_cost'] = isset($data['unit_cost']) ? $data['unit_cost'] : null;
        $this->container['order_sequence'] = isset($data['order_sequence']) ? $data['order_sequence'] : null;
        $this->container['extended_cost'] = isset($data['extended_cost']) ? $data['extended_cost'] : null;
        $this->container['space'] = isset($data['space']) ? $data['space'] : null;
        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['supplier'] = isset($data['supplier']) ? $data['supplier'] : null;
        $this->container['bill_to_account'] = isset($data['bill_to_account']) ? $data['bill_to_account'] : null;
        $this->container['ship_to'] = isset($data['ship_to']) ? $data['ship_to'] : null;
        $this->container['function'] = isset($data['function']) ? $data['function'] : null;
        $this->container['order'] = isset($data['order']) ? $data['order'] : null;
        $this->container['date_in'] = isset($data['date_in']) ? $data['date_in'] : null;
        $this->container['date_out'] = isset($data['date_out']) ? $data['date_out'] : null;
        $this->container['order_line'] = isset($data['order_line']) ? $data['order_line'] : null;
        $this->container['requester'] = isset($data['requester']) ? $data['requester'] : null;
        $this->container['taxable'] = isset($data['taxable']) ? $data['taxable'] : null;
        $this->container['tax'] = isset($data['tax']) ? $data['tax'] : null;
        $this->container['freight'] = isset($data['freight']) ? $data['freight'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['supplier_item_number'] = isset($data['supplier_item_number']) ? $data['supplier_item_number'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['entered_by_code'] = isset($data['entered_by_code']) ? $data['entered_by_code'] : null;
        $this->container['changed_by_code'] = isset($data['changed_by_code']) ? $data['changed_by_code'] : null;
        $this->container['approval_level'] = isset($data['approval_level']) ? $data['approval_level'] : null;
        $this->container['search'] = isset($data['search']) ? $data['search'] : null;
        $this->container['required_on'] = isset($data['required_on']) ? $data['required_on'] : null;
        $this->container['approved_by'] = isset($data['approved_by']) ? $data['approved_by'] : null;
        $this->container['units_received'] = isset($data['units_received']) ? $data['units_received'] : null;
        $this->container['units_paid'] = isset($data['units_paid']) ? $data['units_paid'] : null;
        $this->container['amount_paid'] = isset($data['amount_paid']) ? $data['amount_paid'] : null;
        $this->container['issued_on'] = isset($data['issued_on']) ? $data['issued_on'] : null;
        $this->container['issued_by_code'] = isset($data['issued_by_code']) ? $data['issued_by_code'] : null;
        $this->container['amount_received'] = isset($data['amount_received']) ? $data['amount_received'] : null;
        $this->container['units_cancelled'] = isset($data['units_cancelled']) ? $data['units_cancelled'] : null;
        $this->container['completed_on'] = isset($data['completed_on']) ? $data['completed_on'] : null;
        $this->container['completed_by_code'] = isset($data['completed_by_code']) ? $data['completed_by_code'] : null;
        $this->container['cancelled_on'] = isset($data['cancelled_on']) ? $data['cancelled_on'] : null;
        $this->container['cancelled_by_code'] = isset($data['cancelled_by_code']) ? $data['cancelled_by_code'] : null;
        $this->container['buyer'] = isset($data['buyer']) ? $data['buyer'] : null;
        $this->container['ap_status'] = isset($data['ap_status']) ? $data['ap_status'] : null;
        $this->container['user_field1'] = isset($data['user_field1']) ? $data['user_field1'] : null;
        $this->container['user_field2'] = isset($data['user_field2']) ? $data['user_field2'] : null;
        $this->container['non_inventory'] = isset($data['non_inventory']) ? $data['non_inventory'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['ap_close_date'] = isset($data['ap_close_date']) ? $data['ap_close_date'] : null;
        $this->container['ap_closed_by_code'] = isset($data['ap_closed_by_code']) ? $data['ap_closed_by_code'] : null;
        $this->container['received_on'] = isset($data['received_on']) ? $data['received_on'] : null;
        $this->container['requisition_number'] = isset($data['requisition_number']) ? $data['requisition_number'] : null;
        $this->container['requisition_line'] = isset($data['requisition_line']) ? $data['requisition_line'] : null;
        $this->container['phase'] = isset($data['phase']) ? $data['phase'] : null;
        $this->container['in_out'] = isset($data['in_out']) ? $data['in_out'] : null;
        $this->container['taxes_paid'] = isset($data['taxes_paid']) ? $data['taxes_paid'] : null;
        $this->container['freight_paid'] = isset($data['freight_paid']) ? $data['freight_paid'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['accrual'] = isset($data['accrual']) ? $data['accrual'] : null;
        $this->container['asset'] = isset($data['asset']) ? $data['asset'] : null;
        $this->container['total'] = isset($data['total']) ? $data['total'] : null;
        $this->container['subtotal'] = isset($data['subtotal']) ? $data['subtotal'] : null;
        $this->container['inclusive_exclusive'] = isset($data['inclusive_exclusive']) ? $data['inclusive_exclusive'] : null;
        $this->container['major'] = isset($data['major']) ? $data['major'] : null;
        $this->container['minor'] = isset($data['minor']) ? $data['minor'] : null;
        $this->container['tax_type'] = isset($data['tax_type']) ? $data['tax_type'] : null;
        $this->container['ut'] = isset($data['ut']) ? $data['ut'] : null;
        $this->container['supplier_contact'] = isset($data['supplier_contact']) ? $data['supplier_contact'] : null;
        $this->container['time_units'] = isset($data['time_units']) ? $data['time_units'] : null;
        $this->container['unit_cost_including_tax'] = isset($data['unit_cost_including_tax']) ? $data['unit_cost_including_tax'] : null;
        $this->container['division'] = isset($data['division']) ? $data['division'] : null;
        $this->container['management_report_code'] = isset($data['management_report_code']) ? $data['management_report_code'] : null;
        $this->container['note'] = isset($data['note']) ? $data['note'] : null;
        $this->container['gl_account'] = isset($data['gl_account']) ? $data['gl_account'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['item_sequence'] === null) {
            $invalidProperties[] = "'item_sequence' can't be null";
        }
        if ($this->container['organization'] === null) {
            $invalidProperties[] = "'organization' can't be null";
        }
        if ($this->container['number'] === null) {
            $invalidProperties[] = "'number' can't be null";
        }
        if ($this->container['item'] === null) {
            $invalidProperties[] = "'item' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['units'] === null) {
            $invalidProperties[] = "'units' can't be null";
        }
        if ($this->container['event_job'] === null) {
            $invalidProperties[] = "'event_job' can't be null";
        }
        if ($this->container['um'] === null) {
            $invalidProperties[] = "'um' can't be null";
        }
        if ($this->container['unit_cost'] === null) {
            $invalidProperties[] = "'unit_cost' can't be null";
        }
        if ($this->container['order_sequence'] === null) {
            $invalidProperties[] = "'order_sequence' can't be null";
        }
        if ($this->container['extended_cost'] === null) {
            $invalidProperties[] = "'extended_cost' can't be null";
        }
        if ($this->container['space'] === null) {
            $invalidProperties[] = "'space' can't be null";
        }
        if ($this->container['department'] === null) {
            $invalidProperties[] = "'department' can't be null";
        }
        if ($this->container['supplier'] === null) {
            $invalidProperties[] = "'supplier' can't be null";
        }
        if ($this->container['bill_to_account'] === null) {
            $invalidProperties[] = "'bill_to_account' can't be null";
        }
        if ($this->container['ship_to'] === null) {
            $invalidProperties[] = "'ship_to' can't be null";
        }
        if ($this->container['function'] === null) {
            $invalidProperties[] = "'function' can't be null";
        }
        if ($this->container['order'] === null) {
            $invalidProperties[] = "'order' can't be null";
        }
        if ($this->container['date_in'] === null) {
            $invalidProperties[] = "'date_in' can't be null";
        }
        if ($this->container['date_out'] === null) {
            $invalidProperties[] = "'date_out' can't be null";
        }
        if ($this->container['order_line'] === null) {
            $invalidProperties[] = "'order_line' can't be null";
        }
        if ($this->container['requester'] === null) {
            $invalidProperties[] = "'requester' can't be null";
        }
        if ($this->container['taxable'] === null) {
            $invalidProperties[] = "'taxable' can't be null";
        }
        if ($this->container['tax'] === null) {
            $invalidProperties[] = "'tax' can't be null";
        }
        if ($this->container['freight'] === null) {
            $invalidProperties[] = "'freight' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['supplier_item_number'] === null) {
            $invalidProperties[] = "'supplier_item_number' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['entered_by_code'] === null) {
            $invalidProperties[] = "'entered_by_code' can't be null";
        }
        if ($this->container['changed_by_code'] === null) {
            $invalidProperties[] = "'changed_by_code' can't be null";
        }
        if ($this->container['approval_level'] === null) {
            $invalidProperties[] = "'approval_level' can't be null";
        }
        if ($this->container['search'] === null) {
            $invalidProperties[] = "'search' can't be null";
        }
        if ($this->container['required_on'] === null) {
            $invalidProperties[] = "'required_on' can't be null";
        }
        if ($this->container['approved_by'] === null) {
            $invalidProperties[] = "'approved_by' can't be null";
        }
        if ($this->container['units_received'] === null) {
            $invalidProperties[] = "'units_received' can't be null";
        }
        if ($this->container['units_paid'] === null) {
            $invalidProperties[] = "'units_paid' can't be null";
        }
        if ($this->container['amount_paid'] === null) {
            $invalidProperties[] = "'amount_paid' can't be null";
        }
        if ($this->container['issued_on'] === null) {
            $invalidProperties[] = "'issued_on' can't be null";
        }
        if ($this->container['issued_by_code'] === null) {
            $invalidProperties[] = "'issued_by_code' can't be null";
        }
        if ($this->container['amount_received'] === null) {
            $invalidProperties[] = "'amount_received' can't be null";
        }
        if ($this->container['units_cancelled'] === null) {
            $invalidProperties[] = "'units_cancelled' can't be null";
        }
        if ($this->container['completed_on'] === null) {
            $invalidProperties[] = "'completed_on' can't be null";
        }
        if ($this->container['completed_by_code'] === null) {
            $invalidProperties[] = "'completed_by_code' can't be null";
        }
        if ($this->container['cancelled_on'] === null) {
            $invalidProperties[] = "'cancelled_on' can't be null";
        }
        if ($this->container['cancelled_by_code'] === null) {
            $invalidProperties[] = "'cancelled_by_code' can't be null";
        }
        if ($this->container['buyer'] === null) {
            $invalidProperties[] = "'buyer' can't be null";
        }
        if ($this->container['ap_status'] === null) {
            $invalidProperties[] = "'ap_status' can't be null";
        }
        if ($this->container['user_field1'] === null) {
            $invalidProperties[] = "'user_field1' can't be null";
        }
        if ($this->container['user_field2'] === null) {
            $invalidProperties[] = "'user_field2' can't be null";
        }
        if ($this->container['non_inventory'] === null) {
            $invalidProperties[] = "'non_inventory' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['ap_close_date'] === null) {
            $invalidProperties[] = "'ap_close_date' can't be null";
        }
        if ($this->container['ap_closed_by_code'] === null) {
            $invalidProperties[] = "'ap_closed_by_code' can't be null";
        }
        if ($this->container['received_on'] === null) {
            $invalidProperties[] = "'received_on' can't be null";
        }
        if ($this->container['requisition_number'] === null) {
            $invalidProperties[] = "'requisition_number' can't be null";
        }
        if ($this->container['requisition_line'] === null) {
            $invalidProperties[] = "'requisition_line' can't be null";
        }
        if ($this->container['phase'] === null) {
            $invalidProperties[] = "'phase' can't be null";
        }
        if ($this->container['in_out'] === null) {
            $invalidProperties[] = "'in_out' can't be null";
        }
        if ($this->container['taxes_paid'] === null) {
            $invalidProperties[] = "'taxes_paid' can't be null";
        }
        if ($this->container['freight_paid'] === null) {
            $invalidProperties[] = "'freight_paid' can't be null";
        }
        if ($this->container['currency'] === null) {
            $invalidProperties[] = "'currency' can't be null";
        }
        if ($this->container['accrual'] === null) {
            $invalidProperties[] = "'accrual' can't be null";
        }
        if ($this->container['asset'] === null) {
            $invalidProperties[] = "'asset' can't be null";
        }
        if ($this->container['total'] === null) {
            $invalidProperties[] = "'total' can't be null";
        }
        if ($this->container['subtotal'] === null) {
            $invalidProperties[] = "'subtotal' can't be null";
        }
        if ($this->container['inclusive_exclusive'] === null) {
            $invalidProperties[] = "'inclusive_exclusive' can't be null";
        }
        if ($this->container['major'] === null) {
            $invalidProperties[] = "'major' can't be null";
        }
        if ($this->container['minor'] === null) {
            $invalidProperties[] = "'minor' can't be null";
        }
        if ($this->container['tax_type'] === null) {
            $invalidProperties[] = "'tax_type' can't be null";
        }
        if ($this->container['ut'] === null) {
            $invalidProperties[] = "'ut' can't be null";
        }
        if ($this->container['supplier_contact'] === null) {
            $invalidProperties[] = "'supplier_contact' can't be null";
        }
        if ($this->container['time_units'] === null) {
            $invalidProperties[] = "'time_units' can't be null";
        }
        if ($this->container['unit_cost_including_tax'] === null) {
            $invalidProperties[] = "'unit_cost_including_tax' can't be null";
        }
        if ($this->container['division'] === null) {
            $invalidProperties[] = "'division' can't be null";
        }
        if ($this->container['management_report_code'] === null) {
            $invalidProperties[] = "'management_report_code' can't be null";
        }
        if ($this->container['note'] === null) {
            $invalidProperties[] = "'note' can't be null";
        }
        if ($this->container['gl_account'] === null) {
            $invalidProperties[] = "'gl_account' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets item_sequence
     *
     * @return int
     */
    public function getItemSequence()
    {
        return $this->container['item_sequence'];
    }

    /**
     * Sets item_sequence
     *
     * @param int $item_sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setItemSequence($item_sequence)
    {
        $this->container['item_sequence'] = $item_sequence;

        return $this;
    }

    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets number
     *
     * @return int
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     *
     * @param int $number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_PO_REQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNumber($number)
    {
        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets item
     *
     * @return string
     */
    public function getItem()
    {
        return $this->container['item'];
    }

    /**
     * Sets item
     *
     * @param string $item <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_ITEM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setItem($item)
    {
        $this->container['item'] = $item;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_ITEM_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets units
     *
     * @return double
     */
    public function getUnits()
    {
        return $this->container['units'];
    }

    /**
     * Sets units
     *
     * @param double $units <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_QTY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 134  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUnits($units)
    {
        $this->container['units'] = $units;

        return $this;
    }

    /**
     * Gets event_job
     *
     * @return int
     */
    public function getEventJob()
    {
        return $this->container['event_job'];
    }

    /**
     * Sets event_job
     *
     * @param int $event_job <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_EVT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEventJob($event_job)
    {
        $this->container['event_job'] = $event_job;

        return $this;
    }

    /**
     * Gets um
     *
     * @return string
     */
    public function getUm()
    {
        return $this->container['um'];
    }

    /**
     * Sets um
     *
     * @param string $um <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_UOM_PUR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUm($um)
    {
        $this->container['um'] = $um;

        return $this;
    }

    /**
     * Gets unit_cost
     *
     * @return double
     */
    public function getUnitCost()
    {
        return $this->container['unit_cost'];
    }

    /**
     * Sets unit_cost
     *
     * @param double $unit_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_UNIT_COST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 134  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUnitCost($unit_cost)
    {
        $this->container['unit_cost'] = $unit_cost;

        return $this;
    }

    /**
     * Gets order_sequence
     *
     * @return int
     */
    public function getOrderSequence()
    {
        return $this->container['order_sequence'];
    }

    /**
     * Sets order_sequence
     *
     * @param int $order_sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_ORD_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderSequence($order_sequence)
    {
        $this->container['order_sequence'] = $order_sequence;

        return $this;
    }

    /**
     * Gets extended_cost
     *
     * @return double
     */
    public function getExtendedCost()
    {
        return $this->container['extended_cost'];
    }

    /**
     * Sets extended_cost
     *
     * @param double $extended_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_EXT_COST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 178  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExtendedCost($extended_cost)
    {
        $this->container['extended_cost'] = $extended_cost;

        return $this;
    }

    /**
     * Gets space
     *
     * @return string
     */
    public function getSpace()
    {
        return $this->container['space'];
    }

    /**
     * Sets space
     *
     * @param string $space <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_SPACE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSpace($space)
    {
        $this->container['space'] = $space;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string $department <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_DEPT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets supplier
     *
     * @return string
     */
    public function getSupplier()
    {
        return $this->container['supplier'];
    }

    /**
     * Sets supplier
     *
     * @param string $supplier <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_SUPPLIER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSupplier($supplier)
    {
        $this->container['supplier'] = $supplier;

        return $this;
    }

    /**
     * Gets bill_to_account
     *
     * @return string
     */
    public function getBillToAccount()
    {
        return $this->container['bill_to_account'];
    }

    /**
     * Sets bill_to_account
     *
     * @param string $bill_to_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_BILLTO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBillToAccount($bill_to_account)
    {
        $this->container['bill_to_account'] = $bill_to_account;

        return $this;
    }

    /**
     * Gets ship_to
     *
     * @return string
     */
    public function getShipTo()
    {
        return $this->container['ship_to'];
    }

    /**
     * Sets ship_to
     *
     * @param string $ship_to <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_SHIPTO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setShipTo($ship_to)
    {
        $this->container['ship_to'] = $ship_to;

        return $this;
    }

    /**
     * Gets function
     *
     * @return int
     */
    public function getFunction()
    {
        return $this->container['function'];
    }

    /**
     * Sets function
     *
     * @param int $function <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_FUNC_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFunction($function)
    {
        $this->container['function'] = $function;

        return $this;
    }

    /**
     * Gets order
     *
     * @return int
     */
    public function getOrder()
    {
        return $this->container['order'];
    }

    /**
     * Sets order
     *
     * @param int $order <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_CUST_ORD_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrder($order)
    {
        $this->container['order'] = $order;

        return $this;
    }

    /**
     * Gets date_in
     *
     * @return \DateTime
     */
    public function getDateIn()
    {
        return $this->container['date_in'];
    }

    /**
     * Sets date_in
     *
     * @param \DateTime $date_in <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_DATE_IN  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDateIn($date_in)
    {
        $this->container['date_in'] = $date_in;

        return $this;
    }

    /**
     * Gets date_out
     *
     * @return \DateTime
     */
    public function getDateOut()
    {
        return $this->container['date_out'];
    }

    /**
     * Sets date_out
     *
     * @param \DateTime $date_out <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_DATE_OUT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDateOut($date_out)
    {
        $this->container['date_out'] = $date_out;

        return $this;
    }

    /**
     * Gets order_line
     *
     * @return int
     */
    public function getOrderLine()
    {
        return $this->container['order_line'];
    }

    /**
     * Sets order_line
     *
     * @param int $order_line <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_CUST_ORD_LINE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderLine($order_line)
    {
        $this->container['order_line'] = $order_line;

        return $this;
    }

    /**
     * Gets requester
     *
     * @return string
     */
    public function getRequester()
    {
        return $this->container['requester'];
    }

    /**
     * Sets requester
     *
     * @param string $requester <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_REQUESTOR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequester($requester)
    {
        $this->container['requester'] = $requester;

        return $this;
    }

    /**
     * Gets taxable
     *
     * @return string
     */
    public function getTaxable()
    {
        return $this->container['taxable'];
    }

    /**
     * Sets taxable
     *
     * @param string $taxable <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_TAXABLE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxable($taxable)
    {
        $this->container['taxable'] = $taxable;

        return $this;
    }

    /**
     * Gets tax
     *
     * @return double
     */
    public function getTax()
    {
        return $this->container['tax'];
    }

    /**
     * Sets tax
     *
     * @param double $tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_TAXES  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 178  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTax($tax)
    {
        $this->container['tax'] = $tax;

        return $this;
    }

    /**
     * Gets freight
     *
     * @return double
     */
    public function getFreight()
    {
        return $this->container['freight'];
    }

    /**
     * Sets freight
     *
     * @param double $freight <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_FREIGHT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFreight($freight)
    {
        $this->container['freight'] = $freight;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets supplier_item_number
     *
     * @return string
     */
    public function getSupplierItemNumber()
    {
        return $this->container['supplier_item_number'];
    }

    /**
     * Sets supplier_item_number
     *
     * @param string $supplier_item_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_VENDOR_ITEM  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 24  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSupplierItemNumber($supplier_item_number)
    {
        $this->container['supplier_item_number'] = $supplier_item_number;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets entered_by_code
     *
     * @return string
     */
    public function getEnteredByCode()
    {
        return $this->container['entered_by_code'];
    }

    /**
     * Sets entered_by_code
     *
     * @param string $entered_by_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredByCode($entered_by_code)
    {
        $this->container['entered_by_code'] = $entered_by_code;

        return $this;
    }

    /**
     * Gets changed_by_code
     *
     * @return string
     */
    public function getChangedByCode()
    {
        return $this->container['changed_by_code'];
    }

    /**
     * Sets changed_by_code
     *
     * @param string $changed_by_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedByCode($changed_by_code)
    {
        $this->container['changed_by_code'] = $changed_by_code;

        return $this;
    }

    /**
     * Gets approval_level
     *
     * @return string
     */
    public function getApprovalLevel()
    {
        return $this->container['approval_level'];
    }

    /**
     * Sets approval_level
     *
     * @param string $approval_level <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_APPROVAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setApprovalLevel($approval_level)
    {
        $this->container['approval_level'] = $approval_level;

        return $this;
    }

    /**
     * Gets search
     *
     * @return string
     */
    public function getSearch()
    {
        return $this->container['search'];
    }

    /**
     * Sets search
     *
     * @param string $search <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_PO_SEARCH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSearch($search)
    {
        $this->container['search'] = $search;

        return $this;
    }

    /**
     * Gets required_on
     *
     * @return \DateTime
     */
    public function getRequiredOn()
    {
        return $this->container['required_on'];
    }

    /**
     * Sets required_on
     *
     * @param \DateTime $required_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_DUE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequiredOn($required_on)
    {
        $this->container['required_on'] = $required_on;

        return $this;
    }

    /**
     * Gets approved_by
     *
     * @return string
     */
    public function getApprovedBy()
    {
        return $this->container['approved_by'];
    }

    /**
     * Sets approved_by
     *
     * @param string $approved_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_APPR_USER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setApprovedBy($approved_by)
    {
        $this->container['approved_by'] = $approved_by;

        return $this;
    }

    /**
     * Gets units_received
     *
     * @return double
     */
    public function getUnitsReceived()
    {
        return $this->container['units_received'];
    }

    /**
     * Sets units_received
     *
     * @param double $units_received <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_QTY_RECD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 134  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUnitsReceived($units_received)
    {
        $this->container['units_received'] = $units_received;

        return $this;
    }

    /**
     * Gets units_paid
     *
     * @return double
     */
    public function getUnitsPaid()
    {
        return $this->container['units_paid'];
    }

    /**
     * Sets units_paid
     *
     * @param double $units_paid <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_QTY_PAID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 134  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUnitsPaid($units_paid)
    {
        $this->container['units_paid'] = $units_paid;

        return $this;
    }

    /**
     * Gets amount_paid
     *
     * @return double
     */
    public function getAmountPaid()
    {
        return $this->container['amount_paid'];
    }

    /**
     * Sets amount_paid
     *
     * @param double $amount_paid <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_AMT_PAID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAmountPaid($amount_paid)
    {
        $this->container['amount_paid'] = $amount_paid;

        return $this;
    }

    /**
     * Gets issued_on
     *
     * @return \DateTime
     */
    public function getIssuedOn()
    {
        return $this->container['issued_on'];
    }

    /**
     * Sets issued_on
     *
     * @param \DateTime $issued_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_PO_ISSUE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIssuedOn($issued_on)
    {
        $this->container['issued_on'] = $issued_on;

        return $this;
    }

    /**
     * Gets issued_by_code
     *
     * @return string
     */
    public function getIssuedByCode()
    {
        return $this->container['issued_by_code'];
    }

    /**
     * Sets issued_by_code
     *
     * @param string $issued_by_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_PO_ISSUE_USER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIssuedByCode($issued_by_code)
    {
        $this->container['issued_by_code'] = $issued_by_code;

        return $this;
    }

    /**
     * Gets amount_received
     *
     * @return double
     */
    public function getAmountReceived()
    {
        return $this->container['amount_received'];
    }

    /**
     * Sets amount_received
     *
     * @param double $amount_received <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_AMT_RECD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAmountReceived($amount_received)
    {
        $this->container['amount_received'] = $amount_received;

        return $this;
    }

    /**
     * Gets units_cancelled
     *
     * @return double
     */
    public function getUnitsCancelled()
    {
        return $this->container['units_cancelled'];
    }

    /**
     * Sets units_cancelled
     *
     * @param double $units_cancelled <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_QTY_CANCELLED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 134  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUnitsCancelled($units_cancelled)
    {
        $this->container['units_cancelled'] = $units_cancelled;

        return $this;
    }

    /**
     * Gets completed_on
     *
     * @return \DateTime
     */
    public function getCompletedOn()
    {
        return $this->container['completed_on'];
    }

    /**
     * Sets completed_on
     *
     * @param \DateTime $completed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_COMPL_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCompletedOn($completed_on)
    {
        $this->container['completed_on'] = $completed_on;

        return $this;
    }

    /**
     * Gets completed_by_code
     *
     * @return string
     */
    public function getCompletedByCode()
    {
        return $this->container['completed_by_code'];
    }

    /**
     * Sets completed_by_code
     *
     * @param string $completed_by_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_COMPL_USER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCompletedByCode($completed_by_code)
    {
        $this->container['completed_by_code'] = $completed_by_code;

        return $this;
    }

    /**
     * Gets cancelled_on
     *
     * @return \DateTime
     */
    public function getCancelledOn()
    {
        return $this->container['cancelled_on'];
    }

    /**
     * Sets cancelled_on
     *
     * @param \DateTime $cancelled_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_DATE_CANCELLED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCancelledOn($cancelled_on)
    {
        $this->container['cancelled_on'] = $cancelled_on;

        return $this;
    }

    /**
     * Gets cancelled_by_code
     *
     * @return string
     */
    public function getCancelledByCode()
    {
        return $this->container['cancelled_by_code'];
    }

    /**
     * Sets cancelled_by_code
     *
     * @param string $cancelled_by_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_USER_CANCELLED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCancelledByCode($cancelled_by_code)
    {
        $this->container['cancelled_by_code'] = $cancelled_by_code;

        return $this;
    }

    /**
     * Gets buyer
     *
     * @return string
     */
    public function getBuyer()
    {
        return $this->container['buyer'];
    }

    /**
     * Sets buyer
     *
     * @param string $buyer <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_BUYER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBuyer($buyer)
    {
        $this->container['buyer'] = $buyer;

        return $this;
    }

    /**
     * Gets ap_status
     *
     * @return string
     */
    public function getApStatus()
    {
        return $this->container['ap_status'];
    }

    /**
     * Sets ap_status
     *
     * @param string $ap_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_AP_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setApStatus($ap_status)
    {
        $this->container['ap_status'] = $ap_status;

        return $this;
    }

    /**
     * Gets user_field1
     *
     * @return string
     */
    public function getUserField1()
    {
        return $this->container['user_field1'];
    }

    /**
     * Sets user_field1
     *
     * @param string $user_field1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_REF_FIELD1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 40  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserField1($user_field1)
    {
        $this->container['user_field1'] = $user_field1;

        return $this;
    }

    /**
     * Gets user_field2
     *
     * @return string
     */
    public function getUserField2()
    {
        return $this->container['user_field2'];
    }

    /**
     * Sets user_field2
     *
     * @param string $user_field2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_REF_FIELD2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 15  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserField2($user_field2)
    {
        $this->container['user_field2'] = $user_field2;

        return $this;
    }

    /**
     * Gets non_inventory
     *
     * @return string
     */
    public function getNonInventory()
    {
        return $this->container['non_inventory'];
    }

    /**
     * Sets non_inventory
     *
     * @param string $non_inventory <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_INV_FLAG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNonInventory($non_inventory)
    {
        $this->container['non_inventory'] = $non_inventory;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets ap_close_date
     *
     * @return \DateTime
     */
    public function getApCloseDate()
    {
        return $this->container['ap_close_date'];
    }

    /**
     * Sets ap_close_date
     *
     * @param \DateTime $ap_close_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_AP_CLOSE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setApCloseDate($ap_close_date)
    {
        $this->container['ap_close_date'] = $ap_close_date;

        return $this;
    }

    /**
     * Gets ap_closed_by_code
     *
     * @return string
     */
    public function getApClosedByCode()
    {
        return $this->container['ap_closed_by_code'];
    }

    /**
     * Sets ap_closed_by_code
     *
     * @param string $ap_closed_by_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_AP_CLOSE_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setApClosedByCode($ap_closed_by_code)
    {
        $this->container['ap_closed_by_code'] = $ap_closed_by_code;

        return $this;
    }

    /**
     * Gets received_on
     *
     * @return \DateTime
     */
    public function getReceivedOn()
    {
        return $this->container['received_on'];
    }

    /**
     * Sets received_on
     *
     * @param \DateTime $received_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_EST_DELIVERY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setReceivedOn($received_on)
    {
        $this->container['received_on'] = $received_on;

        return $this;
    }

    /**
     * Gets requisition_number
     *
     * @return int
     */
    public function getRequisitionNumber()
    {
        return $this->container['requisition_number'];
    }

    /**
     * Sets requisition_number
     *
     * @param int $requisition_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_REQ_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequisitionNumber($requisition_number)
    {
        $this->container['requisition_number'] = $requisition_number;

        return $this;
    }

    /**
     * Gets requisition_line
     *
     * @return int
     */
    public function getRequisitionLine()
    {
        return $this->container['requisition_line'];
    }

    /**
     * Sets requisition_line
     *
     * @param int $requisition_line <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_REQ_LINE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequisitionLine($requisition_line)
    {
        $this->container['requisition_line'] = $requisition_line;

        return $this;
    }

    /**
     * Gets phase
     *
     * @return string
     */
    public function getPhase()
    {
        return $this->container['phase'];
    }

    /**
     * Sets phase
     *
     * @param string $phase <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_PHASE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPhase($phase)
    {
        $this->container['phase'] = $phase;

        return $this;
    }

    /**
     * Gets in_out
     *
     * @return string
     */
    public function getInOut()
    {
        return $this->container['in_out'];
    }

    /**
     * Sets in_out
     *
     * @param string $in_out <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_INOUT_USED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInOut($in_out)
    {
        $this->container['in_out'] = $in_out;

        return $this;
    }

    /**
     * Gets taxes_paid
     *
     * @return double
     */
    public function getTaxesPaid()
    {
        return $this->container['taxes_paid'];
    }

    /**
     * Sets taxes_paid
     *
     * @param double $taxes_paid <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_TAX_PAID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 178  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxesPaid($taxes_paid)
    {
        $this->container['taxes_paid'] = $taxes_paid;

        return $this;
    }

    /**
     * Gets freight_paid
     *
     * @return double
     */
    public function getFreightPaid()
    {
        return $this->container['freight_paid'];
    }

    /**
     * Sets freight_paid
     *
     * @param double $freight_paid <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_FREIGHT_PAID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFreightPaid($freight_paid)
    {
        $this->container['freight_paid'] = $freight_paid;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_CURRENCY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets accrual
     *
     * @return string
     */
    public function getAccrual()
    {
        return $this->container['accrual'];
    }

    /**
     * Sets accrual
     *
     * @param string $accrual <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_ACCRUAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccrual($accrual)
    {
        $this->container['accrual'] = $accrual;

        return $this;
    }

    /**
     * Gets asset
     *
     * @return string
     */
    public function getAsset()
    {
        return $this->container['asset'];
    }

    /**
     * Sets asset
     *
     * @param string $asset <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_ASSET_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAsset($asset)
    {
        $this->container['asset'] = $asset;

        return $this;
    }

    /**
     * Gets total
     *
     * @return double
     */
    public function getTotal()
    {
        return $this->container['total'];
    }

    /**
     * Sets total
     *
     * @param double $total <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_TAXES_AMT_IN  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 178  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTotal($total)
    {
        $this->container['total'] = $total;

        return $this;
    }

    /**
     * Gets subtotal
     *
     * @return double
     */
    public function getSubtotal()
    {
        return $this->container['subtotal'];
    }

    /**
     * Sets subtotal
     *
     * @param double $subtotal <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_TAXES_AMT_EX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 178  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSubtotal($subtotal)
    {
        $this->container['subtotal'] = $subtotal;

        return $this;
    }

    /**
     * Gets inclusive_exclusive
     *
     * @return string
     */
    public function getInclusiveExclusive()
    {
        return $this->container['inclusive_exclusive'];
    }

    /**
     * Sets inclusive_exclusive
     *
     * @param string $inclusive_exclusive <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_TAX_EI  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInclusiveExclusive($inclusive_exclusive)
    {
        $this->container['inclusive_exclusive'] = $inclusive_exclusive;

        return $this;
    }

    /**
     * Gets major
     *
     * @return string
     */
    public function getMajor()
    {
        return $this->container['major'];
    }

    /**
     * Sets major
     *
     * @param string $major <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_MAJOR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMajor($major)
    {
        $this->container['major'] = $major;

        return $this;
    }

    /**
     * Gets minor
     *
     * @return string
     */
    public function getMinor()
    {
        return $this->container['minor'];
    }

    /**
     * Sets minor
     *
     * @param string $minor <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_MINOR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMinor($minor)
    {
        $this->container['minor'] = $minor;

        return $this;
    }

    /**
     * Gets tax_type
     *
     * @return string
     */
    public function getTaxType()
    {
        return $this->container['tax_type'];
    }

    /**
     * Sets tax_type
     *
     * @param string $tax_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_TAX_RES_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxType($tax_type)
    {
        $this->container['tax_type'] = $tax_type;

        return $this;
    }

    /**
     * Gets ut
     *
     * @return string
     */
    public function getUt()
    {
        return $this->container['ut'];
    }

    /**
     * Sets ut
     *
     * @param string $ut <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_UOT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUt($ut)
    {
        $this->container['ut'] = $ut;

        return $this;
    }

    /**
     * Gets supplier_contact
     *
     * @return string
     */
    public function getSupplierContact()
    {
        return $this->container['supplier_contact'];
    }

    /**
     * Sets supplier_contact
     *
     * @param string $supplier_contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_SUPPLIER_CONT_NG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSupplierContact($supplier_contact)
    {
        $this->container['supplier_contact'] = $supplier_contact;

        return $this;
    }

    /**
     * Gets time_units
     *
     * @return double
     */
    public function getTimeUnits()
    {
        return $this->container['time_units'];
    }

    /**
     * Sets time_units
     *
     * @param double $time_units <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_TIME_QTY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 134  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTimeUnits($time_units)
    {
        $this->container['time_units'] = $time_units;

        return $this;
    }

    /**
     * Gets unit_cost_including_tax
     *
     * @return double
     */
    public function getUnitCostIncludingTax()
    {
        return $this->container['unit_cost_including_tax'];
    }

    /**
     * Sets unit_cost_including_tax
     *
     * @param double $unit_cost_including_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_UNIT_COST_INC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 134  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUnitCostIncludingTax($unit_cost_including_tax)
    {
        $this->container['unit_cost_including_tax'] = $unit_cost_including_tax;

        return $this;
    }

    /**
     * Gets division
     *
     * @return string
     */
    public function getDivision()
    {
        return $this->container['division'];
    }

    /**
     * Sets division
     *
     * @param string $division <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_DIVISION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDivision($division)
    {
        $this->container['division'] = $division;

        return $this;
    }

    /**
     * Gets management_report_code
     *
     * @return string
     */
    public function getManagementReportCode()
    {
        return $this->container['management_report_code'];
    }

    /**
     * Sets management_report_code
     *
     * @param string $management_report_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_MGMT_RPT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setManagementReportCode($management_report_code)
    {
        $this->container['management_report_code'] = $management_report_code;

        return $this;
    }

    /**
     * Gets note
     *
     * @return string
     */
    public function getNote()
    {
        return $this->container['note'];
    }

    /**
     * Sets note
     *
     * @param string $note <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO101_COMMENT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNote($note)
    {
        $this->container['note'] = $note;

        return $this;
    }

    /**
     * Gets gl_account
     *
     * @return string
     */
    public function getGlAccount()
    {
        return $this->container['gl_account'];
    }

    /**
     * Sets gl_account
     *
     * @param string $gl_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> cGL_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlAccount($gl_account)
    {
        $this->container['gl_account'] = $gl_account;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


