<?php
/**
 * BankReconciliationsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * BankReconciliationsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class BankReconciliationsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'BankReconciliationsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'sequence_number' => 'int',
        'bank' => 'string',
        'organization' => 'string',
        'bank_balance' => 'double',
        'book_balance' => 'double',
        'bank_date' => '\DateTime',
        'book_date' => '\DateTime',
        'status' => 'string',
        'completed_by_name' => 'string',
        'completed_on' => '\DateTime',
        'description' => 'string',
        'entered_by' => 'string',
        'changed_by' => 'string',
        'entered_on' => '\DateTime',
        'changed_on' => '\DateTime',
        'outstanding_checks' => 'double',
        'deposits_in_transit' => 'double',
        'bank_adjustment' => 'double',
        'book_adjustment' => 'double',
        'other_outstanding_transaction' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'sequence_number' => 'int32',
        'bank' => null,
        'organization' => null,
        'bank_balance' => 'double',
        'book_balance' => 'double',
        'bank_date' => 'date-time',
        'book_date' => 'date-time',
        'status' => null,
        'completed_by_name' => null,
        'completed_on' => 'date-time',
        'description' => null,
        'entered_by' => null,
        'changed_by' => null,
        'entered_on' => 'date-time',
        'changed_on' => 'date-time',
        'outstanding_checks' => 'double',
        'deposits_in_transit' => 'double',
        'bank_adjustment' => 'double',
        'book_adjustment' => 'double',
        'other_outstanding_transaction' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'sequence_number' => 'SequenceNumber',
        'bank' => 'Bank',
        'organization' => 'Organization',
        'bank_balance' => 'BankBalance',
        'book_balance' => 'BookBalance',
        'bank_date' => 'BankDate',
        'book_date' => 'BookDate',
        'status' => 'Status',
        'completed_by_name' => 'CompletedByName',
        'completed_on' => 'CompletedOn',
        'description' => 'Description',
        'entered_by' => 'EnteredBy',
        'changed_by' => 'ChangedBy',
        'entered_on' => 'EnteredOn',
        'changed_on' => 'ChangedOn',
        'outstanding_checks' => 'OutstandingChecks',
        'deposits_in_transit' => 'DepositsInTransit',
        'bank_adjustment' => 'BankAdjustment',
        'book_adjustment' => 'BookAdjustment',
        'other_outstanding_transaction' => 'OtherOutstandingTransaction'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'sequence_number' => 'setSequenceNumber',
        'bank' => 'setBank',
        'organization' => 'setOrganization',
        'bank_balance' => 'setBankBalance',
        'book_balance' => 'setBookBalance',
        'bank_date' => 'setBankDate',
        'book_date' => 'setBookDate',
        'status' => 'setStatus',
        'completed_by_name' => 'setCompletedByName',
        'completed_on' => 'setCompletedOn',
        'description' => 'setDescription',
        'entered_by' => 'setEnteredBy',
        'changed_by' => 'setChangedBy',
        'entered_on' => 'setEnteredOn',
        'changed_on' => 'setChangedOn',
        'outstanding_checks' => 'setOutstandingChecks',
        'deposits_in_transit' => 'setDepositsInTransit',
        'bank_adjustment' => 'setBankAdjustment',
        'book_adjustment' => 'setBookAdjustment',
        'other_outstanding_transaction' => 'setOtherOutstandingTransaction'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'sequence_number' => 'getSequenceNumber',
        'bank' => 'getBank',
        'organization' => 'getOrganization',
        'bank_balance' => 'getBankBalance',
        'book_balance' => 'getBookBalance',
        'bank_date' => 'getBankDate',
        'book_date' => 'getBookDate',
        'status' => 'getStatus',
        'completed_by_name' => 'getCompletedByName',
        'completed_on' => 'getCompletedOn',
        'description' => 'getDescription',
        'entered_by' => 'getEnteredBy',
        'changed_by' => 'getChangedBy',
        'entered_on' => 'getEnteredOn',
        'changed_on' => 'getChangedOn',
        'outstanding_checks' => 'getOutstandingChecks',
        'deposits_in_transit' => 'getDepositsInTransit',
        'bank_adjustment' => 'getBankAdjustment',
        'book_adjustment' => 'getBookAdjustment',
        'other_outstanding_transaction' => 'getOtherOutstandingTransaction'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['sequence_number'] = isset($data['sequence_number']) ? $data['sequence_number'] : null;
        $this->container['bank'] = isset($data['bank']) ? $data['bank'] : null;
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['bank_balance'] = isset($data['bank_balance']) ? $data['bank_balance'] : null;
        $this->container['book_balance'] = isset($data['book_balance']) ? $data['book_balance'] : null;
        $this->container['bank_date'] = isset($data['bank_date']) ? $data['bank_date'] : null;
        $this->container['book_date'] = isset($data['book_date']) ? $data['book_date'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['completed_by_name'] = isset($data['completed_by_name']) ? $data['completed_by_name'] : null;
        $this->container['completed_on'] = isset($data['completed_on']) ? $data['completed_on'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['outstanding_checks'] = isset($data['outstanding_checks']) ? $data['outstanding_checks'] : null;
        $this->container['deposits_in_transit'] = isset($data['deposits_in_transit']) ? $data['deposits_in_transit'] : null;
        $this->container['bank_adjustment'] = isset($data['bank_adjustment']) ? $data['bank_adjustment'] : null;
        $this->container['book_adjustment'] = isset($data['book_adjustment']) ? $data['book_adjustment'] : null;
        $this->container['other_outstanding_transaction'] = isset($data['other_outstanding_transaction']) ? $data['other_outstanding_transaction'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['sequence_number'] === null) {
            $invalidProperties[] = "'sequence_number' can't be null";
        }
        if ($this->container['bank'] === null) {
            $invalidProperties[] = "'bank' can't be null";
        }
        if ($this->container['organization'] === null) {
            $invalidProperties[] = "'organization' can't be null";
        }
        if ($this->container['bank_balance'] === null) {
            $invalidProperties[] = "'bank_balance' can't be null";
        }
        if ($this->container['book_balance'] === null) {
            $invalidProperties[] = "'book_balance' can't be null";
        }
        if ($this->container['bank_date'] === null) {
            $invalidProperties[] = "'bank_date' can't be null";
        }
        if ($this->container['book_date'] === null) {
            $invalidProperties[] = "'book_date' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['completed_by_name'] === null) {
            $invalidProperties[] = "'completed_by_name' can't be null";
        }
        if ($this->container['completed_on'] === null) {
            $invalidProperties[] = "'completed_on' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['outstanding_checks'] === null) {
            $invalidProperties[] = "'outstanding_checks' can't be null";
        }
        if ($this->container['deposits_in_transit'] === null) {
            $invalidProperties[] = "'deposits_in_transit' can't be null";
        }
        if ($this->container['bank_adjustment'] === null) {
            $invalidProperties[] = "'bank_adjustment' can't be null";
        }
        if ($this->container['book_adjustment'] === null) {
            $invalidProperties[] = "'book_adjustment' can't be null";
        }
        if ($this->container['other_outstanding_transaction'] === null) {
            $invalidProperties[] = "'other_outstanding_transaction' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets sequence_number
     *
     * @return int
     */
    public function getSequenceNumber()
    {
        return $this->container['sequence_number'];
    }

    /**
     * Sets sequence_number
     *
     * @param int $sequence_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSequenceNumber($sequence_number)
    {
        $this->container['sequence_number'] = $sequence_number;

        return $this;
    }

    /**
     * Gets bank
     *
     * @return string
     */
    public function getBank()
    {
        return $this->container['bank'];
    }

    /**
     * Sets bank
     *
     * @param string $bank <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_BANK_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBank($bank)
    {
        $this->container['bank'] = $bank;

        return $this;
    }

    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets bank_balance
     *
     * @return double
     */
    public function getBankBalance()
    {
        return $this->container['bank_balance'];
    }

    /**
     * Sets bank_balance
     *
     * @param double $bank_balance <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_BANK_BALANCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 152  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBankBalance($bank_balance)
    {
        $this->container['bank_balance'] = $bank_balance;

        return $this;
    }

    /**
     * Gets book_balance
     *
     * @return double
     */
    public function getBookBalance()
    {
        return $this->container['book_balance'];
    }

    /**
     * Sets book_balance
     *
     * @param double $book_balance <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_BOOK_BALANCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 152  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBookBalance($book_balance)
    {
        $this->container['book_balance'] = $book_balance;

        return $this;
    }

    /**
     * Gets bank_date
     *
     * @return \DateTime
     */
    public function getBankDate()
    {
        return $this->container['bank_date'];
    }

    /**
     * Sets bank_date
     *
     * @param \DateTime $bank_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_BANK_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBankDate($bank_date)
    {
        $this->container['bank_date'] = $bank_date;

        return $this;
    }

    /**
     * Gets book_date
     *
     * @return \DateTime
     */
    public function getBookDate()
    {
        return $this->container['book_date'];
    }

    /**
     * Sets book_date
     *
     * @param \DateTime $book_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_BOOK_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBookDate($book_date)
    {
        $this->container['book_date'] = $book_date;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets completed_by_name
     *
     * @return string
     */
    public function getCompletedByName()
    {
        return $this->container['completed_by_name'];
    }

    /**
     * Sets completed_by_name
     *
     * @param string $completed_by_name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_COMPL_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCompletedByName($completed_by_name)
    {
        $this->container['completed_by_name'] = $completed_by_name;

        return $this;
    }

    /**
     * Gets completed_on
     *
     * @return \DateTime
     */
    public function getCompletedOn()
    {
        return $this->container['completed_on'];
    }

    /**
     * Sets completed_on
     *
     * @param \DateTime $completed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_COMPL_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCompletedOn($completed_on)
    {
        $this->container['completed_on'] = $completed_on;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 100  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets outstanding_checks
     *
     * @return double
     */
    public function getOutstandingChecks()
    {
        return $this->container['outstanding_checks'];
    }

    /**
     * Sets outstanding_checks
     *
     * @param double $outstanding_checks <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_OUTSTANDING_CHKS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOutstandingChecks($outstanding_checks)
    {
        $this->container['outstanding_checks'] = $outstanding_checks;

        return $this;
    }

    /**
     * Gets deposits_in_transit
     *
     * @return double
     */
    public function getDepositsInTransit()
    {
        return $this->container['deposits_in_transit'];
    }

    /**
     * Sets deposits_in_transit
     *
     * @param double $deposits_in_transit <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_DEP_IN_TRANSIT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepositsInTransit($deposits_in_transit)
    {
        $this->container['deposits_in_transit'] = $deposits_in_transit;

        return $this;
    }

    /**
     * Gets bank_adjustment
     *
     * @return double
     */
    public function getBankAdjustment()
    {
        return $this->container['bank_adjustment'];
    }

    /**
     * Sets bank_adjustment
     *
     * @param double $bank_adjustment <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_BANK_ADJ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBankAdjustment($bank_adjustment)
    {
        $this->container['bank_adjustment'] = $bank_adjustment;

        return $this;
    }

    /**
     * Gets book_adjustment
     *
     * @return double
     */
    public function getBookAdjustment()
    {
        return $this->container['book_adjustment'];
    }

    /**
     * Sets book_adjustment
     *
     * @param double $book_adjustment <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_BOOK_ADJ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBookAdjustment($book_adjustment)
    {
        $this->container['book_adjustment'] = $book_adjustment;

        return $this;
    }

    /**
     * Gets other_outstanding_transaction
     *
     * @return double
     */
    public function getOtherOutstandingTransaction()
    {
        return $this->container['other_outstanding_transaction'];
    }

    /**
     * Sets other_outstanding_transaction
     *
     * @param double $other_outstanding_transaction <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC640_OUTSTANDING_CASH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOtherOutstandingTransaction($other_outstanding_transaction)
    {
        $this->container['other_outstanding_transaction'] = $other_outstanding_transaction;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


