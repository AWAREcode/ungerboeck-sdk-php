<?php
/**
 * DocumentsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * DocumentsModel Class Doc Comment
 *
 * @category Class
 * @description This represents a document.
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DocumentsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'DocumentsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'type' => 'string',
        'sequence_number' => 'int',
        'entered_by' => 'string',
        'description' => 'string',
        'subject' => 'string',
        'document_id' => 'string',
        'path' => 'string',
        'viewed' => 'int',
        'search' => 'string',
        'changed_by' => 'string',
        'function' => 'int',
        'organization' => 'string',
        'sort' => 'string',
        'sensitivity' => 'string',
        'publish' => 'string',
        'account' => 'string',
        'opportunity' => 'int',
        'contact' => 'string',
        'activity' => 'int',
        'status' => 'string',
        'status_changed_by' => 'string',
        'event' => 'int',
        'resource_class' => 'string',
        'space_resource_code' => 'string',
        'resource_type' => 'string',
        'sent_received' => 'string',
        'general_ledger_account' => 'string',
        'word_merge' => 'string',
        'property' => 'string',
        'purged' => 'string',
        'meeting' => 'int',
        'order' => 'int',
        'entered_on' => '\DateTime',
        'changed_on' => '\DateTime',
        'contract' => 'int',
        'primary_heading' => 'int',
        'secondary_heading' => 'int',
        'multi_org_account_code' => 'string',
        'abstract_sequence_nbr' => 'int',
        'inventory_item' => 'string',
        'department' => 'string',
        'bulletin_application_code' => 'string',
        'meeting_tour_sequence_nbr' => 'int',
        'bulletin_sequence_number' => 'int',
        'housing_block_id' => 'string',
        'personal_folder' => 'string',
        'general_ledger_sub_account' => 'string',
        'fixed_asset' => 'string',
        'status_changed_on' => '\DateTime',
        'fiscal_year' => 'int',
        'fiscal_period' => 'int',
        'journal_entry_source' => 'string',
        'journal_entry_number' => 'string',
        'invoice_number' => 'int',
        'category' => 'string',
        'quote' => 'int',
        'campaign' => 'string',
        'campaign_designation' => 'string',
        'exhibitor' => 'int',
        'form_section' => 'int',
        'form_section_sort' => 'int',
        'purged_by' => 'string',
        'web_skin' => 'int',
        'heading' => 'string',
        'users_and_roles' => 'string',
        'document_is_accessible_to' => 'string',
        'new_file_name' => 'string',
        'new_document_data' => 'string',
        'mime_type' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'type' => null,
        'sequence_number' => 'int32',
        'entered_by' => null,
        'description' => null,
        'subject' => null,
        'document_id' => null,
        'path' => null,
        'viewed' => 'int32',
        'search' => null,
        'changed_by' => null,
        'function' => 'int32',
        'organization' => null,
        'sort' => null,
        'sensitivity' => null,
        'publish' => null,
        'account' => null,
        'opportunity' => 'int32',
        'contact' => null,
        'activity' => 'int32',
        'status' => null,
        'status_changed_by' => null,
        'event' => 'int32',
        'resource_class' => null,
        'space_resource_code' => null,
        'resource_type' => null,
        'sent_received' => null,
        'general_ledger_account' => null,
        'word_merge' => null,
        'property' => null,
        'purged' => null,
        'meeting' => 'int32',
        'order' => 'int32',
        'entered_on' => 'date-time',
        'changed_on' => 'date-time',
        'contract' => 'int32',
        'primary_heading' => 'int32',
        'secondary_heading' => 'int32',
        'multi_org_account_code' => null,
        'abstract_sequence_nbr' => 'int32',
        'inventory_item' => null,
        'department' => null,
        'bulletin_application_code' => null,
        'meeting_tour_sequence_nbr' => 'int32',
        'bulletin_sequence_number' => 'int32',
        'housing_block_id' => null,
        'personal_folder' => null,
        'general_ledger_sub_account' => null,
        'fixed_asset' => null,
        'status_changed_on' => 'date-time',
        'fiscal_year' => 'int32',
        'fiscal_period' => 'int32',
        'journal_entry_source' => null,
        'journal_entry_number' => null,
        'invoice_number' => 'int32',
        'category' => null,
        'quote' => 'int32',
        'campaign' => null,
        'campaign_designation' => null,
        'exhibitor' => 'int32',
        'form_section' => 'int32',
        'form_section_sort' => 'int32',
        'purged_by' => null,
        'web_skin' => 'int32',
        'heading' => null,
        'users_and_roles' => null,
        'document_is_accessible_to' => null,
        'new_file_name' => null,
        'new_document_data' => null,
        'mime_type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'type' => 'Type',
        'sequence_number' => 'SequenceNumber',
        'entered_by' => 'EnteredBy',
        'description' => 'Description',
        'subject' => 'Subject',
        'document_id' => 'DocumentID',
        'path' => 'Path',
        'viewed' => 'Viewed',
        'search' => 'Search',
        'changed_by' => 'ChangedBy',
        'function' => 'Function',
        'organization' => 'Organization',
        'sort' => 'Sort',
        'sensitivity' => 'Sensitivity',
        'publish' => 'Publish',
        'account' => 'Account',
        'opportunity' => 'Opportunity',
        'contact' => 'Contact',
        'activity' => 'Activity',
        'status' => 'Status',
        'status_changed_by' => 'StatusChangedBy',
        'event' => 'Event',
        'resource_class' => 'ResourceClass',
        'space_resource_code' => 'SpaceResourceCode',
        'resource_type' => 'ResourceType',
        'sent_received' => 'SentReceived',
        'general_ledger_account' => 'GeneralLedgerAccount',
        'word_merge' => 'WordMerge',
        'property' => 'Property',
        'purged' => 'Purged',
        'meeting' => 'Meeting',
        'order' => 'Order',
        'entered_on' => 'EnteredOn',
        'changed_on' => 'ChangedOn',
        'contract' => 'Contract',
        'primary_heading' => 'PrimaryHeading',
        'secondary_heading' => 'SecondaryHeading',
        'multi_org_account_code' => 'MultiOrgAccountCode',
        'abstract_sequence_nbr' => 'AbstractSequenceNbr',
        'inventory_item' => 'InventoryItem',
        'department' => 'Department',
        'bulletin_application_code' => 'BulletinApplicationCode',
        'meeting_tour_sequence_nbr' => 'MeetingTourSequenceNbr',
        'bulletin_sequence_number' => 'BulletinSequenceNumber',
        'housing_block_id' => 'HousingBlockID',
        'personal_folder' => 'PersonalFolder',
        'general_ledger_sub_account' => 'GeneralLedgerSubAccount',
        'fixed_asset' => 'FixedAsset',
        'status_changed_on' => 'StatusChangedOn',
        'fiscal_year' => 'FiscalYear',
        'fiscal_period' => 'FiscalPeriod',
        'journal_entry_source' => 'JournalEntrySource',
        'journal_entry_number' => 'JournalEntryNumber',
        'invoice_number' => 'InvoiceNumber',
        'category' => 'Category',
        'quote' => 'Quote',
        'campaign' => 'Campaign',
        'campaign_designation' => 'CampaignDesignation',
        'exhibitor' => 'Exhibitor',
        'form_section' => 'FormSection',
        'form_section_sort' => 'FormSectionSort',
        'purged_by' => 'PurgedBy',
        'web_skin' => 'WebSkin',
        'heading' => 'Heading',
        'users_and_roles' => 'UsersAndRoles',
        'document_is_accessible_to' => 'DocumentIsAccessibleTo',
        'new_file_name' => 'NewFileName',
        'new_document_data' => 'NewDocumentData',
        'mime_type' => 'MimeType'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'type' => 'setType',
        'sequence_number' => 'setSequenceNumber',
        'entered_by' => 'setEnteredBy',
        'description' => 'setDescription',
        'subject' => 'setSubject',
        'document_id' => 'setDocumentId',
        'path' => 'setPath',
        'viewed' => 'setViewed',
        'search' => 'setSearch',
        'changed_by' => 'setChangedBy',
        'function' => 'setFunction',
        'organization' => 'setOrganization',
        'sort' => 'setSort',
        'sensitivity' => 'setSensitivity',
        'publish' => 'setPublish',
        'account' => 'setAccount',
        'opportunity' => 'setOpportunity',
        'contact' => 'setContact',
        'activity' => 'setActivity',
        'status' => 'setStatus',
        'status_changed_by' => 'setStatusChangedBy',
        'event' => 'setEvent',
        'resource_class' => 'setResourceClass',
        'space_resource_code' => 'setSpaceResourceCode',
        'resource_type' => 'setResourceType',
        'sent_received' => 'setSentReceived',
        'general_ledger_account' => 'setGeneralLedgerAccount',
        'word_merge' => 'setWordMerge',
        'property' => 'setProperty',
        'purged' => 'setPurged',
        'meeting' => 'setMeeting',
        'order' => 'setOrder',
        'entered_on' => 'setEnteredOn',
        'changed_on' => 'setChangedOn',
        'contract' => 'setContract',
        'primary_heading' => 'setPrimaryHeading',
        'secondary_heading' => 'setSecondaryHeading',
        'multi_org_account_code' => 'setMultiOrgAccountCode',
        'abstract_sequence_nbr' => 'setAbstractSequenceNbr',
        'inventory_item' => 'setInventoryItem',
        'department' => 'setDepartment',
        'bulletin_application_code' => 'setBulletinApplicationCode',
        'meeting_tour_sequence_nbr' => 'setMeetingTourSequenceNbr',
        'bulletin_sequence_number' => 'setBulletinSequenceNumber',
        'housing_block_id' => 'setHousingBlockId',
        'personal_folder' => 'setPersonalFolder',
        'general_ledger_sub_account' => 'setGeneralLedgerSubAccount',
        'fixed_asset' => 'setFixedAsset',
        'status_changed_on' => 'setStatusChangedOn',
        'fiscal_year' => 'setFiscalYear',
        'fiscal_period' => 'setFiscalPeriod',
        'journal_entry_source' => 'setJournalEntrySource',
        'journal_entry_number' => 'setJournalEntryNumber',
        'invoice_number' => 'setInvoiceNumber',
        'category' => 'setCategory',
        'quote' => 'setQuote',
        'campaign' => 'setCampaign',
        'campaign_designation' => 'setCampaignDesignation',
        'exhibitor' => 'setExhibitor',
        'form_section' => 'setFormSection',
        'form_section_sort' => 'setFormSectionSort',
        'purged_by' => 'setPurgedBy',
        'web_skin' => 'setWebSkin',
        'heading' => 'setHeading',
        'users_and_roles' => 'setUsersAndRoles',
        'document_is_accessible_to' => 'setDocumentIsAccessibleTo',
        'new_file_name' => 'setNewFileName',
        'new_document_data' => 'setNewDocumentData',
        'mime_type' => 'setMimeType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'type' => 'getType',
        'sequence_number' => 'getSequenceNumber',
        'entered_by' => 'getEnteredBy',
        'description' => 'getDescription',
        'subject' => 'getSubject',
        'document_id' => 'getDocumentId',
        'path' => 'getPath',
        'viewed' => 'getViewed',
        'search' => 'getSearch',
        'changed_by' => 'getChangedBy',
        'function' => 'getFunction',
        'organization' => 'getOrganization',
        'sort' => 'getSort',
        'sensitivity' => 'getSensitivity',
        'publish' => 'getPublish',
        'account' => 'getAccount',
        'opportunity' => 'getOpportunity',
        'contact' => 'getContact',
        'activity' => 'getActivity',
        'status' => 'getStatus',
        'status_changed_by' => 'getStatusChangedBy',
        'event' => 'getEvent',
        'resource_class' => 'getResourceClass',
        'space_resource_code' => 'getSpaceResourceCode',
        'resource_type' => 'getResourceType',
        'sent_received' => 'getSentReceived',
        'general_ledger_account' => 'getGeneralLedgerAccount',
        'word_merge' => 'getWordMerge',
        'property' => 'getProperty',
        'purged' => 'getPurged',
        'meeting' => 'getMeeting',
        'order' => 'getOrder',
        'entered_on' => 'getEnteredOn',
        'changed_on' => 'getChangedOn',
        'contract' => 'getContract',
        'primary_heading' => 'getPrimaryHeading',
        'secondary_heading' => 'getSecondaryHeading',
        'multi_org_account_code' => 'getMultiOrgAccountCode',
        'abstract_sequence_nbr' => 'getAbstractSequenceNbr',
        'inventory_item' => 'getInventoryItem',
        'department' => 'getDepartment',
        'bulletin_application_code' => 'getBulletinApplicationCode',
        'meeting_tour_sequence_nbr' => 'getMeetingTourSequenceNbr',
        'bulletin_sequence_number' => 'getBulletinSequenceNumber',
        'housing_block_id' => 'getHousingBlockId',
        'personal_folder' => 'getPersonalFolder',
        'general_ledger_sub_account' => 'getGeneralLedgerSubAccount',
        'fixed_asset' => 'getFixedAsset',
        'status_changed_on' => 'getStatusChangedOn',
        'fiscal_year' => 'getFiscalYear',
        'fiscal_period' => 'getFiscalPeriod',
        'journal_entry_source' => 'getJournalEntrySource',
        'journal_entry_number' => 'getJournalEntryNumber',
        'invoice_number' => 'getInvoiceNumber',
        'category' => 'getCategory',
        'quote' => 'getQuote',
        'campaign' => 'getCampaign',
        'campaign_designation' => 'getCampaignDesignation',
        'exhibitor' => 'getExhibitor',
        'form_section' => 'getFormSection',
        'form_section_sort' => 'getFormSectionSort',
        'purged_by' => 'getPurgedBy',
        'web_skin' => 'getWebSkin',
        'heading' => 'getHeading',
        'users_and_roles' => 'getUsersAndRoles',
        'document_is_accessible_to' => 'getDocumentIsAccessibleTo',
        'new_file_name' => 'getNewFileName',
        'new_document_data' => 'getNewDocumentData',
        'mime_type' => 'getMimeType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['sequence_number'] = isset($data['sequence_number']) ? $data['sequence_number'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['subject'] = isset($data['subject']) ? $data['subject'] : null;
        $this->container['document_id'] = isset($data['document_id']) ? $data['document_id'] : null;
        $this->container['path'] = isset($data['path']) ? $data['path'] : null;
        $this->container['viewed'] = isset($data['viewed']) ? $data['viewed'] : null;
        $this->container['search'] = isset($data['search']) ? $data['search'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['function'] = isset($data['function']) ? $data['function'] : null;
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['sort'] = isset($data['sort']) ? $data['sort'] : null;
        $this->container['sensitivity'] = isset($data['sensitivity']) ? $data['sensitivity'] : null;
        $this->container['publish'] = isset($data['publish']) ? $data['publish'] : null;
        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
        $this->container['opportunity'] = isset($data['opportunity']) ? $data['opportunity'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['activity'] = isset($data['activity']) ? $data['activity'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['status_changed_by'] = isset($data['status_changed_by']) ? $data['status_changed_by'] : null;
        $this->container['event'] = isset($data['event']) ? $data['event'] : null;
        $this->container['resource_class'] = isset($data['resource_class']) ? $data['resource_class'] : null;
        $this->container['space_resource_code'] = isset($data['space_resource_code']) ? $data['space_resource_code'] : null;
        $this->container['resource_type'] = isset($data['resource_type']) ? $data['resource_type'] : null;
        $this->container['sent_received'] = isset($data['sent_received']) ? $data['sent_received'] : null;
        $this->container['general_ledger_account'] = isset($data['general_ledger_account']) ? $data['general_ledger_account'] : null;
        $this->container['word_merge'] = isset($data['word_merge']) ? $data['word_merge'] : null;
        $this->container['property'] = isset($data['property']) ? $data['property'] : null;
        $this->container['purged'] = isset($data['purged']) ? $data['purged'] : null;
        $this->container['meeting'] = isset($data['meeting']) ? $data['meeting'] : null;
        $this->container['order'] = isset($data['order']) ? $data['order'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['contract'] = isset($data['contract']) ? $data['contract'] : null;
        $this->container['primary_heading'] = isset($data['primary_heading']) ? $data['primary_heading'] : null;
        $this->container['secondary_heading'] = isset($data['secondary_heading']) ? $data['secondary_heading'] : null;
        $this->container['multi_org_account_code'] = isset($data['multi_org_account_code']) ? $data['multi_org_account_code'] : null;
        $this->container['abstract_sequence_nbr'] = isset($data['abstract_sequence_nbr']) ? $data['abstract_sequence_nbr'] : null;
        $this->container['inventory_item'] = isset($data['inventory_item']) ? $data['inventory_item'] : null;
        $this->container['department'] = isset($data['department']) ? $data['department'] : null;
        $this->container['bulletin_application_code'] = isset($data['bulletin_application_code']) ? $data['bulletin_application_code'] : null;
        $this->container['meeting_tour_sequence_nbr'] = isset($data['meeting_tour_sequence_nbr']) ? $data['meeting_tour_sequence_nbr'] : null;
        $this->container['bulletin_sequence_number'] = isset($data['bulletin_sequence_number']) ? $data['bulletin_sequence_number'] : null;
        $this->container['housing_block_id'] = isset($data['housing_block_id']) ? $data['housing_block_id'] : null;
        $this->container['personal_folder'] = isset($data['personal_folder']) ? $data['personal_folder'] : null;
        $this->container['general_ledger_sub_account'] = isset($data['general_ledger_sub_account']) ? $data['general_ledger_sub_account'] : null;
        $this->container['fixed_asset'] = isset($data['fixed_asset']) ? $data['fixed_asset'] : null;
        $this->container['status_changed_on'] = isset($data['status_changed_on']) ? $data['status_changed_on'] : null;
        $this->container['fiscal_year'] = isset($data['fiscal_year']) ? $data['fiscal_year'] : null;
        $this->container['fiscal_period'] = isset($data['fiscal_period']) ? $data['fiscal_period'] : null;
        $this->container['journal_entry_source'] = isset($data['journal_entry_source']) ? $data['journal_entry_source'] : null;
        $this->container['journal_entry_number'] = isset($data['journal_entry_number']) ? $data['journal_entry_number'] : null;
        $this->container['invoice_number'] = isset($data['invoice_number']) ? $data['invoice_number'] : null;
        $this->container['category'] = isset($data['category']) ? $data['category'] : null;
        $this->container['quote'] = isset($data['quote']) ? $data['quote'] : null;
        $this->container['campaign'] = isset($data['campaign']) ? $data['campaign'] : null;
        $this->container['campaign_designation'] = isset($data['campaign_designation']) ? $data['campaign_designation'] : null;
        $this->container['exhibitor'] = isset($data['exhibitor']) ? $data['exhibitor'] : null;
        $this->container['form_section'] = isset($data['form_section']) ? $data['form_section'] : null;
        $this->container['form_section_sort'] = isset($data['form_section_sort']) ? $data['form_section_sort'] : null;
        $this->container['purged_by'] = isset($data['purged_by']) ? $data['purged_by'] : null;
        $this->container['web_skin'] = isset($data['web_skin']) ? $data['web_skin'] : null;
        $this->container['heading'] = isset($data['heading']) ? $data['heading'] : null;
        $this->container['users_and_roles'] = isset($data['users_and_roles']) ? $data['users_and_roles'] : null;
        $this->container['document_is_accessible_to'] = isset($data['document_is_accessible_to']) ? $data['document_is_accessible_to'] : null;
        $this->container['new_file_name'] = isset($data['new_file_name']) ? $data['new_file_name'] : null;
        $this->container['new_document_data'] = isset($data['new_document_data']) ? $data['new_document_data'] : null;
        $this->container['mime_type'] = isset($data['mime_type']) ? $data['mime_type'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['sequence_number'] === null) {
            $invalidProperties[] = "'sequence_number' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['subject'] === null) {
            $invalidProperties[] = "'subject' can't be null";
        }
        if ($this->container['document_id'] === null) {
            $invalidProperties[] = "'document_id' can't be null";
        }
        if ($this->container['path'] === null) {
            $invalidProperties[] = "'path' can't be null";
        }
        if ($this->container['viewed'] === null) {
            $invalidProperties[] = "'viewed' can't be null";
        }
        if ($this->container['search'] === null) {
            $invalidProperties[] = "'search' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['function'] === null) {
            $invalidProperties[] = "'function' can't be null";
        }
        if ($this->container['organization'] === null) {
            $invalidProperties[] = "'organization' can't be null";
        }
        if ($this->container['sort'] === null) {
            $invalidProperties[] = "'sort' can't be null";
        }
        if ($this->container['sensitivity'] === null) {
            $invalidProperties[] = "'sensitivity' can't be null";
        }
        if ($this->container['publish'] === null) {
            $invalidProperties[] = "'publish' can't be null";
        }
        if ($this->container['account'] === null) {
            $invalidProperties[] = "'account' can't be null";
        }
        if ($this->container['opportunity'] === null) {
            $invalidProperties[] = "'opportunity' can't be null";
        }
        if ($this->container['contact'] === null) {
            $invalidProperties[] = "'contact' can't be null";
        }
        if ($this->container['activity'] === null) {
            $invalidProperties[] = "'activity' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['status_changed_by'] === null) {
            $invalidProperties[] = "'status_changed_by' can't be null";
        }
        if ($this->container['event'] === null) {
            $invalidProperties[] = "'event' can't be null";
        }
        if ($this->container['resource_class'] === null) {
            $invalidProperties[] = "'resource_class' can't be null";
        }
        if ($this->container['space_resource_code'] === null) {
            $invalidProperties[] = "'space_resource_code' can't be null";
        }
        if ($this->container['resource_type'] === null) {
            $invalidProperties[] = "'resource_type' can't be null";
        }
        if ($this->container['sent_received'] === null) {
            $invalidProperties[] = "'sent_received' can't be null";
        }
        if ($this->container['general_ledger_account'] === null) {
            $invalidProperties[] = "'general_ledger_account' can't be null";
        }
        if ($this->container['word_merge'] === null) {
            $invalidProperties[] = "'word_merge' can't be null";
        }
        if ($this->container['property'] === null) {
            $invalidProperties[] = "'property' can't be null";
        }
        if ($this->container['purged'] === null) {
            $invalidProperties[] = "'purged' can't be null";
        }
        if ($this->container['meeting'] === null) {
            $invalidProperties[] = "'meeting' can't be null";
        }
        if ($this->container['order'] === null) {
            $invalidProperties[] = "'order' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['contract'] === null) {
            $invalidProperties[] = "'contract' can't be null";
        }
        if ($this->container['primary_heading'] === null) {
            $invalidProperties[] = "'primary_heading' can't be null";
        }
        if ($this->container['secondary_heading'] === null) {
            $invalidProperties[] = "'secondary_heading' can't be null";
        }
        if ($this->container['multi_org_account_code'] === null) {
            $invalidProperties[] = "'multi_org_account_code' can't be null";
        }
        if ($this->container['abstract_sequence_nbr'] === null) {
            $invalidProperties[] = "'abstract_sequence_nbr' can't be null";
        }
        if ($this->container['inventory_item'] === null) {
            $invalidProperties[] = "'inventory_item' can't be null";
        }
        if ($this->container['department'] === null) {
            $invalidProperties[] = "'department' can't be null";
        }
        if ($this->container['bulletin_application_code'] === null) {
            $invalidProperties[] = "'bulletin_application_code' can't be null";
        }
        if ($this->container['meeting_tour_sequence_nbr'] === null) {
            $invalidProperties[] = "'meeting_tour_sequence_nbr' can't be null";
        }
        if ($this->container['bulletin_sequence_number'] === null) {
            $invalidProperties[] = "'bulletin_sequence_number' can't be null";
        }
        if ($this->container['housing_block_id'] === null) {
            $invalidProperties[] = "'housing_block_id' can't be null";
        }
        if ($this->container['personal_folder'] === null) {
            $invalidProperties[] = "'personal_folder' can't be null";
        }
        if ($this->container['general_ledger_sub_account'] === null) {
            $invalidProperties[] = "'general_ledger_sub_account' can't be null";
        }
        if ($this->container['fixed_asset'] === null) {
            $invalidProperties[] = "'fixed_asset' can't be null";
        }
        if ($this->container['status_changed_on'] === null) {
            $invalidProperties[] = "'status_changed_on' can't be null";
        }
        if ($this->container['fiscal_year'] === null) {
            $invalidProperties[] = "'fiscal_year' can't be null";
        }
        if ($this->container['fiscal_period'] === null) {
            $invalidProperties[] = "'fiscal_period' can't be null";
        }
        if ($this->container['journal_entry_source'] === null) {
            $invalidProperties[] = "'journal_entry_source' can't be null";
        }
        if ($this->container['journal_entry_number'] === null) {
            $invalidProperties[] = "'journal_entry_number' can't be null";
        }
        if ($this->container['invoice_number'] === null) {
            $invalidProperties[] = "'invoice_number' can't be null";
        }
        if ($this->container['category'] === null) {
            $invalidProperties[] = "'category' can't be null";
        }
        if ($this->container['quote'] === null) {
            $invalidProperties[] = "'quote' can't be null";
        }
        if ($this->container['campaign'] === null) {
            $invalidProperties[] = "'campaign' can't be null";
        }
        if ($this->container['campaign_designation'] === null) {
            $invalidProperties[] = "'campaign_designation' can't be null";
        }
        if ($this->container['exhibitor'] === null) {
            $invalidProperties[] = "'exhibitor' can't be null";
        }
        if ($this->container['form_section'] === null) {
            $invalidProperties[] = "'form_section' can't be null";
        }
        if ($this->container['form_section_sort'] === null) {
            $invalidProperties[] = "'form_section_sort' can't be null";
        }
        if ($this->container['purged_by'] === null) {
            $invalidProperties[] = "'purged_by' can't be null";
        }
        if ($this->container['web_skin'] === null) {
            $invalidProperties[] = "'web_skin' can't be null";
        }
        if ($this->container['heading'] === null) {
            $invalidProperties[] = "'heading' can't be null";
        }
        if ($this->container['users_and_roles'] === null) {
            $invalidProperties[] = "'users_and_roles' can't be null";
        }
        if ($this->container['document_is_accessible_to'] === null) {
            $invalidProperties[] = "'document_is_accessible_to' can't be null";
        }
        if ($this->container['new_file_name'] === null) {
            $invalidProperties[] = "'new_file_name' can't be null";
        }
        if ($this->container['new_document_data'] === null) {
            $invalidProperties[] = "'new_document_data' can't be null";
        }
        if ($this->container['mime_type'] === null) {
            $invalidProperties[] = "'mime_type' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is an identifier field, used in GET and PUT URLs.  It must match the primary key of the document that is the Type (aka Document Class).  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_DOC_CLASS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets sequence_number
     *
     * @return int
     */
    public function getSequenceNumber()
    {
        return $this->container['sequence_number'];
    }

    /**
     * Sets sequence_number
     *
     * @param int $sequence_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is an identifier field, used in GET and PUT URLs. It must match the sequence number of your targeted document.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_DOC_SEQ_KEY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSequenceNumber($sequence_number)
    {
        $this->container['sequence_number'] = $sequence_number;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_DOC_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets subject
     *
     * @return string
     */
    public function getSubject()
    {
        return $this->container['subject'];
    }

    /**
     * Sets subject
     *
     * @param string $subject <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This gets filled in automatically on POST depending on the other fields filled in.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_DOC_SUBJ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSubject($subject)
    {
        $this->container['subject'] = $subject;

        return $this;
    }

    /**
     * Gets document_id
     *
     * @return string
     */
    public function getDocumentId()
    {
        return $this->container['document_id'];
    }

    /**
     * Sets document_id
     *
     * @param string $document_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_DOC_ENTRY_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDocumentId($document_id)
    {
        $this->container['document_id'] = $document_id;

        return $this;
    }

    /**
     * Gets path
     *
     * @return string
     */
    public function getPath()
    {
        return $this->container['path'];
    }

    /**
     * Sets path
     *
     * @param string $path <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_DOC_PATH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 60  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPath($path)
    {
        $this->container['path'] = $path;

        return $this;
    }

    /**
     * Gets viewed
     *
     * @return int
     */
    public function getViewed()
    {
        return $this->container['viewed'];
    }

    /**
     * Sets viewed
     *
     * @param int $viewed <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_TIMES_VIEW  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setViewed($viewed)
    {
        $this->container['viewed'] = $viewed;

        return $this;
    }

    /**
     * Gets search
     *
     * @return string
     */
    public function getSearch()
    {
        return $this->container['search'];
    }

    /**
     * Sets search
     *
     * @param string $search <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_SEARCH1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSearch($search)
    {
        $this->container['search'] = $search;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets function
     *
     * @return int
     */
    public function getFunction()
    {
        return $this->container['function'];
    }

    /**
     * Sets function
     *
     * @param int $function <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_EV_FUNC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFunction($function)
    {
        $this->container['function'] = $function;

        return $this;
    }

    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is an identifier field, used on GET and PUT URLs.  It needs to match the Organization Code of the document.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets sort
     *
     * @return string
     */
    public function getSort()
    {
        return $this->container['sort'];
    }

    /**
     * Sets sort
     *
     * @param string $sort <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_STOCK_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSort($sort)
    {
        $this->container['sort'] = $sort;

        return $this;
    }

    /**
     * Gets sensitivity
     *
     * @return string
     */
    public function getSensitivity()
    {
        return $this->container['sensitivity'];
    }

    /**
     * Sets sensitivity
     *
     * @param string $sensitivity <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_SENSITIVITY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSensitivity($sensitivity)
    {
        $this->container['sensitivity'] = $sensitivity;

        return $this;
    }

    /**
     * Gets publish
     *
     * @return string
     */
    public function getPublish()
    {
        return $this->container['publish'];
    }

    /**
     * Sets publish
     *
     * @param string $publish <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_PUBLISH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPublish($publish)
    {
        $this->container['publish'] = $publish;

        return $this;
    }

    /**
     * Gets account
     *
     * @return string
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param string $account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This should be set when attaching a document to an account or a subject tied to an account (For example, Orders)  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets opportunity
     *
     * @return int
     */
    public function getOpportunity()
    {
        return $this->container['opportunity'];
    }

    /**
     * Sets opportunity
     *
     * @param int $opportunity <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This should be set when attaching a document to an opportunity  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_AC_ISSUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOpportunity($opportunity)
    {
        $this->container['opportunity'] = $opportunity;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return string
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param string $contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This should only be set if the account is an Organization account.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_AC_CONTACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets activity
     *
     * @return int
     */
    public function getActivity()
    {
        return $this->container['activity'];
    }

    /**
     * Sets activity
     *
     * @param int $activity <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This should be set when attaching a document to an activity.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_AC_DIARY_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActivity($activity)
    {
        $this->container['activity'] = $activity;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You can fill this in to check in and check out the document.  Use CI or CO to denote Checked In or Checked Out, respectively  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_DOC_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets status_changed_by
     *
     * @return string
     */
    public function getStatusChangedBy()
    {
        return $this->container['status_changed_by'];
    }

    /**
     * Sets status_changed_by
     *
     * @param string $status_changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_STS_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatusChangedBy($status_changed_by)
    {
        $this->container['status_changed_by'] = $status_changed_by;

        return $this;
    }

    /**
     * Gets event
     *
     * @return int
     */
    public function getEvent()
    {
        return $this->container['event'];
    }

    /**
     * Sets event
     *
     * @param int $event <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You need to fill this in when attaching a document to an event or a subject tied to an Event (for example, an order).  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_EVENT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEvent($event)
    {
        $this->container['event'] = $event;

        return $this;
    }

    /**
     * Gets resource_class
     *
     * @return string
     */
    public function getResourceClass()
    {
        return $this->container['resource_class'];
    }

    /**
     * Sets resource_class
     *
     * @param string $resource_class <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> If the resource is a Space, set this to \"1\".  Otherwise, leave blank.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_RES_CLASS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setResourceClass($resource_class)
    {
        $this->container['resource_class'] = $resource_class;

        return $this;
    }

    /**
     * Gets space_resource_code
     *
     * @return string
     */
    public function getSpaceResourceCode()
    {
        return $this->container['space_resource_code'];
    }

    /**
     * Sets space_resource_code
     *
     * @param string $space_resource_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this when attaching the document to a resource.  Find the code value on the resource master in Ungerboeck.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_RES_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSpaceResourceCode($space_resource_code)
    {
        $this->container['space_resource_code'] = $space_resource_code;

        return $this;
    }

    /**
     * Gets resource_type
     *
     * @return string
     */
    public function getResourceType()
    {
        return $this->container['resource_type'];
    }

    /**
     * Sets resource_type
     *
     * @param string $resource_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Use this when attaching the document to a resource.  Find the Type code value on the resource master in Ungerboeck.  If the document is attaching to a space, leave this property empty.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_RES_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setResourceType($resource_type)
    {
        $this->container['resource_type'] = $resource_type;

        return $this;
    }

    /**
     * Gets sent_received
     *
     * @return string
     */
    public function getSentReceived()
    {
        return $this->container['sent_received'];
    }

    /**
     * Sets sent_received
     *
     * @param string $sent_received <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_SEND_REC_FLAG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSentReceived($sent_received)
    {
        $this->container['sent_received'] = $sent_received;

        return $this;
    }

    /**
     * Gets general_ledger_account
     *
     * @return string
     */
    public function getGeneralLedgerAccount()
    {
        return $this->container['general_ledger_account'];
    }

    /**
     * Sets general_ledger_account
     *
     * @param string $general_ledger_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_GL_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGeneralLedgerAccount($general_ledger_account)
    {
        $this->container['general_ledger_account'] = $general_ledger_account;

        return $this;
    }

    /**
     * Gets word_merge
     *
     * @return string
     */
    public function getWordMerge()
    {
        return $this->container['word_merge'];
    }

    /**
     * Sets word_merge
     *
     * @param string $word_merge <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_WORD_MERGE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setWordMerge($word_merge)
    {
        $this->container['word_merge'] = $word_merge;

        return $this;
    }

    /**
     * Gets property
     *
     * @return string
     */
    public function getProperty()
    {
        return $this->container['property'];
    }

    /**
     * Sets property
     *
     * @param string $property <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_PROP_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setProperty($property)
    {
        $this->container['property'] = $property;

        return $this;
    }

    /**
     * Gets purged
     *
     * @return string
     */
    public function getPurged()
    {
        return $this->container['purged'];
    }

    /**
     * Sets purged
     *
     * @param string $purged <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_DOC_PURGED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPurged($purged)
    {
        $this->container['purged'] = $purged;

        return $this;
    }

    /**
     * Gets meeting
     *
     * @return int
     */
    public function getMeeting()
    {
        return $this->container['meeting'];
    }

    /**
     * Sets meeting
     *
     * @param int $meeting <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This should be set when attaching a document to a Meeting.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_CM_MEET_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMeeting($meeting)
    {
        $this->container['meeting'] = $meeting;

        return $this;
    }

    /**
     * Gets order
     *
     * @return int
     */
    public function getOrder()
    {
        return $this->container['order'];
    }

    /**
     * Sets order
     *
     * @param int $order <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You need to fill this in when attaching a document to an Order.  You also need to fill in Event, Function, and Account.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_INDEX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrder($order)
    {
        $this->container['order'] = $order;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets contract
     *
     * @return int
     */
    public function getContract()
    {
        return $this->container['contract'];
    }

    /**
     * Sets contract
     *
     * @param int $contract <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This should be set when attaching a document to a contract.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_CONTRACT_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContract($contract)
    {
        $this->container['contract'] = $contract;

        return $this;
    }

    /**
     * Gets primary_heading
     *
     * @return int
     */
    public function getPrimaryHeading()
    {
        return $this->container['primary_heading'];
    }

    /**
     * Sets primary_heading
     *
     * @param int $primary_heading <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_HEADING_SEQ_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPrimaryHeading($primary_heading)
    {
        $this->container['primary_heading'] = $primary_heading;

        return $this;
    }

    /**
     * Gets secondary_heading
     *
     * @return int
     */
    public function getSecondaryHeading()
    {
        return $this->container['secondary_heading'];
    }

    /**
     * Sets secondary_heading
     *
     * @param int $secondary_heading <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_HEADING_SEQ_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSecondaryHeading($secondary_heading)
    {
        $this->container['secondary_heading'] = $secondary_heading;

        return $this;
    }

    /**
     * Gets multi_org_account_code
     *
     * @return string
     */
    public function getMultiOrgAccountCode()
    {
        return $this->container['multi_org_account_code'];
    }

    /**
     * Sets multi_org_account_code
     *
     * @param string $multi_org_account_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_MULTI_ORG_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMultiOrgAccountCode($multi_org_account_code)
    {
        $this->container['multi_org_account_code'] = $multi_org_account_code;

        return $this;
    }

    /**
     * Gets abstract_sequence_nbr
     *
     * @return int
     */
    public function getAbstractSequenceNbr()
    {
        return $this->container['abstract_sequence_nbr'];
    }

    /**
     * Sets abstract_sequence_nbr
     *
     * @param int $abstract_sequence_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_ABSTR_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAbstractSequenceNbr($abstract_sequence_nbr)
    {
        $this->container['abstract_sequence_nbr'] = $abstract_sequence_nbr;

        return $this;
    }

    /**
     * Gets inventory_item
     *
     * @return string
     */
    public function getInventoryItem()
    {
        return $this->container['inventory_item'];
    }

    /**
     * Sets inventory_item
     *
     * @param string $inventory_item <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_ITEM_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInventoryItem($inventory_item)
    {
        $this->container['inventory_item'] = $inventory_item;

        return $this;
    }

    /**
     * Gets department
     *
     * @return string
     */
    public function getDepartment()
    {
        return $this->container['department'];
    }

    /**
     * Sets department
     *
     * @param string $department <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_DEPT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDepartment($department)
    {
        $this->container['department'] = $department;

        return $this;
    }

    /**
     * Gets bulletin_application_code
     *
     * @return string
     */
    public function getBulletinApplicationCode()
    {
        return $this->container['bulletin_application_code'];
    }

    /**
     * Sets bulletin_application_code
     *
     * @param string $bulletin_application_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_BUL_FILE_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBulletinApplicationCode($bulletin_application_code)
    {
        $this->container['bulletin_application_code'] = $bulletin_application_code;

        return $this;
    }

    /**
     * Gets meeting_tour_sequence_nbr
     *
     * @return int
     */
    public function getMeetingTourSequenceNbr()
    {
        return $this->container['meeting_tour_sequence_nbr'];
    }

    /**
     * Sets meeting_tour_sequence_nbr
     *
     * @param int $meeting_tour_sequence_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_BUL_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMeetingTourSequenceNbr($meeting_tour_sequence_nbr)
    {
        $this->container['meeting_tour_sequence_nbr'] = $meeting_tour_sequence_nbr;

        return $this;
    }

    /**
     * Gets bulletin_sequence_number
     *
     * @return int
     */
    public function getBulletinSequenceNumber()
    {
        return $this->container['bulletin_sequence_number'];
    }

    /**
     * Sets bulletin_sequence_number
     *
     * @param int $bulletin_sequence_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_BUL_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBulletinSequenceNumber($bulletin_sequence_number)
    {
        $this->container['bulletin_sequence_number'] = $bulletin_sequence_number;

        return $this;
    }

    /**
     * Gets housing_block_id
     *
     * @return string
     */
    public function getHousingBlockId()
    {
        return $this->container['housing_block_id'];
    }

    /**
     * Sets housing_block_id
     *
     * @param string $housing_block_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_BLOCK_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setHousingBlockId($housing_block_id)
    {
        $this->container['housing_block_id'] = $housing_block_id;

        return $this;
    }

    /**
     * Gets personal_folder
     *
     * @return string
     */
    public function getPersonalFolder()
    {
        return $this->container['personal_folder'];
    }

    /**
     * Sets personal_folder
     *
     * @param string $personal_folder <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_PRS_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPersonalFolder($personal_folder)
    {
        $this->container['personal_folder'] = $personal_folder;

        return $this;
    }

    /**
     * Gets general_ledger_sub_account
     *
     * @return string
     */
    public function getGeneralLedgerSubAccount()
    {
        return $this->container['general_ledger_sub_account'];
    }

    /**
     * Sets general_ledger_sub_account
     *
     * @param string $general_ledger_sub_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_GL_SUB_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGeneralLedgerSubAccount($general_ledger_sub_account)
    {
        $this->container['general_ledger_sub_account'] = $general_ledger_sub_account;

        return $this;
    }

    /**
     * Gets fixed_asset
     *
     * @return string
     */
    public function getFixedAsset()
    {
        return $this->container['fixed_asset'];
    }

    /**
     * Sets fixed_asset
     *
     * @param string $fixed_asset <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_ASSET_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFixedAsset($fixed_asset)
    {
        $this->container['fixed_asset'] = $fixed_asset;

        return $this;
    }

    /**
     * Gets status_changed_on
     *
     * @return \DateTime
     */
    public function getStatusChangedOn()
    {
        return $this->container['status_changed_on'];
    }

    /**
     * Sets status_changed_on
     *
     * @param \DateTime $status_changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_STS_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatusChangedOn($status_changed_on)
    {
        $this->container['status_changed_on'] = $status_changed_on;

        return $this;
    }

    /**
     * Gets fiscal_year
     *
     * @return int
     */
    public function getFiscalYear()
    {
        return $this->container['fiscal_year'];
    }

    /**
     * Sets fiscal_year
     *
     * @param int $fiscal_year <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_FISCAL_YR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFiscalYear($fiscal_year)
    {
        $this->container['fiscal_year'] = $fiscal_year;

        return $this;
    }

    /**
     * Gets fiscal_period
     *
     * @return int
     */
    public function getFiscalPeriod()
    {
        return $this->container['fiscal_period'];
    }

    /**
     * Sets fiscal_period
     *
     * @param int $fiscal_period <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_FISCAL_PERIOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFiscalPeriod($fiscal_period)
    {
        $this->container['fiscal_period'] = $fiscal_period;

        return $this;
    }

    /**
     * Gets journal_entry_source
     *
     * @return string
     */
    public function getJournalEntrySource()
    {
        return $this->container['journal_entry_source'];
    }

    /**
     * Sets journal_entry_source
     *
     * @param string $journal_entry_source <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_JE_SOURCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setJournalEntrySource($journal_entry_source)
    {
        $this->container['journal_entry_source'] = $journal_entry_source;

        return $this;
    }

    /**
     * Gets journal_entry_number
     *
     * @return string
     */
    public function getJournalEntryNumber()
    {
        return $this->container['journal_entry_number'];
    }

    /**
     * Sets journal_entry_number
     *
     * @param string $journal_entry_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_JE_ENTRY_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 7  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setJournalEntryNumber($journal_entry_number)
    {
        $this->container['journal_entry_number'] = $journal_entry_number;

        return $this;
    }

    /**
     * Gets invoice_number
     *
     * @return int
     */
    public function getInvoiceNumber()
    {
        return $this->container['invoice_number'];
    }

    /**
     * Sets invoice_number
     *
     * @param int $invoice_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You need to fill this in when attaching a document to an Invoice.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_INVOICE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoiceNumber($invoice_number)
    {
        $this->container['invoice_number'] = $invoice_number;

        return $this;
    }

    /**
     * Gets category
     *
     * @return string
     */
    public function getCategory()
    {
        return $this->container['category'];
    }

    /**
     * Sets category
     *
     * @param string $category <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_DOC_CATEGORY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCategory($category)
    {
        $this->container['category'] = $category;

        return $this;
    }

    /**
     * Gets quote
     *
     * @return int
     */
    public function getQuote()
    {
        return $this->container['quote'];
    }

    /**
     * Sets quote
     *
     * @param int $quote <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_QUOTE_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setQuote($quote)
    {
        $this->container['quote'] = $quote;

        return $this;
    }

    /**
     * Gets campaign
     *
     * @return string
     */
    public function getCampaign()
    {
        return $this->container['campaign'];
    }

    /**
     * Sets campaign
     *
     * @param string $campaign <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_PROJ_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCampaign($campaign)
    {
        $this->container['campaign'] = $campaign;

        return $this;
    }

    /**
     * Gets campaign_designation
     *
     * @return string
     */
    public function getCampaignDesignation()
    {
        return $this->container['campaign_designation'];
    }

    /**
     * Sets campaign_designation
     *
     * @param string $campaign_designation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_ACCT_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCampaignDesignation($campaign_designation)
    {
        $this->container['campaign_designation'] = $campaign_designation;

        return $this;
    }

    /**
     * Gets exhibitor
     *
     * @return int
     */
    public function getExhibitor()
    {
        return $this->container['exhibitor'];
    }

    /**
     * Sets exhibitor
     *
     * @param int $exhibitor <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You need to fill this in when attaching a document to an exhibitor.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> MM446_EXHIBITOR_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExhibitor($exhibitor)
    {
        $this->container['exhibitor'] = $exhibitor;

        return $this;
    }

    /**
     * Gets form_section
     *
     * @return int
     */
    public function getFormSection()
    {
        return $this->container['form_section'];
    }

    /**
     * Sets form_section
     *
     * @param int $form_section <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_FORM_SECTION_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFormSection($form_section)
    {
        $this->container['form_section'] = $form_section;

        return $this;
    }

    /**
     * Gets form_section_sort
     *
     * @return int
     */
    public function getFormSectionSort()
    {
        return $this->container['form_section_sort'];
    }

    /**
     * Sets form_section_sort
     *
     * @param int $form_section_sort <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_FORM_SECTION_SORT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFormSectionSort($form_section_sort)
    {
        $this->container['form_section_sort'] = $form_section_sort;

        return $this;
    }

    /**
     * Gets purged_by
     *
     * @return string
     */
    public function getPurgedBy()
    {
        return $this->container['purged_by'];
    }

    /**
     * Sets purged_by
     *
     * @param string $purged_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_PURGE_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPurgedBy($purged_by)
    {
        $this->container['purged_by'] = $purged_by;

        return $this;
    }

    /**
     * Gets web_skin
     *
     * @return int
     */
    public function getWebSkin()
    {
        return $this->container['web_skin'];
    }

    /**
     * Sets web_skin
     *
     * @param int $web_skin <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> MM446_WEB_SKIN_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setWebSkin($web_skin)
    {
        $this->container['web_skin'] = $web_skin;

        return $this;
    }

    /**
     * Gets heading
     *
     * @return string
     */
    public function getHeading()
    {
        return $this->container['heading'];
    }

    /**
     * Sets heading
     *
     * @param string $heading <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> cHEADING  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setHeading($heading)
    {
        $this->container['heading'] = $heading;

        return $this;
    }

    /**
     * Gets users_and_roles
     *
     * @return string
     */
    public function getUsersAndRoles()
    {
        return $this->container['users_and_roles'];
    }

    /**
     * Sets users_and_roles
     *
     * @param string $users_and_roles <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> If DocumentIsAccessibleTo is set to U (Users With Roles), you are required to set this field to the User IDs or Role codes that have access to the document.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cACCESS_USER_ROLES_COMB</span></div>
     *
     * @return $this
     */
    public function setUsersAndRoles($users_and_roles)
    {
        $this->container['users_and_roles'] = $users_and_roles;

        return $this;
    }

    /**
     * Gets document_is_accessible_to
     *
     * @return string
     */
    public function getDocumentIsAccessibleTo()
    {
        return $this->container['document_is_accessible_to'];
    }

    /**
     * Sets document_is_accessible_to
     *
     * @param string $document_is_accessible_to <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Set this to who can access the document.  Only Me = \"O\", Everyone = \"E\", Users With Roles = \"U\".  If Users with Roles is selected, you are required to set this field to the User IDs or Role codes that have access to the document.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cACCESS_RADIO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDocumentIsAccessibleTo($document_is_accessible_to)
    {
        $this->container['document_is_accessible_to'] = $document_is_accessible_to;

        return $this;
    }

    /**
     * Gets new_file_name
     *
     * @return string
     */
    public function getNewFileName()
    {
        return $this->container['new_file_name'];
    }

    /**
     * Sets new_file_name
     *
     * @param string $new_file_name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This represents the file name of the new document when adding or updating a document entry.  This is required if updating the document, even if the document file name is the same.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cDOC_FILE_NAME</span></div>
     *
     * @return $this
     */
    public function setNewFileName($new_file_name)
    {
        $this->container['new_file_name'] = $new_file_name;

        return $this;
    }

    /**
     * Gets new_document_data
     *
     * @return string
     */
    public function getNewDocumentData()
    {
        return $this->container['new_document_data'];
    }

    /**
     * Sets new_document_data
     *
     * @param string $new_document_data <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This should be a base 64 encoded string representing a byte array for the new data of the document when adding or updating a document entry.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cDOC_BYTES</span></div>
     *
     * @return $this
     */
    public function setNewDocumentData($new_document_data)
    {
        $this->container['new_document_data'] = $new_document_data;

        return $this;
    }

    /**
     * Gets mime_type
     *
     * @return string
     */
    public function getMimeType()
    {
        return $this->container['mime_type'];
    }

    /**
     * Sets mime_type
     *
     * @param string $mime_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is the MIME type of a document entry.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span>   <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span></span></div>
     *
     * @return $this
     */
    public function setMimeType($mime_type)
    {
        $this->container['mime_type'] = $mime_type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


