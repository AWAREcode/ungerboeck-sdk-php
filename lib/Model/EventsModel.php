<?php
/**
 * EventsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * EventsModel Class Doc Comment
 *
 * @category Class
 * @description This represents an event
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EventsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'EventsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'event_id' => 'int',
        'organization' => 'string',
        'start_date' => '\DateTime',
        'end_date' => '\DateTime',
        'description' => 'string',
        'class' => 'string',
        'designation' => 'string',
        'category' => 'string',
        'rank' => 'string',
        'status' => 'string',
        'legal_name' => 'string',
        'start_time' => '\DateTime',
        'end_time' => '\DateTime',
        'coordinator' => 'string',
        'salesperson' => 'string',
        'entered_by' => 'string',
        'entered_on' => '\DateTime',
        'indicator' => 'string',
        'price_list' => 'string',
        'sensitivity' => 'string',
        'note1' => 'string',
        'actual_cost' => 'int',
        'forecast_cost' => 'int',
        'forecast_attendance' => 'int',
        'attendance' => 'int',
        'actual_attendance' => 'int',
        'search' => 'string',
        'type' => 'string',
        'on_site_office' => 'string',
        'on_site_phone' => 'string',
        'in_date' => '\DateTime',
        'out_date' => '\DateTime',
        'second_coordinator' => 'string',
        'account' => 'string',
        'bill_to' => 'string',
        'in_time' => '\DateTime',
        'out_time' => '\DateTime',
        'web_address' => 'string',
        'parent_event' => 'int',
        'previous_event' => 'int',
        'description1' => 'string',
        'description2' => 'string',
        'legal_name1' => 'string',
        'legal_name2' => 'string',
        'third_coordinator' => 'string',
        'fourth_coordinator' => 'string',
        'changed_by' => 'string',
        'changed_on' => '\DateTime',
        'anchor_venue' => 'string',
        'release' => '\DateTime',
        'actual_revenue' => 'int',
        'ordered_revenue' => 'int',
        'ordered_cost' => 'int',
        'forecast_revenue' => 'int',
        'revised_revenue' => 'int',
        'revised_cost' => 'int',
        'reason' => 'string',
        'cancelled_by' => 'string',
        'cancelled_on' => '\DateTime',
        'major_group' => 'string',
        'minor_group' => 'string',
        'booking_entered_by' => 'string',
        'booking_entered_on' => '\DateTime',
        'booking_changed_by' => 'string',
        'booking_changed_on' => '\DateTime',
        'alternate_event' => 'int',
        'decision' => '\DateTime',
        'public' => 'string',
        'box_office' => 'string',
        'abbreviation' => 'string',
        'event_days' => 'double',
        'contact' => 'string',
        'gl_distribution' => 'string',
        'gl_sub_account' => 'string',
        'early_deadline' => '\DateTime',
        'description3' => 'string',
        'description4' => 'string',
        'revised_attendance' => 'int',
        'description5' => 'string',
        'legal_name3' => 'string',
        'legal_name4' => 'string',
        'legal_name5' => 'string',
        'standard_deadline' => '\DateTime',
        'insurance' => 'string',
        'note2' => 'string',
        'requester' => 'string',
        'order_user_fields_type' => 'string',
        'payment_plan' => 'string',
        'lost_to' => 'string',
        'firm' => '\DateTime',
        'function_user_fields_type' => 'string',
        'other_actual' => 'double',
        'other_ordered' => 'double',
        'other_forecast' => 'double',
        'other_revised' => 'double',
        'bill_to_contact' => 'string',
        'requester_contact' => 'string',
        'contract_required' => 'string',
        'inventory_chain' => 'string',
        'purge_indicator' => 'string',
        'purge_validation_date_time' => '\DateTime',
        'purged_by_user_id' => 'string',
        'average_daily_rate' => 'int',
        'booked_area' => 'int',
        'peak_numberof_rooms' => 'int',
        'space_to_guest_room_ratio' => 'int',
        'service_order_issue_class' => 'string',
        'job_asset' => 'string',
        'function_issue_class' => 'string',
        'purge_validation_by_user_id' => 'string',
        'economic_impact' => 'double',
        'tax_scheme' => 'string',
        'facebook' => 'string',
        'twitter' => 'string',
        'linked_in' => 'string',
        'outlook_event' => 'string',
        'exhibitor_issue_class' => 'string',
        'exhibitor_issue_type' => 'string',
        'function_status' => 'string',
        'event_user_field_sets' => '\FomF\Ungerboeck\Client\Model\UserFields[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'event_id' => 'int32',
        'organization' => null,
        'start_date' => 'date-time',
        'end_date' => 'date-time',
        'description' => null,
        'class' => null,
        'designation' => null,
        'category' => null,
        'rank' => null,
        'status' => null,
        'legal_name' => null,
        'start_time' => 'date-time',
        'end_time' => 'date-time',
        'coordinator' => null,
        'salesperson' => null,
        'entered_by' => null,
        'entered_on' => 'date-time',
        'indicator' => null,
        'price_list' => null,
        'sensitivity' => null,
        'note1' => null,
        'actual_cost' => 'int32',
        'forecast_cost' => 'int32',
        'forecast_attendance' => 'int32',
        'attendance' => 'int32',
        'actual_attendance' => 'int32',
        'search' => null,
        'type' => null,
        'on_site_office' => null,
        'on_site_phone' => null,
        'in_date' => 'date-time',
        'out_date' => 'date-time',
        'second_coordinator' => null,
        'account' => null,
        'bill_to' => null,
        'in_time' => 'date-time',
        'out_time' => 'date-time',
        'web_address' => null,
        'parent_event' => 'int32',
        'previous_event' => 'int32',
        'description1' => null,
        'description2' => null,
        'legal_name1' => null,
        'legal_name2' => null,
        'third_coordinator' => null,
        'fourth_coordinator' => null,
        'changed_by' => null,
        'changed_on' => 'date-time',
        'anchor_venue' => null,
        'release' => 'date-time',
        'actual_revenue' => 'int32',
        'ordered_revenue' => 'int32',
        'ordered_cost' => 'int32',
        'forecast_revenue' => 'int32',
        'revised_revenue' => 'int32',
        'revised_cost' => 'int32',
        'reason' => null,
        'cancelled_by' => null,
        'cancelled_on' => 'date-time',
        'major_group' => null,
        'minor_group' => null,
        'booking_entered_by' => null,
        'booking_entered_on' => 'date-time',
        'booking_changed_by' => null,
        'booking_changed_on' => 'date-time',
        'alternate_event' => 'int32',
        'decision' => 'date-time',
        'public' => null,
        'box_office' => null,
        'abbreviation' => null,
        'event_days' => 'double',
        'contact' => null,
        'gl_distribution' => null,
        'gl_sub_account' => null,
        'early_deadline' => 'date-time',
        'description3' => null,
        'description4' => null,
        'revised_attendance' => 'int32',
        'description5' => null,
        'legal_name3' => null,
        'legal_name4' => null,
        'legal_name5' => null,
        'standard_deadline' => 'date-time',
        'insurance' => null,
        'note2' => null,
        'requester' => null,
        'order_user_fields_type' => null,
        'payment_plan' => null,
        'lost_to' => null,
        'firm' => 'date-time',
        'function_user_fields_type' => null,
        'other_actual' => 'double',
        'other_ordered' => 'double',
        'other_forecast' => 'double',
        'other_revised' => 'double',
        'bill_to_contact' => null,
        'requester_contact' => null,
        'contract_required' => null,
        'inventory_chain' => null,
        'purge_indicator' => null,
        'purge_validation_date_time' => 'date-time',
        'purged_by_user_id' => null,
        'average_daily_rate' => 'int32',
        'booked_area' => 'int32',
        'peak_numberof_rooms' => 'int32',
        'space_to_guest_room_ratio' => 'int32',
        'service_order_issue_class' => null,
        'job_asset' => null,
        'function_issue_class' => null,
        'purge_validation_by_user_id' => null,
        'economic_impact' => 'double',
        'tax_scheme' => null,
        'facebook' => null,
        'twitter' => null,
        'linked_in' => null,
        'outlook_event' => null,
        'exhibitor_issue_class' => null,
        'exhibitor_issue_type' => null,
        'function_status' => null,
        'event_user_field_sets' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'event_id' => 'EventID',
        'organization' => 'Organization',
        'start_date' => 'StartDate',
        'end_date' => 'EndDate',
        'description' => 'Description',
        'class' => 'Class',
        'designation' => 'Designation',
        'category' => 'Category',
        'rank' => 'Rank',
        'status' => 'Status',
        'legal_name' => 'LegalName',
        'start_time' => 'StartTime',
        'end_time' => 'EndTime',
        'coordinator' => 'Coordinator',
        'salesperson' => 'Salesperson',
        'entered_by' => 'EnteredBy',
        'entered_on' => 'EnteredOn',
        'indicator' => 'Indicator',
        'price_list' => 'PriceList',
        'sensitivity' => 'Sensitivity',
        'note1' => 'Note1',
        'actual_cost' => 'ActualCost',
        'forecast_cost' => 'ForecastCost',
        'forecast_attendance' => 'ForecastAttendance',
        'attendance' => 'Attendance',
        'actual_attendance' => 'ActualAttendance',
        'search' => 'Search',
        'type' => 'Type',
        'on_site_office' => 'OnSiteOffice',
        'on_site_phone' => 'OnSitePhone',
        'in_date' => 'InDate',
        'out_date' => 'OutDate',
        'second_coordinator' => 'SecondCoordinator',
        'account' => 'Account',
        'bill_to' => 'BillTo',
        'in_time' => 'InTime',
        'out_time' => 'OutTime',
        'web_address' => 'WebAddress',
        'parent_event' => 'ParentEvent',
        'previous_event' => 'PreviousEvent',
        'description1' => 'Description1',
        'description2' => 'Description2',
        'legal_name1' => 'LegalName1',
        'legal_name2' => 'LegalName2',
        'third_coordinator' => 'ThirdCoordinator',
        'fourth_coordinator' => 'FourthCoordinator',
        'changed_by' => 'ChangedBy',
        'changed_on' => 'ChangedOn',
        'anchor_venue' => 'AnchorVenue',
        'release' => 'Release',
        'actual_revenue' => 'ActualRevenue',
        'ordered_revenue' => 'OrderedRevenue',
        'ordered_cost' => 'OrderedCost',
        'forecast_revenue' => 'ForecastRevenue',
        'revised_revenue' => 'RevisedRevenue',
        'revised_cost' => 'RevisedCost',
        'reason' => 'Reason',
        'cancelled_by' => 'CancelledBy',
        'cancelled_on' => 'CancelledOn',
        'major_group' => 'MajorGroup',
        'minor_group' => 'MinorGroup',
        'booking_entered_by' => 'BookingEnteredBy',
        'booking_entered_on' => 'BookingEnteredOn',
        'booking_changed_by' => 'BookingChangedBy',
        'booking_changed_on' => 'BookingChangedOn',
        'alternate_event' => 'AlternateEvent',
        'decision' => 'Decision',
        'public' => 'Public',
        'box_office' => 'BoxOffice',
        'abbreviation' => 'Abbreviation',
        'event_days' => 'EventDays',
        'contact' => 'Contact',
        'gl_distribution' => 'GLDistribution',
        'gl_sub_account' => 'GLSubAccount',
        'early_deadline' => 'EarlyDeadline',
        'description3' => 'Description3',
        'description4' => 'Description4',
        'revised_attendance' => 'RevisedAttendance',
        'description5' => 'Description5',
        'legal_name3' => 'LegalName3',
        'legal_name4' => 'LegalName4',
        'legal_name5' => 'LegalName5',
        'standard_deadline' => 'StandardDeadline',
        'insurance' => 'Insurance',
        'note2' => 'Note2',
        'requester' => 'Requester',
        'order_user_fields_type' => 'OrderUserFieldsType',
        'payment_plan' => 'PaymentPlan',
        'lost_to' => 'LostTo',
        'firm' => 'Firm',
        'function_user_fields_type' => 'FunctionUserFieldsType',
        'other_actual' => 'OtherActual',
        'other_ordered' => 'OtherOrdered',
        'other_forecast' => 'OtherForecast',
        'other_revised' => 'OtherRevised',
        'bill_to_contact' => 'BillToContact',
        'requester_contact' => 'RequesterContact',
        'contract_required' => 'ContractRequired',
        'inventory_chain' => 'InventoryChain',
        'purge_indicator' => 'PurgeIndicator',
        'purge_validation_date_time' => 'PurgeValidationDateTime',
        'purged_by_user_id' => 'PurgedByUserID',
        'average_daily_rate' => 'AverageDailyRate',
        'booked_area' => 'BookedArea',
        'peak_numberof_rooms' => 'PeakNumberofRooms',
        'space_to_guest_room_ratio' => 'SpaceToGuestRoomRatio',
        'service_order_issue_class' => 'ServiceOrderIssueClass',
        'job_asset' => 'JobAsset',
        'function_issue_class' => 'FunctionIssueClass',
        'purge_validation_by_user_id' => 'PurgeValidationByUserID',
        'economic_impact' => 'EconomicImpact',
        'tax_scheme' => 'TaxScheme',
        'facebook' => 'Facebook',
        'twitter' => 'Twitter',
        'linked_in' => 'LinkedIn',
        'outlook_event' => 'OutlookEvent',
        'exhibitor_issue_class' => 'ExhibitorIssueClass',
        'exhibitor_issue_type' => 'ExhibitorIssueType',
        'function_status' => 'FunctionStatus',
        'event_user_field_sets' => 'EventUserFieldSets'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'event_id' => 'setEventId',
        'organization' => 'setOrganization',
        'start_date' => 'setStartDate',
        'end_date' => 'setEndDate',
        'description' => 'setDescription',
        'class' => 'setClass',
        'designation' => 'setDesignation',
        'category' => 'setCategory',
        'rank' => 'setRank',
        'status' => 'setStatus',
        'legal_name' => 'setLegalName',
        'start_time' => 'setStartTime',
        'end_time' => 'setEndTime',
        'coordinator' => 'setCoordinator',
        'salesperson' => 'setSalesperson',
        'entered_by' => 'setEnteredBy',
        'entered_on' => 'setEnteredOn',
        'indicator' => 'setIndicator',
        'price_list' => 'setPriceList',
        'sensitivity' => 'setSensitivity',
        'note1' => 'setNote1',
        'actual_cost' => 'setActualCost',
        'forecast_cost' => 'setForecastCost',
        'forecast_attendance' => 'setForecastAttendance',
        'attendance' => 'setAttendance',
        'actual_attendance' => 'setActualAttendance',
        'search' => 'setSearch',
        'type' => 'setType',
        'on_site_office' => 'setOnSiteOffice',
        'on_site_phone' => 'setOnSitePhone',
        'in_date' => 'setInDate',
        'out_date' => 'setOutDate',
        'second_coordinator' => 'setSecondCoordinator',
        'account' => 'setAccount',
        'bill_to' => 'setBillTo',
        'in_time' => 'setInTime',
        'out_time' => 'setOutTime',
        'web_address' => 'setWebAddress',
        'parent_event' => 'setParentEvent',
        'previous_event' => 'setPreviousEvent',
        'description1' => 'setDescription1',
        'description2' => 'setDescription2',
        'legal_name1' => 'setLegalName1',
        'legal_name2' => 'setLegalName2',
        'third_coordinator' => 'setThirdCoordinator',
        'fourth_coordinator' => 'setFourthCoordinator',
        'changed_by' => 'setChangedBy',
        'changed_on' => 'setChangedOn',
        'anchor_venue' => 'setAnchorVenue',
        'release' => 'setRelease',
        'actual_revenue' => 'setActualRevenue',
        'ordered_revenue' => 'setOrderedRevenue',
        'ordered_cost' => 'setOrderedCost',
        'forecast_revenue' => 'setForecastRevenue',
        'revised_revenue' => 'setRevisedRevenue',
        'revised_cost' => 'setRevisedCost',
        'reason' => 'setReason',
        'cancelled_by' => 'setCancelledBy',
        'cancelled_on' => 'setCancelledOn',
        'major_group' => 'setMajorGroup',
        'minor_group' => 'setMinorGroup',
        'booking_entered_by' => 'setBookingEnteredBy',
        'booking_entered_on' => 'setBookingEnteredOn',
        'booking_changed_by' => 'setBookingChangedBy',
        'booking_changed_on' => 'setBookingChangedOn',
        'alternate_event' => 'setAlternateEvent',
        'decision' => 'setDecision',
        'public' => 'setPublic',
        'box_office' => 'setBoxOffice',
        'abbreviation' => 'setAbbreviation',
        'event_days' => 'setEventDays',
        'contact' => 'setContact',
        'gl_distribution' => 'setGlDistribution',
        'gl_sub_account' => 'setGlSubAccount',
        'early_deadline' => 'setEarlyDeadline',
        'description3' => 'setDescription3',
        'description4' => 'setDescription4',
        'revised_attendance' => 'setRevisedAttendance',
        'description5' => 'setDescription5',
        'legal_name3' => 'setLegalName3',
        'legal_name4' => 'setLegalName4',
        'legal_name5' => 'setLegalName5',
        'standard_deadline' => 'setStandardDeadline',
        'insurance' => 'setInsurance',
        'note2' => 'setNote2',
        'requester' => 'setRequester',
        'order_user_fields_type' => 'setOrderUserFieldsType',
        'payment_plan' => 'setPaymentPlan',
        'lost_to' => 'setLostTo',
        'firm' => 'setFirm',
        'function_user_fields_type' => 'setFunctionUserFieldsType',
        'other_actual' => 'setOtherActual',
        'other_ordered' => 'setOtherOrdered',
        'other_forecast' => 'setOtherForecast',
        'other_revised' => 'setOtherRevised',
        'bill_to_contact' => 'setBillToContact',
        'requester_contact' => 'setRequesterContact',
        'contract_required' => 'setContractRequired',
        'inventory_chain' => 'setInventoryChain',
        'purge_indicator' => 'setPurgeIndicator',
        'purge_validation_date_time' => 'setPurgeValidationDateTime',
        'purged_by_user_id' => 'setPurgedByUserId',
        'average_daily_rate' => 'setAverageDailyRate',
        'booked_area' => 'setBookedArea',
        'peak_numberof_rooms' => 'setPeakNumberofRooms',
        'space_to_guest_room_ratio' => 'setSpaceToGuestRoomRatio',
        'service_order_issue_class' => 'setServiceOrderIssueClass',
        'job_asset' => 'setJobAsset',
        'function_issue_class' => 'setFunctionIssueClass',
        'purge_validation_by_user_id' => 'setPurgeValidationByUserId',
        'economic_impact' => 'setEconomicImpact',
        'tax_scheme' => 'setTaxScheme',
        'facebook' => 'setFacebook',
        'twitter' => 'setTwitter',
        'linked_in' => 'setLinkedIn',
        'outlook_event' => 'setOutlookEvent',
        'exhibitor_issue_class' => 'setExhibitorIssueClass',
        'exhibitor_issue_type' => 'setExhibitorIssueType',
        'function_status' => 'setFunctionStatus',
        'event_user_field_sets' => 'setEventUserFieldSets'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'event_id' => 'getEventId',
        'organization' => 'getOrganization',
        'start_date' => 'getStartDate',
        'end_date' => 'getEndDate',
        'description' => 'getDescription',
        'class' => 'getClass',
        'designation' => 'getDesignation',
        'category' => 'getCategory',
        'rank' => 'getRank',
        'status' => 'getStatus',
        'legal_name' => 'getLegalName',
        'start_time' => 'getStartTime',
        'end_time' => 'getEndTime',
        'coordinator' => 'getCoordinator',
        'salesperson' => 'getSalesperson',
        'entered_by' => 'getEnteredBy',
        'entered_on' => 'getEnteredOn',
        'indicator' => 'getIndicator',
        'price_list' => 'getPriceList',
        'sensitivity' => 'getSensitivity',
        'note1' => 'getNote1',
        'actual_cost' => 'getActualCost',
        'forecast_cost' => 'getForecastCost',
        'forecast_attendance' => 'getForecastAttendance',
        'attendance' => 'getAttendance',
        'actual_attendance' => 'getActualAttendance',
        'search' => 'getSearch',
        'type' => 'getType',
        'on_site_office' => 'getOnSiteOffice',
        'on_site_phone' => 'getOnSitePhone',
        'in_date' => 'getInDate',
        'out_date' => 'getOutDate',
        'second_coordinator' => 'getSecondCoordinator',
        'account' => 'getAccount',
        'bill_to' => 'getBillTo',
        'in_time' => 'getInTime',
        'out_time' => 'getOutTime',
        'web_address' => 'getWebAddress',
        'parent_event' => 'getParentEvent',
        'previous_event' => 'getPreviousEvent',
        'description1' => 'getDescription1',
        'description2' => 'getDescription2',
        'legal_name1' => 'getLegalName1',
        'legal_name2' => 'getLegalName2',
        'third_coordinator' => 'getThirdCoordinator',
        'fourth_coordinator' => 'getFourthCoordinator',
        'changed_by' => 'getChangedBy',
        'changed_on' => 'getChangedOn',
        'anchor_venue' => 'getAnchorVenue',
        'release' => 'getRelease',
        'actual_revenue' => 'getActualRevenue',
        'ordered_revenue' => 'getOrderedRevenue',
        'ordered_cost' => 'getOrderedCost',
        'forecast_revenue' => 'getForecastRevenue',
        'revised_revenue' => 'getRevisedRevenue',
        'revised_cost' => 'getRevisedCost',
        'reason' => 'getReason',
        'cancelled_by' => 'getCancelledBy',
        'cancelled_on' => 'getCancelledOn',
        'major_group' => 'getMajorGroup',
        'minor_group' => 'getMinorGroup',
        'booking_entered_by' => 'getBookingEnteredBy',
        'booking_entered_on' => 'getBookingEnteredOn',
        'booking_changed_by' => 'getBookingChangedBy',
        'booking_changed_on' => 'getBookingChangedOn',
        'alternate_event' => 'getAlternateEvent',
        'decision' => 'getDecision',
        'public' => 'getPublic',
        'box_office' => 'getBoxOffice',
        'abbreviation' => 'getAbbreviation',
        'event_days' => 'getEventDays',
        'contact' => 'getContact',
        'gl_distribution' => 'getGlDistribution',
        'gl_sub_account' => 'getGlSubAccount',
        'early_deadline' => 'getEarlyDeadline',
        'description3' => 'getDescription3',
        'description4' => 'getDescription4',
        'revised_attendance' => 'getRevisedAttendance',
        'description5' => 'getDescription5',
        'legal_name3' => 'getLegalName3',
        'legal_name4' => 'getLegalName4',
        'legal_name5' => 'getLegalName5',
        'standard_deadline' => 'getStandardDeadline',
        'insurance' => 'getInsurance',
        'note2' => 'getNote2',
        'requester' => 'getRequester',
        'order_user_fields_type' => 'getOrderUserFieldsType',
        'payment_plan' => 'getPaymentPlan',
        'lost_to' => 'getLostTo',
        'firm' => 'getFirm',
        'function_user_fields_type' => 'getFunctionUserFieldsType',
        'other_actual' => 'getOtherActual',
        'other_ordered' => 'getOtherOrdered',
        'other_forecast' => 'getOtherForecast',
        'other_revised' => 'getOtherRevised',
        'bill_to_contact' => 'getBillToContact',
        'requester_contact' => 'getRequesterContact',
        'contract_required' => 'getContractRequired',
        'inventory_chain' => 'getInventoryChain',
        'purge_indicator' => 'getPurgeIndicator',
        'purge_validation_date_time' => 'getPurgeValidationDateTime',
        'purged_by_user_id' => 'getPurgedByUserId',
        'average_daily_rate' => 'getAverageDailyRate',
        'booked_area' => 'getBookedArea',
        'peak_numberof_rooms' => 'getPeakNumberofRooms',
        'space_to_guest_room_ratio' => 'getSpaceToGuestRoomRatio',
        'service_order_issue_class' => 'getServiceOrderIssueClass',
        'job_asset' => 'getJobAsset',
        'function_issue_class' => 'getFunctionIssueClass',
        'purge_validation_by_user_id' => 'getPurgeValidationByUserId',
        'economic_impact' => 'getEconomicImpact',
        'tax_scheme' => 'getTaxScheme',
        'facebook' => 'getFacebook',
        'twitter' => 'getTwitter',
        'linked_in' => 'getLinkedIn',
        'outlook_event' => 'getOutlookEvent',
        'exhibitor_issue_class' => 'getExhibitorIssueClass',
        'exhibitor_issue_type' => 'getExhibitorIssueType',
        'function_status' => 'getFunctionStatus',
        'event_user_field_sets' => 'getEventUserFieldSets'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['event_id'] = isset($data['event_id']) ? $data['event_id'] : null;
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['start_date'] = isset($data['start_date']) ? $data['start_date'] : null;
        $this->container['end_date'] = isset($data['end_date']) ? $data['end_date'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['class'] = isset($data['class']) ? $data['class'] : null;
        $this->container['designation'] = isset($data['designation']) ? $data['designation'] : null;
        $this->container['category'] = isset($data['category']) ? $data['category'] : null;
        $this->container['rank'] = isset($data['rank']) ? $data['rank'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['legal_name'] = isset($data['legal_name']) ? $data['legal_name'] : null;
        $this->container['start_time'] = isset($data['start_time']) ? $data['start_time'] : null;
        $this->container['end_time'] = isset($data['end_time']) ? $data['end_time'] : null;
        $this->container['coordinator'] = isset($data['coordinator']) ? $data['coordinator'] : null;
        $this->container['salesperson'] = isset($data['salesperson']) ? $data['salesperson'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['indicator'] = isset($data['indicator']) ? $data['indicator'] : null;
        $this->container['price_list'] = isset($data['price_list']) ? $data['price_list'] : null;
        $this->container['sensitivity'] = isset($data['sensitivity']) ? $data['sensitivity'] : null;
        $this->container['note1'] = isset($data['note1']) ? $data['note1'] : null;
        $this->container['actual_cost'] = isset($data['actual_cost']) ? $data['actual_cost'] : null;
        $this->container['forecast_cost'] = isset($data['forecast_cost']) ? $data['forecast_cost'] : null;
        $this->container['forecast_attendance'] = isset($data['forecast_attendance']) ? $data['forecast_attendance'] : null;
        $this->container['attendance'] = isset($data['attendance']) ? $data['attendance'] : null;
        $this->container['actual_attendance'] = isset($data['actual_attendance']) ? $data['actual_attendance'] : null;
        $this->container['search'] = isset($data['search']) ? $data['search'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['on_site_office'] = isset($data['on_site_office']) ? $data['on_site_office'] : null;
        $this->container['on_site_phone'] = isset($data['on_site_phone']) ? $data['on_site_phone'] : null;
        $this->container['in_date'] = isset($data['in_date']) ? $data['in_date'] : null;
        $this->container['out_date'] = isset($data['out_date']) ? $data['out_date'] : null;
        $this->container['second_coordinator'] = isset($data['second_coordinator']) ? $data['second_coordinator'] : null;
        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
        $this->container['bill_to'] = isset($data['bill_to']) ? $data['bill_to'] : null;
        $this->container['in_time'] = isset($data['in_time']) ? $data['in_time'] : null;
        $this->container['out_time'] = isset($data['out_time']) ? $data['out_time'] : null;
        $this->container['web_address'] = isset($data['web_address']) ? $data['web_address'] : null;
        $this->container['parent_event'] = isset($data['parent_event']) ? $data['parent_event'] : null;
        $this->container['previous_event'] = isset($data['previous_event']) ? $data['previous_event'] : null;
        $this->container['description1'] = isset($data['description1']) ? $data['description1'] : null;
        $this->container['description2'] = isset($data['description2']) ? $data['description2'] : null;
        $this->container['legal_name1'] = isset($data['legal_name1']) ? $data['legal_name1'] : null;
        $this->container['legal_name2'] = isset($data['legal_name2']) ? $data['legal_name2'] : null;
        $this->container['third_coordinator'] = isset($data['third_coordinator']) ? $data['third_coordinator'] : null;
        $this->container['fourth_coordinator'] = isset($data['fourth_coordinator']) ? $data['fourth_coordinator'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['anchor_venue'] = isset($data['anchor_venue']) ? $data['anchor_venue'] : null;
        $this->container['release'] = isset($data['release']) ? $data['release'] : null;
        $this->container['actual_revenue'] = isset($data['actual_revenue']) ? $data['actual_revenue'] : null;
        $this->container['ordered_revenue'] = isset($data['ordered_revenue']) ? $data['ordered_revenue'] : null;
        $this->container['ordered_cost'] = isset($data['ordered_cost']) ? $data['ordered_cost'] : null;
        $this->container['forecast_revenue'] = isset($data['forecast_revenue']) ? $data['forecast_revenue'] : null;
        $this->container['revised_revenue'] = isset($data['revised_revenue']) ? $data['revised_revenue'] : null;
        $this->container['revised_cost'] = isset($data['revised_cost']) ? $data['revised_cost'] : null;
        $this->container['reason'] = isset($data['reason']) ? $data['reason'] : null;
        $this->container['cancelled_by'] = isset($data['cancelled_by']) ? $data['cancelled_by'] : null;
        $this->container['cancelled_on'] = isset($data['cancelled_on']) ? $data['cancelled_on'] : null;
        $this->container['major_group'] = isset($data['major_group']) ? $data['major_group'] : null;
        $this->container['minor_group'] = isset($data['minor_group']) ? $data['minor_group'] : null;
        $this->container['booking_entered_by'] = isset($data['booking_entered_by']) ? $data['booking_entered_by'] : null;
        $this->container['booking_entered_on'] = isset($data['booking_entered_on']) ? $data['booking_entered_on'] : null;
        $this->container['booking_changed_by'] = isset($data['booking_changed_by']) ? $data['booking_changed_by'] : null;
        $this->container['booking_changed_on'] = isset($data['booking_changed_on']) ? $data['booking_changed_on'] : null;
        $this->container['alternate_event'] = isset($data['alternate_event']) ? $data['alternate_event'] : null;
        $this->container['decision'] = isset($data['decision']) ? $data['decision'] : null;
        $this->container['public'] = isset($data['public']) ? $data['public'] : null;
        $this->container['box_office'] = isset($data['box_office']) ? $data['box_office'] : null;
        $this->container['abbreviation'] = isset($data['abbreviation']) ? $data['abbreviation'] : null;
        $this->container['event_days'] = isset($data['event_days']) ? $data['event_days'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['gl_distribution'] = isset($data['gl_distribution']) ? $data['gl_distribution'] : null;
        $this->container['gl_sub_account'] = isset($data['gl_sub_account']) ? $data['gl_sub_account'] : null;
        $this->container['early_deadline'] = isset($data['early_deadline']) ? $data['early_deadline'] : null;
        $this->container['description3'] = isset($data['description3']) ? $data['description3'] : null;
        $this->container['description4'] = isset($data['description4']) ? $data['description4'] : null;
        $this->container['revised_attendance'] = isset($data['revised_attendance']) ? $data['revised_attendance'] : null;
        $this->container['description5'] = isset($data['description5']) ? $data['description5'] : null;
        $this->container['legal_name3'] = isset($data['legal_name3']) ? $data['legal_name3'] : null;
        $this->container['legal_name4'] = isset($data['legal_name4']) ? $data['legal_name4'] : null;
        $this->container['legal_name5'] = isset($data['legal_name5']) ? $data['legal_name5'] : null;
        $this->container['standard_deadline'] = isset($data['standard_deadline']) ? $data['standard_deadline'] : null;
        $this->container['insurance'] = isset($data['insurance']) ? $data['insurance'] : null;
        $this->container['note2'] = isset($data['note2']) ? $data['note2'] : null;
        $this->container['requester'] = isset($data['requester']) ? $data['requester'] : null;
        $this->container['order_user_fields_type'] = isset($data['order_user_fields_type']) ? $data['order_user_fields_type'] : null;
        $this->container['payment_plan'] = isset($data['payment_plan']) ? $data['payment_plan'] : null;
        $this->container['lost_to'] = isset($data['lost_to']) ? $data['lost_to'] : null;
        $this->container['firm'] = isset($data['firm']) ? $data['firm'] : null;
        $this->container['function_user_fields_type'] = isset($data['function_user_fields_type']) ? $data['function_user_fields_type'] : null;
        $this->container['other_actual'] = isset($data['other_actual']) ? $data['other_actual'] : null;
        $this->container['other_ordered'] = isset($data['other_ordered']) ? $data['other_ordered'] : null;
        $this->container['other_forecast'] = isset($data['other_forecast']) ? $data['other_forecast'] : null;
        $this->container['other_revised'] = isset($data['other_revised']) ? $data['other_revised'] : null;
        $this->container['bill_to_contact'] = isset($data['bill_to_contact']) ? $data['bill_to_contact'] : null;
        $this->container['requester_contact'] = isset($data['requester_contact']) ? $data['requester_contact'] : null;
        $this->container['contract_required'] = isset($data['contract_required']) ? $data['contract_required'] : null;
        $this->container['inventory_chain'] = isset($data['inventory_chain']) ? $data['inventory_chain'] : null;
        $this->container['purge_indicator'] = isset($data['purge_indicator']) ? $data['purge_indicator'] : null;
        $this->container['purge_validation_date_time'] = isset($data['purge_validation_date_time']) ? $data['purge_validation_date_time'] : null;
        $this->container['purged_by_user_id'] = isset($data['purged_by_user_id']) ? $data['purged_by_user_id'] : null;
        $this->container['average_daily_rate'] = isset($data['average_daily_rate']) ? $data['average_daily_rate'] : null;
        $this->container['booked_area'] = isset($data['booked_area']) ? $data['booked_area'] : null;
        $this->container['peak_numberof_rooms'] = isset($data['peak_numberof_rooms']) ? $data['peak_numberof_rooms'] : null;
        $this->container['space_to_guest_room_ratio'] = isset($data['space_to_guest_room_ratio']) ? $data['space_to_guest_room_ratio'] : null;
        $this->container['service_order_issue_class'] = isset($data['service_order_issue_class']) ? $data['service_order_issue_class'] : null;
        $this->container['job_asset'] = isset($data['job_asset']) ? $data['job_asset'] : null;
        $this->container['function_issue_class'] = isset($data['function_issue_class']) ? $data['function_issue_class'] : null;
        $this->container['purge_validation_by_user_id'] = isset($data['purge_validation_by_user_id']) ? $data['purge_validation_by_user_id'] : null;
        $this->container['economic_impact'] = isset($data['economic_impact']) ? $data['economic_impact'] : null;
        $this->container['tax_scheme'] = isset($data['tax_scheme']) ? $data['tax_scheme'] : null;
        $this->container['facebook'] = isset($data['facebook']) ? $data['facebook'] : null;
        $this->container['twitter'] = isset($data['twitter']) ? $data['twitter'] : null;
        $this->container['linked_in'] = isset($data['linked_in']) ? $data['linked_in'] : null;
        $this->container['outlook_event'] = isset($data['outlook_event']) ? $data['outlook_event'] : null;
        $this->container['exhibitor_issue_class'] = isset($data['exhibitor_issue_class']) ? $data['exhibitor_issue_class'] : null;
        $this->container['exhibitor_issue_type'] = isset($data['exhibitor_issue_type']) ? $data['exhibitor_issue_type'] : null;
        $this->container['function_status'] = isset($data['function_status']) ? $data['function_status'] : null;
        $this->container['event_user_field_sets'] = isset($data['event_user_field_sets']) ? $data['event_user_field_sets'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['event_id'] === null) {
            $invalidProperties[] = "'event_id' can't be null";
        }
        if ($this->container['organization'] === null) {
            $invalidProperties[] = "'organization' can't be null";
        }
        if ($this->container['start_date'] === null) {
            $invalidProperties[] = "'start_date' can't be null";
        }
        if ($this->container['end_date'] === null) {
            $invalidProperties[] = "'end_date' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['class'] === null) {
            $invalidProperties[] = "'class' can't be null";
        }
        if ($this->container['designation'] === null) {
            $invalidProperties[] = "'designation' can't be null";
        }
        if ($this->container['category'] === null) {
            $invalidProperties[] = "'category' can't be null";
        }
        if ($this->container['rank'] === null) {
            $invalidProperties[] = "'rank' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['legal_name'] === null) {
            $invalidProperties[] = "'legal_name' can't be null";
        }
        if ($this->container['start_time'] === null) {
            $invalidProperties[] = "'start_time' can't be null";
        }
        if ($this->container['end_time'] === null) {
            $invalidProperties[] = "'end_time' can't be null";
        }
        if ($this->container['coordinator'] === null) {
            $invalidProperties[] = "'coordinator' can't be null";
        }
        if ($this->container['salesperson'] === null) {
            $invalidProperties[] = "'salesperson' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['indicator'] === null) {
            $invalidProperties[] = "'indicator' can't be null";
        }
        if ($this->container['price_list'] === null) {
            $invalidProperties[] = "'price_list' can't be null";
        }
        if ($this->container['sensitivity'] === null) {
            $invalidProperties[] = "'sensitivity' can't be null";
        }
        if ($this->container['note1'] === null) {
            $invalidProperties[] = "'note1' can't be null";
        }
        if ($this->container['actual_cost'] === null) {
            $invalidProperties[] = "'actual_cost' can't be null";
        }
        if ($this->container['forecast_cost'] === null) {
            $invalidProperties[] = "'forecast_cost' can't be null";
        }
        if ($this->container['forecast_attendance'] === null) {
            $invalidProperties[] = "'forecast_attendance' can't be null";
        }
        if ($this->container['attendance'] === null) {
            $invalidProperties[] = "'attendance' can't be null";
        }
        if ($this->container['actual_attendance'] === null) {
            $invalidProperties[] = "'actual_attendance' can't be null";
        }
        if ($this->container['search'] === null) {
            $invalidProperties[] = "'search' can't be null";
        }
        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['on_site_office'] === null) {
            $invalidProperties[] = "'on_site_office' can't be null";
        }
        if ($this->container['on_site_phone'] === null) {
            $invalidProperties[] = "'on_site_phone' can't be null";
        }
        if ($this->container['in_date'] === null) {
            $invalidProperties[] = "'in_date' can't be null";
        }
        if ($this->container['out_date'] === null) {
            $invalidProperties[] = "'out_date' can't be null";
        }
        if ($this->container['second_coordinator'] === null) {
            $invalidProperties[] = "'second_coordinator' can't be null";
        }
        if ($this->container['account'] === null) {
            $invalidProperties[] = "'account' can't be null";
        }
        if ($this->container['bill_to'] === null) {
            $invalidProperties[] = "'bill_to' can't be null";
        }
        if ($this->container['in_time'] === null) {
            $invalidProperties[] = "'in_time' can't be null";
        }
        if ($this->container['out_time'] === null) {
            $invalidProperties[] = "'out_time' can't be null";
        }
        if ($this->container['web_address'] === null) {
            $invalidProperties[] = "'web_address' can't be null";
        }
        if ($this->container['parent_event'] === null) {
            $invalidProperties[] = "'parent_event' can't be null";
        }
        if ($this->container['previous_event'] === null) {
            $invalidProperties[] = "'previous_event' can't be null";
        }
        if ($this->container['description1'] === null) {
            $invalidProperties[] = "'description1' can't be null";
        }
        if ($this->container['description2'] === null) {
            $invalidProperties[] = "'description2' can't be null";
        }
        if ($this->container['legal_name1'] === null) {
            $invalidProperties[] = "'legal_name1' can't be null";
        }
        if ($this->container['legal_name2'] === null) {
            $invalidProperties[] = "'legal_name2' can't be null";
        }
        if ($this->container['third_coordinator'] === null) {
            $invalidProperties[] = "'third_coordinator' can't be null";
        }
        if ($this->container['fourth_coordinator'] === null) {
            $invalidProperties[] = "'fourth_coordinator' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['anchor_venue'] === null) {
            $invalidProperties[] = "'anchor_venue' can't be null";
        }
        if ($this->container['release'] === null) {
            $invalidProperties[] = "'release' can't be null";
        }
        if ($this->container['actual_revenue'] === null) {
            $invalidProperties[] = "'actual_revenue' can't be null";
        }
        if ($this->container['ordered_revenue'] === null) {
            $invalidProperties[] = "'ordered_revenue' can't be null";
        }
        if ($this->container['ordered_cost'] === null) {
            $invalidProperties[] = "'ordered_cost' can't be null";
        }
        if ($this->container['forecast_revenue'] === null) {
            $invalidProperties[] = "'forecast_revenue' can't be null";
        }
        if ($this->container['revised_revenue'] === null) {
            $invalidProperties[] = "'revised_revenue' can't be null";
        }
        if ($this->container['revised_cost'] === null) {
            $invalidProperties[] = "'revised_cost' can't be null";
        }
        if ($this->container['reason'] === null) {
            $invalidProperties[] = "'reason' can't be null";
        }
        if ($this->container['cancelled_by'] === null) {
            $invalidProperties[] = "'cancelled_by' can't be null";
        }
        if ($this->container['cancelled_on'] === null) {
            $invalidProperties[] = "'cancelled_on' can't be null";
        }
        if ($this->container['major_group'] === null) {
            $invalidProperties[] = "'major_group' can't be null";
        }
        if ($this->container['minor_group'] === null) {
            $invalidProperties[] = "'minor_group' can't be null";
        }
        if ($this->container['booking_entered_by'] === null) {
            $invalidProperties[] = "'booking_entered_by' can't be null";
        }
        if ($this->container['booking_entered_on'] === null) {
            $invalidProperties[] = "'booking_entered_on' can't be null";
        }
        if ($this->container['booking_changed_by'] === null) {
            $invalidProperties[] = "'booking_changed_by' can't be null";
        }
        if ($this->container['booking_changed_on'] === null) {
            $invalidProperties[] = "'booking_changed_on' can't be null";
        }
        if ($this->container['alternate_event'] === null) {
            $invalidProperties[] = "'alternate_event' can't be null";
        }
        if ($this->container['decision'] === null) {
            $invalidProperties[] = "'decision' can't be null";
        }
        if ($this->container['public'] === null) {
            $invalidProperties[] = "'public' can't be null";
        }
        if ($this->container['box_office'] === null) {
            $invalidProperties[] = "'box_office' can't be null";
        }
        if ($this->container['abbreviation'] === null) {
            $invalidProperties[] = "'abbreviation' can't be null";
        }
        if ($this->container['event_days'] === null) {
            $invalidProperties[] = "'event_days' can't be null";
        }
        if ($this->container['contact'] === null) {
            $invalidProperties[] = "'contact' can't be null";
        }
        if ($this->container['gl_distribution'] === null) {
            $invalidProperties[] = "'gl_distribution' can't be null";
        }
        if ($this->container['gl_sub_account'] === null) {
            $invalidProperties[] = "'gl_sub_account' can't be null";
        }
        if ($this->container['early_deadline'] === null) {
            $invalidProperties[] = "'early_deadline' can't be null";
        }
        if ($this->container['description3'] === null) {
            $invalidProperties[] = "'description3' can't be null";
        }
        if ($this->container['description4'] === null) {
            $invalidProperties[] = "'description4' can't be null";
        }
        if ($this->container['revised_attendance'] === null) {
            $invalidProperties[] = "'revised_attendance' can't be null";
        }
        if ($this->container['description5'] === null) {
            $invalidProperties[] = "'description5' can't be null";
        }
        if ($this->container['legal_name3'] === null) {
            $invalidProperties[] = "'legal_name3' can't be null";
        }
        if ($this->container['legal_name4'] === null) {
            $invalidProperties[] = "'legal_name4' can't be null";
        }
        if ($this->container['legal_name5'] === null) {
            $invalidProperties[] = "'legal_name5' can't be null";
        }
        if ($this->container['standard_deadline'] === null) {
            $invalidProperties[] = "'standard_deadline' can't be null";
        }
        if ($this->container['insurance'] === null) {
            $invalidProperties[] = "'insurance' can't be null";
        }
        if ($this->container['note2'] === null) {
            $invalidProperties[] = "'note2' can't be null";
        }
        if ($this->container['requester'] === null) {
            $invalidProperties[] = "'requester' can't be null";
        }
        if ($this->container['order_user_fields_type'] === null) {
            $invalidProperties[] = "'order_user_fields_type' can't be null";
        }
        if ($this->container['payment_plan'] === null) {
            $invalidProperties[] = "'payment_plan' can't be null";
        }
        if ($this->container['lost_to'] === null) {
            $invalidProperties[] = "'lost_to' can't be null";
        }
        if ($this->container['firm'] === null) {
            $invalidProperties[] = "'firm' can't be null";
        }
        if ($this->container['function_user_fields_type'] === null) {
            $invalidProperties[] = "'function_user_fields_type' can't be null";
        }
        if ($this->container['other_actual'] === null) {
            $invalidProperties[] = "'other_actual' can't be null";
        }
        if ($this->container['other_ordered'] === null) {
            $invalidProperties[] = "'other_ordered' can't be null";
        }
        if ($this->container['other_forecast'] === null) {
            $invalidProperties[] = "'other_forecast' can't be null";
        }
        if ($this->container['other_revised'] === null) {
            $invalidProperties[] = "'other_revised' can't be null";
        }
        if ($this->container['bill_to_contact'] === null) {
            $invalidProperties[] = "'bill_to_contact' can't be null";
        }
        if ($this->container['requester_contact'] === null) {
            $invalidProperties[] = "'requester_contact' can't be null";
        }
        if ($this->container['contract_required'] === null) {
            $invalidProperties[] = "'contract_required' can't be null";
        }
        if ($this->container['inventory_chain'] === null) {
            $invalidProperties[] = "'inventory_chain' can't be null";
        }
        if ($this->container['purge_indicator'] === null) {
            $invalidProperties[] = "'purge_indicator' can't be null";
        }
        if ($this->container['purge_validation_date_time'] === null) {
            $invalidProperties[] = "'purge_validation_date_time' can't be null";
        }
        if ($this->container['purged_by_user_id'] === null) {
            $invalidProperties[] = "'purged_by_user_id' can't be null";
        }
        if ($this->container['average_daily_rate'] === null) {
            $invalidProperties[] = "'average_daily_rate' can't be null";
        }
        if ($this->container['booked_area'] === null) {
            $invalidProperties[] = "'booked_area' can't be null";
        }
        if ($this->container['peak_numberof_rooms'] === null) {
            $invalidProperties[] = "'peak_numberof_rooms' can't be null";
        }
        if ($this->container['space_to_guest_room_ratio'] === null) {
            $invalidProperties[] = "'space_to_guest_room_ratio' can't be null";
        }
        if ($this->container['service_order_issue_class'] === null) {
            $invalidProperties[] = "'service_order_issue_class' can't be null";
        }
        if ($this->container['job_asset'] === null) {
            $invalidProperties[] = "'job_asset' can't be null";
        }
        if ($this->container['function_issue_class'] === null) {
            $invalidProperties[] = "'function_issue_class' can't be null";
        }
        if ($this->container['purge_validation_by_user_id'] === null) {
            $invalidProperties[] = "'purge_validation_by_user_id' can't be null";
        }
        if ($this->container['economic_impact'] === null) {
            $invalidProperties[] = "'economic_impact' can't be null";
        }
        if ($this->container['tax_scheme'] === null) {
            $invalidProperties[] = "'tax_scheme' can't be null";
        }
        if ($this->container['facebook'] === null) {
            $invalidProperties[] = "'facebook' can't be null";
        }
        if ($this->container['twitter'] === null) {
            $invalidProperties[] = "'twitter' can't be null";
        }
        if ($this->container['linked_in'] === null) {
            $invalidProperties[] = "'linked_in' can't be null";
        }
        if ($this->container['outlook_event'] === null) {
            $invalidProperties[] = "'outlook_event' can't be null";
        }
        if ($this->container['exhibitor_issue_class'] === null) {
            $invalidProperties[] = "'exhibitor_issue_class' can't be null";
        }
        if ($this->container['exhibitor_issue_type'] === null) {
            $invalidProperties[] = "'exhibitor_issue_type' can't be null";
        }
        if ($this->container['function_status'] === null) {
            $invalidProperties[] = "'function_status' can't be null";
        }
        if ($this->container['event_user_field_sets'] === null) {
            $invalidProperties[] = "'event_user_field_sets' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets event_id
     *
     * @return int
     */
    public function getEventId()
    {
        return $this->container['event_id'];
    }

    /**
     * Sets event_id
     *
     * @param int $event_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Identifier property.  Use this for GET and PUT operations.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_EVT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEventId($event_id)
    {
        $this->container['event_id'] = $event_id;

        return $this;
    }

    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Identifier property.  Use for GET and PUT operation.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return \DateTime
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param \DateTime $start_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_START_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return \DateTime
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param \DateTime $end_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_END_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets class
     *
     * @return string
     */
    public function getClass()
    {
        return $this->container['class'];
    }

    /**
     * Sets class
     *
     * @param string $class <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_CLASS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setClass($class)
    {
        $this->container['class'] = $class;

        return $this;
    }

    /**
     * Gets designation
     *
     * @return string
     */
    public function getDesignation()
    {
        return $this->container['designation'];
    }

    /**
     * Sets designation
     *
     * @param string $designation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_DESIGNATION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDesignation($designation)
    {
        $this->container['designation'] = $designation;

        return $this;
    }

    /**
     * Gets category
     *
     * @return string
     */
    public function getCategory()
    {
        return $this->container['category'];
    }

    /**
     * Sets category
     *
     * @param string $category <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_CATEGORY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCategory($category)
    {
        $this->container['category'] = $category;

        return $this;
    }

    /**
     * Gets rank
     *
     * @return string
     */
    public function getRank()
    {
        return $this->container['rank'];
    }

    /**
     * Sets rank
     *
     * @param string $rank <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_RANK  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRank($rank)
    {
        $this->container['rank'] = $rank;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets legal_name
     *
     * @return string
     */
    public function getLegalName()
    {
        return $this->container['legal_name'];
    }

    /**
     * Sets legal_name
     *
     * @param string $legal_name <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is normally defaulted in from the description when using v20.  Make sure to manually fill it in using the API.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_EVT_LEGAL_NAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLegalName($legal_name)
    {
        $this->container['legal_name'] = $legal_name;

        return $this;
    }

    /**
     * Gets start_time
     *
     * @return \DateTime
     */
    public function getStartTime()
    {
        return $this->container['start_time'];
    }

    /**
     * Sets start_time
     *
     * @param \DateTime $start_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_START_TIME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStartTime($start_time)
    {
        $this->container['start_time'] = $start_time;

        return $this;
    }

    /**
     * Gets end_time
     *
     * @return \DateTime
     */
    public function getEndTime()
    {
        return $this->container['end_time'];
    }

    /**
     * Sets end_time
     *
     * @param \DateTime $end_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_END_TIME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEndTime($end_time)
    {
        $this->container['end_time'] = $end_time;

        return $this;
    }

    /**
     * Gets coordinator
     *
     * @return string
     */
    public function getCoordinator()
    {
        return $this->container['coordinator'];
    }

    /**
     * Sets coordinator
     *
     * @param string $coordinator <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_COORD_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCoordinator($coordinator)
    {
        $this->container['coordinator'] = $coordinator;

        return $this;
    }

    /**
     * Gets salesperson
     *
     * @return string
     */
    public function getSalesperson()
    {
        return $this->container['salesperson'];
    }

    /**
     * Sets salesperson
     *
     * @param string $salesperson <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is normally defaulted in when using v20.  Make sure to manually fill it in using the API.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_SLSPER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSalesperson($salesperson)
    {
        $this->container['salesperson'] = $salesperson;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_BOOKED_BY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 25  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets indicator
     *
     * @return string
     */
    public function getIndicator()
    {
        return $this->container['indicator'];
    }

    /**
     * Sets indicator
     *
     * @param string $indicator <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_INDICATOR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIndicator($indicator)
    {
        $this->container['indicator'] = $indicator;

        return $this;
    }

    /**
     * Gets price_list
     *
     * @return string
     */
    public function getPriceList()
    {
        return $this->container['price_list'];
    }

    /**
     * Sets price_list
     *
     * @param string $price_list <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is normally defaulted in when using v20.  Make sure to manually fill it in using the API.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_PRICE_LIST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPriceList($price_list)
    {
        $this->container['price_list'] = $price_list;

        return $this;
    }

    /**
     * Gets sensitivity
     *
     * @return string
     */
    public function getSensitivity()
    {
        return $this->container['sensitivity'];
    }

    /**
     * Sets sensitivity
     *
     * @param string $sensitivity <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_SENSITIVITY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSensitivity($sensitivity)
    {
        $this->container['sensitivity'] = $sensitivity;

        return $this;
    }

    /**
     * Gets note1
     *
     * @return string
     */
    public function getNote1()
    {
        return $this->container['note1'];
    }

    /**
     * Sets note1
     *
     * @param string $note1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_NOTE_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNote1($note1)
    {
        $this->container['note1'] = $note1;

        return $this;
    }

    /**
     * Gets actual_cost
     *
     * @return int
     */
    public function getActualCost()
    {
        return $this->container['actual_cost'];
    }

    /**
     * Sets actual_cost
     *
     * @param int $actual_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ACT_COST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualCost($actual_cost)
    {
        $this->container['actual_cost'] = $actual_cost;

        return $this;
    }

    /**
     * Gets forecast_cost
     *
     * @return int
     */
    public function getForecastCost()
    {
        return $this->container['forecast_cost'];
    }

    /**
     * Sets forecast_cost
     *
     * @param int $forecast_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EST_COST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setForecastCost($forecast_cost)
    {
        $this->container['forecast_cost'] = $forecast_cost;

        return $this;
    }

    /**
     * Gets forecast_attendance
     *
     * @return int
     */
    public function getForecastAttendance()
    {
        return $this->container['forecast_attendance'];
    }

    /**
     * Sets forecast_attendance
     *
     * @param int $forecast_attendance <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EST_ATTEND  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setForecastAttendance($forecast_attendance)
    {
        $this->container['forecast_attendance'] = $forecast_attendance;

        return $this;
    }

    /**
     * Gets attendance
     *
     * @return int
     */
    public function getAttendance()
    {
        return $this->container['attendance'];
    }

    /**
     * Sets attendance
     *
     * @param int $attendance <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_PLN_ATTEND  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAttendance($attendance)
    {
        $this->container['attendance'] = $attendance;

        return $this;
    }

    /**
     * Gets actual_attendance
     *
     * @return int
     */
    public function getActualAttendance()
    {
        return $this->container['actual_attendance'];
    }

    /**
     * Sets actual_attendance
     *
     * @param int $actual_attendance <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ACT_ATTEND  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualAttendance($actual_attendance)
    {
        $this->container['actual_attendance'] = $actual_attendance;

        return $this;
    }

    /**
     * Gets search
     *
     * @return string
     */
    public function getSearch()
    {
        return $this->container['search'];
    }

    /**
     * Sets search
     *
     * @param string $search <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_SEARCH  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSearch($search)
    {
        $this->container['search'] = $search;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets on_site_office
     *
     * @return string
     */
    public function getOnSiteOffice()
    {
        return $this->container['on_site_office'];
    }

    /**
     * Sets on_site_office
     *
     * @param string $on_site_office <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ON_SITE_OFFICE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOnSiteOffice($on_site_office)
    {
        $this->container['on_site_office'] = $on_site_office;

        return $this;
    }

    /**
     * Gets on_site_phone
     *
     * @return string
     */
    public function getOnSitePhone()
    {
        return $this->container['on_site_phone'];
    }

    /**
     * Sets on_site_phone
     *
     * @param string $on_site_phone <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ON_SITE_PHONE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 25  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOnSitePhone($on_site_phone)
    {
        $this->container['on_site_phone'] = $on_site_phone;

        return $this;
    }

    /**
     * Gets in_date
     *
     * @return \DateTime
     */
    public function getInDate()
    {
        return $this->container['in_date'];
    }

    /**
     * Sets in_date
     *
     * @param \DateTime $in_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is the date segment of the 'In' field in v20.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_EVT_IN_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInDate($in_date)
    {
        $this->container['in_date'] = $in_date;

        return $this;
    }

    /**
     * Gets out_date
     *
     * @return \DateTime
     */
    public function getOutDate()
    {
        return $this->container['out_date'];
    }

    /**
     * Sets out_date
     *
     * @param \DateTime $out_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is the date segment of the 'Out' field in v20.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_EVT_OUT_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOutDate($out_date)
    {
        $this->container['out_date'] = $out_date;

        return $this;
    }

    /**
     * Gets second_coordinator
     *
     * @return string
     */
    public function getSecondCoordinator()
    {
        return $this->container['second_coordinator'];
    }

    /**
     * Sets second_coordinator
     *
     * @param string $second_coordinator <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_COORD_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSecondCoordinator($second_coordinator)
    {
        $this->container['second_coordinator'] = $second_coordinator;

        return $this;
    }

    /**
     * Gets account
     *
     * @return string
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param string $account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is required.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_CUST_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets bill_to
     *
     * @return string
     */
    public function getBillTo()
    {
        return $this->container['bill_to'];
    }

    /**
     * Sets bill_to
     *
     * @param string $bill_to <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_BILLTO_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBillTo($bill_to)
    {
        $this->container['bill_to'] = $bill_to;

        return $this;
    }

    /**
     * Gets in_time
     *
     * @return \DateTime
     */
    public function getInTime()
    {
        return $this->container['in_time'];
    }

    /**
     * Sets in_time
     *
     * @param \DateTime $in_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is the time segment of the 'In' field in v20.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_EVT_IN_TIME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInTime($in_time)
    {
        $this->container['in_time'] = $in_time;

        return $this;
    }

    /**
     * Gets out_time
     *
     * @return \DateTime
     */
    public function getOutTime()
    {
        return $this->container['out_time'];
    }

    /**
     * Sets out_time
     *
     * @param \DateTime $out_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This is the time segment of the 'Out' field in v20.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_EVT_OUT_TIME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOutTime($out_time)
    {
        $this->container['out_time'] = $out_time;

        return $this;
    }

    /**
     * Gets web_address
     *
     * @return string
     */
    public function getWebAddress()
    {
        return $this->container['web_address'];
    }

    /**
     * Sets web_address
     *
     * @param string $web_address <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_WEB_ADDRESS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setWebAddress($web_address)
    {
        $this->container['web_address'] = $web_address;

        return $this;
    }

    /**
     * Gets parent_event
     *
     * @return int
     */
    public function getParentEvent()
    {
        return $this->container['parent_event'];
    }

    /**
     * Sets parent_event
     *
     * @param int $parent_event <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_MASTER_EVT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setParentEvent($parent_event)
    {
        $this->container['parent_event'] = $parent_event;

        return $this;
    }

    /**
     * Gets previous_event
     *
     * @return int
     */
    public function getPreviousEvent()
    {
        return $this->container['previous_event'];
    }

    /**
     * Sets previous_event
     *
     * @param int $previous_event <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_PREV_EVT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPreviousEvent($previous_event)
    {
        $this->container['previous_event'] = $previous_event;

        return $this;
    }

    /**
     * Gets description1
     *
     * @return string
     */
    public function getDescription1()
    {
        return $this->container['description1'];
    }

    /**
     * Sets description1
     *
     * @param string $description1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ALT_EVT_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription1($description1)
    {
        $this->container['description1'] = $description1;

        return $this;
    }

    /**
     * Gets description2
     *
     * @return string
     */
    public function getDescription2()
    {
        return $this->container['description2'];
    }

    /**
     * Sets description2
     *
     * @param string $description2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ALT_EVT_DESC2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription2($description2)
    {
        $this->container['description2'] = $description2;

        return $this;
    }

    /**
     * Gets legal_name1
     *
     * @return string
     */
    public function getLegalName1()
    {
        return $this->container['legal_name1'];
    }

    /**
     * Sets legal_name1
     *
     * @param string $legal_name1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ALT_LEGAL_NAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLegalName1($legal_name1)
    {
        $this->container['legal_name1'] = $legal_name1;

        return $this;
    }

    /**
     * Gets legal_name2
     *
     * @return string
     */
    public function getLegalName2()
    {
        return $this->container['legal_name2'];
    }

    /**
     * Sets legal_name2
     *
     * @param string $legal_name2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ALT_LEGAL_NAME2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLegalName2($legal_name2)
    {
        $this->container['legal_name2'] = $legal_name2;

        return $this;
    }

    /**
     * Gets third_coordinator
     *
     * @return string
     */
    public function getThirdCoordinator()
    {
        return $this->container['third_coordinator'];
    }

    /**
     * Sets third_coordinator
     *
     * @param string $third_coordinator <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_COORD3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setThirdCoordinator($third_coordinator)
    {
        $this->container['third_coordinator'] = $third_coordinator;

        return $this;
    }

    /**
     * Gets fourth_coordinator
     *
     * @return string
     */
    public function getFourthCoordinator()
    {
        return $this->container['fourth_coordinator'];
    }

    /**
     * Sets fourth_coordinator
     *
     * @param string $fourth_coordinator <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_COORD4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFourthCoordinator($fourth_coordinator)
    {
        $this->container['fourth_coordinator'] = $fourth_coordinator;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets anchor_venue
     *
     * @return string
     */
    public function getAnchorVenue()
    {
        return $this->container['anchor_venue'];
    }

    /**
     * Sets anchor_venue
     *
     * @param string $anchor_venue <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ANCHOR_VENUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAnchorVenue($anchor_venue)
    {
        $this->container['anchor_venue'] = $anchor_venue;

        return $this;
    }

    /**
     * Gets release
     *
     * @return \DateTime
     */
    public function getRelease()
    {
        return $this->container['release'];
    }

    /**
     * Sets release
     *
     * @param \DateTime $release <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_RELEASE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRelease($release)
    {
        $this->container['release'] = $release;

        return $this;
    }

    /**
     * Gets actual_revenue
     *
     * @return int
     */
    public function getActualRevenue()
    {
        return $this->container['actual_revenue'];
    }

    /**
     * Sets actual_revenue
     *
     * @param int $actual_revenue <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ACT_REVENUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualRevenue($actual_revenue)
    {
        $this->container['actual_revenue'] = $actual_revenue;

        return $this;
    }

    /**
     * Gets ordered_revenue
     *
     * @return int
     */
    public function getOrderedRevenue()
    {
        return $this->container['ordered_revenue'];
    }

    /**
     * Sets ordered_revenue
     *
     * @param int $ordered_revenue <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_PLN_REVENUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderedRevenue($ordered_revenue)
    {
        $this->container['ordered_revenue'] = $ordered_revenue;

        return $this;
    }

    /**
     * Gets ordered_cost
     *
     * @return int
     */
    public function getOrderedCost()
    {
        return $this->container['ordered_cost'];
    }

    /**
     * Sets ordered_cost
     *
     * @param int $ordered_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_PLN_COST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderedCost($ordered_cost)
    {
        $this->container['ordered_cost'] = $ordered_cost;

        return $this;
    }

    /**
     * Gets forecast_revenue
     *
     * @return int
     */
    public function getForecastRevenue()
    {
        return $this->container['forecast_revenue'];
    }

    /**
     * Sets forecast_revenue
     *
     * @param int $forecast_revenue <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EST_REVENUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setForecastRevenue($forecast_revenue)
    {
        $this->container['forecast_revenue'] = $forecast_revenue;

        return $this;
    }

    /**
     * Gets revised_revenue
     *
     * @return int
     */
    public function getRevisedRevenue()
    {
        return $this->container['revised_revenue'];
    }

    /**
     * Sets revised_revenue
     *
     * @param int $revised_revenue <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_RVS_REVENUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRevisedRevenue($revised_revenue)
    {
        $this->container['revised_revenue'] = $revised_revenue;

        return $this;
    }

    /**
     * Gets revised_cost
     *
     * @return int
     */
    public function getRevisedCost()
    {
        return $this->container['revised_cost'];
    }

    /**
     * Sets revised_cost
     *
     * @param int $revised_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_RVS_COST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRevisedCost($revised_cost)
    {
        $this->container['revised_cost'] = $revised_cost;

        return $this;
    }

    /**
     * Gets reason
     *
     * @return string
     */
    public function getReason()
    {
        return $this->container['reason'];
    }

    /**
     * Sets reason
     *
     * @param string $reason <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You need to supply a Reason code when cancelling an event.  It's represented by the a pipe delimited code, namely (Reason code|Cancel Reason Application code).  The Cancel Reason Application code is always EC for events.  You can find the Reason Code in the Ungerboeck window \"Event Cancellation Reasons\" from the main menu.  The code is located under the 'code' column in the grid.  You can also find it in the database under MM210_REASON_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_CANCEL_REASON  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setReason($reason)
    {
        $this->container['reason'] = $reason;

        return $this;
    }

    /**
     * Gets cancelled_by
     *
     * @return string
     */
    public function getCancelledBy()
    {
        return $this->container['cancelled_by'];
    }

    /**
     * Sets cancelled_by
     *
     * @param string $cancelled_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_CANCEL_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCancelledBy($cancelled_by)
    {
        $this->container['cancelled_by'] = $cancelled_by;

        return $this;
    }

    /**
     * Gets cancelled_on
     *
     * @return \DateTime
     */
    public function getCancelledOn()
    {
        return $this->container['cancelled_on'];
    }

    /**
     * Sets cancelled_on
     *
     * @param \DateTime $cancelled_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_CANCEL_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCancelledOn($cancelled_on)
    {
        $this->container['cancelled_on'] = $cancelled_on;

        return $this;
    }

    /**
     * Gets major_group
     *
     * @return string
     */
    public function getMajorGroup()
    {
        return $this->container['major_group'];
    }

    /**
     * Sets major_group
     *
     * @param string $major_group <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_MAJ_GROUP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMajorGroup($major_group)
    {
        $this->container['major_group'] = $major_group;

        return $this;
    }

    /**
     * Gets minor_group
     *
     * @return string
     */
    public function getMinorGroup()
    {
        return $this->container['minor_group'];
    }

    /**
     * Sets minor_group
     *
     * @param string $minor_group <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_MIN_GROUP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMinorGroup($minor_group)
    {
        $this->container['minor_group'] = $minor_group;

        return $this;
    }

    /**
     * Gets booking_entered_by
     *
     * @return string
     */
    public function getBookingEnteredBy()
    {
        return $this->container['booking_entered_by'];
    }

    /**
     * Sets booking_entered_by
     *
     * @param string $booking_entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_BKG_ENT_USER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBookingEnteredBy($booking_entered_by)
    {
        $this->container['booking_entered_by'] = $booking_entered_by;

        return $this;
    }

    /**
     * Gets booking_entered_on
     *
     * @return \DateTime
     */
    public function getBookingEnteredOn()
    {
        return $this->container['booking_entered_on'];
    }

    /**
     * Sets booking_entered_on
     *
     * @param \DateTime $booking_entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_BKG_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBookingEnteredOn($booking_entered_on)
    {
        $this->container['booking_entered_on'] = $booking_entered_on;

        return $this;
    }

    /**
     * Gets booking_changed_by
     *
     * @return string
     */
    public function getBookingChangedBy()
    {
        return $this->container['booking_changed_by'];
    }

    /**
     * Sets booking_changed_by
     *
     * @param string $booking_changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_BKG_CHG_USER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBookingChangedBy($booking_changed_by)
    {
        $this->container['booking_changed_by'] = $booking_changed_by;

        return $this;
    }

    /**
     * Gets booking_changed_on
     *
     * @return \DateTime
     */
    public function getBookingChangedOn()
    {
        return $this->container['booking_changed_on'];
    }

    /**
     * Sets booking_changed_on
     *
     * @param \DateTime $booking_changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_BKG_CHG_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBookingChangedOn($booking_changed_on)
    {
        $this->container['booking_changed_on'] = $booking_changed_on;

        return $this;
    }

    /**
     * Gets alternate_event
     *
     * @return int
     */
    public function getAlternateEvent()
    {
        return $this->container['alternate_event'];
    }

    /**
     * Sets alternate_event
     *
     * @param int $alternate_event <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ALT_EVT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAlternateEvent($alternate_event)
    {
        $this->container['alternate_event'] = $alternate_event;

        return $this;
    }

    /**
     * Gets decision
     *
     * @return \DateTime
     */
    public function getDecision()
    {
        return $this->container['decision'];
    }

    /**
     * Sets decision
     *
     * @param \DateTime $decision <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_DECISION_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDecision($decision)
    {
        $this->container['decision'] = $decision;

        return $this;
    }

    /**
     * Gets public
     *
     * @return string
     */
    public function getPublic()
    {
        return $this->container['public'];
    }

    /**
     * Sets public
     *
     * @param string $public <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_PUBLIC_YN  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPublic($public)
    {
        $this->container['public'] = $public;

        return $this;
    }

    /**
     * Gets box_office
     *
     * @return string
     */
    public function getBoxOffice()
    {
        return $this->container['box_office'];
    }

    /**
     * Sets box_office
     *
     * @param string $box_office <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_BOX_OFFICE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBoxOffice($box_office)
    {
        $this->container['box_office'] = $box_office;

        return $this;
    }

    /**
     * Gets abbreviation
     *
     * @return string
     */
    public function getAbbreviation()
    {
        return $this->container['abbreviation'];
    }

    /**
     * Sets abbreviation
     *
     * @param string $abbreviation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_ABBREV_NAME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAbbreviation($abbreviation)
    {
        $this->container['abbreviation'] = $abbreviation;

        return $this;
    }

    /**
     * Gets event_days
     *
     * @return double
     */
    public function getEventDays()
    {
        return $this->container['event_days'];
    }

    /**
     * Sets event_days
     *
     * @param double $event_days <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVENT_DAYS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 62  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEventDays($event_days)
    {
        $this->container['event_days'] = $event_days;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return string
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param string $contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_NG_EVT_CONTACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets gl_distribution
     *
     * @return string
     */
    public function getGlDistribution()
    {
        return $this->container['gl_distribution'];
    }

    /**
     * Sets gl_distribution
     *
     * @param string $gl_distribution <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_GLACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlDistribution($gl_distribution)
    {
        $this->container['gl_distribution'] = $gl_distribution;

        return $this;
    }

    /**
     * Gets gl_sub_account
     *
     * @return string
     */
    public function getGlSubAccount()
    {
        return $this->container['gl_sub_account'];
    }

    /**
     * Sets gl_sub_account
     *
     * @param string $gl_sub_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_GL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlSubAccount($gl_sub_account)
    {
        $this->container['gl_sub_account'] = $gl_sub_account;

        return $this;
    }

    /**
     * Gets early_deadline
     *
     * @return \DateTime
     */
    public function getEarlyDeadline()
    {
        return $this->container['early_deadline'];
    }

    /**
     * Sets early_deadline
     *
     * @param \DateTime $early_deadline <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ADV_CUTOFF_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEarlyDeadline($early_deadline)
    {
        $this->container['early_deadline'] = $early_deadline;

        return $this;
    }

    /**
     * Gets description3
     *
     * @return string
     */
    public function getDescription3()
    {
        return $this->container['description3'];
    }

    /**
     * Sets description3
     *
     * @param string $description3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ALT_EVT_DESC3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription3($description3)
    {
        $this->container['description3'] = $description3;

        return $this;
    }

    /**
     * Gets description4
     *
     * @return string
     */
    public function getDescription4()
    {
        return $this->container['description4'];
    }

    /**
     * Sets description4
     *
     * @param string $description4 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ALT_EVT_DESC4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription4($description4)
    {
        $this->container['description4'] = $description4;

        return $this;
    }

    /**
     * Gets revised_attendance
     *
     * @return int
     */
    public function getRevisedAttendance()
    {
        return $this->container['revised_attendance'];
    }

    /**
     * Sets revised_attendance
     *
     * @param int $revised_attendance <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_RVS_ATTEND  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRevisedAttendance($revised_attendance)
    {
        $this->container['revised_attendance'] = $revised_attendance;

        return $this;
    }

    /**
     * Gets description5
     *
     * @return string
     */
    public function getDescription5()
    {
        return $this->container['description5'];
    }

    /**
     * Sets description5
     *
     * @param string $description5 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ALT_EVT_DESC5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription5($description5)
    {
        $this->container['description5'] = $description5;

        return $this;
    }

    /**
     * Gets legal_name3
     *
     * @return string
     */
    public function getLegalName3()
    {
        return $this->container['legal_name3'];
    }

    /**
     * Sets legal_name3
     *
     * @param string $legal_name3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ALT_LEGAL_NAME3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLegalName3($legal_name3)
    {
        $this->container['legal_name3'] = $legal_name3;

        return $this;
    }

    /**
     * Gets legal_name4
     *
     * @return string
     */
    public function getLegalName4()
    {
        return $this->container['legal_name4'];
    }

    /**
     * Sets legal_name4
     *
     * @param string $legal_name4 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ALT_LEGAL_NAME4  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLegalName4($legal_name4)
    {
        $this->container['legal_name4'] = $legal_name4;

        return $this;
    }

    /**
     * Gets legal_name5
     *
     * @return string
     */
    public function getLegalName5()
    {
        return $this->container['legal_name5'];
    }

    /**
     * Sets legal_name5
     *
     * @param string $legal_name5 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ALT_LEGAL_NAME5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLegalName5($legal_name5)
    {
        $this->container['legal_name5'] = $legal_name5;

        return $this;
    }

    /**
     * Gets standard_deadline
     *
     * @return \DateTime
     */
    public function getStandardDeadline()
    {
        return $this->container['standard_deadline'];
    }

    /**
     * Sets standard_deadline
     *
     * @param \DateTime $standard_deadline <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_STD_CUTOFF_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStandardDeadline($standard_deadline)
    {
        $this->container['standard_deadline'] = $standard_deadline;

        return $this;
    }

    /**
     * Gets insurance
     *
     * @return string
     */
    public function getInsurance()
    {
        return $this->container['insurance'];
    }

    /**
     * Sets insurance
     *
     * @param string $insurance <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_INSUR_REQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInsurance($insurance)
    {
        $this->container['insurance'] = $insurance;

        return $this;
    }

    /**
     * Gets note2
     *
     * @return string
     */
    public function getNote2()
    {
        return $this->container['note2'];
    }

    /**
     * Sets note2
     *
     * @param string $note2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EVT_NOTE_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNote2($note2)
    {
        $this->container['note2'] = $note2;

        return $this;
    }

    /**
     * Gets requester
     *
     * @return string
     */
    public function getRequester()
    {
        return $this->container['requester'];
    }

    /**
     * Sets requester
     *
     * @param string $requester <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_REQ_ACCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequester($requester)
    {
        $this->container['requester'] = $requester;

        return $this;
    }

    /**
     * Gets order_user_fields_type
     *
     * @return string
     */
    public function getOrderUserFieldsType()
    {
        return $this->container['order_user_fields_type'];
    }

    /**
     * Sets order_user_fields_type
     *
     * @param string $order_user_fields_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This code consists of [Issue Type]|[Issue Class].  This is populated from [CR158_ISSUE_TYPE]|[CR158_ISSUE_CLASS].  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_SO_ISSUE_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderUserFieldsType($order_user_fields_type)
    {
        $this->container['order_user_fields_type'] = $order_user_fields_type;

        return $this;
    }

    /**
     * Gets payment_plan
     *
     * @return string
     */
    public function getPaymentPlan()
    {
        return $this->container['payment_plan'];
    }

    /**
     * Sets payment_plan
     *
     * @param string $payment_plan <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_DEF_PAY_SCHED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPaymentPlan($payment_plan)
    {
        $this->container['payment_plan'] = $payment_plan;

        return $this;
    }

    /**
     * Gets lost_to
     *
     * @return string
     */
    public function getLostTo()
    {
        return $this->container['lost_to'];
    }

    /**
     * Sets lost_to
     *
     * @param string $lost_to <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_LOST_TO_VAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLostTo($lost_to)
    {
        $this->container['lost_to'] = $lost_to;

        return $this;
    }

    /**
     * Gets firm
     *
     * @return \DateTime
     */
    public function getFirm()
    {
        return $this->container['firm'];
    }

    /**
     * Sets firm
     *
     * @param \DateTime $firm <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_FIRM_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFirm($firm)
    {
        $this->container['firm'] = $firm;

        return $this;
    }

    /**
     * Gets function_user_fields_type
     *
     * @return string
     */
    public function getFunctionUserFieldsType()
    {
        return $this->container['function_user_fields_type'];
    }

    /**
     * Sets function_user_fields_type
     *
     * @param string $function_user_fields_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This code consists of [Issue Type]|[Issue Class].  This is populated from [CR158_ISSUE_TYPE]|[CR158_ISSUE_CLASS].  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_FN_ISSUE_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFunctionUserFieldsType($function_user_fields_type)
    {
        $this->container['function_user_fields_type'] = $function_user_fields_type;

        return $this;
    }

    /**
     * Gets other_actual
     *
     * @return double
     */
    public function getOtherActual()
    {
        return $this->container['other_actual'];
    }

    /**
     * Sets other_actual
     *
     * @param double $other_actual <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ACT_OTHER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 92  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOtherActual($other_actual)
    {
        $this->container['other_actual'] = $other_actual;

        return $this;
    }

    /**
     * Gets other_ordered
     *
     * @return double
     */
    public function getOtherOrdered()
    {
        return $this->container['other_ordered'];
    }

    /**
     * Sets other_ordered
     *
     * @param double $other_ordered <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_PLN_OTHER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 92  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOtherOrdered($other_ordered)
    {
        $this->container['other_ordered'] = $other_ordered;

        return $this;
    }

    /**
     * Gets other_forecast
     *
     * @return double
     */
    public function getOtherForecast()
    {
        return $this->container['other_forecast'];
    }

    /**
     * Sets other_forecast
     *
     * @param double $other_forecast <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EST_OTHER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 92  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOtherForecast($other_forecast)
    {
        $this->container['other_forecast'] = $other_forecast;

        return $this;
    }

    /**
     * Gets other_revised
     *
     * @return double
     */
    public function getOtherRevised()
    {
        return $this->container['other_revised'];
    }

    /**
     * Sets other_revised
     *
     * @param double $other_revised <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_RVS_OTHER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 92  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOtherRevised($other_revised)
    {
        $this->container['other_revised'] = $other_revised;

        return $this;
    }

    /**
     * Gets bill_to_contact
     *
     * @return string
     */
    public function getBillToContact()
    {
        return $this->container['bill_to_contact'];
    }

    /**
     * Sets bill_to_contact
     *
     * @param string $bill_to_contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_NG_BILLTO_CONTACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBillToContact($bill_to_contact)
    {
        $this->container['bill_to_contact'] = $bill_to_contact;

        return $this;
    }

    /**
     * Gets requester_contact
     *
     * @return string
     */
    public function getRequesterContact()
    {
        return $this->container['requester_contact'];
    }

    /**
     * Sets requester_contact
     *
     * @param string $requester_contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_REQ_CNTCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequesterContact($requester_contact)
    {
        $this->container['requester_contact'] = $requester_contact;

        return $this;
    }

    /**
     * Gets contract_required
     *
     * @return string
     */
    public function getContractRequired()
    {
        return $this->container['contract_required'];
    }

    /**
     * Sets contract_required
     *
     * @param string $contract_required <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_CONTRACT_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContractRequired($contract_required)
    {
        $this->container['contract_required'] = $contract_required;

        return $this;
    }

    /**
     * Gets inventory_chain
     *
     * @return string
     */
    public function getInventoryChain()
    {
        return $this->container['inventory_chain'];
    }

    /**
     * Sets inventory_chain
     *
     * @param string $inventory_chain <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_DURATION_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInventoryChain($inventory_chain)
    {
        $this->container['inventory_chain'] = $inventory_chain;

        return $this;
    }

    /**
     * Gets purge_indicator
     *
     * @return string
     */
    public function getPurgeIndicator()
    {
        return $this->container['purge_indicator'];
    }

    /**
     * Sets purge_indicator
     *
     * @param string $purge_indicator <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_PURGE_IND  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPurgeIndicator($purge_indicator)
    {
        $this->container['purge_indicator'] = $purge_indicator;

        return $this;
    }

    /**
     * Gets purge_validation_date_time
     *
     * @return \DateTime
     */
    public function getPurgeValidationDateTime()
    {
        return $this->container['purge_validation_date_time'];
    }

    /**
     * Sets purge_validation_date_time
     *
     * @param \DateTime $purge_validation_date_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_PURGE_VALIDATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPurgeValidationDateTime($purge_validation_date_time)
    {
        $this->container['purge_validation_date_time'] = $purge_validation_date_time;

        return $this;
    }

    /**
     * Gets purged_by_user_id
     *
     * @return string
     */
    public function getPurgedByUserId()
    {
        return $this->container['purged_by_user_id'];
    }

    /**
     * Sets purged_by_user_id
     *
     * @param string $purged_by_user_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_PURGE_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPurgedByUserId($purged_by_user_id)
    {
        $this->container['purged_by_user_id'] = $purged_by_user_id;

        return $this;
    }

    /**
     * Gets average_daily_rate
     *
     * @return int
     */
    public function getAverageDailyRate()
    {
        return $this->container['average_daily_rate'];
    }

    /**
     * Sets average_daily_rate
     *
     * @param int $average_daily_rate <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_AVG_DAILY_RATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAverageDailyRate($average_daily_rate)
    {
        $this->container['average_daily_rate'] = $average_daily_rate;

        return $this;
    }

    /**
     * Gets booked_area
     *
     * @return int
     */
    public function getBookedArea()
    {
        return $this->container['booked_area'];
    }

    /**
     * Sets booked_area
     *
     * @param int $booked_area <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_BOOKED_AREA  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBookedArea($booked_area)
    {
        $this->container['booked_area'] = $booked_area;

        return $this;
    }

    /**
     * Gets peak_numberof_rooms
     *
     * @return int
     */
    public function getPeakNumberofRooms()
    {
        return $this->container['peak_numberof_rooms'];
    }

    /**
     * Sets peak_numberof_rooms
     *
     * @param int $peak_numberof_rooms <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_PEAK_NBR_RMS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPeakNumberofRooms($peak_numberof_rooms)
    {
        $this->container['peak_numberof_rooms'] = $peak_numberof_rooms;

        return $this;
    }

    /**
     * Gets space_to_guest_room_ratio
     *
     * @return int
     */
    public function getSpaceToGuestRoomRatio()
    {
        return $this->container['space_to_guest_room_ratio'];
    }

    /**
     * Sets space_to_guest_room_ratio
     *
     * @param int $space_to_guest_room_ratio <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_SPACE_GUEST_RATIO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSpaceToGuestRoomRatio($space_to_guest_room_ratio)
    {
        $this->container['space_to_guest_room_ratio'] = $space_to_guest_room_ratio;

        return $this;
    }

    /**
     * Gets service_order_issue_class
     *
     * @return string
     */
    public function getServiceOrderIssueClass()
    {
        return $this->container['service_order_issue_class'];
    }

    /**
     * Sets service_order_issue_class
     *
     * @param string $service_order_issue_class <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_SO_ISSUE_CLASS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setServiceOrderIssueClass($service_order_issue_class)
    {
        $this->container['service_order_issue_class'] = $service_order_issue_class;

        return $this;
    }

    /**
     * Gets job_asset
     *
     * @return string
     */
    public function getJobAsset()
    {
        return $this->container['job_asset'];
    }

    /**
     * Sets job_asset
     *
     * @param string $job_asset <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ASSET_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setJobAsset($job_asset)
    {
        $this->container['job_asset'] = $job_asset;

        return $this;
    }

    /**
     * Gets function_issue_class
     *
     * @return string
     */
    public function getFunctionIssueClass()
    {
        return $this->container['function_issue_class'];
    }

    /**
     * Sets function_issue_class
     *
     * @param string $function_issue_class <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_FN_ISSUE_CLASS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFunctionIssueClass($function_issue_class)
    {
        $this->container['function_issue_class'] = $function_issue_class;

        return $this;
    }

    /**
     * Gets purge_validation_by_user_id
     *
     * @return string
     */
    public function getPurgeValidationByUserId()
    {
        return $this->container['purge_validation_by_user_id'];
    }

    /**
     * Sets purge_validation_by_user_id
     *
     * @param string $purge_validation_by_user_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_PURGE_VAL_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPurgeValidationByUserId($purge_validation_by_user_id)
    {
        $this->container['purge_validation_by_user_id'] = $purge_validation_by_user_id;

        return $this;
    }

    /**
     * Gets economic_impact
     *
     * @return double
     */
    public function getEconomicImpact()
    {
        return $this->container['economic_impact'];
    }

    /**
     * Sets economic_impact
     *
     * @param double $economic_impact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_ECON_IMPACT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 152  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEconomicImpact($economic_impact)
    {
        $this->container['economic_impact'] = $economic_impact;

        return $this;
    }

    /**
     * Gets tax_scheme
     *
     * @return string
     */
    public function getTaxScheme()
    {
        return $this->container['tax_scheme'];
    }

    /**
     * Sets tax_scheme
     *
     * @param string $tax_scheme <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Note that this is subject to OrgParm AA896  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_TAX_SCHEME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxScheme($tax_scheme)
    {
        $this->container['tax_scheme'] = $tax_scheme;

        return $this;
    }

    /**
     * Gets facebook
     *
     * @return string
     */
    public function getFacebook()
    {
        return $this->container['facebook'];
    }

    /**
     * Sets facebook
     *
     * @param string $facebook <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_SOCIAL_NETWORK_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFacebook($facebook)
    {
        $this->container['facebook'] = $facebook;

        return $this;
    }

    /**
     * Gets twitter
     *
     * @return string
     */
    public function getTwitter()
    {
        return $this->container['twitter'];
    }

    /**
     * Sets twitter
     *
     * @param string $twitter <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_SOCIAL_NETWORK_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTwitter($twitter)
    {
        $this->container['twitter'] = $twitter;

        return $this;
    }

    /**
     * Gets linked_in
     *
     * @return string
     */
    public function getLinkedIn()
    {
        return $this->container['linked_in'];
    }

    /**
     * Sets linked_in
     *
     * @param string $linked_in <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_SOCIAL_NETWORK_3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLinkedIn($linked_in)
    {
        $this->container['linked_in'] = $linked_in;

        return $this;
    }

    /**
     * Gets outlook_event
     *
     * @return string
     */
    public function getOutlookEvent()
    {
        return $this->container['outlook_event'];
    }

    /**
     * Sets outlook_event
     *
     * @param string $outlook_event <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_OUTLOOK_MEETING  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOutlookEvent($outlook_event)
    {
        $this->container['outlook_event'] = $outlook_event;

        return $this;
    }

    /**
     * Gets exhibitor_issue_class
     *
     * @return string
     */
    public function getExhibitorIssueClass()
    {
        return $this->container['exhibitor_issue_class'];
    }

    /**
     * Sets exhibitor_issue_class
     *
     * @param string $exhibitor_issue_class <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV200_EXH_ISSUE_CLASS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExhibitorIssueClass($exhibitor_issue_class)
    {
        $this->container['exhibitor_issue_class'] = $exhibitor_issue_class;

        return $this;
    }

    /**
     * Gets exhibitor_issue_type
     *
     * @return string
     */
    public function getExhibitorIssueType()
    {
        return $this->container['exhibitor_issue_type'];
    }

    /**
     * Sets exhibitor_issue_type
     *
     * @param string $exhibitor_issue_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This code consists of [Issue Type]|[Issue Class].  This is populated from [CR158_ISSUE_TYPE]|[CR158_ISSUE_CLASS].  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV200_EXH_ISSUE_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExhibitorIssueType($exhibitor_issue_type)
    {
        $this->container['exhibitor_issue_type'] = $exhibitor_issue_type;

        return $this;
    }

    /**
     * Gets function_status
     *
     * @return string
     */
    public function getFunctionStatus()
    {
        return $this->container['function_status'];
    }

    /**
     * Sets function_status
     *
     * @param string $function_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Required when cancelling an event.  Set to the status of the cancelled functions  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV700_STATUS_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2</span></div>
     *
     * @return $this
     */
    public function setFunctionStatus($function_status)
    {
        $this->container['function_status'] = $function_status;

        return $this;
    }

    /**
     * Gets event_user_field_sets
     *
     * @return \FomF\Ungerboeck\Client\Model\UserFields[]
     */
    public function getEventUserFieldSets()
    {
        return $this->container['event_user_field_sets'];
    }

    /**
     * Sets event_user_field_sets
     *
     * @param \FomF\Ungerboeck\Client\Model\UserFields[] $event_user_field_sets <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This holds the list of Event User Field set values.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CR073_ISSUES Table</span></div>
     *
     * @return $this
     */
    public function setEventUserFieldSets($event_user_field_sets)
    {
        $this->container['event_user_field_sets'] = $event_user_field_sets;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


