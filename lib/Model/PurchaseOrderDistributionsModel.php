<?php
/**
 * PurchaseOrderDistributionsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * PurchaseOrderDistributionsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class PurchaseOrderDistributionsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PurchaseOrderDistributionsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization' => 'string',
        'number' => 'int',
        'sequence' => 'int',
        'line' => 'int',
        'gl_account' => 'string',
        'sub_account' => 'string',
        'debit_credit' => 'string',
        'event_job' => 'int',
        'function' => 'int',
        'amount' => 'double',
        'asset' => 'string',
        'transaction_analysis1' => 'string',
        'transaction_analysis2' => 'string',
        'transaction_analysis3' => 'string',
        'percent' => 'double',
        'transaction_analysis4' => 'string',
        'transaction_analysis5' => 'string',
        'transaction_analysis6' => 'string',
        'division' => 'string',
        'management_report_code' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization' => null,
        'number' => 'int32',
        'sequence' => 'int32',
        'line' => 'int32',
        'gl_account' => null,
        'sub_account' => null,
        'debit_credit' => null,
        'event_job' => 'int32',
        'function' => 'int32',
        'amount' => 'double',
        'asset' => null,
        'transaction_analysis1' => null,
        'transaction_analysis2' => null,
        'transaction_analysis3' => null,
        'percent' => 'double',
        'transaction_analysis4' => null,
        'transaction_analysis5' => null,
        'transaction_analysis6' => null,
        'division' => null,
        'management_report_code' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization' => 'Organization',
        'number' => 'Number',
        'sequence' => 'Sequence',
        'line' => 'Line',
        'gl_account' => 'GLAccount',
        'sub_account' => 'SubAccount',
        'debit_credit' => 'DebitCredit',
        'event_job' => 'EventJob',
        'function' => 'Function',
        'amount' => 'Amount',
        'asset' => 'Asset',
        'transaction_analysis1' => 'TransactionAnalysis1',
        'transaction_analysis2' => 'TransactionAnalysis2',
        'transaction_analysis3' => 'TransactionAnalysis3',
        'percent' => 'Percent',
        'transaction_analysis4' => 'TransactionAnalysis4',
        'transaction_analysis5' => 'TransactionAnalysis5',
        'transaction_analysis6' => 'TransactionAnalysis6',
        'division' => 'Division',
        'management_report_code' => 'ManagementReportCode'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization' => 'setOrganization',
        'number' => 'setNumber',
        'sequence' => 'setSequence',
        'line' => 'setLine',
        'gl_account' => 'setGlAccount',
        'sub_account' => 'setSubAccount',
        'debit_credit' => 'setDebitCredit',
        'event_job' => 'setEventJob',
        'function' => 'setFunction',
        'amount' => 'setAmount',
        'asset' => 'setAsset',
        'transaction_analysis1' => 'setTransactionAnalysis1',
        'transaction_analysis2' => 'setTransactionAnalysis2',
        'transaction_analysis3' => 'setTransactionAnalysis3',
        'percent' => 'setPercent',
        'transaction_analysis4' => 'setTransactionAnalysis4',
        'transaction_analysis5' => 'setTransactionAnalysis5',
        'transaction_analysis6' => 'setTransactionAnalysis6',
        'division' => 'setDivision',
        'management_report_code' => 'setManagementReportCode'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization' => 'getOrganization',
        'number' => 'getNumber',
        'sequence' => 'getSequence',
        'line' => 'getLine',
        'gl_account' => 'getGlAccount',
        'sub_account' => 'getSubAccount',
        'debit_credit' => 'getDebitCredit',
        'event_job' => 'getEventJob',
        'function' => 'getFunction',
        'amount' => 'getAmount',
        'asset' => 'getAsset',
        'transaction_analysis1' => 'getTransactionAnalysis1',
        'transaction_analysis2' => 'getTransactionAnalysis2',
        'transaction_analysis3' => 'getTransactionAnalysis3',
        'percent' => 'getPercent',
        'transaction_analysis4' => 'getTransactionAnalysis4',
        'transaction_analysis5' => 'getTransactionAnalysis5',
        'transaction_analysis6' => 'getTransactionAnalysis6',
        'division' => 'getDivision',
        'management_report_code' => 'getManagementReportCode'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization'] = isset($data['organization']) ? $data['organization'] : null;
        $this->container['number'] = isset($data['number']) ? $data['number'] : null;
        $this->container['sequence'] = isset($data['sequence']) ? $data['sequence'] : null;
        $this->container['line'] = isset($data['line']) ? $data['line'] : null;
        $this->container['gl_account'] = isset($data['gl_account']) ? $data['gl_account'] : null;
        $this->container['sub_account'] = isset($data['sub_account']) ? $data['sub_account'] : null;
        $this->container['debit_credit'] = isset($data['debit_credit']) ? $data['debit_credit'] : null;
        $this->container['event_job'] = isset($data['event_job']) ? $data['event_job'] : null;
        $this->container['function'] = isset($data['function']) ? $data['function'] : null;
        $this->container['amount'] = isset($data['amount']) ? $data['amount'] : null;
        $this->container['asset'] = isset($data['asset']) ? $data['asset'] : null;
        $this->container['transaction_analysis1'] = isset($data['transaction_analysis1']) ? $data['transaction_analysis1'] : null;
        $this->container['transaction_analysis2'] = isset($data['transaction_analysis2']) ? $data['transaction_analysis2'] : null;
        $this->container['transaction_analysis3'] = isset($data['transaction_analysis3']) ? $data['transaction_analysis3'] : null;
        $this->container['percent'] = isset($data['percent']) ? $data['percent'] : null;
        $this->container['transaction_analysis4'] = isset($data['transaction_analysis4']) ? $data['transaction_analysis4'] : null;
        $this->container['transaction_analysis5'] = isset($data['transaction_analysis5']) ? $data['transaction_analysis5'] : null;
        $this->container['transaction_analysis6'] = isset($data['transaction_analysis6']) ? $data['transaction_analysis6'] : null;
        $this->container['division'] = isset($data['division']) ? $data['division'] : null;
        $this->container['management_report_code'] = isset($data['management_report_code']) ? $data['management_report_code'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization'] === null) {
            $invalidProperties[] = "'organization' can't be null";
        }
        if ($this->container['number'] === null) {
            $invalidProperties[] = "'number' can't be null";
        }
        if ($this->container['sequence'] === null) {
            $invalidProperties[] = "'sequence' can't be null";
        }
        if ($this->container['line'] === null) {
            $invalidProperties[] = "'line' can't be null";
        }
        if ($this->container['gl_account'] === null) {
            $invalidProperties[] = "'gl_account' can't be null";
        }
        if ($this->container['sub_account'] === null) {
            $invalidProperties[] = "'sub_account' can't be null";
        }
        if ($this->container['debit_credit'] === null) {
            $invalidProperties[] = "'debit_credit' can't be null";
        }
        if ($this->container['event_job'] === null) {
            $invalidProperties[] = "'event_job' can't be null";
        }
        if ($this->container['function'] === null) {
            $invalidProperties[] = "'function' can't be null";
        }
        if ($this->container['amount'] === null) {
            $invalidProperties[] = "'amount' can't be null";
        }
        if ($this->container['asset'] === null) {
            $invalidProperties[] = "'asset' can't be null";
        }
        if ($this->container['transaction_analysis1'] === null) {
            $invalidProperties[] = "'transaction_analysis1' can't be null";
        }
        if ($this->container['transaction_analysis2'] === null) {
            $invalidProperties[] = "'transaction_analysis2' can't be null";
        }
        if ($this->container['transaction_analysis3'] === null) {
            $invalidProperties[] = "'transaction_analysis3' can't be null";
        }
        if ($this->container['percent'] === null) {
            $invalidProperties[] = "'percent' can't be null";
        }
        if ($this->container['transaction_analysis4'] === null) {
            $invalidProperties[] = "'transaction_analysis4' can't be null";
        }
        if ($this->container['transaction_analysis5'] === null) {
            $invalidProperties[] = "'transaction_analysis5' can't be null";
        }
        if ($this->container['transaction_analysis6'] === null) {
            $invalidProperties[] = "'transaction_analysis6' can't be null";
        }
        if ($this->container['division'] === null) {
            $invalidProperties[] = "'division' can't be null";
        }
        if ($this->container['management_report_code'] === null) {
            $invalidProperties[] = "'management_report_code' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization
     *
     * @return string
     */
    public function getOrganization()
    {
        return $this->container['organization'];
    }

    /**
     * Sets organization
     *
     * @param string $organization <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganization($organization)
    {
        $this->container['organization'] = $organization;

        return $this;
    }

    /**
     * Gets number
     *
     * @return int
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     *
     * @param int $number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_PO_REQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNumber($number)
    {
        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets sequence
     *
     * @return int
     */
    public function getSequence()
    {
        return $this->container['sequence'];
    }

    /**
     * Sets sequence
     *
     * @param int $sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSequence($sequence)
    {
        $this->container['sequence'] = $sequence;

        return $this;
    }

    /**
     * Gets line
     *
     * @return int
     */
    public function getLine()
    {
        return $this->container['line'];
    }

    /**
     * Sets line
     *
     * @param int $line <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_PO_REQ_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLine($line)
    {
        $this->container['line'] = $line;

        return $this;
    }

    /**
     * Gets gl_account
     *
     * @return string
     */
    public function getGlAccount()
    {
        return $this->container['gl_account'];
    }

    /**
     * Sets gl_account
     *
     * @param string $gl_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlAccount($gl_account)
    {
        $this->container['gl_account'] = $gl_account;

        return $this;
    }

    /**
     * Gets sub_account
     *
     * @return string
     */
    public function getSubAccount()
    {
        return $this->container['sub_account'];
    }

    /**
     * Sets sub_account
     *
     * @param string $sub_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_SUB_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSubAccount($sub_account)
    {
        $this->container['sub_account'] = $sub_account;

        return $this;
    }

    /**
     * Gets debit_credit
     *
     * @return string
     */
    public function getDebitCredit()
    {
        return $this->container['debit_credit'];
    }

    /**
     * Sets debit_credit
     *
     * @param string $debit_credit <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_DR_CR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDebitCredit($debit_credit)
    {
        $this->container['debit_credit'] = $debit_credit;

        return $this;
    }

    /**
     * Gets event_job
     *
     * @return int
     */
    public function getEventJob()
    {
        return $this->container['event_job'];
    }

    /**
     * Sets event_job
     *
     * @param int $event_job <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_EVT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEventJob($event_job)
    {
        $this->container['event_job'] = $event_job;

        return $this;
    }

    /**
     * Gets function
     *
     * @return int
     */
    public function getFunction()
    {
        return $this->container['function'];
    }

    /**
     * Sets function
     *
     * @param int $function <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_FUNC_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFunction($function)
    {
        $this->container['function'] = $function;

        return $this;
    }

    /**
     * Gets amount
     *
     * @return double
     */
    public function getAmount()
    {
        return $this->container['amount'];
    }

    /**
     * Sets amount
     *
     * @param double $amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAmount($amount)
    {
        $this->container['amount'] = $amount;

        return $this;
    }

    /**
     * Gets asset
     *
     * @return string
     */
    public function getAsset()
    {
        return $this->container['asset'];
    }

    /**
     * Sets asset
     *
     * @param string $asset <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_ASSET_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAsset($asset)
    {
        $this->container['asset'] = $asset;

        return $this;
    }

    /**
     * Gets transaction_analysis1
     *
     * @return string
     */
    public function getTransactionAnalysis1()
    {
        return $this->container['transaction_analysis1'];
    }

    /**
     * Sets transaction_analysis1
     *
     * @param string $transaction_analysis1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_TRANS_ANAL_01  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 15  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTransactionAnalysis1($transaction_analysis1)
    {
        $this->container['transaction_analysis1'] = $transaction_analysis1;

        return $this;
    }

    /**
     * Gets transaction_analysis2
     *
     * @return string
     */
    public function getTransactionAnalysis2()
    {
        return $this->container['transaction_analysis2'];
    }

    /**
     * Sets transaction_analysis2
     *
     * @param string $transaction_analysis2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_TRANS_ANAL_02  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 15  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTransactionAnalysis2($transaction_analysis2)
    {
        $this->container['transaction_analysis2'] = $transaction_analysis2;

        return $this;
    }

    /**
     * Gets transaction_analysis3
     *
     * @return string
     */
    public function getTransactionAnalysis3()
    {
        return $this->container['transaction_analysis3'];
    }

    /**
     * Sets transaction_analysis3
     *
     * @param string $transaction_analysis3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_TRANS_ANAL_03  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 15  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTransactionAnalysis3($transaction_analysis3)
    {
        $this->container['transaction_analysis3'] = $transaction_analysis3;

        return $this;
    }

    /**
     * Gets percent
     *
     * @return double
     */
    public function getPercent()
    {
        return $this->container['percent'];
    }

    /**
     * Sets percent
     *
     * @param double $percent <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_PCT_D  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 134  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPercent($percent)
    {
        $this->container['percent'] = $percent;

        return $this;
    }

    /**
     * Gets transaction_analysis4
     *
     * @return string
     */
    public function getTransactionAnalysis4()
    {
        return $this->container['transaction_analysis4'];
    }

    /**
     * Sets transaction_analysis4
     *
     * @param string $transaction_analysis4 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_TRANS_ANAL_04  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 15  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTransactionAnalysis4($transaction_analysis4)
    {
        $this->container['transaction_analysis4'] = $transaction_analysis4;

        return $this;
    }

    /**
     * Gets transaction_analysis5
     *
     * @return string
     */
    public function getTransactionAnalysis5()
    {
        return $this->container['transaction_analysis5'];
    }

    /**
     * Sets transaction_analysis5
     *
     * @param string $transaction_analysis5 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_TRANS_ANAL_05  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 15  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTransactionAnalysis5($transaction_analysis5)
    {
        $this->container['transaction_analysis5'] = $transaction_analysis5;

        return $this;
    }

    /**
     * Gets transaction_analysis6
     *
     * @return string
     */
    public function getTransactionAnalysis6()
    {
        return $this->container['transaction_analysis6'];
    }

    /**
     * Sets transaction_analysis6
     *
     * @param string $transaction_analysis6 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_TRANS_ANAL_06  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 15  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTransactionAnalysis6($transaction_analysis6)
    {
        $this->container['transaction_analysis6'] = $transaction_analysis6;

        return $this;
    }

    /**
     * Gets division
     *
     * @return string
     */
    public function getDivision()
    {
        return $this->container['division'];
    }

    /**
     * Sets division
     *
     * @param string $division <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_DIVISION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDivision($division)
    {
        $this->container['division'] = $division;

        return $this;
    }

    /**
     * Gets management_report_code
     *
     * @return string
     */
    public function getManagementReportCode()
    {
        return $this->container['management_report_code'];
    }

    /**
     * Sets management_report_code
     *
     * @param string $management_report_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> PO102_MGMT_RPT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setManagementReportCode($management_report_code)
    {
        $this->container['management_report_code'] = $management_report_code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


