<?php
/**
 * FunctionSeatingChartsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * FunctionSeatingChartsModel Class Doc Comment
 *
 * @category Class
 * @description ...
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FunctionSeatingChartsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'FunctionSeatingChartsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'sequence_number' => 'int',
        'org_code' => 'string',
        'event_id' => 'int',
        'function_id' => 'int',
        'inventory_code' => 'string',
        'group_code_a' => 'string',
        'description' => 'string',
        'capacity' => 'int',
        'fill_method' => 'int',
        'fill_validation' => 'int',
        'fill_registration_type' => 'string',
        'fill_account_code' => 'string',
        'fill_sequence' => 'int',
        'entered_on' => '\DateTime',
        'entered_by' => 'string',
        'changed_on' => '\DateTime',
        'changed_by' => 'string',
        'group_code_b' => 'string',
        'group_code_c' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'sequence_number' => 'int32',
        'org_code' => null,
        'event_id' => 'int32',
        'function_id' => 'int32',
        'inventory_code' => null,
        'group_code_a' => null,
        'description' => null,
        'capacity' => 'int32',
        'fill_method' => 'int32',
        'fill_validation' => 'int32',
        'fill_registration_type' => null,
        'fill_account_code' => null,
        'fill_sequence' => 'int32',
        'entered_on' => 'date-time',
        'entered_by' => null,
        'changed_on' => 'date-time',
        'changed_by' => null,
        'group_code_b' => null,
        'group_code_c' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'sequence_number' => 'SequenceNumber',
        'org_code' => 'OrgCode',
        'event_id' => 'EventId',
        'function_id' => 'FunctionId',
        'inventory_code' => 'InventoryCode',
        'group_code_a' => 'GroupCodeA',
        'description' => 'Description',
        'capacity' => 'Capacity',
        'fill_method' => 'FillMethod',
        'fill_validation' => 'FillValidation',
        'fill_registration_type' => 'FillRegistrationType',
        'fill_account_code' => 'FillAccountCode',
        'fill_sequence' => 'FillSequence',
        'entered_on' => 'EnteredOn',
        'entered_by' => 'EnteredBy',
        'changed_on' => 'ChangedOn',
        'changed_by' => 'ChangedBy',
        'group_code_b' => 'GroupCodeB',
        'group_code_c' => 'GroupCodeC'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'sequence_number' => 'setSequenceNumber',
        'org_code' => 'setOrgCode',
        'event_id' => 'setEventId',
        'function_id' => 'setFunctionId',
        'inventory_code' => 'setInventoryCode',
        'group_code_a' => 'setGroupCodeA',
        'description' => 'setDescription',
        'capacity' => 'setCapacity',
        'fill_method' => 'setFillMethod',
        'fill_validation' => 'setFillValidation',
        'fill_registration_type' => 'setFillRegistrationType',
        'fill_account_code' => 'setFillAccountCode',
        'fill_sequence' => 'setFillSequence',
        'entered_on' => 'setEnteredOn',
        'entered_by' => 'setEnteredBy',
        'changed_on' => 'setChangedOn',
        'changed_by' => 'setChangedBy',
        'group_code_b' => 'setGroupCodeB',
        'group_code_c' => 'setGroupCodeC'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'sequence_number' => 'getSequenceNumber',
        'org_code' => 'getOrgCode',
        'event_id' => 'getEventId',
        'function_id' => 'getFunctionId',
        'inventory_code' => 'getInventoryCode',
        'group_code_a' => 'getGroupCodeA',
        'description' => 'getDescription',
        'capacity' => 'getCapacity',
        'fill_method' => 'getFillMethod',
        'fill_validation' => 'getFillValidation',
        'fill_registration_type' => 'getFillRegistrationType',
        'fill_account_code' => 'getFillAccountCode',
        'fill_sequence' => 'getFillSequence',
        'entered_on' => 'getEnteredOn',
        'entered_by' => 'getEnteredBy',
        'changed_on' => 'getChangedOn',
        'changed_by' => 'getChangedBy',
        'group_code_b' => 'getGroupCodeB',
        'group_code_c' => 'getGroupCodeC'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['sequence_number'] = isset($data['sequence_number']) ? $data['sequence_number'] : null;
        $this->container['org_code'] = isset($data['org_code']) ? $data['org_code'] : null;
        $this->container['event_id'] = isset($data['event_id']) ? $data['event_id'] : null;
        $this->container['function_id'] = isset($data['function_id']) ? $data['function_id'] : null;
        $this->container['inventory_code'] = isset($data['inventory_code']) ? $data['inventory_code'] : null;
        $this->container['group_code_a'] = isset($data['group_code_a']) ? $data['group_code_a'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['capacity'] = isset($data['capacity']) ? $data['capacity'] : null;
        $this->container['fill_method'] = isset($data['fill_method']) ? $data['fill_method'] : null;
        $this->container['fill_validation'] = isset($data['fill_validation']) ? $data['fill_validation'] : null;
        $this->container['fill_registration_type'] = isset($data['fill_registration_type']) ? $data['fill_registration_type'] : null;
        $this->container['fill_account_code'] = isset($data['fill_account_code']) ? $data['fill_account_code'] : null;
        $this->container['fill_sequence'] = isset($data['fill_sequence']) ? $data['fill_sequence'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['group_code_b'] = isset($data['group_code_b']) ? $data['group_code_b'] : null;
        $this->container['group_code_c'] = isset($data['group_code_c']) ? $data['group_code_c'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['sequence_number'] === null) {
            $invalidProperties[] = "'sequence_number' can't be null";
        }
        if ($this->container['org_code'] === null) {
            $invalidProperties[] = "'org_code' can't be null";
        }
        if ($this->container['event_id'] === null) {
            $invalidProperties[] = "'event_id' can't be null";
        }
        if ($this->container['function_id'] === null) {
            $invalidProperties[] = "'function_id' can't be null";
        }
        if ($this->container['inventory_code'] === null) {
            $invalidProperties[] = "'inventory_code' can't be null";
        }
        if ($this->container['group_code_a'] === null) {
            $invalidProperties[] = "'group_code_a' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['capacity'] === null) {
            $invalidProperties[] = "'capacity' can't be null";
        }
        if ($this->container['fill_method'] === null) {
            $invalidProperties[] = "'fill_method' can't be null";
        }
        if ($this->container['fill_validation'] === null) {
            $invalidProperties[] = "'fill_validation' can't be null";
        }
        if ($this->container['fill_registration_type'] === null) {
            $invalidProperties[] = "'fill_registration_type' can't be null";
        }
        if ($this->container['fill_account_code'] === null) {
            $invalidProperties[] = "'fill_account_code' can't be null";
        }
        if ($this->container['fill_sequence'] === null) {
            $invalidProperties[] = "'fill_sequence' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['group_code_b'] === null) {
            $invalidProperties[] = "'group_code_b' can't be null";
        }
        if ($this->container['group_code_c'] === null) {
            $invalidProperties[] = "'group_code_c' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets sequence_number
     *
     * @return int
     */
    public function getSequenceNumber()
    {
        return $this->container['sequence_number'];
    }

    /**
     * Sets sequence_number
     *
     * @param int $sequence_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Primary key  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> ER260_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSequenceNumber($sequence_number)
    {
        $this->container['sequence_number'] = $sequence_number;

        return $this;
    }

    /**
     * Gets org_code
     *
     * @return string
     */
    public function getOrgCode()
    {
        return $this->container['org_code'];
    }

    /**
     * Sets org_code
     *
     * @param string $org_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrgCode($org_code)
    {
        $this->container['org_code'] = $org_code;

        return $this;
    }

    /**
     * Gets event_id
     *
     * @return int
     */
    public function getEventId()
    {
        return $this->container['event_id'];
    }

    /**
     * Sets event_id
     *
     * @param int $event_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_EVT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEventId($event_id)
    {
        $this->container['event_id'] = $event_id;

        return $this;
    }

    /**
     * Gets function_id
     *
     * @return int
     */
    public function getFunctionId()
    {
        return $this->container['function_id'];
    }

    /**
     * Sets function_id
     *
     * @param int $function_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_FUNC_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFunctionId($function_id)
    {
        $this->container['function_id'] = $function_id;

        return $this;
    }

    /**
     * Gets inventory_code
     *
     * @return string
     */
    public function getInventoryCode()
    {
        return $this->container['inventory_code'];
    }

    /**
     * Sets inventory_code
     *
     * @param string $inventory_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_INVEN_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 15  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInventoryCode($inventory_code)
    {
        $this->container['inventory_code'] = $inventory_code;

        return $this;
    }

    /**
     * Gets group_code_a
     *
     * @return string
     */
    public function getGroupCodeA()
    {
        return $this->container['group_code_a'];
    }

    /**
     * Sets group_code_a
     *
     * @param string $group_code_a <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_GROUP_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 25  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGroupCodeA($group_code_a)
    {
        $this->container['group_code_a'] = $group_code_a;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_DESCRIPTION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets capacity
     *
     * @return int
     */
    public function getCapacity()
    {
        return $this->container['capacity'];
    }

    /**
     * Sets capacity
     *
     * @param int $capacity <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_CAPACITY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCapacity($capacity)
    {
        $this->container['capacity'] = $capacity;

        return $this;
    }

    /**
     * Gets fill_method
     *
     * @return int
     */
    public function getFillMethod()
    {
        return $this->container['fill_method'];
    }

    /**
     * Sets fill_method
     *
     * @param int $fill_method <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Required field, options are \"Auto-Fill\" or \"Manual Assign\"  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> ER260_FILL_METHOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFillMethod($fill_method)
    {
        $this->container['fill_method'] = $fill_method;

        return $this;
    }

    /**
     * Gets fill_validation
     *
     * @return int
     */
    public function getFillValidation()
    {
        return $this->container['fill_validation'];
    }

    /**
     * Sets fill_validation
     *
     * @param int $fill_validation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_FILL_VALIDATION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFillValidation($fill_validation)
    {
        $this->container['fill_validation'] = $fill_validation;

        return $this;
    }

    /**
     * Gets fill_registration_type
     *
     * @return string
     */
    public function getFillRegistrationType()
    {
        return $this->container['fill_registration_type'];
    }

    /**
     * Sets fill_registration_type
     *
     * @param string $fill_registration_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_FILL_REG_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFillRegistrationType($fill_registration_type)
    {
        $this->container['fill_registration_type'] = $fill_registration_type;

        return $this;
    }

    /**
     * Gets fill_account_code
     *
     * @return string
     */
    public function getFillAccountCode()
    {
        return $this->container['fill_account_code'];
    }

    /**
     * Sets fill_account_code
     *
     * @param string $fill_account_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_FILL_ACCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFillAccountCode($fill_account_code)
    {
        $this->container['fill_account_code'] = $fill_account_code;

        return $this;
    }

    /**
     * Gets fill_sequence
     *
     * @return int
     */
    public function getFillSequence()
    {
        return $this->container['fill_sequence'];
    }

    /**
     * Sets fill_sequence
     *
     * @param int $fill_sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_FILL_SEQUENCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFillSequence($fill_sequence)
    {
        $this->container['fill_sequence'] = $fill_sequence;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets group_code_b
     *
     * @return string
     */
    public function getGroupCodeB()
    {
        return $this->container['group_code_b'];
    }

    /**
     * Sets group_code_b
     *
     * @param string $group_code_b <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_GROUP_CODE_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 25  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGroupCodeB($group_code_b)
    {
        $this->container['group_code_b'] = $group_code_b;

        return $this;
    }

    /**
     * Gets group_code_c
     *
     * @return string
     */
    public function getGroupCodeC()
    {
        return $this->container['group_code_c'];
    }

    /**
     * Sets group_code_c
     *
     * @param string $group_code_c <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> ER260_GROUP_CODE_3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 25  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGroupCodeC($group_code_c)
    {
        $this->container['group_code_c'] = $group_code_c;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


