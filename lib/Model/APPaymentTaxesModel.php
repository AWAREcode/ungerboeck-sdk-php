<?php
/**
 * APPaymentTaxesModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * APPaymentTaxesModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class APPaymentTaxesModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'APPaymentTaxesModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization_code' => 'string',
        'sequence' => 'int',
        'voucher' => 'int',
        'voucher_tax_seq' => 'int',
        'tax_resource_type' => 'string',
        'tax_resource_code' => 'string',
        'voucher_amount_to_tax' => 'double',
        'voucher_tax_amount' => 'double',
        'voucher_tax_withheld' => 'double',
        'discount_tax_amount' => 'double',
        'gl_account_code' => 'string',
        'rounding_flag' => 'string',
        'exclusive_tax_flag' => 'string',
        'entered_on' => '\DateTime',
        'entered_by' => 'string',
        'changed_on' => '\DateTime',
        'changed_by' => 'string',
        'discount_amount' => 'double',
        'payment_tax_status' => 'string',
        'invoice_amount_with_tax' => 'double',
        'fc_voucher_amount_to_tax' => 'double',
        'fc_voucher_tax_amount' => 'double',
        'fc_voucher_tax_withheld' => 'double',
        'fc_discount_tax_amount' => 'double',
        'fc_discount_amount' => 'double',
        'fc_invoice_amount_with_tax' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization_code' => null,
        'sequence' => 'int32',
        'voucher' => 'int32',
        'voucher_tax_seq' => 'int32',
        'tax_resource_type' => null,
        'tax_resource_code' => null,
        'voucher_amount_to_tax' => 'double',
        'voucher_tax_amount' => 'double',
        'voucher_tax_withheld' => 'double',
        'discount_tax_amount' => 'double',
        'gl_account_code' => null,
        'rounding_flag' => null,
        'exclusive_tax_flag' => null,
        'entered_on' => 'date-time',
        'entered_by' => null,
        'changed_on' => 'date-time',
        'changed_by' => null,
        'discount_amount' => 'double',
        'payment_tax_status' => null,
        'invoice_amount_with_tax' => 'double',
        'fc_voucher_amount_to_tax' => 'double',
        'fc_voucher_tax_amount' => 'double',
        'fc_voucher_tax_withheld' => 'double',
        'fc_discount_tax_amount' => 'double',
        'fc_discount_amount' => 'double',
        'fc_invoice_amount_with_tax' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization_code' => 'OrganizationCode',
        'sequence' => 'Sequence',
        'voucher' => 'Voucher',
        'voucher_tax_seq' => 'VoucherTaxSeq',
        'tax_resource_type' => 'TaxResourceType',
        'tax_resource_code' => 'TaxResourceCode',
        'voucher_amount_to_tax' => 'VoucherAmountToTax',
        'voucher_tax_amount' => 'VoucherTaxAmount',
        'voucher_tax_withheld' => 'VoucherTaxWithheld',
        'discount_tax_amount' => 'DiscountTaxAmount',
        'gl_account_code' => 'GLAccountCode',
        'rounding_flag' => 'RoundingFlag',
        'exclusive_tax_flag' => 'ExclusiveTaxFlag',
        'entered_on' => 'EnteredOn',
        'entered_by' => 'EnteredBy',
        'changed_on' => 'ChangedOn',
        'changed_by' => 'ChangedBy',
        'discount_amount' => 'DiscountAmount',
        'payment_tax_status' => 'PaymentTaxStatus',
        'invoice_amount_with_tax' => 'InvoiceAmountWithTax',
        'fc_voucher_amount_to_tax' => 'FCVoucherAmountToTax',
        'fc_voucher_tax_amount' => 'FCVoucherTaxAmount',
        'fc_voucher_tax_withheld' => 'FCVoucherTaxWithheld',
        'fc_discount_tax_amount' => 'FCDiscountTaxAmount',
        'fc_discount_amount' => 'FCDiscountAmount',
        'fc_invoice_amount_with_tax' => 'FCInvoiceAmountWithTax'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization_code' => 'setOrganizationCode',
        'sequence' => 'setSequence',
        'voucher' => 'setVoucher',
        'voucher_tax_seq' => 'setVoucherTaxSeq',
        'tax_resource_type' => 'setTaxResourceType',
        'tax_resource_code' => 'setTaxResourceCode',
        'voucher_amount_to_tax' => 'setVoucherAmountToTax',
        'voucher_tax_amount' => 'setVoucherTaxAmount',
        'voucher_tax_withheld' => 'setVoucherTaxWithheld',
        'discount_tax_amount' => 'setDiscountTaxAmount',
        'gl_account_code' => 'setGlAccountCode',
        'rounding_flag' => 'setRoundingFlag',
        'exclusive_tax_flag' => 'setExclusiveTaxFlag',
        'entered_on' => 'setEnteredOn',
        'entered_by' => 'setEnteredBy',
        'changed_on' => 'setChangedOn',
        'changed_by' => 'setChangedBy',
        'discount_amount' => 'setDiscountAmount',
        'payment_tax_status' => 'setPaymentTaxStatus',
        'invoice_amount_with_tax' => 'setInvoiceAmountWithTax',
        'fc_voucher_amount_to_tax' => 'setFcVoucherAmountToTax',
        'fc_voucher_tax_amount' => 'setFcVoucherTaxAmount',
        'fc_voucher_tax_withheld' => 'setFcVoucherTaxWithheld',
        'fc_discount_tax_amount' => 'setFcDiscountTaxAmount',
        'fc_discount_amount' => 'setFcDiscountAmount',
        'fc_invoice_amount_with_tax' => 'setFcInvoiceAmountWithTax'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization_code' => 'getOrganizationCode',
        'sequence' => 'getSequence',
        'voucher' => 'getVoucher',
        'voucher_tax_seq' => 'getVoucherTaxSeq',
        'tax_resource_type' => 'getTaxResourceType',
        'tax_resource_code' => 'getTaxResourceCode',
        'voucher_amount_to_tax' => 'getVoucherAmountToTax',
        'voucher_tax_amount' => 'getVoucherTaxAmount',
        'voucher_tax_withheld' => 'getVoucherTaxWithheld',
        'discount_tax_amount' => 'getDiscountTaxAmount',
        'gl_account_code' => 'getGlAccountCode',
        'rounding_flag' => 'getRoundingFlag',
        'exclusive_tax_flag' => 'getExclusiveTaxFlag',
        'entered_on' => 'getEnteredOn',
        'entered_by' => 'getEnteredBy',
        'changed_on' => 'getChangedOn',
        'changed_by' => 'getChangedBy',
        'discount_amount' => 'getDiscountAmount',
        'payment_tax_status' => 'getPaymentTaxStatus',
        'invoice_amount_with_tax' => 'getInvoiceAmountWithTax',
        'fc_voucher_amount_to_tax' => 'getFcVoucherAmountToTax',
        'fc_voucher_tax_amount' => 'getFcVoucherTaxAmount',
        'fc_voucher_tax_withheld' => 'getFcVoucherTaxWithheld',
        'fc_discount_tax_amount' => 'getFcDiscountTaxAmount',
        'fc_discount_amount' => 'getFcDiscountAmount',
        'fc_invoice_amount_with_tax' => 'getFcInvoiceAmountWithTax'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['sequence'] = isset($data['sequence']) ? $data['sequence'] : null;
        $this->container['voucher'] = isset($data['voucher']) ? $data['voucher'] : null;
        $this->container['voucher_tax_seq'] = isset($data['voucher_tax_seq']) ? $data['voucher_tax_seq'] : null;
        $this->container['tax_resource_type'] = isset($data['tax_resource_type']) ? $data['tax_resource_type'] : null;
        $this->container['tax_resource_code'] = isset($data['tax_resource_code']) ? $data['tax_resource_code'] : null;
        $this->container['voucher_amount_to_tax'] = isset($data['voucher_amount_to_tax']) ? $data['voucher_amount_to_tax'] : null;
        $this->container['voucher_tax_amount'] = isset($data['voucher_tax_amount']) ? $data['voucher_tax_amount'] : null;
        $this->container['voucher_tax_withheld'] = isset($data['voucher_tax_withheld']) ? $data['voucher_tax_withheld'] : null;
        $this->container['discount_tax_amount'] = isset($data['discount_tax_amount']) ? $data['discount_tax_amount'] : null;
        $this->container['gl_account_code'] = isset($data['gl_account_code']) ? $data['gl_account_code'] : null;
        $this->container['rounding_flag'] = isset($data['rounding_flag']) ? $data['rounding_flag'] : null;
        $this->container['exclusive_tax_flag'] = isset($data['exclusive_tax_flag']) ? $data['exclusive_tax_flag'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['discount_amount'] = isset($data['discount_amount']) ? $data['discount_amount'] : null;
        $this->container['payment_tax_status'] = isset($data['payment_tax_status']) ? $data['payment_tax_status'] : null;
        $this->container['invoice_amount_with_tax'] = isset($data['invoice_amount_with_tax']) ? $data['invoice_amount_with_tax'] : null;
        $this->container['fc_voucher_amount_to_tax'] = isset($data['fc_voucher_amount_to_tax']) ? $data['fc_voucher_amount_to_tax'] : null;
        $this->container['fc_voucher_tax_amount'] = isset($data['fc_voucher_tax_amount']) ? $data['fc_voucher_tax_amount'] : null;
        $this->container['fc_voucher_tax_withheld'] = isset($data['fc_voucher_tax_withheld']) ? $data['fc_voucher_tax_withheld'] : null;
        $this->container['fc_discount_tax_amount'] = isset($data['fc_discount_tax_amount']) ? $data['fc_discount_tax_amount'] : null;
        $this->container['fc_discount_amount'] = isset($data['fc_discount_amount']) ? $data['fc_discount_amount'] : null;
        $this->container['fc_invoice_amount_with_tax'] = isset($data['fc_invoice_amount_with_tax']) ? $data['fc_invoice_amount_with_tax'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['sequence'] === null) {
            $invalidProperties[] = "'sequence' can't be null";
        }
        if ($this->container['voucher'] === null) {
            $invalidProperties[] = "'voucher' can't be null";
        }
        if ($this->container['voucher_tax_seq'] === null) {
            $invalidProperties[] = "'voucher_tax_seq' can't be null";
        }
        if ($this->container['tax_resource_type'] === null) {
            $invalidProperties[] = "'tax_resource_type' can't be null";
        }
        if ($this->container['tax_resource_code'] === null) {
            $invalidProperties[] = "'tax_resource_code' can't be null";
        }
        if ($this->container['voucher_amount_to_tax'] === null) {
            $invalidProperties[] = "'voucher_amount_to_tax' can't be null";
        }
        if ($this->container['voucher_tax_amount'] === null) {
            $invalidProperties[] = "'voucher_tax_amount' can't be null";
        }
        if ($this->container['voucher_tax_withheld'] === null) {
            $invalidProperties[] = "'voucher_tax_withheld' can't be null";
        }
        if ($this->container['discount_tax_amount'] === null) {
            $invalidProperties[] = "'discount_tax_amount' can't be null";
        }
        if ($this->container['gl_account_code'] === null) {
            $invalidProperties[] = "'gl_account_code' can't be null";
        }
        if ($this->container['rounding_flag'] === null) {
            $invalidProperties[] = "'rounding_flag' can't be null";
        }
        if ($this->container['exclusive_tax_flag'] === null) {
            $invalidProperties[] = "'exclusive_tax_flag' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['discount_amount'] === null) {
            $invalidProperties[] = "'discount_amount' can't be null";
        }
        if ($this->container['payment_tax_status'] === null) {
            $invalidProperties[] = "'payment_tax_status' can't be null";
        }
        if ($this->container['invoice_amount_with_tax'] === null) {
            $invalidProperties[] = "'invoice_amount_with_tax' can't be null";
        }
        if ($this->container['fc_voucher_amount_to_tax'] === null) {
            $invalidProperties[] = "'fc_voucher_amount_to_tax' can't be null";
        }
        if ($this->container['fc_voucher_tax_amount'] === null) {
            $invalidProperties[] = "'fc_voucher_tax_amount' can't be null";
        }
        if ($this->container['fc_voucher_tax_withheld'] === null) {
            $invalidProperties[] = "'fc_voucher_tax_withheld' can't be null";
        }
        if ($this->container['fc_discount_tax_amount'] === null) {
            $invalidProperties[] = "'fc_discount_tax_amount' can't be null";
        }
        if ($this->container['fc_discount_amount'] === null) {
            $invalidProperties[] = "'fc_discount_amount' can't be null";
        }
        if ($this->container['fc_invoice_amount_with_tax'] === null) {
            $invalidProperties[] = "'fc_invoice_amount_with_tax' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets sequence
     *
     * @return int
     */
    public function getSequence()
    {
        return $this->container['sequence'];
    }

    /**
     * Sets sequence
     *
     * @param int $sequence <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSequence($sequence)
    {
        $this->container['sequence'] = $sequence;

        return $this;
    }

    /**
     * Gets voucher
     *
     * @return int
     */
    public function getVoucher()
    {
        return $this->container['voucher'];
    }

    /**
     * Sets voucher
     *
     * @param int $voucher <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_VOUCHER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setVoucher($voucher)
    {
        $this->container['voucher'] = $voucher;

        return $this;
    }

    /**
     * Gets voucher_tax_seq
     *
     * @return int
     */
    public function getVoucherTaxSeq()
    {
        return $this->container['voucher_tax_seq'];
    }

    /**
     * Sets voucher_tax_seq
     *
     * @param int $voucher_tax_seq <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_VOUCHER_TAX_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setVoucherTaxSeq($voucher_tax_seq)
    {
        $this->container['voucher_tax_seq'] = $voucher_tax_seq;

        return $this;
    }

    /**
     * Gets tax_resource_type
     *
     * @return string
     */
    public function getTaxResourceType()
    {
        return $this->container['tax_resource_type'];
    }

    /**
     * Sets tax_resource_type
     *
     * @param string $tax_resource_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_TAX_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxResourceType($tax_resource_type)
    {
        $this->container['tax_resource_type'] = $tax_resource_type;

        return $this;
    }

    /**
     * Gets tax_resource_code
     *
     * @return string
     */
    public function getTaxResourceCode()
    {
        return $this->container['tax_resource_code'];
    }

    /**
     * Sets tax_resource_code
     *
     * @param string $tax_resource_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_TAX_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTaxResourceCode($tax_resource_code)
    {
        $this->container['tax_resource_code'] = $tax_resource_code;

        return $this;
    }

    /**
     * Gets voucher_amount_to_tax
     *
     * @return double
     */
    public function getVoucherAmountToTax()
    {
        return $this->container['voucher_amount_to_tax'];
    }

    /**
     * Sets voucher_amount_to_tax
     *
     * @param double $voucher_amount_to_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_AMT_TO_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setVoucherAmountToTax($voucher_amount_to_tax)
    {
        $this->container['voucher_amount_to_tax'] = $voucher_amount_to_tax;

        return $this;
    }

    /**
     * Gets voucher_tax_amount
     *
     * @return double
     */
    public function getVoucherTaxAmount()
    {
        return $this->container['voucher_tax_amount'];
    }

    /**
     * Sets voucher_tax_amount
     *
     * @param double $voucher_tax_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_TAX_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setVoucherTaxAmount($voucher_tax_amount)
    {
        $this->container['voucher_tax_amount'] = $voucher_tax_amount;

        return $this;
    }

    /**
     * Gets voucher_tax_withheld
     *
     * @return double
     */
    public function getVoucherTaxWithheld()
    {
        return $this->container['voucher_tax_withheld'];
    }

    /**
     * Sets voucher_tax_withheld
     *
     * @param double $voucher_tax_withheld <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_TAX_WITHHELD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setVoucherTaxWithheld($voucher_tax_withheld)
    {
        $this->container['voucher_tax_withheld'] = $voucher_tax_withheld;

        return $this;
    }

    /**
     * Gets discount_tax_amount
     *
     * @return double
     */
    public function getDiscountTaxAmount()
    {
        return $this->container['discount_tax_amount'];
    }

    /**
     * Sets discount_tax_amount
     *
     * @param double $discount_tax_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_TAX_DISCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDiscountTaxAmount($discount_tax_amount)
    {
        $this->container['discount_tax_amount'] = $discount_tax_amount;

        return $this;
    }

    /**
     * Gets gl_account_code
     *
     * @return string
     */
    public function getGlAccountCode()
    {
        return $this->container['gl_account_code'];
    }

    /**
     * Sets gl_account_code
     *
     * @param string $gl_account_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_GL_ACCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlAccountCode($gl_account_code)
    {
        $this->container['gl_account_code'] = $gl_account_code;

        return $this;
    }

    /**
     * Gets rounding_flag
     *
     * @return string
     */
    public function getRoundingFlag()
    {
        return $this->container['rounding_flag'];
    }

    /**
     * Sets rounding_flag
     *
     * @param string $rounding_flag <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_ROUND  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRoundingFlag($rounding_flag)
    {
        $this->container['rounding_flag'] = $rounding_flag;

        return $this;
    }

    /**
     * Gets exclusive_tax_flag
     *
     * @return string
     */
    public function getExclusiveTaxFlag()
    {
        return $this->container['exclusive_tax_flag'];
    }

    /**
     * Sets exclusive_tax_flag
     *
     * @param string $exclusive_tax_flag <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_EXCLUSIVE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExclusiveTaxFlag($exclusive_tax_flag)
    {
        $this->container['exclusive_tax_flag'] = $exclusive_tax_flag;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets discount_amount
     *
     * @return double
     */
    public function getDiscountAmount()
    {
        return $this->container['discount_amount'];
    }

    /**
     * Sets discount_amount
     *
     * @param double $discount_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_DISCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDiscountAmount($discount_amount)
    {
        $this->container['discount_amount'] = $discount_amount;

        return $this;
    }

    /**
     * Gets payment_tax_status
     *
     * @return string
     */
    public function getPaymentTaxStatus()
    {
        return $this->container['payment_tax_status'];
    }

    /**
     * Sets payment_tax_status
     *
     * @param string $payment_tax_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPaymentTaxStatus($payment_tax_status)
    {
        $this->container['payment_tax_status'] = $payment_tax_status;

        return $this;
    }

    /**
     * Gets invoice_amount_with_tax
     *
     * @return double
     */
    public function getInvoiceAmountWithTax()
    {
        return $this->container['invoice_amount_with_tax'];
    }

    /**
     * Sets invoice_amount_with_tax
     *
     * @param double $invoice_amount_with_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_AMT_INC_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInvoiceAmountWithTax($invoice_amount_with_tax)
    {
        $this->container['invoice_amount_with_tax'] = $invoice_amount_with_tax;

        return $this;
    }

    /**
     * Gets fc_voucher_amount_to_tax
     *
     * @return double
     */
    public function getFcVoucherAmountToTax()
    {
        return $this->container['fc_voucher_amount_to_tax'];
    }

    /**
     * Sets fc_voucher_amount_to_tax
     *
     * @param double $fc_voucher_amount_to_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_FC_AMT_TO_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcVoucherAmountToTax($fc_voucher_amount_to_tax)
    {
        $this->container['fc_voucher_amount_to_tax'] = $fc_voucher_amount_to_tax;

        return $this;
    }

    /**
     * Gets fc_voucher_tax_amount
     *
     * @return double
     */
    public function getFcVoucherTaxAmount()
    {
        return $this->container['fc_voucher_tax_amount'];
    }

    /**
     * Sets fc_voucher_tax_amount
     *
     * @param double $fc_voucher_tax_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_FC_TAX_AMT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcVoucherTaxAmount($fc_voucher_tax_amount)
    {
        $this->container['fc_voucher_tax_amount'] = $fc_voucher_tax_amount;

        return $this;
    }

    /**
     * Gets fc_voucher_tax_withheld
     *
     * @return double
     */
    public function getFcVoucherTaxWithheld()
    {
        return $this->container['fc_voucher_tax_withheld'];
    }

    /**
     * Sets fc_voucher_tax_withheld
     *
     * @param double $fc_voucher_tax_withheld <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_FC_TAX_WITHHELD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcVoucherTaxWithheld($fc_voucher_tax_withheld)
    {
        $this->container['fc_voucher_tax_withheld'] = $fc_voucher_tax_withheld;

        return $this;
    }

    /**
     * Gets fc_discount_tax_amount
     *
     * @return double
     */
    public function getFcDiscountTaxAmount()
    {
        return $this->container['fc_discount_tax_amount'];
    }

    /**
     * Sets fc_discount_tax_amount
     *
     * @param double $fc_discount_tax_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_FC_TAX_DISCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcDiscountTaxAmount($fc_discount_tax_amount)
    {
        $this->container['fc_discount_tax_amount'] = $fc_discount_tax_amount;

        return $this;
    }

    /**
     * Gets fc_discount_amount
     *
     * @return double
     */
    public function getFcDiscountAmount()
    {
        return $this->container['fc_discount_amount'];
    }

    /**
     * Sets fc_discount_amount
     *
     * @param double $fc_discount_amount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_FC_DISCOUNT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcDiscountAmount($fc_discount_amount)
    {
        $this->container['fc_discount_amount'] = $fc_discount_amount;

        return $this;
    }

    /**
     * Gets fc_invoice_amount_with_tax
     *
     * @return double
     */
    public function getFcInvoiceAmountWithTax()
    {
        return $this->container['fc_invoice_amount_with_tax'];
    }

    /**
     * Sets fc_invoice_amount_with_tax
     *
     * @param double $fc_invoice_amount_with_tax <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> AP108_FC_AMT_INC_TAX  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFcInvoiceAmountWithTax($fc_invoice_amount_with_tax)
    {
        $this->container['fc_invoice_amount_with_tax'] = $fc_invoice_amount_with_tax;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


