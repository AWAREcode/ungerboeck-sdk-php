<?php
/**
 * BankAccountsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * BankAccountsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class BankAccountsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'BankAccountsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'code' => 'string',
        'organization_code' => 'string',
        'description' => 'string',
        'account_id' => 'string',
        'next_check' => 'int',
        'check_stub_limit' => 'int',
        'gl_account' => 'string',
        'gl_sub_account' => 'string',
        'supplier' => 'string',
        'status' => 'string',
        'default_ap' => 'string',
        'default_ar' => 'string',
        'use_for_ap' => 'string',
        'use_for_ar' => 'string',
        'entered_on' => '\DateTime',
        'entered_by' => 'string',
        'changed_on' => '\DateTime',
        'changed_by' => 'string',
        'multi_currency' => 'string',
        'currency' => 'string',
        'eft' => 'int',
        'check' => 'int',
        'iban' => 'string',
        'bic' => 'string',
        'user_text01' => 'string',
        'user_text02' => 'string',
        'bank_statement_import' => 'int',
        'boleto_bank_code' => 'string',
        'boleto_branch_code' => 'string',
        'boleto_bank_flag' => 'string',
        'boleto_portfolio_code' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'code' => null,
        'organization_code' => null,
        'description' => null,
        'account_id' => null,
        'next_check' => 'int32',
        'check_stub_limit' => 'int32',
        'gl_account' => null,
        'gl_sub_account' => null,
        'supplier' => null,
        'status' => null,
        'default_ap' => null,
        'default_ar' => null,
        'use_for_ap' => null,
        'use_for_ar' => null,
        'entered_on' => 'date-time',
        'entered_by' => null,
        'changed_on' => 'date-time',
        'changed_by' => null,
        'multi_currency' => null,
        'currency' => null,
        'eft' => 'int32',
        'check' => 'int32',
        'iban' => null,
        'bic' => null,
        'user_text01' => null,
        'user_text02' => null,
        'bank_statement_import' => 'int32',
        'boleto_bank_code' => null,
        'boleto_branch_code' => null,
        'boleto_bank_flag' => null,
        'boleto_portfolio_code' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'code' => 'Code',
        'organization_code' => 'OrganizationCode',
        'description' => 'Description',
        'account_id' => 'AccountID',
        'next_check' => 'NextCheck',
        'check_stub_limit' => 'CheckStubLimit',
        'gl_account' => 'GLAccount',
        'gl_sub_account' => 'GLSubAccount',
        'supplier' => 'Supplier',
        'status' => 'Status',
        'default_ap' => 'DefaultAP',
        'default_ar' => 'DefaultAR',
        'use_for_ap' => 'UseForAP',
        'use_for_ar' => 'UseForAR',
        'entered_on' => 'EnteredOn',
        'entered_by' => 'EnteredBy',
        'changed_on' => 'ChangedOn',
        'changed_by' => 'ChangedBy',
        'multi_currency' => 'MultiCurrency',
        'currency' => 'Currency',
        'eft' => 'EFT',
        'check' => 'Check',
        'iban' => 'IBAN',
        'bic' => 'BIC',
        'user_text01' => 'UserText01',
        'user_text02' => 'UserText02',
        'bank_statement_import' => 'BankStatementImport',
        'boleto_bank_code' => 'BoletoBankCode',
        'boleto_branch_code' => 'BoletoBranchCode',
        'boleto_bank_flag' => 'BoletoBankFlag',
        'boleto_portfolio_code' => 'BoletoPortfolioCode'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'code' => 'setCode',
        'organization_code' => 'setOrganizationCode',
        'description' => 'setDescription',
        'account_id' => 'setAccountId',
        'next_check' => 'setNextCheck',
        'check_stub_limit' => 'setCheckStubLimit',
        'gl_account' => 'setGlAccount',
        'gl_sub_account' => 'setGlSubAccount',
        'supplier' => 'setSupplier',
        'status' => 'setStatus',
        'default_ap' => 'setDefaultAp',
        'default_ar' => 'setDefaultAr',
        'use_for_ap' => 'setUseForAp',
        'use_for_ar' => 'setUseForAr',
        'entered_on' => 'setEnteredOn',
        'entered_by' => 'setEnteredBy',
        'changed_on' => 'setChangedOn',
        'changed_by' => 'setChangedBy',
        'multi_currency' => 'setMultiCurrency',
        'currency' => 'setCurrency',
        'eft' => 'setEft',
        'check' => 'setCheck',
        'iban' => 'setIban',
        'bic' => 'setBic',
        'user_text01' => 'setUserText01',
        'user_text02' => 'setUserText02',
        'bank_statement_import' => 'setBankStatementImport',
        'boleto_bank_code' => 'setBoletoBankCode',
        'boleto_branch_code' => 'setBoletoBranchCode',
        'boleto_bank_flag' => 'setBoletoBankFlag',
        'boleto_portfolio_code' => 'setBoletoPortfolioCode'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'code' => 'getCode',
        'organization_code' => 'getOrganizationCode',
        'description' => 'getDescription',
        'account_id' => 'getAccountId',
        'next_check' => 'getNextCheck',
        'check_stub_limit' => 'getCheckStubLimit',
        'gl_account' => 'getGlAccount',
        'gl_sub_account' => 'getGlSubAccount',
        'supplier' => 'getSupplier',
        'status' => 'getStatus',
        'default_ap' => 'getDefaultAp',
        'default_ar' => 'getDefaultAr',
        'use_for_ap' => 'getUseForAp',
        'use_for_ar' => 'getUseForAr',
        'entered_on' => 'getEnteredOn',
        'entered_by' => 'getEnteredBy',
        'changed_on' => 'getChangedOn',
        'changed_by' => 'getChangedBy',
        'multi_currency' => 'getMultiCurrency',
        'currency' => 'getCurrency',
        'eft' => 'getEft',
        'check' => 'getCheck',
        'iban' => 'getIban',
        'bic' => 'getBic',
        'user_text01' => 'getUserText01',
        'user_text02' => 'getUserText02',
        'bank_statement_import' => 'getBankStatementImport',
        'boleto_bank_code' => 'getBoletoBankCode',
        'boleto_branch_code' => 'getBoletoBranchCode',
        'boleto_bank_flag' => 'getBoletoBankFlag',
        'boleto_portfolio_code' => 'getBoletoPortfolioCode'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['code'] = isset($data['code']) ? $data['code'] : null;
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['next_check'] = isset($data['next_check']) ? $data['next_check'] : null;
        $this->container['check_stub_limit'] = isset($data['check_stub_limit']) ? $data['check_stub_limit'] : null;
        $this->container['gl_account'] = isset($data['gl_account']) ? $data['gl_account'] : null;
        $this->container['gl_sub_account'] = isset($data['gl_sub_account']) ? $data['gl_sub_account'] : null;
        $this->container['supplier'] = isset($data['supplier']) ? $data['supplier'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['default_ap'] = isset($data['default_ap']) ? $data['default_ap'] : null;
        $this->container['default_ar'] = isset($data['default_ar']) ? $data['default_ar'] : null;
        $this->container['use_for_ap'] = isset($data['use_for_ap']) ? $data['use_for_ap'] : null;
        $this->container['use_for_ar'] = isset($data['use_for_ar']) ? $data['use_for_ar'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['multi_currency'] = isset($data['multi_currency']) ? $data['multi_currency'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['eft'] = isset($data['eft']) ? $data['eft'] : null;
        $this->container['check'] = isset($data['check']) ? $data['check'] : null;
        $this->container['iban'] = isset($data['iban']) ? $data['iban'] : null;
        $this->container['bic'] = isset($data['bic']) ? $data['bic'] : null;
        $this->container['user_text01'] = isset($data['user_text01']) ? $data['user_text01'] : null;
        $this->container['user_text02'] = isset($data['user_text02']) ? $data['user_text02'] : null;
        $this->container['bank_statement_import'] = isset($data['bank_statement_import']) ? $data['bank_statement_import'] : null;
        $this->container['boleto_bank_code'] = isset($data['boleto_bank_code']) ? $data['boleto_bank_code'] : null;
        $this->container['boleto_branch_code'] = isset($data['boleto_branch_code']) ? $data['boleto_branch_code'] : null;
        $this->container['boleto_bank_flag'] = isset($data['boleto_bank_flag']) ? $data['boleto_bank_flag'] : null;
        $this->container['boleto_portfolio_code'] = isset($data['boleto_portfolio_code']) ? $data['boleto_portfolio_code'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['code'] === null) {
            $invalidProperties[] = "'code' can't be null";
        }
        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['account_id'] === null) {
            $invalidProperties[] = "'account_id' can't be null";
        }
        if ($this->container['next_check'] === null) {
            $invalidProperties[] = "'next_check' can't be null";
        }
        if ($this->container['check_stub_limit'] === null) {
            $invalidProperties[] = "'check_stub_limit' can't be null";
        }
        if ($this->container['gl_account'] === null) {
            $invalidProperties[] = "'gl_account' can't be null";
        }
        if ($this->container['gl_sub_account'] === null) {
            $invalidProperties[] = "'gl_sub_account' can't be null";
        }
        if ($this->container['supplier'] === null) {
            $invalidProperties[] = "'supplier' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['default_ap'] === null) {
            $invalidProperties[] = "'default_ap' can't be null";
        }
        if ($this->container['default_ar'] === null) {
            $invalidProperties[] = "'default_ar' can't be null";
        }
        if ($this->container['use_for_ap'] === null) {
            $invalidProperties[] = "'use_for_ap' can't be null";
        }
        if ($this->container['use_for_ar'] === null) {
            $invalidProperties[] = "'use_for_ar' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['multi_currency'] === null) {
            $invalidProperties[] = "'multi_currency' can't be null";
        }
        if ($this->container['currency'] === null) {
            $invalidProperties[] = "'currency' can't be null";
        }
        if ($this->container['eft'] === null) {
            $invalidProperties[] = "'eft' can't be null";
        }
        if ($this->container['check'] === null) {
            $invalidProperties[] = "'check' can't be null";
        }
        if ($this->container['iban'] === null) {
            $invalidProperties[] = "'iban' can't be null";
        }
        if ($this->container['bic'] === null) {
            $invalidProperties[] = "'bic' can't be null";
        }
        if ($this->container['user_text01'] === null) {
            $invalidProperties[] = "'user_text01' can't be null";
        }
        if ($this->container['user_text02'] === null) {
            $invalidProperties[] = "'user_text02' can't be null";
        }
        if ($this->container['bank_statement_import'] === null) {
            $invalidProperties[] = "'bank_statement_import' can't be null";
        }
        if ($this->container['boleto_bank_code'] === null) {
            $invalidProperties[] = "'boleto_bank_code' can't be null";
        }
        if ($this->container['boleto_branch_code'] === null) {
            $invalidProperties[] = "'boleto_branch_code' can't be null";
        }
        if ($this->container['boleto_bank_flag'] === null) {
            $invalidProperties[] = "'boleto_bank_flag' can't be null";
        }
        if ($this->container['boleto_portfolio_code'] === null) {
            $invalidProperties[] = "'boleto_portfolio_code' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets code
     *
     * @return string
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string $code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_BANK_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets account_id
     *
     * @return string
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param string $account_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_ACCT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets next_check
     *
     * @return int
     */
    public function getNextCheck()
    {
        return $this->container['next_check'];
    }

    /**
     * Sets next_check
     *
     * @param int $next_check <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_NEXT_CHECK  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNextCheck($next_check)
    {
        $this->container['next_check'] = $next_check;

        return $this;
    }

    /**
     * Gets check_stub_limit
     *
     * @return int
     */
    public function getCheckStubLimit()
    {
        return $this->container['check_stub_limit'];
    }

    /**
     * Sets check_stub_limit
     *
     * @param int $check_stub_limit <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_NBR_VCH_PER_CHK  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCheckStubLimit($check_stub_limit)
    {
        $this->container['check_stub_limit'] = $check_stub_limit;

        return $this;
    }

    /**
     * Gets gl_account
     *
     * @return string
     */
    public function getGlAccount()
    {
        return $this->container['gl_account'];
    }

    /**
     * Sets gl_account
     *
     * @param string $gl_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_GL_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 30  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlAccount($gl_account)
    {
        $this->container['gl_account'] = $gl_account;

        return $this;
    }

    /**
     * Gets gl_sub_account
     *
     * @return string
     */
    public function getGlSubAccount()
    {
        return $this->container['gl_sub_account'];
    }

    /**
     * Sets gl_sub_account
     *
     * @param string $gl_sub_account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_GL_SUB_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 9  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGlSubAccount($gl_sub_account)
    {
        $this->container['gl_sub_account'] = $gl_sub_account;

        return $this;
    }

    /**
     * Gets supplier
     *
     * @return string
     */
    public function getSupplier()
    {
        return $this->container['supplier'];
    }

    /**
     * Sets supplier
     *
     * @param string $supplier <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_EXT_ACCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSupplier($supplier)
    {
        $this->container['supplier'] = $supplier;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets default_ap
     *
     * @return string
     */
    public function getDefaultAp()
    {
        return $this->container['default_ap'];
    }

    /**
     * Sets default_ap
     *
     * @param string $default_ap <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_DEFAULT_AP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDefaultAp($default_ap)
    {
        $this->container['default_ap'] = $default_ap;

        return $this;
    }

    /**
     * Gets default_ar
     *
     * @return string
     */
    public function getDefaultAr()
    {
        return $this->container['default_ar'];
    }

    /**
     * Sets default_ar
     *
     * @param string $default_ar <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_DEFAULT_AR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDefaultAr($default_ar)
    {
        $this->container['default_ar'] = $default_ar;

        return $this;
    }

    /**
     * Gets use_for_ap
     *
     * @return string
     */
    public function getUseForAp()
    {
        return $this->container['use_for_ap'];
    }

    /**
     * Sets use_for_ap
     *
     * @param string $use_for_ap <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_USE_FOR_AP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUseForAp($use_for_ap)
    {
        $this->container['use_for_ap'] = $use_for_ap;

        return $this;
    }

    /**
     * Gets use_for_ar
     *
     * @return string
     */
    public function getUseForAr()
    {
        return $this->container['use_for_ar'];
    }

    /**
     * Sets use_for_ar
     *
     * @param string $use_for_ar <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_USE_FOR_AR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUseForAr($use_for_ar)
    {
        $this->container['use_for_ar'] = $use_for_ar;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets multi_currency
     *
     * @return string
     */
    public function getMultiCurrency()
    {
        return $this->container['multi_currency'];
    }

    /**
     * Sets multi_currency
     *
     * @param string $multi_currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_MULTI_CURRENCY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMultiCurrency($multi_currency)
    {
        $this->container['multi_currency'] = $multi_currency;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_CURRENCY_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets eft
     *
     * @return int
     */
    public function getEft()
    {
        return $this->container['eft'];
    }

    /**
     * Sets eft
     *
     * @param int $eft <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_EFT_EXP_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEft($eft)
    {
        $this->container['eft'] = $eft;

        return $this;
    }

    /**
     * Gets check
     *
     * @return int
     */
    public function getCheck()
    {
        return $this->container['check'];
    }

    /**
     * Sets check
     *
     * @param int $check <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_CHK_EXP_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCheck($check)
    {
        $this->container['check'] = $check;

        return $this;
    }

    /**
     * Gets iban
     *
     * @return string
     */
    public function getIban()
    {
        return $this->container['iban'];
    }

    /**
     * Sets iban
     *
     * @param string $iban <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_IBAN  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 50  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIban($iban)
    {
        $this->container['iban'] = $iban;

        return $this;
    }

    /**
     * Gets bic
     *
     * @return string
     */
    public function getBic()
    {
        return $this->container['bic'];
    }

    /**
     * Sets bic
     *
     * @param string $bic <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_BIC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBic($bic)
    {
        $this->container['bic'] = $bic;

        return $this;
    }

    /**
     * Gets user_text01
     *
     * @return string
     */
    public function getUserText01()
    {
        return $this->container['user_text01'];
    }

    /**
     * Sets user_text01
     *
     * @param string $user_text01 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_USER_TEXT_01  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserText01($user_text01)
    {
        $this->container['user_text01'] = $user_text01;

        return $this;
    }

    /**
     * Gets user_text02
     *
     * @return string
     */
    public function getUserText02()
    {
        return $this->container['user_text02'];
    }

    /**
     * Sets user_text02
     *
     * @param string $user_text02 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_USER_TEXT_02  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserText02($user_text02)
    {
        $this->container['user_text02'] = $user_text02;

        return $this;
    }

    /**
     * Gets bank_statement_import
     *
     * @return int
     */
    public function getBankStatementImport()
    {
        return $this->container['bank_statement_import'];
    }

    /**
     * Sets bank_statement_import
     *
     * @param int $bank_statement_import <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_STMT_IMP_FMT_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBankStatementImport($bank_statement_import)
    {
        $this->container['bank_statement_import'] = $bank_statement_import;

        return $this;
    }

    /**
     * Gets boleto_bank_code
     *
     * @return string
     */
    public function getBoletoBankCode()
    {
        return $this->container['boleto_bank_code'];
    }

    /**
     * Sets boleto_bank_code
     *
     * @param string $boleto_bank_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_BOLETO_BANK_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 5  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBoletoBankCode($boleto_bank_code)
    {
        $this->container['boleto_bank_code'] = $boleto_bank_code;

        return $this;
    }

    /**
     * Gets boleto_branch_code
     *
     * @return string
     */
    public function getBoletoBranchCode()
    {
        return $this->container['boleto_branch_code'];
    }

    /**
     * Sets boleto_branch_code
     *
     * @param string $boleto_branch_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_BRANCH_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBoletoBranchCode($boleto_branch_code)
    {
        $this->container['boleto_branch_code'] = $boleto_branch_code;

        return $this;
    }

    /**
     * Gets boleto_bank_flag
     *
     * @return string
     */
    public function getBoletoBankFlag()
    {
        return $this->container['boleto_bank_flag'];
    }

    /**
     * Sets boleto_bank_flag
     *
     * @param string $boleto_bank_flag <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_IS_BOLETO_BANK  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBoletoBankFlag($boleto_bank_flag)
    {
        $this->container['boleto_bank_flag'] = $boleto_bank_flag;

        return $this;
    }

    /**
     * Gets boleto_portfolio_code
     *
     * @return string
     */
    public function getBoletoPortfolioCode()
    {
        return $this->container['boleto_portfolio_code'];
    }

    /**
     * Sets boleto_portfolio_code
     *
     * @param string $boleto_portfolio_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC003_PORTFOLIO_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBoletoPortfolioCode($boleto_portfolio_code)
    {
        $this->container['boleto_portfolio_code'] = $boleto_portfolio_code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


