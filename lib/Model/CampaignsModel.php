<?php
/**
 * CampaignsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * CampaignsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CampaignsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CampaignsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'organization_code' => 'string',
        'designation' => 'string',
        'description' => 'string',
        'count' => 'int',
        'locked' => 'string',
        'template' => 'string',
        'class' => 'string',
        'last_retrieved_by' => 'string',
        'active' => 'string',
        'owner' => 'string',
        'entered_on' => '\DateTime',
        'entered_by' => 'string',
        'changed_by' => 'string',
        'event' => 'int',
        'last_retrieved_on' => '\DateTime',
        'group' => 'string',
        'coordinator' => 'string',
        'org_indiv_conversion' => 'string',
        'keep_organizations_if_contacts_not_found' => 'string',
        'individuals_inherit_organization_status' => 'string',
        'detail_status' => 'string',
        'start_date' => '\DateTime',
        'end_date' => '\DateTime',
        'revenue' => 'double',
        'cost' => 'double',
        'summary' => 'string',
        'actual_cost' => 'double',
        'actual_revenue' => 'double',
        'emails_sent' => 'int',
        'email_responses_percentage' => 'int',
        'status' => 'int',
        'type' => 'int',
        'external_code' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'organization_code' => null,
        'designation' => null,
        'description' => null,
        'count' => 'int32',
        'locked' => null,
        'template' => null,
        'class' => null,
        'last_retrieved_by' => null,
        'active' => null,
        'owner' => null,
        'entered_on' => 'date-time',
        'entered_by' => null,
        'changed_by' => null,
        'event' => 'int32',
        'last_retrieved_on' => 'date-time',
        'group' => null,
        'coordinator' => null,
        'org_indiv_conversion' => null,
        'keep_organizations_if_contacts_not_found' => null,
        'individuals_inherit_organization_status' => null,
        'detail_status' => null,
        'start_date' => 'date-time',
        'end_date' => 'date-time',
        'revenue' => 'double',
        'cost' => 'double',
        'summary' => null,
        'actual_cost' => 'double',
        'actual_revenue' => 'double',
        'emails_sent' => 'int32',
        'email_responses_percentage' => 'int32',
        'status' => 'int32',
        'type' => 'int32',
        'external_code' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'ID',
        'organization_code' => 'OrganizationCode',
        'designation' => 'Designation',
        'description' => 'Description',
        'count' => 'Count',
        'locked' => 'Locked',
        'template' => 'Template',
        'class' => 'Class',
        'last_retrieved_by' => 'LastRetrievedBy',
        'active' => 'Active',
        'owner' => 'Owner',
        'entered_on' => 'EnteredOn',
        'entered_by' => 'EnteredBy',
        'changed_by' => 'ChangedBy',
        'event' => 'Event',
        'last_retrieved_on' => 'LastRetrievedOn',
        'group' => 'Group',
        'coordinator' => 'Coordinator',
        'org_indiv_conversion' => 'OrgIndivConversion',
        'keep_organizations_if_contacts_not_found' => 'KeepOrganizationsIfContactsNotFound',
        'individuals_inherit_organization_status' => 'IndividualsInheritOrganizationStatus',
        'detail_status' => 'DetailStatus',
        'start_date' => 'StartDate',
        'end_date' => 'EndDate',
        'revenue' => 'Revenue',
        'cost' => 'Cost',
        'summary' => 'Summary',
        'actual_cost' => 'ActualCost',
        'actual_revenue' => 'ActualRevenue',
        'emails_sent' => 'EmailsSent',
        'email_responses_percentage' => 'EmailResponsesPercentage',
        'status' => 'Status',
        'type' => 'Type',
        'external_code' => 'ExternalCode'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'organization_code' => 'setOrganizationCode',
        'designation' => 'setDesignation',
        'description' => 'setDescription',
        'count' => 'setCount',
        'locked' => 'setLocked',
        'template' => 'setTemplate',
        'class' => 'setClass',
        'last_retrieved_by' => 'setLastRetrievedBy',
        'active' => 'setActive',
        'owner' => 'setOwner',
        'entered_on' => 'setEnteredOn',
        'entered_by' => 'setEnteredBy',
        'changed_by' => 'setChangedBy',
        'event' => 'setEvent',
        'last_retrieved_on' => 'setLastRetrievedOn',
        'group' => 'setGroup',
        'coordinator' => 'setCoordinator',
        'org_indiv_conversion' => 'setOrgIndivConversion',
        'keep_organizations_if_contacts_not_found' => 'setKeepOrganizationsIfContactsNotFound',
        'individuals_inherit_organization_status' => 'setIndividualsInheritOrganizationStatus',
        'detail_status' => 'setDetailStatus',
        'start_date' => 'setStartDate',
        'end_date' => 'setEndDate',
        'revenue' => 'setRevenue',
        'cost' => 'setCost',
        'summary' => 'setSummary',
        'actual_cost' => 'setActualCost',
        'actual_revenue' => 'setActualRevenue',
        'emails_sent' => 'setEmailsSent',
        'email_responses_percentage' => 'setEmailResponsesPercentage',
        'status' => 'setStatus',
        'type' => 'setType',
        'external_code' => 'setExternalCode'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'organization_code' => 'getOrganizationCode',
        'designation' => 'getDesignation',
        'description' => 'getDescription',
        'count' => 'getCount',
        'locked' => 'getLocked',
        'template' => 'getTemplate',
        'class' => 'getClass',
        'last_retrieved_by' => 'getLastRetrievedBy',
        'active' => 'getActive',
        'owner' => 'getOwner',
        'entered_on' => 'getEnteredOn',
        'entered_by' => 'getEnteredBy',
        'changed_by' => 'getChangedBy',
        'event' => 'getEvent',
        'last_retrieved_on' => 'getLastRetrievedOn',
        'group' => 'getGroup',
        'coordinator' => 'getCoordinator',
        'org_indiv_conversion' => 'getOrgIndivConversion',
        'keep_organizations_if_contacts_not_found' => 'getKeepOrganizationsIfContactsNotFound',
        'individuals_inherit_organization_status' => 'getIndividualsInheritOrganizationStatus',
        'detail_status' => 'getDetailStatus',
        'start_date' => 'getStartDate',
        'end_date' => 'getEndDate',
        'revenue' => 'getRevenue',
        'cost' => 'getCost',
        'summary' => 'getSummary',
        'actual_cost' => 'getActualCost',
        'actual_revenue' => 'getActualRevenue',
        'emails_sent' => 'getEmailsSent',
        'email_responses_percentage' => 'getEmailResponsesPercentage',
        'status' => 'getStatus',
        'type' => 'getType',
        'external_code' => 'getExternalCode'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['designation'] = isset($data['designation']) ? $data['designation'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['count'] = isset($data['count']) ? $data['count'] : null;
        $this->container['locked'] = isset($data['locked']) ? $data['locked'] : null;
        $this->container['template'] = isset($data['template']) ? $data['template'] : null;
        $this->container['class'] = isset($data['class']) ? $data['class'] : null;
        $this->container['last_retrieved_by'] = isset($data['last_retrieved_by']) ? $data['last_retrieved_by'] : null;
        $this->container['active'] = isset($data['active']) ? $data['active'] : null;
        $this->container['owner'] = isset($data['owner']) ? $data['owner'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['event'] = isset($data['event']) ? $data['event'] : null;
        $this->container['last_retrieved_on'] = isset($data['last_retrieved_on']) ? $data['last_retrieved_on'] : null;
        $this->container['group'] = isset($data['group']) ? $data['group'] : null;
        $this->container['coordinator'] = isset($data['coordinator']) ? $data['coordinator'] : null;
        $this->container['org_indiv_conversion'] = isset($data['org_indiv_conversion']) ? $data['org_indiv_conversion'] : null;
        $this->container['keep_organizations_if_contacts_not_found'] = isset($data['keep_organizations_if_contacts_not_found']) ? $data['keep_organizations_if_contacts_not_found'] : null;
        $this->container['individuals_inherit_organization_status'] = isset($data['individuals_inherit_organization_status']) ? $data['individuals_inherit_organization_status'] : null;
        $this->container['detail_status'] = isset($data['detail_status']) ? $data['detail_status'] : null;
        $this->container['start_date'] = isset($data['start_date']) ? $data['start_date'] : null;
        $this->container['end_date'] = isset($data['end_date']) ? $data['end_date'] : null;
        $this->container['revenue'] = isset($data['revenue']) ? $data['revenue'] : null;
        $this->container['cost'] = isset($data['cost']) ? $data['cost'] : null;
        $this->container['summary'] = isset($data['summary']) ? $data['summary'] : null;
        $this->container['actual_cost'] = isset($data['actual_cost']) ? $data['actual_cost'] : null;
        $this->container['actual_revenue'] = isset($data['actual_revenue']) ? $data['actual_revenue'] : null;
        $this->container['emails_sent'] = isset($data['emails_sent']) ? $data['emails_sent'] : null;
        $this->container['email_responses_percentage'] = isset($data['email_responses_percentage']) ? $data['email_responses_percentage'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['external_code'] = isset($data['external_code']) ? $data['external_code'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['designation'] === null) {
            $invalidProperties[] = "'designation' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['count'] === null) {
            $invalidProperties[] = "'count' can't be null";
        }
        if ($this->container['locked'] === null) {
            $invalidProperties[] = "'locked' can't be null";
        }
        if ($this->container['template'] === null) {
            $invalidProperties[] = "'template' can't be null";
        }
        if ($this->container['class'] === null) {
            $invalidProperties[] = "'class' can't be null";
        }
        if ($this->container['last_retrieved_by'] === null) {
            $invalidProperties[] = "'last_retrieved_by' can't be null";
        }
        if ($this->container['active'] === null) {
            $invalidProperties[] = "'active' can't be null";
        }
        if ($this->container['owner'] === null) {
            $invalidProperties[] = "'owner' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['event'] === null) {
            $invalidProperties[] = "'event' can't be null";
        }
        if ($this->container['last_retrieved_on'] === null) {
            $invalidProperties[] = "'last_retrieved_on' can't be null";
        }
        if ($this->container['group'] === null) {
            $invalidProperties[] = "'group' can't be null";
        }
        if ($this->container['coordinator'] === null) {
            $invalidProperties[] = "'coordinator' can't be null";
        }
        if ($this->container['org_indiv_conversion'] === null) {
            $invalidProperties[] = "'org_indiv_conversion' can't be null";
        }
        if ($this->container['keep_organizations_if_contacts_not_found'] === null) {
            $invalidProperties[] = "'keep_organizations_if_contacts_not_found' can't be null";
        }
        if ($this->container['individuals_inherit_organization_status'] === null) {
            $invalidProperties[] = "'individuals_inherit_organization_status' can't be null";
        }
        if ($this->container['detail_status'] === null) {
            $invalidProperties[] = "'detail_status' can't be null";
        }
        if ($this->container['start_date'] === null) {
            $invalidProperties[] = "'start_date' can't be null";
        }
        if ($this->container['end_date'] === null) {
            $invalidProperties[] = "'end_date' can't be null";
        }
        if ($this->container['revenue'] === null) {
            $invalidProperties[] = "'revenue' can't be null";
        }
        if ($this->container['cost'] === null) {
            $invalidProperties[] = "'cost' can't be null";
        }
        if ($this->container['summary'] === null) {
            $invalidProperties[] = "'summary' can't be null";
        }
        if ($this->container['actual_cost'] === null) {
            $invalidProperties[] = "'actual_cost' can't be null";
        }
        if ($this->container['actual_revenue'] === null) {
            $invalidProperties[] = "'actual_revenue' can't be null";
        }
        if ($this->container['emails_sent'] === null) {
            $invalidProperties[] = "'emails_sent' can't be null";
        }
        if ($this->container['email_responses_percentage'] === null) {
            $invalidProperties[] = "'email_responses_percentage' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['external_code'] === null) {
            $invalidProperties[] = "'external_code' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You can specify ID or just put *AUTO to have it automatically chosen  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CC890_PRJ_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets designation
     *
     * @return string
     */
    public function getDesignation()
    {
        return $this->container['designation'];
    }

    /**
     * Sets designation
     *
     * @param string $designation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_ACCT_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDesignation($designation)
    {
        $this->container['designation'] = $designation;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_PRJ_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 60  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets count
     *
     * @return int
     */
    public function getCount()
    {
        return $this->container['count'];
    }

    /**
     * Sets count
     *
     * @param int $count <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_TOTAL_RCDS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCount($count)
    {
        $this->container['count'] = $count;

        return $this;
    }

    /**
     * Gets locked
     *
     * @return string
     */
    public function getLocked()
    {
        return $this->container['locked'];
    }

    /**
     * Sets locked
     *
     * @param string $locked <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_LOCK_FLAG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocked($locked)
    {
        $this->container['locked'] = $locked;

        return $this;
    }

    /**
     * Gets template
     *
     * @return string
     */
    public function getTemplate()
    {
        return $this->container['template'];
    }

    /**
     * Sets template
     *
     * @param string $template <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_TEMPLT_FLAG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setTemplate($template)
    {
        $this->container['template'] = $template;

        return $this;
    }

    /**
     * Gets class
     *
     * @return string
     */
    public function getClass()
    {
        return $this->container['class'];
    }

    /**
     * Sets class
     *
     * @param string $class <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_PRJ_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setClass($class)
    {
        $this->container['class'] = $class;

        return $this;
    }

    /**
     * Gets last_retrieved_by
     *
     * @return string
     */
    public function getLastRetrievedBy()
    {
        return $this->container['last_retrieved_by'];
    }

    /**
     * Sets last_retrieved_by
     *
     * @param string $last_retrieved_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_LAST_RUN_USER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastRetrievedBy($last_retrieved_by)
    {
        $this->container['last_retrieved_by'] = $last_retrieved_by;

        return $this;
    }

    /**
     * Gets active
     *
     * @return string
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param string $active <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_PRJ_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets owner
     *
     * @return string
     */
    public function getOwner()
    {
        return $this->container['owner'];
    }

    /**
     * Sets owner
     *
     * @param string $owner <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_DEF_ADMIN  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOwner($owner)
    {
        $this->container['owner'] = $owner;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_ENT_DATE_ISO  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets event
     *
     * @return int
     */
    public function getEvent()
    {
        return $this->container['event'];
    }

    /**
     * Sets event
     *
     * @param int $event <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_EVENT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEvent($event)
    {
        $this->container['event'] = $event;

        return $this;
    }

    /**
     * Gets last_retrieved_on
     *
     * @return \DateTime
     */
    public function getLastRetrievedOn()
    {
        return $this->container['last_retrieved_on'];
    }

    /**
     * Sets last_retrieved_on
     *
     * @param \DateTime $last_retrieved_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_LAST_RUN_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLastRetrievedOn($last_retrieved_on)
    {
        $this->container['last_retrieved_on'] = $last_retrieved_on;

        return $this;
    }

    /**
     * Gets group
     *
     * @return string
     */
    public function getGroup()
    {
        return $this->container['group'];
    }

    /**
     * Sets group
     *
     * @param string $group <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_PRJ_GROUP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setGroup($group)
    {
        $this->container['group'] = $group;

        return $this;
    }

    /**
     * Gets coordinator
     *
     * @return string
     */
    public function getCoordinator()
    {
        return $this->container['coordinator'];
    }

    /**
     * Sets coordinator
     *
     * @param string $coordinator <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_ADMIN_USER  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCoordinator($coordinator)
    {
        $this->container['coordinator'] = $coordinator;

        return $this;
    }

    /**
     * Gets org_indiv_conversion
     *
     * @return string
     */
    public function getOrgIndivConversion()
    {
        return $this->container['org_indiv_conversion'];
    }

    /**
     * Sets org_indiv_conversion
     *
     * @param string $org_indiv_conversion <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_CVT_METHOD  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrgIndivConversion($org_indiv_conversion)
    {
        $this->container['org_indiv_conversion'] = $org_indiv_conversion;

        return $this;
    }

    /**
     * Gets keep_organizations_if_contacts_not_found
     *
     * @return string
     */
    public function getKeepOrganizationsIfContactsNotFound()
    {
        return $this->container['keep_organizations_if_contacts_not_found'];
    }

    /**
     * Sets keep_organizations_if_contacts_not_found
     *
     * @param string $keep_organizations_if_contacts_not_found <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_RETAIN_ORG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setKeepOrganizationsIfContactsNotFound($keep_organizations_if_contacts_not_found)
    {
        $this->container['keep_organizations_if_contacts_not_found'] = $keep_organizations_if_contacts_not_found;

        return $this;
    }

    /**
     * Gets individuals_inherit_organization_status
     *
     * @return string
     */
    public function getIndividualsInheritOrganizationStatus()
    {
        return $this->container['individuals_inherit_organization_status'];
    }

    /**
     * Sets individuals_inherit_organization_status
     *
     * @param string $individuals_inherit_organization_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_RETAIN_ORG_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setIndividualsInheritOrganizationStatus($individuals_inherit_organization_status)
    {
        $this->container['individuals_inherit_organization_status'] = $individuals_inherit_organization_status;

        return $this;
    }

    /**
     * Gets detail_status
     *
     * @return string
     */
    public function getDetailStatus()
    {
        return $this->container['detail_status'];
    }

    /**
     * Sets detail_status
     *
     * @param string $detail_status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_USE_CUST_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDetailStatus($detail_status)
    {
        $this->container['detail_status'] = $detail_status;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return \DateTime
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param \DateTime $start_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_START_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return \DateTime
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param \DateTime $end_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_END_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets revenue
     *
     * @return double
     */
    public function getRevenue()
    {
        return $this->container['revenue'];
    }

    /**
     * Sets revenue
     *
     * @param double $revenue <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_REVENUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRevenue($revenue)
    {
        $this->container['revenue'] = $revenue;

        return $this;
    }

    /**
     * Gets cost
     *
     * @return double
     */
    public function getCost()
    {
        return $this->container['cost'];
    }

    /**
     * Sets cost
     *
     * @param double $cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_COST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCost($cost)
    {
        $this->container['cost'] = $cost;

        return $this;
    }

    /**
     * Gets summary
     *
     * @return string
     */
    public function getSummary()
    {
        return $this->container['summary'];
    }

    /**
     * Sets summary
     *
     * @param string $summary <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_PRJ_SUMMARY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSummary($summary)
    {
        $this->container['summary'] = $summary;

        return $this;
    }

    /**
     * Gets actual_cost
     *
     * @return double
     */
    public function getActualCost()
    {
        return $this->container['actual_cost'];
    }

    /**
     * Sets actual_cost
     *
     * @param double $actual_cost <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_ACTUAL_COST  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualCost($actual_cost)
    {
        $this->container['actual_cost'] = $actual_cost;

        return $this;
    }

    /**
     * Gets actual_revenue
     *
     * @return double
     */
    public function getActualRevenue()
    {
        return $this->container['actual_revenue'];
    }

    /**
     * Sets actual_revenue
     *
     * @param double $actual_revenue <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_ACTUAL_REVENUE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 132  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualRevenue($actual_revenue)
    {
        $this->container['actual_revenue'] = $actual_revenue;

        return $this;
    }

    /**
     * Gets emails_sent
     *
     * @return int
     */
    public function getEmailsSent()
    {
        return $this->container['emails_sent'];
    }

    /**
     * Sets emails_sent
     *
     * @param int $emails_sent <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_NUM_EMAILS_SENT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEmailsSent($emails_sent)
    {
        $this->container['emails_sent'] = $emails_sent;

        return $this;
    }

    /**
     * Gets email_responses_percentage
     *
     * @return int
     */
    public function getEmailResponsesPercentage()
    {
        return $this->container['email_responses_percentage'];
    }

    /**
     * Sets email_responses_percentage
     *
     * @param int $email_responses_percentage <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_EXPECTED_RESPONSE_PCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEmailResponsesPercentage($email_responses_percentage)
    {
        $this->container['email_responses_percentage'] = $email_responses_percentage;

        return $this;
    }

    /**
     * Gets status
     *
     * @return int
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param int $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_CAMPAIGN_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets type
     *
     * @return int
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param int $type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_CAMPAIGN_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets external_code
     *
     * @return string
     */
    public function getExternalCode()
    {
        return $this->container['external_code'];
    }

    /**
     * Sets external_code
     *
     * @param string $external_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CC890_EXTERNAL_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 256  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExternalCode($external_code)
    {
        $this->container['external_code'] = $external_code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


