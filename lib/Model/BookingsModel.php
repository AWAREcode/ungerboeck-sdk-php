<?php
/**
 * BookingsModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * BookingsModel Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class BookingsModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'BookingsModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization_code' => 'string',
        'event' => 'int',
        'sequence_number' => 'int',
        'space' => 'string',
        'status' => 'string',
        'requested_setup' => 'string',
        'entered_by' => 'string',
        'changed_by' => 'string',
        'start_days' => 'int',
        'end_days' => 'int',
        'offset' => 'string',
        'usage_type' => 'string',
        'usage' => 'string',
        'unitof_time' => 'string',
        'units' => 'double',
        'description' => 'string',
        'contract_sequence_nbr' => 'int',
        'entered_on' => '\DateTime',
        'changed_on' => '\DateTime',
        'user_text' => 'string',
        'user_number1' => 'double',
        'user_number2' => 'double',
        'user_number3' => 'double',
        'billable' => 'string',
        'comment' => 'string',
        'start_date' => '\DateTime',
        'start_time' => '\DateTime',
        'end_date' => '\DateTime',
        'end_time' => '\DateTime',
        'lead_date' => '\DateTime',
        'lead_time' => '\DateTime',
        'strike_date' => '\DateTime',
        'strike_time' => '\DateTime',
        'lead_hours' => 'double',
        'daily' => 'string',
        'use_seasonal_discount' => 'string',
        'create_functions' => 'string',
        'strike_hours' => 'double'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization_code' => null,
        'event' => 'int32',
        'sequence_number' => 'int32',
        'space' => null,
        'status' => null,
        'requested_setup' => null,
        'entered_by' => null,
        'changed_by' => null,
        'start_days' => 'int32',
        'end_days' => 'int32',
        'offset' => null,
        'usage_type' => null,
        'usage' => null,
        'unitof_time' => null,
        'units' => 'double',
        'description' => null,
        'contract_sequence_nbr' => 'int32',
        'entered_on' => 'date-time',
        'changed_on' => 'date-time',
        'user_text' => null,
        'user_number1' => 'double',
        'user_number2' => 'double',
        'user_number3' => 'double',
        'billable' => null,
        'comment' => null,
        'start_date' => 'date-time',
        'start_time' => 'date-time',
        'end_date' => 'date-time',
        'end_time' => 'date-time',
        'lead_date' => 'date-time',
        'lead_time' => 'date-time',
        'strike_date' => 'date-time',
        'strike_time' => 'date-time',
        'lead_hours' => 'double',
        'daily' => null,
        'use_seasonal_discount' => null,
        'create_functions' => null,
        'strike_hours' => 'double'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization_code' => 'OrganizationCode',
        'event' => 'Event',
        'sequence_number' => 'SequenceNumber',
        'space' => 'Space',
        'status' => 'Status',
        'requested_setup' => 'RequestedSetup',
        'entered_by' => 'EnteredBy',
        'changed_by' => 'ChangedBy',
        'start_days' => 'StartDays',
        'end_days' => 'EndDays',
        'offset' => 'Offset',
        'usage_type' => 'UsageType',
        'usage' => 'Usage',
        'unitof_time' => 'UnitofTime',
        'units' => 'Units',
        'description' => 'Description',
        'contract_sequence_nbr' => 'ContractSequenceNbr',
        'entered_on' => 'EnteredOn',
        'changed_on' => 'ChangedOn',
        'user_text' => 'UserText',
        'user_number1' => 'UserNumber1',
        'user_number2' => 'UserNumber2',
        'user_number3' => 'UserNumber3',
        'billable' => 'Billable',
        'comment' => 'Comment',
        'start_date' => 'StartDate',
        'start_time' => 'StartTime',
        'end_date' => 'EndDate',
        'end_time' => 'EndTime',
        'lead_date' => 'LeadDate',
        'lead_time' => 'LeadTime',
        'strike_date' => 'StrikeDate',
        'strike_time' => 'StrikeTime',
        'lead_hours' => 'LeadHours',
        'daily' => 'Daily',
        'use_seasonal_discount' => 'UseSeasonalDiscount',
        'create_functions' => 'CreateFunctions',
        'strike_hours' => 'StrikeHours'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization_code' => 'setOrganizationCode',
        'event' => 'setEvent',
        'sequence_number' => 'setSequenceNumber',
        'space' => 'setSpace',
        'status' => 'setStatus',
        'requested_setup' => 'setRequestedSetup',
        'entered_by' => 'setEnteredBy',
        'changed_by' => 'setChangedBy',
        'start_days' => 'setStartDays',
        'end_days' => 'setEndDays',
        'offset' => 'setOffset',
        'usage_type' => 'setUsageType',
        'usage' => 'setUsage',
        'unitof_time' => 'setUnitofTime',
        'units' => 'setUnits',
        'description' => 'setDescription',
        'contract_sequence_nbr' => 'setContractSequenceNbr',
        'entered_on' => 'setEnteredOn',
        'changed_on' => 'setChangedOn',
        'user_text' => 'setUserText',
        'user_number1' => 'setUserNumber1',
        'user_number2' => 'setUserNumber2',
        'user_number3' => 'setUserNumber3',
        'billable' => 'setBillable',
        'comment' => 'setComment',
        'start_date' => 'setStartDate',
        'start_time' => 'setStartTime',
        'end_date' => 'setEndDate',
        'end_time' => 'setEndTime',
        'lead_date' => 'setLeadDate',
        'lead_time' => 'setLeadTime',
        'strike_date' => 'setStrikeDate',
        'strike_time' => 'setStrikeTime',
        'lead_hours' => 'setLeadHours',
        'daily' => 'setDaily',
        'use_seasonal_discount' => 'setUseSeasonalDiscount',
        'create_functions' => 'setCreateFunctions',
        'strike_hours' => 'setStrikeHours'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization_code' => 'getOrganizationCode',
        'event' => 'getEvent',
        'sequence_number' => 'getSequenceNumber',
        'space' => 'getSpace',
        'status' => 'getStatus',
        'requested_setup' => 'getRequestedSetup',
        'entered_by' => 'getEnteredBy',
        'changed_by' => 'getChangedBy',
        'start_days' => 'getStartDays',
        'end_days' => 'getEndDays',
        'offset' => 'getOffset',
        'usage_type' => 'getUsageType',
        'usage' => 'getUsage',
        'unitof_time' => 'getUnitofTime',
        'units' => 'getUnits',
        'description' => 'getDescription',
        'contract_sequence_nbr' => 'getContractSequenceNbr',
        'entered_on' => 'getEnteredOn',
        'changed_on' => 'getChangedOn',
        'user_text' => 'getUserText',
        'user_number1' => 'getUserNumber1',
        'user_number2' => 'getUserNumber2',
        'user_number3' => 'getUserNumber3',
        'billable' => 'getBillable',
        'comment' => 'getComment',
        'start_date' => 'getStartDate',
        'start_time' => 'getStartTime',
        'end_date' => 'getEndDate',
        'end_time' => 'getEndTime',
        'lead_date' => 'getLeadDate',
        'lead_time' => 'getLeadTime',
        'strike_date' => 'getStrikeDate',
        'strike_time' => 'getStrikeTime',
        'lead_hours' => 'getLeadHours',
        'daily' => 'getDaily',
        'use_seasonal_discount' => 'getUseSeasonalDiscount',
        'create_functions' => 'getCreateFunctions',
        'strike_hours' => 'getStrikeHours'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['event'] = isset($data['event']) ? $data['event'] : null;
        $this->container['sequence_number'] = isset($data['sequence_number']) ? $data['sequence_number'] : null;
        $this->container['space'] = isset($data['space']) ? $data['space'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['requested_setup'] = isset($data['requested_setup']) ? $data['requested_setup'] : null;
        $this->container['entered_by'] = isset($data['entered_by']) ? $data['entered_by'] : null;
        $this->container['changed_by'] = isset($data['changed_by']) ? $data['changed_by'] : null;
        $this->container['start_days'] = isset($data['start_days']) ? $data['start_days'] : null;
        $this->container['end_days'] = isset($data['end_days']) ? $data['end_days'] : null;
        $this->container['offset'] = isset($data['offset']) ? $data['offset'] : null;
        $this->container['usage_type'] = isset($data['usage_type']) ? $data['usage_type'] : null;
        $this->container['usage'] = isset($data['usage']) ? $data['usage'] : null;
        $this->container['unitof_time'] = isset($data['unitof_time']) ? $data['unitof_time'] : null;
        $this->container['units'] = isset($data['units']) ? $data['units'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['contract_sequence_nbr'] = isset($data['contract_sequence_nbr']) ? $data['contract_sequence_nbr'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['user_text'] = isset($data['user_text']) ? $data['user_text'] : null;
        $this->container['user_number1'] = isset($data['user_number1']) ? $data['user_number1'] : null;
        $this->container['user_number2'] = isset($data['user_number2']) ? $data['user_number2'] : null;
        $this->container['user_number3'] = isset($data['user_number3']) ? $data['user_number3'] : null;
        $this->container['billable'] = isset($data['billable']) ? $data['billable'] : null;
        $this->container['comment'] = isset($data['comment']) ? $data['comment'] : null;
        $this->container['start_date'] = isset($data['start_date']) ? $data['start_date'] : null;
        $this->container['start_time'] = isset($data['start_time']) ? $data['start_time'] : null;
        $this->container['end_date'] = isset($data['end_date']) ? $data['end_date'] : null;
        $this->container['end_time'] = isset($data['end_time']) ? $data['end_time'] : null;
        $this->container['lead_date'] = isset($data['lead_date']) ? $data['lead_date'] : null;
        $this->container['lead_time'] = isset($data['lead_time']) ? $data['lead_time'] : null;
        $this->container['strike_date'] = isset($data['strike_date']) ? $data['strike_date'] : null;
        $this->container['strike_time'] = isset($data['strike_time']) ? $data['strike_time'] : null;
        $this->container['lead_hours'] = isset($data['lead_hours']) ? $data['lead_hours'] : null;
        $this->container['daily'] = isset($data['daily']) ? $data['daily'] : null;
        $this->container['use_seasonal_discount'] = isset($data['use_seasonal_discount']) ? $data['use_seasonal_discount'] : null;
        $this->container['create_functions'] = isset($data['create_functions']) ? $data['create_functions'] : null;
        $this->container['strike_hours'] = isset($data['strike_hours']) ? $data['strike_hours'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['event'] === null) {
            $invalidProperties[] = "'event' can't be null";
        }
        if ($this->container['sequence_number'] === null) {
            $invalidProperties[] = "'sequence_number' can't be null";
        }
        if ($this->container['space'] === null) {
            $invalidProperties[] = "'space' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['requested_setup'] === null) {
            $invalidProperties[] = "'requested_setup' can't be null";
        }
        if ($this->container['entered_by'] === null) {
            $invalidProperties[] = "'entered_by' can't be null";
        }
        if ($this->container['changed_by'] === null) {
            $invalidProperties[] = "'changed_by' can't be null";
        }
        if ($this->container['start_days'] === null) {
            $invalidProperties[] = "'start_days' can't be null";
        }
        if ($this->container['end_days'] === null) {
            $invalidProperties[] = "'end_days' can't be null";
        }
        if ($this->container['offset'] === null) {
            $invalidProperties[] = "'offset' can't be null";
        }
        if ($this->container['usage_type'] === null) {
            $invalidProperties[] = "'usage_type' can't be null";
        }
        if ($this->container['usage'] === null) {
            $invalidProperties[] = "'usage' can't be null";
        }
        if ($this->container['unitof_time'] === null) {
            $invalidProperties[] = "'unitof_time' can't be null";
        }
        if ($this->container['units'] === null) {
            $invalidProperties[] = "'units' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['contract_sequence_nbr'] === null) {
            $invalidProperties[] = "'contract_sequence_nbr' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['user_text'] === null) {
            $invalidProperties[] = "'user_text' can't be null";
        }
        if ($this->container['user_number1'] === null) {
            $invalidProperties[] = "'user_number1' can't be null";
        }
        if ($this->container['user_number2'] === null) {
            $invalidProperties[] = "'user_number2' can't be null";
        }
        if ($this->container['user_number3'] === null) {
            $invalidProperties[] = "'user_number3' can't be null";
        }
        if ($this->container['billable'] === null) {
            $invalidProperties[] = "'billable' can't be null";
        }
        if ($this->container['comment'] === null) {
            $invalidProperties[] = "'comment' can't be null";
        }
        if ($this->container['start_date'] === null) {
            $invalidProperties[] = "'start_date' can't be null";
        }
        if ($this->container['start_time'] === null) {
            $invalidProperties[] = "'start_time' can't be null";
        }
        if ($this->container['end_date'] === null) {
            $invalidProperties[] = "'end_date' can't be null";
        }
        if ($this->container['end_time'] === null) {
            $invalidProperties[] = "'end_time' can't be null";
        }
        if ($this->container['lead_date'] === null) {
            $invalidProperties[] = "'lead_date' can't be null";
        }
        if ($this->container['lead_time'] === null) {
            $invalidProperties[] = "'lead_time' can't be null";
        }
        if ($this->container['strike_date'] === null) {
            $invalidProperties[] = "'strike_date' can't be null";
        }
        if ($this->container['strike_time'] === null) {
            $invalidProperties[] = "'strike_time' can't be null";
        }
        if ($this->container['lead_hours'] === null) {
            $invalidProperties[] = "'lead_hours' can't be null";
        }
        if ($this->container['daily'] === null) {
            $invalidProperties[] = "'daily' can't be null";
        }
        if ($this->container['use_seasonal_discount'] === null) {
            $invalidProperties[] = "'use_seasonal_discount' can't be null";
        }
        if ($this->container['create_functions'] === null) {
            $invalidProperties[] = "'create_functions' can't be null";
        }
        if ($this->container['strike_hours'] === null) {
            $invalidProperties[] = "'strike_hours' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets event
     *
     * @return int
     */
    public function getEvent()
    {
        return $this->container['event'];
    }

    /**
     * Sets event
     *
     * @param int $event <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_EVT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEvent($event)
    {
        $this->container['event'] = $event;

        return $this;
    }

    /**
     * Gets sequence_number
     *
     * @return int
     */
    public function getSequenceNumber()
    {
        return $this->container['sequence_number'];
    }

    /**
     * Sets sequence_number
     *
     * @param int $sequence_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_SSB_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSequenceNumber($sequence_number)
    {
        $this->container['sequence_number'] = $sequence_number;

        return $this;
    }

    /**
     * Gets space
     *
     * @return string
     */
    public function getSpace()
    {
        return $this->container['space'];
    }

    /**
     * Sets space
     *
     * @param string $space <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKD_SPACE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSpace($space)
    {
        $this->container['space'] = $space;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKG_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets requested_setup
     *
     * @return string
     */
    public function getRequestedSetup()
    {
        return $this->container['requested_setup'];
    }

    /**
     * Sets requested_setup
     *
     * @param string $requested_setup <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_SETUP_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRequestedSetup($requested_setup)
    {
        $this->container['requested_setup'] = $requested_setup;

        return $this;
    }

    /**
     * Gets entered_by
     *
     * @return string
     */
    public function getEnteredBy()
    {
        return $this->container['entered_by'];
    }

    /**
     * Sets entered_by
     *
     * @param string $entered_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredBy($entered_by)
    {
        $this->container['entered_by'] = $entered_by;

        return $this;
    }

    /**
     * Gets changed_by
     *
     * @return string
     */
    public function getChangedBy()
    {
        return $this->container['changed_by'];
    }

    /**
     * Sets changed_by
     *
     * @param string $changed_by <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedBy($changed_by)
    {
        $this->container['changed_by'] = $changed_by;

        return $this;
    }

    /**
     * Gets start_days
     *
     * @return int
     */
    public function getStartDays()
    {
        return $this->container['start_days'];
    }

    /**
     * Sets start_days
     *
     * @param int $start_days <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_START_DAYS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStartDays($start_days)
    {
        $this->container['start_days'] = $start_days;

        return $this;
    }

    /**
     * Gets end_days
     *
     * @return int
     */
    public function getEndDays()
    {
        return $this->container['end_days'];
    }

    /**
     * Sets end_days
     *
     * @param int $end_days <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_END_DAYS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEndDays($end_days)
    {
        $this->container['end_days'] = $end_days;

        return $this;
    }

    /**
     * Gets offset
     *
     * @return string
     */
    public function getOffset()
    {
        return $this->container['offset'];
    }

    /**
     * Sets offset
     *
     * @param string $offset <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_TIME_OFFSET  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOffset($offset)
    {
        $this->container['offset'] = $offset;

        return $this;
    }

    /**
     * Gets usage_type
     *
     * @return string
     */
    public function getUsageType()
    {
        return $this->container['usage_type'];
    }

    /**
     * Sets usage_type
     *
     * @param string $usage_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> That this is how you affect the 'Rate' field from v20.  You fill this with the corresponding rate's resource type (EV802_NEW_RES_TYPE) and, if valid, it will populate what a v20 user sees as the rate.  Note: the 'rate' field itself is not an API property.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> EV802_NEW_RES_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUsageType($usage_type)
    {
        $this->container['usage_type'] = $usage_type;

        return $this;
    }

    /**
     * Gets usage
     *
     * @return string
     */
    public function getUsage()
    {
        return $this->container['usage'];
    }

    /**
     * Sets usage
     *
     * @param string $usage <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_USAGE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUsage($usage)
    {
        $this->container['usage'] = $usage;

        return $this;
    }

    /**
     * Gets unitof_time
     *
     * @return string
     */
    public function getUnitofTime()
    {
        return $this->container['unitof_time'];
    }

    /**
     * Sets unitof_time
     *
     * @param string $unitof_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKG_UOT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUnitofTime($unitof_time)
    {
        $this->container['unitof_time'] = $unitof_time;

        return $this;
    }

    /**
     * Gets units
     *
     * @return double
     */
    public function getUnits()
    {
        return $this->container['units'];
    }

    /**
     * Sets units
     *
     * @param double $units <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKG_UNITS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 112  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUnits($units)
    {
        $this->container['units'] = $units;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_DESC  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 150  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets contract_sequence_nbr
     *
     * @return int
     */
    public function getContractSequenceNbr()
    {
        return $this->container['contract_sequence_nbr'];
    }

    /**
     * Sets contract_sequence_nbr
     *
     * @param int $contract_sequence_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_CONTRACT_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContractSequenceNbr($contract_sequence_nbr)
    {
        $this->container['contract_sequence_nbr'] = $contract_sequence_nbr;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_ENT_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_UPD_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets user_text
     *
     * @return string
     */
    public function getUserText()
    {
        return $this->container['user_text'];
    }

    /**
     * Sets user_text
     *
     * @param string $user_text <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKG_TEXT_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserText($user_text)
    {
        $this->container['user_text'] = $user_text;

        return $this;
    }

    /**
     * Gets user_number1
     *
     * @return double
     */
    public function getUserNumber1()
    {
        return $this->container['user_number1'];
    }

    /**
     * Sets user_number1
     *
     * @param double $user_number1 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKG_NBR_1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 133  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserNumber1($user_number1)
    {
        $this->container['user_number1'] = $user_number1;

        return $this;
    }

    /**
     * Gets user_number2
     *
     * @return double
     */
    public function getUserNumber2()
    {
        return $this->container['user_number2'];
    }

    /**
     * Sets user_number2
     *
     * @param double $user_number2 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKG_NBR_2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 133  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserNumber2($user_number2)
    {
        $this->container['user_number2'] = $user_number2;

        return $this;
    }

    /**
     * Gets user_number3
     *
     * @return double
     */
    public function getUserNumber3()
    {
        return $this->container['user_number3'];
    }

    /**
     * Sets user_number3
     *
     * @param double $user_number3 <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKG_NBR_3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 133  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUserNumber3($user_number3)
    {
        $this->container['user_number3'] = $user_number3;

        return $this;
    }

    /**
     * Gets billable
     *
     * @return string
     */
    public function getBillable()
    {
        return $this->container['billable'];
    }

    /**
     * Sets billable
     *
     * @param string $billable <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BILLABLE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBillable($billable)
    {
        $this->container['billable'] = $billable;

        return $this;
    }

    /**
     * Gets comment
     *
     * @return string
     */
    public function getComment()
    {
        return $this->container['comment'];
    }

    /**
     * Sets comment
     *
     * @param string $comment <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKG_COMMENT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 255  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setComment($comment)
    {
        $this->container['comment'] = $comment;

        return $this;
    }

    /**
     * Gets start_date
     *
     * @return \DateTime
     */
    public function getStartDate()
    {
        return $this->container['start_date'];
    }

    /**
     * Sets start_date
     *
     * @param \DateTime $start_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKG_START_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStartDate($start_date)
    {
        $this->container['start_date'] = $start_date;

        return $this;
    }

    /**
     * Gets start_time
     *
     * @return \DateTime
     */
    public function getStartTime()
    {
        return $this->container['start_time'];
    }

    /**
     * Sets start_time
     *
     * @param \DateTime $start_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKG_START_TIME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStartTime($start_time)
    {
        $this->container['start_time'] = $start_time;

        return $this;
    }

    /**
     * Gets end_date
     *
     * @return \DateTime
     */
    public function getEndDate()
    {
        return $this->container['end_date'];
    }

    /**
     * Sets end_date
     *
     * @param \DateTime $end_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKG_END_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEndDate($end_date)
    {
        $this->container['end_date'] = $end_date;

        return $this;
    }

    /**
     * Gets end_time
     *
     * @return \DateTime
     */
    public function getEndTime()
    {
        return $this->container['end_time'];
    }

    /**
     * Sets end_time
     *
     * @param \DateTime $end_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKG_END_TIME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEndTime($end_time)
    {
        $this->container['end_time'] = $end_time;

        return $this;
    }

    /**
     * Gets lead_date
     *
     * @return \DateTime
     */
    public function getLeadDate()
    {
        return $this->container['lead_date'];
    }

    /**
     * Sets lead_date
     *
     * @param \DateTime $lead_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKG_LEAD_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLeadDate($lead_date)
    {
        $this->container['lead_date'] = $lead_date;

        return $this;
    }

    /**
     * Gets lead_time
     *
     * @return \DateTime
     */
    public function getLeadTime()
    {
        return $this->container['lead_time'];
    }

    /**
     * Sets lead_time
     *
     * @param \DateTime $lead_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKG_LEAD_TIME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLeadTime($lead_time)
    {
        $this->container['lead_time'] = $lead_time;

        return $this;
    }

    /**
     * Gets strike_date
     *
     * @return \DateTime
     */
    public function getStrikeDate()
    {
        return $this->container['strike_date'];
    }

    /**
     * Sets strike_date
     *
     * @param \DateTime $strike_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKG_STRIKE_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStrikeDate($strike_date)
    {
        $this->container['strike_date'] = $strike_date;

        return $this;
    }

    /**
     * Gets strike_time
     *
     * @return \DateTime
     */
    public function getStrikeTime()
    {
        return $this->container['strike_time'];
    }

    /**
     * Sets strike_time
     *
     * @param \DateTime $strike_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_BKG_STRIKE_TIME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStrikeTime($strike_time)
    {
        $this->container['strike_time'] = $strike_time;

        return $this;
    }

    /**
     * Gets lead_hours
     *
     * @return double
     */
    public function getLeadHours()
    {
        return $this->container['lead_hours'];
    }

    /**
     * Sets lead_hours
     *
     * @param double $lead_hours <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_LEAD_HRS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 72  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLeadHours($lead_hours)
    {
        $this->container['lead_hours'] = $lead_hours;

        return $this;
    }

    /**
     * Gets daily
     *
     * @return string
     */
    public function getDaily()
    {
        return $this->container['daily'];
    }

    /**
     * Sets daily
     *
     * @param string $daily <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> cDAILY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDaily($daily)
    {
        $this->container['daily'] = $daily;

        return $this;
    }

    /**
     * Gets use_seasonal_discount
     *
     * @return string
     */
    public function getUseSeasonalDiscount()
    {
        return $this->container['use_seasonal_discount'];
    }

    /**
     * Sets use_seasonal_discount
     *
     * @param string $use_seasonal_discount <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> cUSE_SEASONAL  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setUseSeasonalDiscount($use_seasonal_discount)
    {
        $this->container['use_seasonal_discount'] = $use_seasonal_discount;

        return $this;
    }

    /**
     * Gets create_functions
     *
     * @return string
     */
    public function getCreateFunctions()
    {
        return $this->container['create_functions'];
    }

    /**
     * Sets create_functions
     *
     * @param string $create_functions <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Setting this to Y will automatically create a function for the added booking.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> cLINK_FUNCTIONS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setCreateFunctions($create_functions)
    {
        $this->container['create_functions'] = $create_functions;

        return $this;
    }

    /**
     * Gets strike_hours
     *
     * @return double
     */
    public function getStrikeHours()
    {
        return $this->container['strike_hours'];
    }

    /**
     * Sets strike_hours
     *
     * @param double $strike_hours <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> EV802_STRIKE_HRS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 72  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Bulk Editable</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStrikeHours($strike_hours)
    {
        $this->container['strike_hours'] = $strike_hours;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


