<?php
/**
 * ActivitiesModel
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace FomF\Ungerboeck\Client\Model;

use \ArrayAccess;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * ActivitiesModel Class Doc Comment
 *
 * @category Class
 * @description This represents an activity.  It can be tied to one or more Ungerboeck objects.
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ActivitiesModel implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ActivitiesModel';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'organization_code' => 'string',
        'account' => 'string',
        'sequence_number' => 'int',
        'priority' => 'string',
        'due' => '\DateTime',
        'plain_text' => 'string',
        'opportunity' => 'int',
        'recipient' => 'string',
        'due_time' => '\DateTime',
        'type' => 'string',
        'entered_by_code' => 'string',
        'privileged' => 'string',
        'entered_on' => '\DateTime',
        'changed_by_code' => 'string',
        'changed_on' => '\DateTime',
        'event' => 'int',
        'function' => 'int',
        'checklist' => 'string',
        'contact' => 'string',
        'entry_designation' => 'string',
        'notification_flag' => 'string',
        'note_type' => 'string',
        'note_code' => 'string',
        'note_sequence_nbr' => 'int',
        'notified_date' => '\DateTime',
        'locked' => 'string',
        'order_number' => 'int',
        'email_sent' => 'string',
        'email_sent_on' => '\DateTime',
        'project_id' => 'string',
        'actual_start_date' => '\DateTime',
        'actual_end_date' => '\DateTime',
        'project_designation' => 'string',
        'email_sent_user_id' => 'string',
        'text' => 'string',
        'contract_sequence_nbr' => 'int',
        'multi_org_account_code' => 'string',
        'block_code' => 'string',
        'fiscal_year_period' => 'string',
        'inventory_item_code' => 'string',
        'reminder_date' => '\DateTime',
        'status' => 'string',
        'quote' => 'int',
        'exhibitor_id' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'organization_code' => null,
        'account' => null,
        'sequence_number' => 'int32',
        'priority' => null,
        'due' => 'date-time',
        'plain_text' => null,
        'opportunity' => 'int32',
        'recipient' => null,
        'due_time' => 'date-time',
        'type' => null,
        'entered_by_code' => null,
        'privileged' => null,
        'entered_on' => 'date-time',
        'changed_by_code' => null,
        'changed_on' => 'date-time',
        'event' => 'int32',
        'function' => 'int32',
        'checklist' => null,
        'contact' => null,
        'entry_designation' => null,
        'notification_flag' => null,
        'note_type' => null,
        'note_code' => null,
        'note_sequence_nbr' => 'int32',
        'notified_date' => 'date-time',
        'locked' => null,
        'order_number' => 'int32',
        'email_sent' => null,
        'email_sent_on' => 'date-time',
        'project_id' => null,
        'actual_start_date' => 'date-time',
        'actual_end_date' => 'date-time',
        'project_designation' => null,
        'email_sent_user_id' => null,
        'text' => null,
        'contract_sequence_nbr' => 'int32',
        'multi_org_account_code' => null,
        'block_code' => null,
        'fiscal_year_period' => null,
        'inventory_item_code' => null,
        'reminder_date' => 'date-time',
        'status' => null,
        'quote' => 'int32',
        'exhibitor_id' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'organization_code' => 'OrganizationCode',
        'account' => 'Account',
        'sequence_number' => 'SequenceNumber',
        'priority' => 'Priority',
        'due' => 'Due',
        'plain_text' => 'PlainText',
        'opportunity' => 'Opportunity',
        'recipient' => 'Recipient',
        'due_time' => 'DueTime',
        'type' => 'Type',
        'entered_by_code' => 'EnteredByCode',
        'privileged' => 'Privileged',
        'entered_on' => 'EnteredOn',
        'changed_by_code' => 'ChangedByCode',
        'changed_on' => 'ChangedOn',
        'event' => 'Event',
        'function' => 'Function',
        'checklist' => 'Checklist',
        'contact' => 'Contact',
        'entry_designation' => 'EntryDesignation',
        'notification_flag' => 'NotificationFlag',
        'note_type' => 'NoteType',
        'note_code' => 'NoteCode',
        'note_sequence_nbr' => 'NoteSequenceNbr',
        'notified_date' => 'NotifiedDate',
        'locked' => 'Locked',
        'order_number' => 'OrderNumber',
        'email_sent' => 'EmailSent',
        'email_sent_on' => 'EmailSentOn',
        'project_id' => 'ProjectID',
        'actual_start_date' => 'ActualStartDate',
        'actual_end_date' => 'ActualEndDate',
        'project_designation' => 'ProjectDesignation',
        'email_sent_user_id' => 'EmailSentUserID',
        'text' => 'Text',
        'contract_sequence_nbr' => 'ContractSequenceNbr',
        'multi_org_account_code' => 'MultiOrgAccountCode',
        'block_code' => 'BlockCode',
        'fiscal_year_period' => 'FiscalYearPeriod',
        'inventory_item_code' => 'InventoryItemCode',
        'reminder_date' => 'ReminderDate',
        'status' => 'Status',
        'quote' => 'Quote',
        'exhibitor_id' => 'ExhibitorID'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'organization_code' => 'setOrganizationCode',
        'account' => 'setAccount',
        'sequence_number' => 'setSequenceNumber',
        'priority' => 'setPriority',
        'due' => 'setDue',
        'plain_text' => 'setPlainText',
        'opportunity' => 'setOpportunity',
        'recipient' => 'setRecipient',
        'due_time' => 'setDueTime',
        'type' => 'setType',
        'entered_by_code' => 'setEnteredByCode',
        'privileged' => 'setPrivileged',
        'entered_on' => 'setEnteredOn',
        'changed_by_code' => 'setChangedByCode',
        'changed_on' => 'setChangedOn',
        'event' => 'setEvent',
        'function' => 'setFunction',
        'checklist' => 'setChecklist',
        'contact' => 'setContact',
        'entry_designation' => 'setEntryDesignation',
        'notification_flag' => 'setNotificationFlag',
        'note_type' => 'setNoteType',
        'note_code' => 'setNoteCode',
        'note_sequence_nbr' => 'setNoteSequenceNbr',
        'notified_date' => 'setNotifiedDate',
        'locked' => 'setLocked',
        'order_number' => 'setOrderNumber',
        'email_sent' => 'setEmailSent',
        'email_sent_on' => 'setEmailSentOn',
        'project_id' => 'setProjectId',
        'actual_start_date' => 'setActualStartDate',
        'actual_end_date' => 'setActualEndDate',
        'project_designation' => 'setProjectDesignation',
        'email_sent_user_id' => 'setEmailSentUserId',
        'text' => 'setText',
        'contract_sequence_nbr' => 'setContractSequenceNbr',
        'multi_org_account_code' => 'setMultiOrgAccountCode',
        'block_code' => 'setBlockCode',
        'fiscal_year_period' => 'setFiscalYearPeriod',
        'inventory_item_code' => 'setInventoryItemCode',
        'reminder_date' => 'setReminderDate',
        'status' => 'setStatus',
        'quote' => 'setQuote',
        'exhibitor_id' => 'setExhibitorId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'organization_code' => 'getOrganizationCode',
        'account' => 'getAccount',
        'sequence_number' => 'getSequenceNumber',
        'priority' => 'getPriority',
        'due' => 'getDue',
        'plain_text' => 'getPlainText',
        'opportunity' => 'getOpportunity',
        'recipient' => 'getRecipient',
        'due_time' => 'getDueTime',
        'type' => 'getType',
        'entered_by_code' => 'getEnteredByCode',
        'privileged' => 'getPrivileged',
        'entered_on' => 'getEnteredOn',
        'changed_by_code' => 'getChangedByCode',
        'changed_on' => 'getChangedOn',
        'event' => 'getEvent',
        'function' => 'getFunction',
        'checklist' => 'getChecklist',
        'contact' => 'getContact',
        'entry_designation' => 'getEntryDesignation',
        'notification_flag' => 'getNotificationFlag',
        'note_type' => 'getNoteType',
        'note_code' => 'getNoteCode',
        'note_sequence_nbr' => 'getNoteSequenceNbr',
        'notified_date' => 'getNotifiedDate',
        'locked' => 'getLocked',
        'order_number' => 'getOrderNumber',
        'email_sent' => 'getEmailSent',
        'email_sent_on' => 'getEmailSentOn',
        'project_id' => 'getProjectId',
        'actual_start_date' => 'getActualStartDate',
        'actual_end_date' => 'getActualEndDate',
        'project_designation' => 'getProjectDesignation',
        'email_sent_user_id' => 'getEmailSentUserId',
        'text' => 'getText',
        'contract_sequence_nbr' => 'getContractSequenceNbr',
        'multi_org_account_code' => 'getMultiOrgAccountCode',
        'block_code' => 'getBlockCode',
        'fiscal_year_period' => 'getFiscalYearPeriod',
        'inventory_item_code' => 'getInventoryItemCode',
        'reminder_date' => 'getReminderDate',
        'status' => 'getStatus',
        'quote' => 'getQuote',
        'exhibitor_id' => 'getExhibitorId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['organization_code'] = isset($data['organization_code']) ? $data['organization_code'] : null;
        $this->container['account'] = isset($data['account']) ? $data['account'] : null;
        $this->container['sequence_number'] = isset($data['sequence_number']) ? $data['sequence_number'] : null;
        $this->container['priority'] = isset($data['priority']) ? $data['priority'] : null;
        $this->container['due'] = isset($data['due']) ? $data['due'] : null;
        $this->container['plain_text'] = isset($data['plain_text']) ? $data['plain_text'] : null;
        $this->container['opportunity'] = isset($data['opportunity']) ? $data['opportunity'] : null;
        $this->container['recipient'] = isset($data['recipient']) ? $data['recipient'] : null;
        $this->container['due_time'] = isset($data['due_time']) ? $data['due_time'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['entered_by_code'] = isset($data['entered_by_code']) ? $data['entered_by_code'] : null;
        $this->container['privileged'] = isset($data['privileged']) ? $data['privileged'] : null;
        $this->container['entered_on'] = isset($data['entered_on']) ? $data['entered_on'] : null;
        $this->container['changed_by_code'] = isset($data['changed_by_code']) ? $data['changed_by_code'] : null;
        $this->container['changed_on'] = isset($data['changed_on']) ? $data['changed_on'] : null;
        $this->container['event'] = isset($data['event']) ? $data['event'] : null;
        $this->container['function'] = isset($data['function']) ? $data['function'] : null;
        $this->container['checklist'] = isset($data['checklist']) ? $data['checklist'] : null;
        $this->container['contact'] = isset($data['contact']) ? $data['contact'] : null;
        $this->container['entry_designation'] = isset($data['entry_designation']) ? $data['entry_designation'] : null;
        $this->container['notification_flag'] = isset($data['notification_flag']) ? $data['notification_flag'] : null;
        $this->container['note_type'] = isset($data['note_type']) ? $data['note_type'] : null;
        $this->container['note_code'] = isset($data['note_code']) ? $data['note_code'] : null;
        $this->container['note_sequence_nbr'] = isset($data['note_sequence_nbr']) ? $data['note_sequence_nbr'] : null;
        $this->container['notified_date'] = isset($data['notified_date']) ? $data['notified_date'] : null;
        $this->container['locked'] = isset($data['locked']) ? $data['locked'] : null;
        $this->container['order_number'] = isset($data['order_number']) ? $data['order_number'] : null;
        $this->container['email_sent'] = isset($data['email_sent']) ? $data['email_sent'] : null;
        $this->container['email_sent_on'] = isset($data['email_sent_on']) ? $data['email_sent_on'] : null;
        $this->container['project_id'] = isset($data['project_id']) ? $data['project_id'] : null;
        $this->container['actual_start_date'] = isset($data['actual_start_date']) ? $data['actual_start_date'] : null;
        $this->container['actual_end_date'] = isset($data['actual_end_date']) ? $data['actual_end_date'] : null;
        $this->container['project_designation'] = isset($data['project_designation']) ? $data['project_designation'] : null;
        $this->container['email_sent_user_id'] = isset($data['email_sent_user_id']) ? $data['email_sent_user_id'] : null;
        $this->container['text'] = isset($data['text']) ? $data['text'] : null;
        $this->container['contract_sequence_nbr'] = isset($data['contract_sequence_nbr']) ? $data['contract_sequence_nbr'] : null;
        $this->container['multi_org_account_code'] = isset($data['multi_org_account_code']) ? $data['multi_org_account_code'] : null;
        $this->container['block_code'] = isset($data['block_code']) ? $data['block_code'] : null;
        $this->container['fiscal_year_period'] = isset($data['fiscal_year_period']) ? $data['fiscal_year_period'] : null;
        $this->container['inventory_item_code'] = isset($data['inventory_item_code']) ? $data['inventory_item_code'] : null;
        $this->container['reminder_date'] = isset($data['reminder_date']) ? $data['reminder_date'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['quote'] = isset($data['quote']) ? $data['quote'] : null;
        $this->container['exhibitor_id'] = isset($data['exhibitor_id']) ? $data['exhibitor_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['organization_code'] === null) {
            $invalidProperties[] = "'organization_code' can't be null";
        }
        if ($this->container['account'] === null) {
            $invalidProperties[] = "'account' can't be null";
        }
        if ($this->container['sequence_number'] === null) {
            $invalidProperties[] = "'sequence_number' can't be null";
        }
        if ($this->container['priority'] === null) {
            $invalidProperties[] = "'priority' can't be null";
        }
        if ($this->container['due'] === null) {
            $invalidProperties[] = "'due' can't be null";
        }
        if ($this->container['plain_text'] === null) {
            $invalidProperties[] = "'plain_text' can't be null";
        }
        if ($this->container['opportunity'] === null) {
            $invalidProperties[] = "'opportunity' can't be null";
        }
        if ($this->container['recipient'] === null) {
            $invalidProperties[] = "'recipient' can't be null";
        }
        if ($this->container['due_time'] === null) {
            $invalidProperties[] = "'due_time' can't be null";
        }
        if ($this->container['type'] === null) {
            $invalidProperties[] = "'type' can't be null";
        }
        if ($this->container['entered_by_code'] === null) {
            $invalidProperties[] = "'entered_by_code' can't be null";
        }
        if ($this->container['privileged'] === null) {
            $invalidProperties[] = "'privileged' can't be null";
        }
        if ($this->container['entered_on'] === null) {
            $invalidProperties[] = "'entered_on' can't be null";
        }
        if ($this->container['changed_by_code'] === null) {
            $invalidProperties[] = "'changed_by_code' can't be null";
        }
        if ($this->container['changed_on'] === null) {
            $invalidProperties[] = "'changed_on' can't be null";
        }
        if ($this->container['event'] === null) {
            $invalidProperties[] = "'event' can't be null";
        }
        if ($this->container['function'] === null) {
            $invalidProperties[] = "'function' can't be null";
        }
        if ($this->container['checklist'] === null) {
            $invalidProperties[] = "'checklist' can't be null";
        }
        if ($this->container['contact'] === null) {
            $invalidProperties[] = "'contact' can't be null";
        }
        if ($this->container['entry_designation'] === null) {
            $invalidProperties[] = "'entry_designation' can't be null";
        }
        if ($this->container['notification_flag'] === null) {
            $invalidProperties[] = "'notification_flag' can't be null";
        }
        if ($this->container['note_type'] === null) {
            $invalidProperties[] = "'note_type' can't be null";
        }
        if ($this->container['note_code'] === null) {
            $invalidProperties[] = "'note_code' can't be null";
        }
        if ($this->container['note_sequence_nbr'] === null) {
            $invalidProperties[] = "'note_sequence_nbr' can't be null";
        }
        if ($this->container['notified_date'] === null) {
            $invalidProperties[] = "'notified_date' can't be null";
        }
        if ($this->container['locked'] === null) {
            $invalidProperties[] = "'locked' can't be null";
        }
        if ($this->container['order_number'] === null) {
            $invalidProperties[] = "'order_number' can't be null";
        }
        if ($this->container['email_sent'] === null) {
            $invalidProperties[] = "'email_sent' can't be null";
        }
        if ($this->container['email_sent_on'] === null) {
            $invalidProperties[] = "'email_sent_on' can't be null";
        }
        if ($this->container['project_id'] === null) {
            $invalidProperties[] = "'project_id' can't be null";
        }
        if ($this->container['actual_start_date'] === null) {
            $invalidProperties[] = "'actual_start_date' can't be null";
        }
        if ($this->container['actual_end_date'] === null) {
            $invalidProperties[] = "'actual_end_date' can't be null";
        }
        if ($this->container['project_designation'] === null) {
            $invalidProperties[] = "'project_designation' can't be null";
        }
        if ($this->container['email_sent_user_id'] === null) {
            $invalidProperties[] = "'email_sent_user_id' can't be null";
        }
        if ($this->container['text'] === null) {
            $invalidProperties[] = "'text' can't be null";
        }
        if ($this->container['contract_sequence_nbr'] === null) {
            $invalidProperties[] = "'contract_sequence_nbr' can't be null";
        }
        if ($this->container['multi_org_account_code'] === null) {
            $invalidProperties[] = "'multi_org_account_code' can't be null";
        }
        if ($this->container['block_code'] === null) {
            $invalidProperties[] = "'block_code' can't be null";
        }
        if ($this->container['fiscal_year_period'] === null) {
            $invalidProperties[] = "'fiscal_year_period' can't be null";
        }
        if ($this->container['inventory_item_code'] === null) {
            $invalidProperties[] = "'inventory_item_code' can't be null";
        }
        if ($this->container['reminder_date'] === null) {
            $invalidProperties[] = "'reminder_date' can't be null";
        }
        if ($this->container['status'] === null) {
            $invalidProperties[] = "'status' can't be null";
        }
        if ($this->container['quote'] === null) {
            $invalidProperties[] = "'quote' can't be null";
        }
        if ($this->container['exhibitor_id'] === null) {
            $invalidProperties[] = "'exhibitor_id' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets organization_code
     *
     * @return string
     */
    public function getOrganizationCode()
    {
        return $this->container['organization_code'];
    }

    /**
     * Sets organization_code
     *
     * @param string $organization_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_ORG_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrganizationCode($organization_code)
    {
        $this->container['organization_code'] = $organization_code;

        return $this;
    }

    /**
     * Gets account
     *
     * @return string
     */
    public function getAccount()
    {
        return $this->container['account'];
    }

    /**
     * Sets account
     *
     * @param string $account <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Indentifier - Use for GET and PUT URLs  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CR031_EXT_ACCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setAccount($account)
    {
        $this->container['account'] = $account;

        return $this;
    }

    /**
     * Gets sequence_number
     *
     * @return int
     */
    public function getSequenceNumber()
    {
        return $this->container['sequence_number'];
    }

    /**
     * Sets sequence_number
     *
     * @param int $sequence_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Indentifier - Use for GET and PUT URLs.  This should be blank for POST calls.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CR031_DIARY_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setSequenceNumber($sequence_number)
    {
        $this->container['sequence_number'] = $sequence_number;

        return $this;
    }

    /**
     * Gets priority
     *
     * @return string
     */
    public function getPriority()
    {
        return $this->container['priority'];
    }

    /**
     * Sets priority
     *
     * @param string $priority <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You can set this using the UngerboeckSDKPackage.USISDKConstants.ActivityPriority class  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CR031_TRACE_PRIORITY  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPriority($priority)
    {
        $this->container['priority'] = $priority;

        return $this;
    }

    /**
     * Gets due
     *
     * @return \DateTime
     */
    public function getDue()
    {
        return $this->container['due'];
    }

    /**
     * Sets due
     *
     * @param \DateTime $due <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_DIARY_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDue($due)
    {
        $this->container['due'] = $due;

        return $this;
    }

    /**
     * Gets plain_text
     *
     * @return string
     */
    public function getPlainText()
    {
        return $this->container['plain_text'];
    }

    /**
     * Sets plain_text
     *
     * @param string $plain_text <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> This will automatically contain the Text property value with the HTML tags stripped out.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CR031_DIARY_TEXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPlainText($plain_text)
    {
        $this->container['plain_text'] = $plain_text;

        return $this;
    }

    /**
     * Gets opportunity
     *
     * @return int
     */
    public function getOpportunity()
    {
        return $this->container['opportunity'];
    }

    /**
     * Sets opportunity
     *
     * @param int $opportunity <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_OCCURENCE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOpportunity($opportunity)
    {
        $this->container['opportunity'] = $opportunity;

        return $this;
    }

    /**
     * Gets recipient
     *
     * @return string
     */
    public function getRecipient()
    {
        return $this->container['recipient'];
    }

    /**
     * Sets recipient
     *
     * @param string $recipient <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_DIARY_REP_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setRecipient($recipient)
    {
        $this->container['recipient'] = $recipient;

        return $this;
    }

    /**
     * Gets due_time
     *
     * @return \DateTime
     */
    public function getDueTime()
    {
        return $this->container['due_time'];
    }

    /**
     * Sets due_time
     *
     * @param \DateTime $due_time <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_DIARY_TIME  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setDueTime($due_time)
    {
        $this->container['due_time'] = $due_time;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_DIARY_ENTRY_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets entered_by_code
     *
     * @return string
     */
    public function getEnteredByCode()
    {
        return $this->container['entered_by_code'];
    }

    /**
     * Sets entered_by_code
     *
     * @param string $entered_by_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Set automatically by the API  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CR031_ENT_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredByCode($entered_by_code)
    {
        $this->container['entered_by_code'] = $entered_by_code;

        return $this;
    }

    /**
     * Gets privileged
     *
     * @return string
     */
    public function getPrivileged()
    {
        return $this->container['privileged'];
    }

    /**
     * Sets privileged
     *
     * @param string $privileged <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_PRIVILEGED  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setPrivileged($privileged)
    {
        $this->container['privileged'] = $privileged;

        return $this;
    }

    /**
     * Gets entered_on
     *
     * @return \DateTime
     */
    public function getEnteredOn()
    {
        return $this->container['entered_on'];
    }

    /**
     * Sets entered_on
     *
     * @param \DateTime $entered_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Set automatically by the API  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CR031_ENT_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEnteredOn($entered_on)
    {
        $this->container['entered_on'] = $entered_on;

        return $this;
    }

    /**
     * Gets changed_by_code
     *
     * @return string
     */
    public function getChangedByCode()
    {
        return $this->container['changed_by_code'];
    }

    /**
     * Sets changed_by_code
     *
     * @param string $changed_by_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Set automatically by the API  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CR031_UPD_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedByCode($changed_by_code)
    {
        $this->container['changed_by_code'] = $changed_by_code;

        return $this;
    }

    /**
     * Gets changed_on
     *
     * @return \DateTime
     */
    public function getChangedOn()
    {
        return $this->container['changed_on'];
    }

    /**
     * Sets changed_on
     *
     * @param \DateTime $changed_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Set automatically by the API  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CR031_UPD_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChangedOn($changed_on)
    {
        $this->container['changed_on'] = $changed_on;

        return $this;
    }

    /**
     * Gets event
     *
     * @return int
     */
    public function getEvent()
    {
        return $this->container['event'];
    }

    /**
     * Sets event
     *
     * @param int $event <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_EVT_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEvent($event)
    {
        $this->container['event'] = $event;

        return $this;
    }

    /**
     * Gets function
     *
     * @return int
     */
    public function getFunction()
    {
        return $this->container['function'];
    }

    /**
     * Sets function
     *
     * @param int $function <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_FUNC_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFunction($function)
    {
        $this->container['function'] = $function;

        return $this;
    }

    /**
     * Gets checklist
     *
     * @return string
     */
    public function getChecklist()
    {
        return $this->container['checklist'];
    }

    /**
     * Sets checklist
     *
     * @param string $checklist <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_CL_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setChecklist($checklist)
    {
        $this->container['checklist'] = $checklist;

        return $this;
    }

    /**
     * Gets contact
     *
     * @return string
     */
    public function getContact()
    {
        return $this->container['contact'];
    }

    /**
     * Sets contact
     *
     * @param string $contact <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_EXT_CNTCT_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 8  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContact($contact)
    {
        $this->container['contact'] = $contact;

        return $this;
    }

    /**
     * Gets entry_designation
     *
     * @return string
     */
    public function getEntryDesignation()
    {
        return $this->container['entry_designation'];
    }

    /**
     * Sets entry_designation
     *
     * @param string $entry_designation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_DESIGNATION  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEntryDesignation($entry_designation)
    {
        $this->container['entry_designation'] = $entry_designation;

        return $this;
    }

    /**
     * Gets notification_flag
     *
     * @return string
     */
    public function getNotificationFlag()
    {
        return $this->container['notification_flag'];
    }

    /**
     * Sets notification_flag
     *
     * @param string $notification_flag <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_NOTIFY_STS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNotificationFlag($notification_flag)
    {
        $this->container['notification_flag'] = $notification_flag;

        return $this;
    }

    /**
     * Gets note_type
     *
     * @return string
     */
    public function getNoteType()
    {
        return $this->container['note_type'];
    }

    /**
     * Sets note_type
     *
     * @param string $note_type <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_NOTE_TYPE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNoteType($note_type)
    {
        $this->container['note_type'] = $note_type;

        return $this;
    }

    /**
     * Gets note_code
     *
     * @return string
     */
    public function getNoteCode()
    {
        return $this->container['note_code'];
    }

    /**
     * Sets note_code
     *
     * @param string $note_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_NOTE_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 60  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNoteCode($note_code)
    {
        $this->container['note_code'] = $note_code;

        return $this;
    }

    /**
     * Gets note_sequence_nbr
     *
     * @return int
     */
    public function getNoteSequenceNbr()
    {
        return $this->container['note_sequence_nbr'];
    }

    /**
     * Sets note_sequence_nbr
     *
     * @param int $note_sequence_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_NOTE_HDR_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNoteSequenceNbr($note_sequence_nbr)
    {
        $this->container['note_sequence_nbr'] = $note_sequence_nbr;

        return $this;
    }

    /**
     * Gets notified_date
     *
     * @return \DateTime
     */
    public function getNotifiedDate()
    {
        return $this->container['notified_date'];
    }

    /**
     * Sets notified_date
     *
     * @param \DateTime $notified_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_NOTIFIED_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setNotifiedDate($notified_date)
    {
        $this->container['notified_date'] = $notified_date;

        return $this;
    }

    /**
     * Gets locked
     *
     * @return string
     */
    public function getLocked()
    {
        return $this->container['locked'];
    }

    /**
     * Sets locked
     *
     * @param string $locked <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> Even if this is set to \"Y\", user-locked fields can still be set via the API.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CR031_USER_FLD1_03X  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 3  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setLocked($locked)
    {
        $this->container['locked'] = $locked;

        return $this;
    }

    /**
     * Gets order_number
     *
     * @return int
     */
    public function getOrderNumber()
    {
        return $this->container['order_number'];
    }

    /**
     * Sets order_number
     *
     * @param int $order_number <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_WO_NBR  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setOrderNumber($order_number)
    {
        $this->container['order_number'] = $order_number;

        return $this;
    }

    /**
     * Gets email_sent
     *
     * @return string
     */
    public function getEmailSent()
    {
        return $this->container['email_sent'];
    }

    /**
     * Sets email_sent
     *
     * @param string $email_sent <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_EMAIL_SENT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEmailSent($email_sent)
    {
        $this->container['email_sent'] = $email_sent;

        return $this;
    }

    /**
     * Gets email_sent_on
     *
     * @return \DateTime
     */
    public function getEmailSentOn()
    {
        return $this->container['email_sent_on'];
    }

    /**
     * Sets email_sent_on
     *
     * @param \DateTime $email_sent_on <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_EMAIL_STAMP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEmailSentOn($email_sent_on)
    {
        $this->container['email_sent_on'] = $email_sent_on;

        return $this;
    }

    /**
     * Gets project_id
     *
     * @return string
     */
    public function getProjectId()
    {
        return $this->container['project_id'];
    }

    /**
     * Sets project_id
     *
     * @param string $project_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_PRJ_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setProjectId($project_id)
    {
        $this->container['project_id'] = $project_id;

        return $this;
    }

    /**
     * Gets actual_start_date
     *
     * @return \DateTime
     */
    public function getActualStartDate()
    {
        return $this->container['actual_start_date'];
    }

    /**
     * Sets actual_start_date
     *
     * @param \DateTime $actual_start_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_ACT_START  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualStartDate($actual_start_date)
    {
        $this->container['actual_start_date'] = $actual_start_date;

        return $this;
    }

    /**
     * Gets actual_end_date
     *
     * @return \DateTime
     */
    public function getActualEndDate()
    {
        return $this->container['actual_end_date'];
    }

    /**
     * Sets actual_end_date
     *
     * @param \DateTime $actual_end_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_ACT_END  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setActualEndDate($actual_end_date)
    {
        $this->container['actual_end_date'] = $actual_end_date;

        return $this;
    }

    /**
     * Gets project_designation
     *
     * @return string
     */
    public function getProjectDesignation()
    {
        return $this->container['project_designation'];
    }

    /**
     * Sets project_designation
     *
     * @param string $project_designation <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_PRJ_ACCT_DESIG  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 1  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setProjectDesignation($project_designation)
    {
        $this->container['project_designation'] = $project_designation;

        return $this;
    }

    /**
     * Gets email_sent_user_id
     *
     * @return string
     */
    public function getEmailSentUserId()
    {
        return $this->container['email_sent_user_id'];
    }

    /**
     * Sets email_sent_user_id
     *
     * @param string $email_sent_user_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_EMAIL_USER_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setEmailSentUserId($email_sent_user_id)
    {
        $this->container['email_sent_user_id'] = $email_sent_user_id;

        return $this;
    }

    /**
     * Gets text
     *
     * @return string
     */
    public function getText()
    {
        return $this->container['text'];
    }

    /**
     * Sets text
     *
     * @param string $text <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">API Help:</span> You can add activity text here.  Any HTML will get copied to the PlainText property with the HTML tags removed.  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Database column:</span> CR031_HTML_TEXT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setText($text)
    {
        $this->container['text'] = $text;

        return $this;
    }

    /**
     * Gets contract_sequence_nbr
     *
     * @return int
     */
    public function getContractSequenceNbr()
    {
        return $this->container['contract_sequence_nbr'];
    }

    /**
     * Sets contract_sequence_nbr
     *
     * @param int $contract_sequence_nbr <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_CONTRACT_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setContractSequenceNbr($contract_sequence_nbr)
    {
        $this->container['contract_sequence_nbr'] = $contract_sequence_nbr;

        return $this;
    }

    /**
     * Gets multi_org_account_code
     *
     * @return string
     */
    public function getMultiOrgAccountCode()
    {
        return $this->container['multi_org_account_code'];
    }

    /**
     * Sets multi_org_account_code
     *
     * @param string $multi_org_account_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_MULTI_ORG_ACCT  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 20  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setMultiOrgAccountCode($multi_org_account_code)
    {
        $this->container['multi_org_account_code'] = $multi_org_account_code;

        return $this;
    }

    /**
     * Gets block_code
     *
     * @return string
     */
    public function getBlockCode()
    {
        return $this->container['block_code'];
    }

    /**
     * Sets block_code
     *
     * @param string $block_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_BLOCK_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setBlockCode($block_code)
    {
        $this->container['block_code'] = $block_code;

        return $this;
    }

    /**
     * Gets fiscal_year_period
     *
     * @return string
     */
    public function getFiscalYearPeriod()
    {
        return $this->container['fiscal_year_period'];
    }

    /**
     * Sets fiscal_year_period
     *
     * @param string $fiscal_year_period <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_FYP  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 6  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setFiscalYearPeriod($fiscal_year_period)
    {
        $this->container['fiscal_year_period'] = $fiscal_year_period;

        return $this;
    }

    /**
     * Gets inventory_item_code
     *
     * @return string
     */
    public function getInventoryItemCode()
    {
        return $this->container['inventory_item_code'];
    }

    /**
     * Sets inventory_item_code
     *
     * @param string $inventory_item_code <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_INV_CODE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 12  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setInventoryItemCode($inventory_item_code)
    {
        $this->container['inventory_item_code'] = $inventory_item_code;

        return $this;
    }

    /**
     * Gets reminder_date
     *
     * @return \DateTime
     */
    public function getReminderDate()
    {
        return $this->container['reminder_date'];
    }

    /**
     * Sets reminder_date
     *
     * @param \DateTime $reminder_date <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_REMINDER_DATE  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Read Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setReminderDate($reminder_date)
    {
        $this->container['reminder_date'] = $reminder_date;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_ACT_STATUS  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 2  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets quote
     *
     * @return int
     */
    public function getQuote()
    {
        return $this->container['quote'];
    }

    /**
     * Sets quote
     *
     * @param int $quote <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_QUOTE_SEQ  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setQuote($quote)
    {
        $this->container['quote'] = $quote;

        return $this;
    }

    /**
     * Gets exhibitor_id
     *
     * @return int
     */
    public function getExhibitorId()
    {
        return $this->container['exhibitor_id'];
    }

    /**
     * Sets exhibitor_id
     *
     * @param int $exhibitor_id <div class=\"tooltip\">Info<span class=\"tooltiptext\"><span class=\"tooltipHeader\">Database column:</span> CR031_EXHIBITOR_ID  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Length:</span> 10  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Add Only</span>  <div class=\"TooltipSpace\"></div>  <span class=\"tooltipHeader\">Searchable</span></span></div>
     *
     * @return $this
     */
    public function setExhibitorId($exhibitor_id)
    {
        $this->container['exhibitor_id'] = $exhibitor_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


