<?php
/**
 * EventsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen
 * https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace FomF\Ungerboeck\Client;

use FomF\Ungerboeck\Client\Api\EventsApi;

/**
 * EventsApiTest Class Doc Comment
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EventsApiTest extends \PHPUnit_Framework_TestCase {

  /**
   * @var EventsApi $eventsApi
   */

  public $eventsApi;


  /**
   * Setup before running any test cases
   */
  public static function setUpBeforeClass() {

  }

  /**
   * Setup before running each test case
   *
   * @throws \GuzzleHttp\Exception\GuzzleException
   */
  public function setUp() {
    $config = new Configuration();
    $config->setUsername(getenv('UB_USER'));
    $config->setPassword(getenv('UB_PASSWORD'));

    $this->eventsApi = new EventsApi(null, $config);
  }

  /**
   * Clean up after running each test case
   */
  public function tearDown() {
  }

  /**
   * Clean up after running all test cases
   */
  public static function tearDownAfterClass() {
  }

  /**
   * Test case for eventsGetEvent
   *
   * Get an event by its parameters.
   *
   */
  public function testEventsGetEvent() {
  }

  /**
   * Test case for eventsGetEventsList
   *
   * Search for Events using OData.  This will also retrieve user fields
   * matching the default user field class, configured in Event Management
   * Configuration..
   *
   */
  public function testEventsGetEventsList() {

    $events = $this->eventsApi->eventsGetEventsList('10', ['All$page_size=10']);
    $this->assertTrue(sizeof($events) === 10);

  }

  /**
   * Test case for eventsPostEvent
   *
   * Add an event.
   *
   */
  public function testEventsPostEvent() {
  }

  /**
   * Test case for eventsPutEvent
   *
   * Edit an Event.
   *
   */
  public function testEventsPutEvent() {
  }
}
