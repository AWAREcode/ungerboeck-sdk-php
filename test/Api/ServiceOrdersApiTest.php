<?php
/**
 * ServiceOrdersApiTest
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace FomF\Ungerboeck\Client;

use \FomF\Ungerboeck\Client\Configuration;
use \FomF\Ungerboeck\Client\ApiException;
use \FomF\Ungerboeck\Client\ObjectSerializer;

/**
 * ServiceOrdersApiTest Class Doc Comment
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class ServiceOrdersApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for serviceOrdersCompleteWorkOrders
     *
     * Extended (Service Orders) - Use this action endpoint to set all work orders on a service order to status Complete.  This process replicates the \"Complete Work Orders\" functionality found in v20's \"Service Orders\" window..
     *
     */
    public function testServiceOrdersCompleteWorkOrders()
    {
    }

    /**
     * Test case for serviceOrdersGetServiceOrder
     *
     * Standard - Get a single Service order by its parameters.
     *
     */
    public function testServiceOrdersGetServiceOrder()
    {
    }

    /**
     * Test case for serviceOrdersGetServiceOrderList
     *
     * Standard - Search for Service orders using OData.  Note, this will not return user fields.  Use the single GET endpoint to retrieve user fields..
     *
     */
    public function testServiceOrdersGetServiceOrderList()
    {
    }

    /**
     * Test case for serviceOrdersMoveOrder
     *
     * Extended (Service Orders) - Use this action endpoint to move Service Orders to a different event or a different function on the same event.  This process replicates the \"Move Order\" functionality found in Ungerboeck's \"Service Orders\" window..
     *
     */
    public function testServiceOrdersMoveOrder()
    {
    }

    /**
     * Test case for serviceOrdersMoveOrdersBulk
     *
     * Extended (Service Orders) - Use this action endpoint to move multiple Service Orders to a different event or a different function on the same event.  This process replicates the \"Move Order\" functionality found in Ungerboeck's \"Service Orders\" window.  If one or more orders fails to move, this endpoint will return a MoveOrdersBulkErrorsModel object..
     *
     */
    public function testServiceOrdersMoveOrdersBulk()
    {
    }

    /**
     * Test case for serviceOrdersPostServiceOrder
     *
     * Extended (Service Orders) - Add a Service order.
     *
     */
    public function testServiceOrdersPostServiceOrder()
    {
    }

    /**
     * Test case for serviceOrdersPutServiceOrder
     *
     * Extended (Service Orders) - Edit a Service order.
     *
     */
    public function testServiceOrdersPutServiceOrder()
    {
    }
}
