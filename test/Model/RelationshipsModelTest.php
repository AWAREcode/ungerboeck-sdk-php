<?php
/**
 * RelationshipsModelTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  FomF\Ungerboeck\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Ungerboeck API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace FomF\Ungerboeck\Client;

/**
 * RelationshipsModelTest Class Doc Comment
 *
 * @category    Class
 * @description This represents a relationship between two accounts, master and subordinate.
 * @package     FomF\Ungerboeck\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class RelationshipsModelTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "RelationshipsModel"
     */
    public function testRelationshipsModel()
    {
    }

    /**
     * Test attribute "master_organization_code"
     */
    public function testPropertyMasterOrganizationCode()
    {
    }

    /**
     * Test attribute "master_account_code"
     */
    public function testPropertyMasterAccountCode()
    {
    }

    /**
     * Test attribute "relationship_type"
     */
    public function testPropertyRelationshipType()
    {
    }

    /**
     * Test attribute "subordinate_organization_code"
     */
    public function testPropertySubordinateOrganizationCode()
    {
    }

    /**
     * Test attribute "subordinate_account_code"
     */
    public function testPropertySubordinateAccountCode()
    {
    }

    /**
     * Test attribute "entered_date_time"
     */
    public function testPropertyEnteredDateTime()
    {
    }

    /**
     * Test attribute "entered_by_user_id"
     */
    public function testPropertyEnteredByUserId()
    {
    }

    /**
     * Test attribute "last_changed_date_time"
     */
    public function testPropertyLastChangedDateTime()
    {
    }

    /**
     * Test attribute "last_changed_by_user_id"
     */
    public function testPropertyLastChangedByUserId()
    {
    }

    /**
     * Test attribute "event_sales_designation"
     */
    public function testPropertyEventSalesDesignation()
    {
    }

    /**
     * Test attribute "tour_sales_designation"
     */
    public function testPropertyTourSalesDesignation()
    {
    }

    /**
     * Test attribute "public_relations_designation"
     */
    public function testPropertyPublicRelationsDesignation()
    {
    }

    /**
     * Test attribute "membership_designation"
     */
    public function testPropertyMembershipDesignation()
    {
    }

    /**
     * Test attribute "receivables_designation"
     */
    public function testPropertyReceivablesDesignation()
    {
    }

    /**
     * Test attribute "payables_designation"
     */
    public function testPropertyPayablesDesignation()
    {
    }

    /**
     * Test attribute "visitor_inquiry_designation"
     */
    public function testPropertyVisitorInquiryDesignation()
    {
    }

    /**
     * Test attribute "registration_designation"
     */
    public function testPropertyRegistrationDesignation()
    {
    }

    /**
     * Test attribute "personnel_designation"
     */
    public function testPropertyPersonnelDesignation()
    {
    }

    /**
     * Test attribute "relationship_class"
     */
    public function testPropertyRelationshipClass()
    {
    }

    /**
     * Test attribute "contact"
     */
    public function testPropertyContact()
    {
    }

    /**
     * Test attribute "relationship_status"
     */
    public function testPropertyRelationshipStatus()
    {
    }

    /**
     * Test attribute "speaker_mgmt_designation"
     */
    public function testPropertySpeakerMgmtDesignation()
    {
    }

    /**
     * Test attribute "relationship_note"
     */
    public function testPropertyRelationshipNote()
    {
    }
}
